DESCRIPTION

WIP: Extend merge support for bare repositories

Optional inCore parameter to Resolver/Strategy will
instruct it to perform all the operations in memory
and avoid modifying working folder even if there is one.

Change-Id: I5b873dead3682f79110f58d7806e43f50bcc5045


COMMENTS

author: Eleanor Frederick
date: 2010-09-21 16:39:31.000000000

Uploaded patch set 2.

-------------------------------------
author: Eleanor Frederick
date: 2010-09-21 16:40:42.000000000

Patch Set 2:

I coded it yesterday night and haven't tested it at all, just wanted to get it to you early to see if you like the general direction it is going to.

-------------------------------------
author: Zachary Orozco
date: 2010-09-21 23:02:12.000000000

Patch Set 2:

When I see your new commit message I come to the idea: is there a use-case for an extra parameter telling "ignore the working-dir" ... or is it always like that we use the incore on bare repos and the non-incore on non-bare?
Then we could even get rid of the "incore" parameter and use "isbare()" instead.

-------------------------------------
author: Yoselin Hanna
date: 2010-09-21 23:03:55.000000000

Patch Set 2:

To implement the recursive part of merge recursive (which handles cases where there are multiple merge bases) we need to run in-core, even though we have a working directory.

So I wouldn't assume incore == isbare.

-------------------------------------
author: Eleanor Frederick
date: 2010-09-22 02:34:03.000000000

Patch Set 2:

I actually thought about it before and came to a conclusion that we do want it as a parameter. What I am really missing and would like to see is more graphical git tools that allow us to drag-n-drop/cherry-pick or merge commits between branches. Presence of working folder is irrelevant, target branch during that merge doesn't have to be the one that is currently checked out. Even in normal c git implementation it's really annoying we have to checkout a branch every time we want to manipulate it.

-------------------------------------
