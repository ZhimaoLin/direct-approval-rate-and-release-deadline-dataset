DESCRIPTION

Allow to pack a set of loose and packed refs into a new packed-ref file

Enhance the RefDirectory class to expose a method which writes a set of
refs (loose, packed or loose-packed) into a new packed-refs file. All
loose (and loose-packed) refs which are afterwards included in the new
pack file are deleted from the filesystem. This method will try to lock
every given ref in order to prevent that it is updated/deleted during
the runtime of this method. Before the method returns all files are
unlocked. Refs which can't be locked are ignored.

Let the garbage collector make use of this functionality to do a repack
of all non-symbolic refs.

Change-Id: I18583d98719aac901c9494f60f33ebe0b29632a3
Signed-off-by: Zachary Orozco xxx@xxx.xxx


COMMENTS

author: Zachary Orozco
date: 2012-02-08 22:22:28.000000000

Uploaded patch set 2.

-------------------------------------
author: Dillon Cross
date: 2012-02-10 08:20:49.000000000

Patch Set 2: (1 inline comment)



Line:222, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/GC.java -> please document that the IOException is thrown when the packRefs fails to lock the packed-refs file

-------------------------------------
author: Zachary Orozco
date: 2012-02-15 10:03:33.000000000

Patch Set 2: (1 inline comment)



Line:222, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/GC.java -> I agree that it should be documented why we throw IOException. I'll see how far I come with this because there will be a lot of reasons why we throw IOException here.     The RefDirectory.pack() methods calls a lot of methods which may throw IOExceptions. When reading files, when writing the files, when checking for existence of files.... A few more public methods in this class need more javadoc but 'I'll see what I can do for this one.

-------------------------------------
