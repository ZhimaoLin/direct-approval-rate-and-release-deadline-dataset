DESCRIPTION

Attempt to make git prefix detection more reliable

This fix makes sure the readPipe methods drains the stderr
pipe and close the subprocess' stdin stream before reading
the process outputs.

I never managed to repeat the reported problem myself.

Bug: 337533
Change-Id: I299555f09768c34d5868327e574326946ee265e1


COMMENTS

author: Juliet Cantu
date: 2011-04-26 22:15:15.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2011-04-26 22:15:18.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/291/ 

-------------------------------------
author: Brenden Conley
date: 2011-04-26 22:15:19.000000000

Patch Set 2: Build Failed

Build Failed 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/291/ : FAILURE

-------------------------------------
author: Brenden Conley
date: 2011-04-29 16:53:53.000000000

Patch Set 2: No score

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/323/ 

-------------------------------------
author: Brenden Conley
date: 2011-04-29 16:56:42.000000000

Patch Set 2: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/323/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2011-05-02 14:20:28.000000000

Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)



Line:268, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> Do we need to keep this debugging code in?

If so I would prefer to use Boolean to parse the variable and support true/false here rather than set/unset.

Line:297, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> This isn't true. You could work harder as a programmer and transfer the exception object from the gobbler thread into a variable that is shared with the calling thread, then have the calling thread wait for completion of the gobbler thread and check its exception status.

Actually, this may be what you want. If we are unable to read the command and we are capturing the command's stderr stream, we should wrap that up into an exception object and throw it to the caller rather than assuming everything is OK, or printing it to our own Java stderr.

-------------------------------------
author: Juliet Cantu
date: 2011-05-02 20:22:06.000000000

Patch Set 2: (2 inline comments)



Line:268, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> This is for debugging the environment. Things work ok on my machine, but not others.

Line:297, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> I wasn't even convinced about adding the printstacktrace... what could
cause an exception here?

-------------------------------------
