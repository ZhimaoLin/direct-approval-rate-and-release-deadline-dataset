DESCRIPTION

"Bare" Repository should not return working directory.

If a repository is "bare", it currently still returns a working directory.
This conflicts with the specification of "bare"-ness.

Bug: 311902

Change-Id: Ib54b31ddc80b9032e6e7bf013948bb83e12cfd88
Signed-off-by: Willow Cantrell xxx@xxx.xxx

COMMENTS

author: Willow Cantrell
date: 2010-06-15 18:38:44.000000000

Uploaded patch set 8.

-------------------------------------
author: Yoselin Hanna
date: 2010-06-15 18:51:41.000000000

Patch Set 8: I would prefer that you didn't submit this; No score



Line:71, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositorySetupWorkDirTest.java -> These should use assertEquals() rather than assertTrue, so that the JUnit report can include the expected and actual values during the test, rather than a vague message.

We probably also should test the full path, but that's liable to fail if we use a different resolve method here in the test than the repository used.  We can probably head that off by just using the canonical paths for compare.  So rewrite this method as:

  File exp = getFile(expected).getCanonicalFile();
  File act = repo.getDirectory().getCanonicalFile();
  assertEquals(exp, act);

Line:101, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositorySetupWorkDirTest.java -> Don't use assertTrue(...equals()), use assertEquals instead.

Line:132, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/RepositorySetupWorkDirTest.java -> I still think a couple of helper methods will make the tests easier to read:

  private void setBare(File gitDir, boolean bare) {
    Repository repo = new Repository(gitDir, null);
    repo.getConfig().setBoolean(ConfigConstants.CONFIG_CORE_SECTION,
        null, ConfigConstants.CONFIG_KEY_BARE, bare);
    repo.getConfig().save();
  }

  private void setWorkTree(File gitDir, File workTree) {
    Repository repo = new Repository(gitDir, null);
    repo.getConfig().setBoolean(ConfigConstants.CONFIG_CORE_SECTION,
        null, ConfigConstants.CONFIG_KEY_WORKTREE,
        workTree.getAbsolutePath());
    repo.getConfig().save();
  }

Then the tests are a bit more declarative as they setup their condition to be tested.

-------------------------------------
