DESCRIPTION

Add TagCommand

A tag command is added to the Git porcelain API. Tests were
also added to stress test the tag command.

Change-Id: Iab282a918eb51b0e9c55f628a3396ff01c9eb9eb
Signed-off-by: Malia Sampson xxx@xxx.xxx


COMMENTS

author: Malia Sampson
date: 2010-08-26 18:25:06.000000000

Uploaded patch set 8.

-------------------------------------
author: Yoselin Hanna
date: 2010-08-26 18:46:56.000000000

Patch Set 8: I would prefer that you didn't submit this

(3 inline comments)



Line:139, org.eclipse.jgit/src/org/eclipse/jgit/api/TagCommand.java -> I hate to a nit, but can we use either tagId or newTag.getTagId() consistently here?  You use one form right here, and the other form 3 lines below when you setNewObjectId().  It would be nice if we just used tagId.

Line:191, org.eclipse.jgit/src/org/eclipse/jgit/api/TagCommand.java -> Is this really an internal exception?  If the caller gave us a tag name that we won't accept as a reference name that is rather different than us encountering a form of repository corruption they cannot recover from easily.  The caller just needs to correct their input.

I'm thinking about the EGit UI case here.  If the UI just passes through the tag name entered by the user, runs call(), we need to throw something that tells the UI it should backup and let the user correct their input.  But if we got a valid tag name and crash because something goes wrong deep inside of the ObjectInserter, that's a totally different kind of error for the EGit UI to present to the human.

Line:243, org.eclipse.jgit/src/org/eclipse/jgit/api/TagCommand.java -> Nope, still wrong on the docs:

 /**
  * If set to true the Tag command creates a signed tag.
  * This corresponds to the -s parameter on the command line.

-------------------------------------
author: Gerrit Code Review
date: 2010-08-26 21:24:49.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
