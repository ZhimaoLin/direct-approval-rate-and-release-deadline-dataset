DESCRIPTION

Enhance reading of git-rebase-todo formatted files

Reading and writing files formatted like the git-rebase-todo files was
hidden in the RebaseCommand. Certain constructs (like leading
tabs+spaces) have not been handled as native git. Also the upcoming
rebase interactive feature in EGit needs reading/writing these files
independent from a RebaseCommand. Therefore reading and writing those
files has been refactored to the Repository class. RebaseCommand get's
smaller because of that and doesn't have to deal with reading/writing
files.
Additional tests for empty todo-list files, or files containing comments
have been added.

Change-Id: I323f3619952fecdf28ddf50139a88e0bea34f5ba
Signed-off-by: Zachary Orozco xxx@xxx.xxx


COMMENTS

author: Zachary Orozco
date: 2013-07-31 14:31:33.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2013-07-31 14:32:55.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3801/

-------------------------------------
author: Brenden Conley
date: 2013-07-31 14:38:43.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3801/ : SUCCESS

-------------------------------------
author: Alondra Arellano
date: 2013-07-31 22:23:16.000000000

Patch Set 4:

(1 comment)

Line:102, org.eclipse.jgit/src/org/eclipse/jgit/lib/RebaseTodoFile.java -> now that we can transform from non-comment to comment and vice versa pretty neat we could also try to parse  id and shortmessage here. If it does not fail, add a comment line that can be transformed to a non-comment line.

-------------------------------------
author: Alondra Arellano
date: 2013-08-01 08:11:14.000000000

Patch Set 4:

(1 comment)

Line:184, org.eclipse.jgit/src/org/eclipse/jgit/lib/RebaseTodoLine.java -> make sure each comment line is prefixed with "#"

(1) do not allow multiline string (i.e. containing \n or \r) therefor fix or throw exception

(2) prefix all lines with #

suggestion to (1): String replaceFirst("^([\W^#^\n^\r]*)","# $2"); String.replaceAll("\n", ""); //squash into single line

suggestion to (2): String.replaceAll("(\n|^)([\W^#^\n^\r]*)","$1# $2")

-------------------------------------
author: Alondra Arellano
date: 2013-08-01 11:53:53.000000000

Patch Set 4:

(1 comment)

I've incorporated my latest comments locally myself and also send proposal patches via mail to you. If you'r content with these changes and wan't me to push them as a new patchset please let me know

Line:168, org.eclipse.jgit/src/org/eclipse/jgit/lib/RebaseTodoLine.java -> commit.name()

-------------------------------------
author: Zachary Orozco
date: 2013-08-01 13:13:02.000000000

Patch Set 4:

(3 comments)

Let's not open another communication channel by mail. Simply propose a new patchset here if you already now the solution.

Line:102, org.eclipse.jgit/src/org/eclipse/jgit/lib/RebaseTodoFile.java -> yes, this could be done. If you have an idea about that just propose it as a new proposal on this change

Line:168, org.eclipse.jgit/src/org/eclipse/jgit/lib/RebaseTodoLine.java -> correct, I overlooked that.

Line:184, org.eclipse.jgit/src/org/eclipse/jgit/lib/RebaseTodoLine.java -> lines which contain only tabs and spaces could stay as they are. They are comment lines even without the hash. All other lines have to start with a "#". I would prefer not to fix it but to throw an exception if it is not fulfilled. But we should document these requirements in the javadoc.

-------------------------------------
author: Alondra Arellano
date: 2013-08-02 08:47:54.000000000

Patch Set 4:

I'm not allowed to push:
error: You are not a project committer.
error: Only project committers can push on behalf of others.

Anyways, here's a diff of what I tried to push:
http://pastebin.com/D5LBzD7j

-------------------------------------
author: Zachary Orozco
date: 2013-08-02 10:34:54.000000000

Patch Set 4:

Oh no, not a third channel with diffs through pastebin. I tried but couldn't consume what you have there. "git am" or "git apply" don't like the format. Let's stick with gerrit. Can't you push what you want to sandbox? Like
'git push origin HEAD:sandbox/<yourUserName>/xyz'?

-------------------------------------
