DESCRIPTION

Enhance reading of git-rebase-todo formatted files

Reading and writing files formatted like the git-rebase-todo files was
hidden in the RebaseCommand. Certain constructs (like leading
tabs+spaces) have not been handled as native git. Also the upcoming
rebase interactive feature in EGit needs reading/writing these files
independent from a RebaseCommand. Therefore reading and writing those
files has been refactored to the Repository class. RebaseCommand get's
smaller because of that and doesn't have to deal with reading/writing
files.
Additional tests for empty todo-list files, or files containing comments
have been added.

Change-Id: I323f3619952fecdf28ddf50139a88e0bea34f5ba
Signed-off-by: Zachary Orozco xxx@xxx.xxx
Also-by: Alondra Arellano xxx@xxx.xxx


COMMENTS

author: Zachary Orozco
date: 2013-08-04 04:23:30.000000000

Uploaded patch set 7.

-------------------------------------
author: Alondra Arellano
date: 2013-08-09 08:02:18.000000000

Patch Set 7: Code-Review+1

-------------------------------------
author: Alondra Arellano
date: 2013-08-09 14:31:18.000000000

Patch Set 7: Code-Review-1

(2 comments)

Line:274, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> I think we should check for comment lines here, and if so, continue immediately (i.e. skip processing the line)

Line:329, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> handle comment lines right at the beginning of this loop

-------------------------------------
author: Zachary Orozco
date: 2013-08-12 07:23:13.000000000

Patch Set 7:

(2 comments)

Line:274, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> First I thought that's a valid comment. But think about it: if we would have to deal with comment lines here and if we wouldn't check for comment lines here ... then we would fail two lines below where we check that each line contains a commit id. This would mean: our current tests are so bad that they don't recognize that RebaseCommand can't handle comment lines. That would be a severe bug in our tests.

The thing is: we don't have to deal with comments here. We know that they are already filtered out in the readRebaseTodo() call by specifying that we don't want to see comments.

Line:329, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> We don't care about comments here - but I'll leave this line because otherwise I get warnings from eclipse about incomplete switch statements.

-------------------------------------
author: Alondra Arellano
date: 2013-08-12 12:48:08.000000000

Patch Set 7:

(1 comment)

Line:274, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> I get the point, but still, we expose the list of steps to the user and cannot assume that the user does not add comments.

Here's a Test that shows the issue:
https://github.com/TobiasPfeifer/jgit/commit/1e0beb44709787aae42a1467c0318a29f8be8318

-------------------------------------
author: Carlie Harper
date: 2013-09-30 13:37:34.000000000

Patch Set 7: Code-Review-1

(2 comments)

Line:11, /COMMIT_MSG -> s/as/as in/

Line:14, /COMMIT_MSG -> s/get's/gets/

-------------------------------------
author: Zachary Orozco
date: 2013-09-30 15:44:07.000000000

Patch Set 7:

(3 comments)

Line:274, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Done. I also added your test.

Line:11, /COMMIT_MSG -> Done

Line:14, /COMMIT_MSG -> Done

-------------------------------------
