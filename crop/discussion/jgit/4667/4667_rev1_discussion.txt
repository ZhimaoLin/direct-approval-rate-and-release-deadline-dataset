DESCRIPTION

Add utilities for smart HTTP error handling

The GitSmartHttpTools class started as utility functions to help report
useful error messages to users of the android.googlesource.com service.

Now that the GitServlet and GitFilter classes support filters before a
git-upload-pack or git-receive-pack request, server implementors may
these routines helpful to report custom messages to clients.  Using the
sendError() method to return an HTTP 200 OK with error text embedded in
the payload prevents native Git clients from retrying the action with a
dumb Git or WebDAV HTTP request.

Refactor some of the existing code to use these new error functions and
protocol constants.  The new sendError() function is very close to being
identical to the old error handling code in RepositoryFilter, however we
now use the POST Content-Type rather than the Accept HTTP header to check
if the client will accept the error data in the response body rather than
using the HTTP status code.  This is a more reliable way of checking for
native Git clients, as the Accept header was not always populated with the
correct string in older versions of Git smart HTTP.

Change-Id: I828ac2deb085af12b6689c10f86662ddd39bd1a2


COMMENTS

author: Brenden Conley
date: 2011-11-23 00:21:20.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1068/ 

-------------------------------------
author: Brenden Conley
date: 2011-11-23 00:24:46.000000000

Patch Set 1: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1068/ : SUCCESS

-------------------------------------
author: Santos Moore
date: 2011-11-23 01:00:27.000000000

Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)



Line:179, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java -> This looks like it will fail if textForGit overruns the buffer, presumably with an IOException. At the very least can you document in the docstring that there is an implicit maximum length of textForGit?

It would be better to handle arbitrary length messages. ISTR at least one instance you wrote of a message much longer than 128 bytes.

Line:113, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryFilter.java -> This local variable has lost its final, if you care.

-------------------------------------
author: Yoselin Hanna
date: 2011-11-23 01:32:39.000000000

Patch Set 1: (2 inline comments)



Line:179, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java -> Javadoc for ByteArrayOutputStream states this is the initial capacity of the buffer. The default is only 32 bytes. We probably need more than that for most messages so I set the default to 128 bytes for this usage. It will double in size until either JVM heap is exhausted, or the message is done being created.

Line:113, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryFilter.java -> Good catch, but yea, no, I don't care. :-)

-------------------------------------
author: Santos Moore
date: 2011-11-23 02:09:12.000000000

Patch Set 1: Looks good to me, but someone else must approve

Well, I'm 0/2 on correct usage of Java library classes today.

-------------------------------------
author: Yoselin Hanna
date: 2011-11-23 23:08:11.000000000

Patch Set 1: Looks good to me, approved; IP review completed



-------------------------------------
author: Yoselin Hanna
date: 2011-11-23 23:08:30.000000000

Change has been successfully merged into the git repository.

-------------------------------------
