DESCRIPTION

[performance] Make the bitmap commit selection revwalk more efficient

The inefficiency is caused by attempting to reuse the revwalk via repeated
reset()/markUninteresting() calls. On the MSM 3.10 Linux repository with an
existing bitmap index in the previous pack, the 1M commits with 2600+ branches
cause ~99% of the time in PackWriterBitmapPreparer.selectCommits() to be spent
in revwalk iteration, RevCommit.slowCarryFlags(), and the reset() call itself.
Replacing those calls with resetRetain(RevFlag.UNINTERESTING) reduced the
"Selecting commits (N/M)" phase from (2157 + 2327 + 2198)/3 = 2227 seconds to
(40 + 40 + 40)/3 = 40 seconds.

Change-Id: Ie999e2b091a479670b1c4fbc7d1236cddb45395b
Signed-off-by: Ariel Sawyer xxx@xxx.xxx


COMMENTS

author: Ariel Sawyer
date: 2015-11-02 20:29:02.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2015-11-02 20:29:08.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7360/

-------------------------------------
author: Brenden Conley
date: 2015-11-02 20:37:11.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7360/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2016-03-11 07:50:03.000000000

Patch Set 2:

Should we remember this was hanging around and finish it?

-------------------------------------
author: Ariel Sawyer
date: 2016-03-11 20:06:49.000000000

Patch Set 2:

Yes. I should get back to some bitmap work in the next couple of weeks, so I'll pick this back up. Thanks for pinging.

-------------------------------------
author: Ariel Sawyer
date: 2016-04-07 19:19:22.000000000

Abandoned

Jonathan's change 9d4e521 was a better way to achieve the performance fix, so abandoning this change.

-------------------------------------
