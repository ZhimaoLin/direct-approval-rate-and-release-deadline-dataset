DESCRIPTION

Add helper methods to Edit

Exposing isEmpty, getLengthA, getLengthB make it easier to examine
the state of an edit and work with it from higher level code.

The before and after cut routines make it easy to split an edit that
contains another edit, such as to decompose a REPLACE that contains
a common sequence within it.

Change-Id: Id63d6476a7a6b23acb7ab237d414a0a1a7200290
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Zachary Orozco
date: 2010-09-02 12:09:45.000000000

Patch Set 1: IP review completed

(3 inline comments)



Line:128, org.eclipse.jgit/src/org/eclipse/jgit/diff/Edit.java -> Surprising to me you suggest this. I guess you spent this method call because you know for sure the call comes for free because of inlining. Right?

Line:158, org.eclipse.jgit/src/org/eclipse/jgit/diff/Edit.java -> Why not stick to the term 'length'. Something like 'return the length of the region in A' is for me easier to understand then introducing 'distance'.

Line:163, org.eclipse.jgit/src/org/eclipse/jgit/diff/Edit.java -> see getLengthA comment

-------------------------------------
author: Juliet Cantu
date: 2010-09-02 12:56:47.000000000

Patch Set 1: (1 inline comment)



Line:158, org.eclipse.jgit/src/org/eclipse/jgit/diff/Edit.java -> I think distance is the term used in the paper that describes our diff algorithm

-------------------------------------
author: Yoselin Hanna
date: 2010-09-02 18:20:24.000000000

Patch Set 1: (2 inline comments)



Line:128, org.eclipse.jgit/src/org/eclipse/jgit/diff/Edit.java -> Right.  Because isEmpty() is declared final, it should be able to be inlined by the complier and later by the JIT without any larger analysis work being required.  Since the expression is so trivial, it should be a really good candidate for the inlining.  4 loads and 2 compares is bordering on the cost of the method call enter/exit, so it really should inline.

But, in reality, I wasn't thinking too much about performance here.  I just selected the expression and did Refactor > Extract Method in Eclipse and moved on.  The getType() method isn't very fast to begin with.  Its coded more for readability than it is for speed.  I think there may be some redundant compares occurring for some code paths.  If I cared a lot about the performance of this function I would probably redo how some of these compares occur.

I did the extraction of the method because I was planning on using isEmpty() inside patience diff.  But I later concluded that was foolish.  The place I wanted it was part of the critical path of patience diff, but I proved to myself that at that point in the code isEmpty() is always false.  Therefore the call was unnecessary and I backed out of it.  But I forgot to undo this refactoring.

Line:158, org.eclipse.jgit/src/org/eclipse/jgit/diff/Edit.java -> It may be that the Myers paper uses distance, but that's not where I got it from.  I like Christian's wording better.  I'll amend the comment.

-------------------------------------
author: Yoselin Hanna
date: 2010-09-02 20:07:53.000000000

Patch Set 1: I would prefer that you didn't submit this

Don't submit yet, I'm going to squash in some new unit tests that I forgot to write.

-------------------------------------
author: Zachary Orozco
date: 2010-09-02 21:21:11.000000000

Patch Set 1: (1 inline comment)



Line:158, org.eclipse.jgit/src/org/eclipse/jgit/diff/Edit.java -> Yes, Myers does use the term distance - but not for the length of regions. It is used in the context of "edit distances". One reason more not to call it distance here.

-------------------------------------
