DESCRIPTION

ArchiveCommand: Allow to pass options to underlying stream

Current ArchiveCommand design doesn't allow to pass in options to
underlying stream implementations. To overcome this, client has to
implement custom format implementation (it cannot be derived from
the existing one, because the classies are marked as final), and
set the options using ThreadLocal, before the method

  createArchiveOutputStream(OutputStream s)

is get called.

This change extends the ArchiveCommand.Format by allowing to pass
option map during creation of ArchiveOutputStream.

ArchiveCommand is extended correspondingly. That way client can
easily pass options to the underlying streams:

  Map<String, Object> level = ImmutableMap.<String, Object> of(
      "level", new Integer(9));
  new ArchiveCommand(repo)
      .setFormat("zip")
      .setFormatOptions(level)
      .setTree(tree)
      .setPaths(paths)
      .setPrefix(prefix)
      .setOutputStream(sidebandOut)
      .call();

Change-Id: I1d92a1e5249117487da39d19c7593e4b812ad97a
Signed-off-by: Keenan Rosario xxx@xxx.xxx


COMMENTS

author: Keenan Rosario
date: 2015-02-15 20:23:47.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-02-15 20:23:54.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6022/

-------------------------------------
author: Brenden Conley
date: 2015-02-15 20:31:24.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6022/ : SUCCESS

-------------------------------------
