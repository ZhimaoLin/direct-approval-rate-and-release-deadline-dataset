DESCRIPTION

ArchiveCommand: Allow to pass options to underlying stream

Current ArchiveCommand design doesn't allow to pass in options to
underlying stream implementations. To overcome this, client has to
implement custom format implementation (it cannot be derived from
the existing one, because the classes are marked as final), and set
the options using ThreadLocal, before the method

  ArchiveOutputStream createArchiveOutputStream(OutputStream s)

is get called.

This change extends the ArchiveCommand.Format by allowing to pass
option map during creation of ArchiveOutputStream.

ArchiveCommand is extended correspondingly. That way client can
easily pass options to the underlying streams:

  Map<String, Object> level = ImmutableMap.<String, Object> of(
      "level", new Integer(9));
  new ArchiveCommand(repo)
      .setFormat("zip")
      .setFormatOptions(level)
      .setTree(tree)
      .setPaths(paths)
      .setPrefix(prefix)
      .setOutputStream(sidebandOut)
      .call();

Change-Id: I1d92a1e5249117487da39d19c7593e4b812ad97a
Signed-off-by: Keenan Rosario xxx@xxx.xxx


COMMENTS

author: Keenan Rosario
date: 2015-02-15 20:41:11.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2015-02-15 20:41:17.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6023/

-------------------------------------
author: Brenden Conley
date: 2015-02-15 20:48:32.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6023/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2015-02-18 22:57:27.000000000

Patch Set 2: Code-Review-1

(2 comments)

how about adding a test setting some option ?

Line:153, org.eclipse.jgit/src/org/eclipse/jgit/api/ArchiveCommand.java -> xxx@xxx.xxx 4.0 tag for new api method

Line:70, org.eclipse.jgit.archive/src/org/eclipse/jgit/archive/BaseFormat.java -> This is pretty intrusive and allows setting any field, there are some fields which are not options, e.g. byte[] buf; in class ZipArchiveOutputStream, setting these is probably harmful

I think we better use java.bean.Statement to only enable setting options which correspond to a setter method in the corresponding output stream class.

-------------------------------------
author: Keenan Rosario
date: 2015-02-19 23:41:57.000000000

Patch Set 2:

(2 comments)

> (2 comments)
 > 
 > how about adding a test setting some option ?

Done.

Line:153, org.eclipse.jgit/src/org/eclipse/jgit/api/ArchiveCommand.java -> Done

Line:70, org.eclipse.jgit.archive/src/org/eclipse/jgit/archive/BaseFormat.java -> Done

-------------------------------------
