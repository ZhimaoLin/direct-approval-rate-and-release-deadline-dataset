DESCRIPTION

Break dissimilar file pairs during diff

File pairs that are very dissimilar during a diff were not being
broken apart into their constituent ADD/DELETE pairs. The leads to
sub-optimal rename detection. Take, for example, this situation:

A file exists at src/a.txt containing "foo". A user renames src/a.txt
to src/b.txt, then adds a new src/a.txt containing "bar".

Even though the old a.txt and the new b.txt are identical, the
rename detection algorithm would not detect it as a rename since it
was already paired in a MODIFY. I added code to split all MODIFYs
below a certain score into their constituent ADD/DELETE pairs. This
allows situations like the one I described above to be more
correctly handled.

Change-Id: I22c04b70581f206bbc68c4cd1ee87a1f663b418e


COMMENTS

author: Eliezer Sellers
date: 2010-07-27 19:34:20.000000000

Uploaded patch set 5.

-------------------------------------
author: Yoselin Hanna
date: 2010-07-28 00:43:15.000000000

Patch Set 5: I would prefer that you didn't submit this

(2 inline comments)



Line:273, org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffFormatter.java -> Style-nit:  I prefer:

  if (0 < score && score <= 100)

Because its easier to see that score is between these bounds.

Line:176, org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffEntry.java -> I still hate "DiffEntrys".  Its bad english.  But DiffEntries is strange because the class isn't called DiffEntrie.  Hence the generic term "entries" in the proposed text.  Also you are missing some sort of word like "into" here.  "a thing two things" makes no sense.  "a thing into two things" does.

-------------------------------------
author: Eliezer Sellers
date: 2010-07-28 01:06:36.000000000

Patch Set 5: (1 inline comment)



Line:176, org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffEntry.java -> I never quite know what to do in situations like that, where programmatic and grammatic correctness are at odds. The missing 'into', however, was a simple oversight.

-------------------------------------
