DESCRIPTION

Fix NPE during InflaterCache return after corrupt loose object

If a corrupt loose object is read, UnpackedObjectLoader was disposing
of the Inflater, and then attempting to return the disposed Inflater
to the InflaterCache.  Since the disposed Inflater had its native
libz resource deallocated and its reference cleared out, the Inflater
threw NullPointerException and refused to reset itself before being
put back into the cache.

Instead of disposing of the Inflater when corruption is found, do
nothing, and allow it to be returned to the cache.  The instance
will get reset, and should be usable by a future caller.

Bug: 310291
Change-Id: I44f2247c08b6e04fa62f8399609341b07508c096
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Juliet Cantu
date: 2010-04-24 12:18:44.000000000

Patch Set 1: Looks good to me, approved; No score

The fix is ok. We should however, have unit test for this and any corruption related logic.

-------------------------------------
author: Juliet Cantu
date: 2010-04-24 12:18:59.000000000

Patch Set 1: IP review completed



-------------------------------------
author: Juliet Cantu
date: 2010-04-24 12:19:01.000000000

Change has been successfully merged into the git repository.

-------------------------------------
