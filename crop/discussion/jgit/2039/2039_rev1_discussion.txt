DESCRIPTION

Refactor of object-checking, introducing a distinct IObjectChecker implementation for each object type.

Commit, Tree and Tag objects can be checked, but there is nothing intrinsically verifiable about the structure of a *blob*

This gets to the motivation for this change - which is that we don't *want* to have to read the entire byte array of a large blob into memory in order to check it - especially if I can't verify it!

Related to that performance issue - there is still the 'does-the-new-object-match-byte-for-byte-to-the-previously-downloaded-object' issue...


COMMENTS

author: Yoselin Hanna
date: 2010-12-05 23:25:31.000000000

Patch Set 1: I would prefer that you didn't submit this

(9 inline comments)



-------------------------------------
author: Kendrick Carrillo
date: 2010-12-06 00:00:12.000000000

Patch Set 1: Abandoned

This change is unnecessary for the effect I'm trying to achieve (fixing bug 312868).

-------------------------------------
author: Kendrick Carrillo
date: 2010-12-06 00:03:20.000000000

Patch Set 1: (1 inline comment)



Line:11, /COMMIT_MSG -> Thanks for the review  - I guess you're right, in that it's definite over-engineering with regard to solving the problem I actually want to solve (the memory consumption in IndexPack).

I think I was a bit drawn into doing this refactor because I have a personal preference for smaller classes, and when I see three methods all doing the same type of action I get a pavlovian desire to define an interface - it's something my therapist and I are working on.

In any case, you're right, it's not necessary for the end result I want, so I'll abandon this change.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:106, org.eclipse.jgit/src/org/eclipse/jgit/lib/ObjectChecker.java -> Given that the values are between 1 and 4, an array might be a better choice here.  Elsewhere, e.g. in PackWriter, we use an array.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:107, org.eclipse.jgit/src/org/eclipse/jgit/lib/ObjectChecker.java -> Style-nit: We put spaces between method arguments.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:110, org.eclipse.jgit/src/org/eclipse/jgit/lib/ObjectChecker.java -> Style-nit: We try to line-wrap lines at 80 characters.  Sure terminals are wider, but we often view JGit code side-by-side during code reviews, or within IDEs with a ton of other widgets along the left and right sides of the code.  So keeping a narrow text width makes it easier to still read everything.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:128, org.eclipse.jgit/src/org/eclipse/jgit/lib/ObjectChecker.java -> Style-nit: We put spaces around operators, and we omit unnecessary curly braces:

  if (objectChecker != null)
    objectChecker.check(raw);

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:133, org.eclipse.jgit/src/org/eclipse/jgit/lib/ObjectChecker.java -> We require Javadoc for public declarations.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:5, org.eclipse.jgit/src/org/eclipse/jgit/lib/objectcheckers/IObjectChecker.java -> Style-nit: We don't use the I prefix for interfaces.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:1, org.eclipse.jgit/src/org/eclipse/jgit/lib/objectcheckers/CommitChecker.java -> Style-nit:  All file headers must contain our BSD derived license text.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:7, /COMMIT_MSG -> Style-nit: Commit messages shouldn't be longer than 70 characters per line, otherwise they don't format well in traditional Git tools like gitk, git log, etc.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-05 23:25:30.000000000

MISMATCHED INLINE COMMENT
Line:11, /COMMIT_MSG -> I'm not sure how this refactoring really helps us avoid checking a blob.  I think its a massive amount of over-engineering for a simple problem.

We don't want to materialize the entire content of a blob in order to check it, because there isn't a reason to check the blob, we can't verify anything about it except compute its SHA-1... which IndexPack already has to do in order to build the index file.

Git usually doesn't create new object types.  In 5 years we are still using the original 4 object types that Linus Torvalds defined.  We could just as easily add a test to IndexPack that says something like:

  if (type != OBJ_BLOB)
    check(data);

That is a much simpler change.

-------------------------------------
