DESCRIPTION

Fix checkout to differentiate better between a missing and dirty file

During a checkout we want to prevent to overwrite unsaved local file
content. Jgit was therefore checking wheter the file to overwrite is
dirty or missing and would raise a conflict it this was the case. That
was wrong. It should only check that the file is dirty. It's ok to
"overwrite" a missing/non-existing file.

Change-Id: I63c3a94f663c87f09170fdf8b1b1bf4ed5246fc5
Signed-off-by: Zachary Orozco xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2014-02-25 17:09:59.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/4744/

-------------------------------------
author: Brenden Conley
date: 2014-02-25 17:24:28.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/4744/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2014-02-25 22:19:36.000000000

Patch Set 1: Code-Review-1

(10 comments)

the fix itself looks good

Line:7, /COMMIT_MSG -> maybe better:

Don't raise checkout conflict for file missing in working tree

Line:10, /COMMIT_MSG -> s/wheter/whether/

Line:11, /COMMIT_MSG -> s/conflict it/conflict if/

Line:12, /COMMIT_MSG -> s/that/if/

Line:142, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> can we format this using <ol> to save a couple of lines and improve readability ?

	/**
	 * Steps:
	 * <ol>
	 * <li>Add file 'a'
	 * <li>Commit
	 * <li>Create branch '1'
	 * <li>modify file 'a'
	 * <li>Commit
	 * <li>Delete file 'a' in the working tree
	 * <li>Checkout branch '1'
	 * </ol>

Line:143, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> you are also adding file 'b'

Line:163, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> I don't understand this weird method name

Line:170, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> why is "git rm a" needed here ?

Line:173, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> s/add file a/modify file a/

Line:185, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> shouldn't we also assert content of file a ?

-------------------------------------
author: Zachary Orozco
date: 2014-02-26 14:41:52.000000000

Patch Set 1:

(10 comments)

Line:7, /COMMIT_MSG -> Done

Line:10, /COMMIT_MSG -> Done

Line:11, /COMMIT_MSG -> Done

Line:12, /COMMIT_MSG -> Done

Line:142, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> Done

I simply copied an existing test from the open change 22160 . So this comments here will apply to alot of other thests there.

Line:143, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> Done

Line:163, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> Done

Line:170, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> Done

The original test which I copied (in change 22160) had a javadoc saying "replace file 'a' by file 'a'" and consequently it was first removing file 'a' and then readding it. When I took it over I changed the javadoc and forgot to remove the 'git rm'. Maybe there was some hidden value in first deleting from the index and then readding it - but I couldn't find a good reason for this. 

@Alex, @Robin : have I overlooked something?

Line:173, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> Done

Line:185, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> Done

-------------------------------------
author: Douglas Trujillo
date: 2014-02-26 21:34:18.000000000

Patch Set 1:

(1 comment)

Line:170, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> I am not sure they see your comment here hence I'll add them as reviewers

-------------------------------------
author: Rylee Bush
date: 2014-02-27 12:33:28.000000000

Patch Set 1:

(1 comment)

Line:170, org.eclipse.jgit.pgm.test/tst/org/eclipse/jgit/pgm/CheckoutTest.java -> You're right, in this test, the git rm a is useless.

-------------------------------------
