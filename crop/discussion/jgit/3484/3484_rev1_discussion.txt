DESCRIPTION

First submission of CleanCommand

jGit implementation of CleanCommand

Conflicts:

	org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java


COMMENTS

author: Brenden Conley
date: 2011-05-20 16:02:13.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/462/ 

-------------------------------------
author: Brenden Conley
date: 2011-05-20 16:02:58.000000000

Patch Set 1: Build Failed

Build Failed 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/462/ : FAILURE

-------------------------------------
author: Douglas Trujillo
date: 2011-05-20 19:14:04.000000000

Patch Set 1: I would prefer that you didn't submit this

(8 inline comments)

This change isn't in shape for review
- it depends on an abandoned change, to fix that rebase this change onto origin/master
- it contains an unresolved conflict, hence it doesn't compile
- the commit message is redundant and doesn't have a Change-Id footer
- it lacks unit tests

Please follow the guidelines given in the contributor guide [1]

[1] http://wiki.eclipse.org/EGit/Contributor_Guide#Contributing_Patches

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java -> missing license header

Line:10, org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java -> style nit: we don't use author tags 

missing javadoc for public class

Line:6, org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java -> Why do you push an unresolved conflict for code review ? This can't compile.

Line:50, org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java -> What does ret mean in this name ? We prefer readable names ...

Line:58, org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java -> why is the constructor protected ?

Line:60, org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java -> workingTreeIt will be always null here

Line:71, org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java -> what is the purpose of this method ?

Line:96, org.eclipse.jgit/src/org/eclipse/jgit/api/CleanCommand.java -> println doesn't seem to be appropriate error handling

-------------------------------------
