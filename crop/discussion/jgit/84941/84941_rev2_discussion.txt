DESCRIPTION

Extract insecure Cipher factory

Bazel runs ErrorProne by default and ErrorProne rightly complains that
allowing the user to specify any Cipher can lead to insecure code
(in particular, getCipher("AES") operates in ECB mode). Unfortunately
this is required to support existing repositories insecurely stored
on S3.

Extract the insecure factory code to its own class so this can be built
as a java_library() with this check disabled.

Change-Id: I34f381965bdaa25d5aa8ebf6d8d5271b238334e0


COMMENTS

author: Eden Lin
date: 2016-11-13 23:28:54.000000000

Patch Set 2: Published edit on patch set 1

-------------------------------------
author: Brenden Conley
date: 2016-11-13 23:29:00.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9385/

-------------------------------------
author: Eden Lin
date: 2016-11-13 23:30:04.000000000

Patch Set 2: Code-Review+2

-------------------------------------
author: Brenden Conley
date: 2016-11-13 23:39:57.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9385/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2016-11-14 00:00:18.000000000

Patch Set 2: Code-Review+2

-------------------------------------
author: Gerrit Code Review
date: 2016-11-14 00:00:27.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
author: Elise Key
date: 2016-11-18 02:53:36.000000000

Patch Set 2:

(1 comment)

Line:16, /COMMIT_MSG -> Any idea how to do this for the Maven build?  I've enabled ErrorProne in the pom.xml [1] but it's failing with the InsecureCryptoUsage error.

[1] https://git.eclipse.org/r/85253

-------------------------------------
author: Yoselin Hanna
date: 2016-11-18 18:02:32.000000000

Patch Set 2:

(1 comment)

Line:16, /COMMIT_MSG -> This sort of thing is virtually impossible in Maven. You need to make a new module in a new directory with a new pom.xml that hosts this single source file, and then depend on that in the jgit module.

You may be able to convince maven to use a pattern that only matches this single source file for the new module and excludes it in the jgit module, but that could be difficult.

-------------------------------------
