DESCRIPTION

Refactor DfsBlockCache and make it pluggable

- Made a DfsBlockCache abstract class
- Renamed the original DfsBlockCache into DefaultDfsBlockCache
  and refactor to make it extend DfsBlockCache

- Change visibility to make implmentation outside the package possible

Change-Id: I20a28f275b599651a9d9072933f372dce1f803ca
Signed-off-by: Jaydan Beard xxx@xxx.xxx


COMMENTS

author: Jaydan Beard
date: 2017-03-14 23:19:22.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2017-03-14 23:19:29.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9965/

-------------------------------------
author: Eden Lin
date: 2017-03-14 23:22:14.000000000

Patch Set 3: Code-Review-1

Can you say a little more about what you're trying to do?

-------------------------------------
author: Jaydan Beard
date: 2017-03-14 23:22:22.000000000

Patch Set 3:

Patch 1 + 2 contains the changes that make DfsBlockCache an abstract class, and make the current DfsBlockCache DefaultDfsBlockCache
Patch 3 contains the changes that change some of the visibility to make implementing a DfsBlockCache outside the package possible

-------------------------------------
author: Eden Lin
date: 2017-03-14 23:24:52.000000000

Patch Set 3:

What I mean is, what is your goal? What will the child class you make do? Without knowing the motivation, it is impossible to review this patch.

The goal of DfsRepository is to be an implementation of Repository that handles the block cache automatically. If you're not using that feature, why inherit from DfsRepository instead of Repository? If you are using that feature but ran into some problem with it, can you describe the nature of the problem? Maybe it's possible to fix in the standard DfsBlockCache.

-------------------------------------
author: Brenden Conley
date: 2017-03-14 23:29:34.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9965/ : SUCCESS

-------------------------------------
author: Jaydan Beard
date: 2017-03-14 23:37:28.000000000

Patch Set 3:

I put the implementation in a different PR. Basically we are hitting an issue in production where because the `packCache` field never gets cleared, our service goes OOM every other hour. So we had an implementation with Caffeine which clears every map it's using. But since we are not sure whether JGit wants to accept an extra Caffeine cache dependency, we separated the changes into two parts -- make DfsBlockCache pluggable, and have an implementation in our own service that implements it with Caffeine

-------------------------------------
author: Elise Key
date: 2017-03-15 03:35:28.000000000

Patch Set 3:

> Basically we are
 > hitting an issue in production where because the `packCache` field
 > never gets cleared, our service goes OOM every other hour.

Does [1] help?

[1] https://git.eclipse.org/r/#/c/88682/

-------------------------------------
author: Jaydan Beard
date: 2017-03-15 15:17:00.000000000

Patch Set 3:

Yea it does help. But as mentioned in that PR too, it will be great if we can make DfsBlockCache an interface or abstract class. In our case since the BlockLimit only counts the cached blocks not the PackIndex (which actually takes up a lot of space), I'm worried it can still cause issues in production in our use case.

-------------------------------------
author: Annika Pacheco
date: 2017-04-03 22:24:42.000000000

Patch Set 3:

I think it would be nice to have possibility to plug in a different type of cache. As I had mentioned in my PR ([1]) we also use a different implementation which better fits our needs. Would be good to see an "official" interface to plug this in.

By the way: any chance that the [1] will be merged?

[1] https://git.eclipse.org/r/#/c/88682/

-------------------------------------
author: Elise Key
date: 2017-09-21 06:59:25.000000000

Abandoned

message

-------------------------------------
author: Elise Key
date: 2017-09-21 07:23:06.000000000

Patch Set 3:

> Abandoned
 > 
 > message

Sorry for the unhelpful message.  This change was abandoned automatically by a script, and due to operator error the correct message was not added.

It should have read:  "Abandoning after 3 months of inactivity.  If this change is still needed, please restore it."

-------------------------------------
