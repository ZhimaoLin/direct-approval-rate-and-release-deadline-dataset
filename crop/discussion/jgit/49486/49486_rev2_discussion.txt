DESCRIPTION

Expose PackWriter stats in BundleWriter.

Most stats are only available after writeBundle function finishes. The
count of objects is available during writeBundle function call, and is
most important, so add a callback in PackWriter and a dedicated function
in BundleWriter for it.

Change-Id: I1baeedcc6946b1093652de4a707fe597a577e526
Signed-off-by: Yuxuan 'fishy' Wang xxx@xxx.xxx

COMMENTS

author: Kayleigh Dennis
date: 2015-06-04 23:47:37.000000000

Patch Set 2: Commit message was updated

-------------------------------------
author: Brenden Conley
date: 2015-06-04 23:53:20.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6625/

-------------------------------------
author: Brenden Conley
date: 2015-06-05 00:00:13.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6625/ : SUCCESS

-------------------------------------
author: Santos Moore
date: 2015-06-05 22:56:44.000000000

Patch Set 2:

(3 comments)

Line:269, org.eclipse.jgit/src/org/eclipse/jgit/transport/BundleWriter.java -> Why does BundleWriter need to keep track of the object count on its own? You just exposed it through the PackWriter.Statistics.

Line:177, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> Missing @since xxx@xxx.xxx

Line:179, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> ISTR you wanted to use this to abort pack writing early, which is hard to do if it's a void method.

-------------------------------------
author: Eden Lin
date: 2015-06-05 23:04:56.000000000

Patch Set 2:

(6 comments)

Line:251, org.eclipse.jgit/src/org/eclipse/jgit/transport/BundleWriter.java -> 4.1

Line:173, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> 4.1 now

Line:177, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> The meaning of caller is confusing here. Does this mean the caller to writePack or caller to setObjectCount?

Will this method always be called if I call writePack? Will it be called exactly once? When should I expect it to be called?

Line:376, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> When or why would I call this setter? i.e. it would be helpful to have an example of how this is meant to be used here.

Line:379, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> 4.1 now

Line:977, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> Can the caller get this information from the progressMonitor?

I think that would be violating the abstraction, though --- totalWork is supposed to be an abstract number of work units. But e.g. if the PackWriter had a getter to get the object count then the caller could notice using the writeMonitor that the object count is now known and get it.

What you have here may still be a better way to go. With more context it would be easier to know.

-------------------------------------
author: Kayleigh Dennis
date: 2015-06-06 04:30:01.000000000

Patch Set 2:

(9 comments)

Line:251, org.eclipse.jgit/src/org/eclipse/jgit/transport/BundleWriter.java -> Done

Line:269, org.eclipse.jgit/src/org/eclipse/jgit/transport/BundleWriter.java -> Done

Line:173, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> Done

Line:177, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> Done

Line:177, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> I think @since is optional if it's the same as the higher level (public interface ObjectCountCallback in this case)? xxx@xxx.xxx

Line:179, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> Done

Line:376, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> Done

Line:379, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> Done

Line:977, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriter.java -> Not really.

BundleWriter.writeBundle only accept 1 progress monitor as parameter, and then use it thrice inside PackWriter, so it's not very useful to caller of BundleWriter.

-------------------------------------
