DESCRIPTION

RFC: Add support for rebase interactive 'reword' command

'reword' command is used to change commit message of any commit in git
history.

Change-Id: Ic974e76dfd923fd6f0cb8f07d1a6fbecd9abbf31
Signed-off-by: Leslie Stephenson xxx@xxx.xxx


COMMENTS

author: Leslie Stephenson
date: 2012-09-16 22:57:07.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2012-09-16 22:57:13.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2276/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-16 23:02:54.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2276/ : SUCCESS

-------------------------------------
author: Juliet Cantu
date: 2012-09-24 05:55:51.000000000

Patch Set 2: (5 inline comments)



Line:262, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Not required, but it seems we should create a UTF8FileWriter for this pattern.

Line:265, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> EGit/JGit?  We need a setting for this that then caller may call to manage the message. setCallerName("EGit"), with "JGit" being the default

Line:275, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Decode properly

Line:330, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> It's not that easy. It's not ok to block during rebase, other than pick actions. The user must be allowed to do other things in order to discover what to actually do, e.g. look at history, code etc, etc, i.e. the same situation as we have when resolving conflicts. It would be ok to bring up the amend dialog by default, but the user must not be forced to amend before doing anyting else.

Line:333, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Perhaps we should err out if there is an unimplemented action. We could see to it that C git could resume.

-------------------------------------
author: Juliet Cantu
date: 2012-09-24 05:56:03.000000000

Patch Set 2: I would prefer that you didn't submit this



-------------------------------------
author: Leslie Stephenson
date: 2012-09-24 10:22:06.000000000

Patch Set 2: (1 inline comment)



Line:330, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> The 'reword' command will also block you on command line git, the regular behavior here is to show user editor with loaded commit message for edition. There is 'edit' command that will not block user and allow him to amend commit.

-------------------------------------
author: Juliet Cantu
date: 2012-09-24 18:48:09.000000000

Patch Set 2: (1 inline comment)



Line:330, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> hmm, I may be inclined to agree, if you only want to reword (signed-off/change-id should be included?) then you save some work.

What happens if the user changes his mind and realize that he need to do more research in order to do the rewording. It may  be as simple as the need to copy a small text from somehere else in the IDE. Can a cancel change the action into an edit? This often happens to me quite often, but I've newer used the reword command.

-------------------------------------
author: Leslie Stephenson
date: 2012-09-24 20:25:50.000000000

Patch Set 2: (5 inline comments)



Line:262, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Where did you find this UTF8FileWriter?

Line:265, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> this line was moved/refactored from previous version of RebaseCommand. personally I would remove it, for me it is not important what application generates git-rebase-todo file

Line:275, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Done

Line:330, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> in command line git whole commit message is shown (including change-id etc.) and can be changed

he can cancel commit or leave it unchanged. in command line git you cannot cancel or change command during rebase and personally I would keep the same behavior in jgit/egit. if you change your mind during rebase you'll need to start it once again.

Line:333, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Unsupported commands will be handled in RebaseCommand.Action.parse from change #7881

-------------------------------------
author: Carlie Harper
date: 2012-09-28 08:01:14.000000000

Patch Set 2: (3 inline comments)



Line:1529, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/RebaseCommandTest.java -> I find the method name misleading. I first thought you want to test the "edit" command of rebase.

Line:330, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> I agree with Dariusz. I think this change still leaves all the possibilities for the usage in egit. 

We could e.g. bring up a non-modal dialog for editing the message. But on the other hand we would then have to handle the situations that the user does unwanted things like committing or resetting.

Line:1109, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Why do you make this class public?

-------------------------------------
author: Leslie Stephenson
date: 2012-10-03 07:59:36.000000000

Patch Set 2: (2 inline comments)



Line:1529, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/RebaseCommandTest.java -> Done

Line:1109, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Because Step class is part of InteractiveHandler.prepareSteps method and should be accessed by API consumers

-------------------------------------
