DESCRIPTION

TemporaryBuffer: Allow presizing block pointer list

Callers may wish to use TemporaryBuffer as an essentially unbounded
buffer by passing Integer.MAX_VALUE as the size. (This makes it
behave like ByteArrayOutputStream, only without requiring contiguous
memory.) Unfortunately, it was always allocating an array in the
backing block pointer list to hold enough blocks to MAX_VALUE--all
262,016 of them. It wasn't allocating the blocks themselves, but this
array was still extremely wasteful, using about 2MiB of memory on a
64-bit system.

Tweak the interface to specify an estimated size, and only allocate
the block pointer list enough entries to hold that size. It's an
ArrayList, so if that estimate was wrong, it'll grow. We assume the
cost of finding enough contiguous memory to grow that array is
acceptable.

While we're in there, fix an off-by-one error: due to integer division
we were undercounting the number of blocks needed to store n bytes of
data as (n / SZ).

Change-Id: I794eca3ac4472bcc605b3641e177922aca92b9c0


COMMENTS

author: Santos Moore
date: 2015-03-18 20:39:02.000000000

Uploaded patch set 3.

-------------------------------------
author: Yoselin Hanna
date: 2015-03-18 20:39:49.000000000

Patch Set 3: Code-Review+2

-------------------------------------
author: Brenden Conley
date: 2015-03-18 20:55:15.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6161/

-------------------------------------
author: Brenden Conley
date: 2015-03-18 21:04:18.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6161/ : SUCCESS

-------------------------------------
author: Santos Moore
date: 2015-03-18 21:19:52.000000000

Change has been successfully merged into the git repository.

-------------------------------------
