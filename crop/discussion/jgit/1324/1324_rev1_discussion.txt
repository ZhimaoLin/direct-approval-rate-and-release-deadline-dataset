DESCRIPTION

Fix NumberFormatException in PersonIdent.

PersonIdent should be able to parse an invalid commit which
contains multiple authors, like "A <a@a.org>, B xxx@xxx.xxx


COMMENTS

author: Malia Sampson
date: 2010-08-17 14:48:51.000000000

Patch Set 1: Looks good to me, but someone else must approve; IP review completed

What's the deal with multiple authors Shawn?

-------------------------------------
author: Saniya Hill
date: 2010-08-17 15:56:54.000000000

Patch Set 1:

I've encountered a commit with multiple authors in the perl repository[1], it's commit 13b79730adea97e660de84bbe67f9d7cbe344302 and the PersonIdent string (to be parsed) looks like

M.J.T. Guy <mjtg@...>, Tim Bunce xxx@xxx.xxx 900799070 +0000

[1] git://perl5.git.perl.org/perl.git

-------------------------------------
author: Yoselin Hanna
date: 2010-08-18 19:15:29.000000000

Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)



Line:129, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/T0001_PersonIdent.java -> I agree with the tests for PersonIdent.  But we also need these same tests for RawParseUtils.parsePersonIdent().  That constructor is used for RevCommit's getAuthor() method, which is probably what most display tools will be relying on.  And I'm reasonably certain we aren't testing for the multiple author case there, even if it does work.

Line:199, org.eclipse.jgit/src/org/eclipse/jgit/lib/PersonIdent.java -> This constructor should be taken out back and put out of its misery.

I wonder if we shouldn't instead write it as:

  PersonIdent self = RawParseUtils.parsePersonIdent(Constants.encode("author " + in), 7);
  ... copy fields from self to this ...

That way we only have a single routine to parse the canonical formatting.  This constructor should be infrequently used, so dropping to UTF-8 byte[] and then upconverting back to String shouldn't be a major performance hit in exchange for having just one implementation to test and maintain.

-------------------------------------
