DESCRIPTION

Parsing of PersonIdent for multiple authors fixed.

PersonIdent should be parsable for an invalid commit which
contains multiple authors, like "A <a@a.org>, B xxx@xxx.xxx
PersonIdent(String) constructor now delegates to
RawParseUtils.parsePersonIdent().

Change-Id: Ie9798d36d9ecfcc0094ca795f5a44b003136eaf7


COMMENTS

author: Saniya Hill
date: 2010-08-19 13:35:28.000000000

Uploaded patch set 2.

-------------------------------------
author: Yoselin Hanna
date: 2010-08-19 18:26:25.000000000

Patch Set 2: I would prefer that you didn't submit this

(5 inline comments)

My comments aren't complete.  Basically I'm giving up on the review for now because you need to go back and rethink your logic a little given that you can't rely on raw.length being the "end" of what you want to examine.  (See my comment on line 705 of RawParseUtils.)

Line:670, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> Thanks for fixing the Javadoc here.  Line 681 returning null when there was no "<" on the line totally contradicted the documentation.  :-)

Line:701, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> Why do we need to trim this?  Whatever is between < and > should be taken as-is as the email.  Do you have an example of a malformed commit where the email contains leading or trailing whitespace near the <>'s and it needs to be discarded?  Even if that exists, I'd almost still be tempted to say that is the proper text of the address, and we should preserve that text in the parsing.

Line:705, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> No.  When parsing a commit (for example) the array raw contains the entire message.  The tail of the array is the end of the message and has nothing to do with the author or committer line you are trying to parse right now.

This is why we use emailE above to try to find the termination point within the current line.  nextLF() returns the position of either the '>' or the '\n', whichever occurs first.  And then we try to look only in that range of [nameB, emailE).

Line:1046, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> Style-nit: Private constructor in a static utility class is always last.  So move lastIndexOfTrim() above here.

Line:1051, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> Style-nit: We don't use curly braces around simple loops.

-------------------------------------
author: Saniya Hill
date: 2010-08-20 13:10:32.000000000

Patch Set 2: (4 inline comments)



Line:701, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> I think I've taken that from old PersonIdent code, anyway I agree that we shouldn't trim here. Also name is currently right-trimmed, I will change that to preserve spaces as well (except of the 1-space separator)

Line:705, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> What an ugly bug. Interestingly, no test has detected that. I'll add assertions to RevCommitParseTest.

Line:1046, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> Done

Line:1051, org.eclipse.jgit/src/org/eclipse/jgit/util/RawParseUtils.java -> Done

-------------------------------------
