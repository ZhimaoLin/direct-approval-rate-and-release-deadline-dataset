DESCRIPTION

Introduce getExactRef to get a single ref whose exact name is known

This can be faster then either getRef(name) or getRefs(ALL).get(name) because it
only needs to examine a single ref.

NEEDSWORK: tests

Change-Id: If1bd09bcfc9919e7976a4d77f13184ea58dcda52
Signed-off-by: Eden Lin xxx@xxx.xxx


COMMENTS

author: Eden Lin
date: 2015-06-05 18:05:56.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-06-05 18:06:03.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6626/

-------------------------------------
author: Brenden Conley
date: 2015-06-05 18:13:25.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6626/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2015-06-05 18:43:57.000000000

Patch Set 1: Code-Review-1

(3 comments)

Line:225, org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java -> I think we should deprecate getRef(String) and add findRef(String) that replaces it. This makes it more clear the caller is looking for a ref that matches the input.

It also matches the static findRef() below.

We can make getRef(String) concrete to call findRef(String), and mark xxx@xxx.xxx And we can offer a default implementation of findRef(String) (see below). This should be a non-breaking API change and get us through to JGit 5.

Line:240, org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java -> Maybe we can avoid the hideous get prefix and use exactRef(String).

Also add Map<String, Ref> exactRef(String ... name) to lookup multiple exact refs in one shot. A default findRef() could then be defined in terms of this by taking its input and building the permutations from SEARCH_PATH to create the input array for exactRef(String[]), get the results, then pass that through static findRef() below to return the matching result.

Line:242, org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java -> Good default solution. Nit: space around + operator.

-------------------------------------
author: Santos Moore
date: 2015-06-05 18:44:12.000000000

Patch Set 1:

(1 comment)

Line:9, /COMMIT_MSG -> In addition to this performance benefit, it also avoids confusing behavior when there is a subdirectory starting with "refs/" underneath one of the standard search paths. Currently, getRef("refs/heads/foo") will return refs/heads/refs/heads/foo if it exists (and refs/heads/foo does not), which I've always found surprising.

-------------------------------------
