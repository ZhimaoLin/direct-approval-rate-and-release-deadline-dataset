DESCRIPTION

Introduce exactRef to read a ref whose exact name is known

Unlike getRef(name), the new exactRef method does not walk the search
path.  This should produce a less confusing result than getRef when the
exact ref name is known: it will not try to resolve refs/foo/bar to
refs/heads/refs/foo/bar even when refs/foo/bar does not exist.

It can be faster than both getRefs(ALL).get(name) and getRef(name)
because it only needs to examine a single ref.

A follow-up change will introduce a findRef synonym to getRef and
deprecate getRef to make the choice a caller is making more obvious
(exactRef or findRef, with the same semantics as getRefs(ALL).get and
getRefs(ALL).findRef).

Change-Id: If1bd09bcfc9919e7976a4d77f13184ea58dcda52
Signed-off-by: Eden Lin xxx@xxx.xxx


COMMENTS

author: Eden Lin
date: 2015-06-05 21:21:44.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2015-06-05 21:21:51.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6629/

-------------------------------------
author: Brenden Conley
date: 2015-06-05 21:28:58.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6629/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2015-06-05 22:15:36.000000000

Patch Set 4: Code-Review+2

-------------------------------------
author: Eden Lin
date: 2015-06-05 22:22:02.000000000

Change has been successfully merged into the git repository.

-------------------------------------
author: Dashawn Dalton
date: 2015-06-08 14:53:17.000000000

Patch Set 4:

(1 comment)

Line:278, org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java -> The Eclipse compiler correctly reports an error here:
Javadoc: Missing #: "exactRef(String)}."

Since the JGit project is already correctly set up, it would make sense to use those setting in the Maven build as well, by adding these command line arguments to the compiler: -properties .settings/org.eclipse.jdt.core.prefs

-------------------------------------
author: Eden Lin
date: 2015-06-08 18:12:59.000000000

Patch Set 4:

(1 comment)

Line:278, org.eclipse.jgit/src/org/eclipse/jgit/lib/RefDatabase.java -> Thanks. Sent https://git.eclipse.org/r/49690 to fix the Javadoc.

Can you spell out the pom.xml change you're describing in more detail? I tried

 diff --git i/pom.xml w/pom.xml
 index 63987f3..989b90c 100644
 --- i/pom.xml
 +++ w/pom.xml
 @@ -263,6 xxx@xxx.xxx
              <encoding>UTF-8</encoding>
              <source>1.7</source>
              <target>1.7</target>
 +            <compilerArgs>
 +              <arg>-properties</arg>
 +              <arg>${project.basedir}/.settings/org.eclipse.jdt.core.prefs</arg>
 +            </compilerArgs>
            </configuration>
          </plugin>
  

with result

 [ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.2:compile (default-compile) on project org.eclipse.jgit: Fatal error compiling: invalid flag: -properties -> [Help 1]

I think that option might be specific to Eclipse JDT (so the default javac wouldn't be able to handle it).

-------------------------------------
