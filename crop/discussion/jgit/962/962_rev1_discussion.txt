DESCRIPTION

Allow Repository.getDirectory() to be null

Some types of repositories might not be stored on local disk.  For
these, they will most likely return null for getDirectory() as the
java.io.File type cannot describe where their storage is, its not
in the host's filesystem.

Document that getDirectory() can return null now, and update all
current non-test callers in JGit that might run into problems on
such repositories.  For the most part, just act like its bare.

Change-Id: I061236a691372a267fd7d41f0550650e165d2066
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Blake Oneal
date: 2010-07-02 21:44:40.000000000

Patch Set 1: Looks good to me, but someone else must approve



-------------------------------------
author: Juliet Cantu
date: 2010-07-02 22:11:42.000000000

Patch Set 1:

This one will need further work.

-------------------------------------
author: Yoselin Hanna
date: 2010-07-02 22:12:59.000000000

Patch Set 1:

Any suggestions on what we should do here?  Do we try (again) to rip out the getDirectory method entirely?

-------------------------------------
author: Juliet Cantu
date: 2010-07-02 22:15:09.000000000

Patch Set 1: (2 inline comments)



-------------------------------------
author: Juliet Cantu
date: 2010-07-02 22:15:58.000000000

Patch Set 1: Looks good to me, approved; IP review completed

For the sake of getting a huge patch series past...

-------------------------------------
author: Douglas Trujillo
date: 2010-07-02 22:18:01.000000000

Patch Set 1: Looks good to me, but someone else must approve



-------------------------------------
author: Yoselin Hanna
date: 2010-07-02 22:21:02.000000000

Patch Set 1: (2 inline comments)



Line:275, org.eclipse.jgit/src/org/eclipse/jgit/transport/FetchProcess.java -> The only reason we produce FETCH_HEAD is to be compatible with C Git.  The only reason C Git produces FETCH_HEAD is to carry data from `git fetch` into `git merge` during a `git pull`, but it does also act as a handy reference for "the last thing I got".  Really the only value for JGit to be writing that file is for the last part, "the last thing I got".  We'll never need to carry data from our fetch to our merge code through a local file, that's nuts.

I think its perfectly OK if we stop writing this file on less-conventional repositories.  If "the last thing I got" proves to be really useful there, we could try to update a standard ref called FETCH_HEAD via updateRef().  But again, a lot of this all predates the idea of remote tracking branches being updated during fetch.

Line:123, org.eclipse.jgit/src/org/eclipse/jgit/lib/RepositoryCache.java -> Because we don't know how to produce their cache key?  What should be the cache key for a repository stored in memory?  Or "in the cloud"?  We don't know, and we don't have a factory method on the Repository class to give us one.

I guess the change here would be to instead add a getRepositoryCacheKey() method to Repository and allow the implementation to override it with the key for this repository, then we can register and close through that key object.

-------------------------------------
author: Yoselin Hanna
date: 2010-07-27 16:11:52.000000000

Change has been successfully pushed.

-------------------------------------
author: Juliet Cantu
date: 2010-07-02 22:15:08.000000000

MISMATCHED INLINE COMMENT
Line:275, org.eclipse.jgit/src/org/eclipse/jgit/transport/FetchProcess.java -> I guess there is some thought to following up here. Even if
the repo is not file based, shouldn't we store FETCH_HEAD
some other way?

-------------------------------------
author: Juliet Cantu
date: 2010-07-02 22:15:08.000000000

MISMATCHED INLINE COMMENT
Line:123, org.eclipse.jgit/src/org/eclipse/jgit/lib/RepositoryCache.java -> Why should not non-file repositories be cached?

-------------------------------------
