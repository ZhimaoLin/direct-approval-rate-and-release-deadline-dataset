DESCRIPTION

Refactor object writing responsiblities to ObjectDatabase

The ObjectInserter API permits ObjectDatabase implementations to
control their own object insertion behavior, rather than forcing
it to always be a new loose file created in the local filesystem.
Inserted objects can also be queued and written asynchronously to
the main application, such as by appending into a pack file that
is later closed and added to the repository.

This change also starts to open the door to non-file based object
storage, such as an in-memory HashMap for unit testing, or a more
complex system built on top of a distributed hash table.

To help existing application code port to the newer interface we
are keeping ObjectWriter as a delegation wrapper to the new API.
Each ObjectWriter instances holds a reference to an ObjectInserter
for the Repository's top-level ObjectDatabase, and it flushes and
releases that instance on each object processed.

Change-Id: I413224fb95563e7330c82748deb0aada4e0d6ace
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-06-27 01:52:36.000000000

Uploaded patch set 7.

-------------------------------------
author: Blake Oneal
date: 2010-07-01 11:33:51.000000000

Patch Set 7: Looks good to me, but someone else must approve



-------------------------------------
author: Juliet Cantu
date: 2010-07-05 22:34:27.000000000

Patch Set 7: Looks good to me, approved; IP review completed



-------------------------------------
author: Yoselin Hanna
date: 2010-07-27 16:11:55.000000000

Change has been successfully pushed.

-------------------------------------
