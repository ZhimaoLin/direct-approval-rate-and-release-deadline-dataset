DESCRIPTION

Added file path similarity to scoring metric in rename detection

The scoring method was not taking into account the similarity of
the file paths and file names. I changed the metric so that it is 90%
based on content (which used to be 100% of the old metric), and 10%
based on path similarity. Of that 10%, half (5% of the total final
score) is based on the actual file names (e.g. "foo.java"), and half
on the directory (e.g. "src/com/foo/bar/").

Change-Id: I94f0c23bf6413c491b10d5625f6ad7d2ecfb4def


COMMENTS

author: Yoselin Hanna
date: 2010-07-12 17:46:13.000000000

Patch Set 1: I would prefer that you didn't submit this

(6 inline comments)



Line:266, org.eclipse.jgit/src/org/eclipse/jgit/diff/SimilarityRenameDetector.java -> I know we talked about this being 90/10, but I wonder if that's still a good decision.  Most of the test scores dropped by a good amount.  In git content is (mostly) king.  I wonder if we weakened the content signal too much by making it only 90%.

I just checked the C Git source code, I think they are using under 1% for the name similarity score.

Maybe we compute this as 99%/1%:

  (contentScore * 99 + nameScore * 1) / 100

Which means we actually have a lot of rounding error.  Since both scores are currently in the [0,100] range maybe we boost them to be in the [0,10000] range.  Combined they still won't overflow an int but we can carry some more precision into the final score computation so that a near tie at the content level can be broken by a strong name similarity.

I would modify the SimilarityIndex.score() method to take a base parameter, that is, how many steps the score range should occupy between [0, base].  Then you can pass in 10000 here and make it clear the score is out of 10000 rather than 100 for the content.

Line:302, org.eclipse.jgit/src/org/eclipse/jgit/diff/SimilarityRenameDetector.java -> Style-nit: Break should be on next line.

Line:306, org.eclipse.jgit/src/org/eclipse/jgit/diff/SimilarityRenameDetector.java -> You can short-circuit this loop entirely if dirSim == dirMax after the above loop.  This happens when the rename is just a file rename within the same directory, in which case you can just set dirScoreLtr and dirScoreRtl to 100.

Line:307, org.eclipse.jgit/src/org/eclipse/jgit/diff/SimilarityRenameDetector.java -> Style-nit: Break should be on next line.

Line:317, org.eclipse.jgit/src/org/eclipse/jgit/diff/SimilarityRenameDetector.java -> Style-nit: Break should be on next line.

Line:321, org.eclipse.jgit/src/org/eclipse/jgit/diff/SimilarityRenameDetector.java -> Style-nit: Don't create a local variable just to return an expression.  Just return it.

-------------------------------------
author: Eliezer Sellers
date: 2010-07-12 18:15:51.000000000

Patch Set 1: (1 inline comment)



Line:266, org.eclipse.jgit/src/org/eclipse/jgit/diff/SimilarityRenameDetector.java -> Would the final score be out of 10000, or just the content score? Since we're using 7 bits to hold the score in the matrix, we would have to change the encoding scheme to have the final score be up to 10000. If we leave the final score to be [0,100] I don't see how we would be getting any more precision for tie breaking.

-------------------------------------
