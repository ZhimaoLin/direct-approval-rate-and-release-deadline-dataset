DESCRIPTION

push: Report fatal server errors during pack writing

If the push client has requested side-band support the server can
signal a fatal error parsing the pack using the error channel (3)
and then hang up. This may cause the PackWriter to fail to write to
data onto the network socket, which throws a misleading error back
up to the application and the user.

During a write failure poll the input to see if the side band system
can parse out an error message off channel 3. This should be fast as
there will either be an error present in the buffer, or the remote will
also have hung-up on the side band channel. In the case of a hang-up
just rethrow the original IOException as its a network error.

This roughly matches what C git does; once commands are sent and the
packer is started a new thread runs in the background to decode any
possible server error during unpacking on the remote peer

Change-Id: Idb37a4a122a565ec4b59130e08c27d963ba09395


COMMENTS

author: Yoselin Hanna
date: 2016-07-05 05:13:53.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-07-05 05:13:59.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8622/

-------------------------------------
author: Brenden Conley
date: 2016-07-05 05:27:31.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8622/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2016-07-05 09:16:25.000000000

Patch Set 1: Code-Review+2

-------------------------------------
author: Gerrit Code Review
date: 2016-07-06 00:21:03.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
