DESCRIPTION

DirCacheBuilder: Speed up reading from trees

Recursively copying a tree into a DirCache is a bottleneck for some
algorithms like the in memory merge code in Gerrit Code Review.  Drop
a layer down in the stack and use RawTreeIterator directly as the
addition logic only processes 1 tree at a time and does not need the
merge sorting feature (or overhead) of TreeWalk.

Combined with 761814fe9c ("DirCacheEntry: Speed up creation by
avoiding string cast") tree loading 38,900 entries nearly halves
in running time from 70ms to 36ms on some platforms.

Change-Id: If1490ca25de0679a71cf508f59b486f9cc816165


COMMENTS

author: Yoselin Hanna
date: 2015-11-29 22:56:25.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2015-11-29 22:56:31.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7647/

-------------------------------------
author: Brenden Conley
date: 2015-11-29 23:04:18.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7647/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2015-11-30 00:17:12.000000000

Patch Set 5:

(1 comment)

Line:17, /COMMIT_MSG -> This ironically shows just how crazily tuned the CanonicalTreeParser is. I'm measuring on my laptop for 39,000 entries:

  CanonicalTreeParser avg 35.9063 ms
  RawTreeIterator     avg 37.8125 ms

So its really hard to beat CanonicalTreeParser, it is consistently measuring throughput some 54 path entires per millisecond faster than RawTreeIterator. Both of them are faster here than TreeWalk.

So RawTreeIterator is lightweight for the recursive invocation usage in CanonicalTreeParser to read .gitattributes but its still not adequate for recursive bulk usage. There must be something subtle about the path construction that is more efficient for the JIT under CanonicalTreeParser than with RawTreeIterator's approach to doing the concat.

-------------------------------------
author: Gerrit Code Review
date: 2015-12-01 00:03:11.000000000

Change has been successfully merged into the git repository by Ariel Sawyer

-------------------------------------
