DESCRIPTION

DirCacheBuilder: Speed up reading from trees

Recursively copying a tree into a DirCache is a bottleneck for some
algorithms like the in memory merge code in Gerrit Code Review.  Drop
a layer down in the stack and use CanonicalTreeParser directly as the
addition logic only processes 1 tree at a time and does not need the
merge sorting feature (or overhead) of TreeWalk.

Combined with 761814fe9c ("DirCacheEntry: Speed up creation by
avoiding string cast") tree loading 38,900 entries nearly halves
in running time from 70ms to 36ms on some platforms.

Change-Id: If1490ca25de0679a71cf508f59b486f9cc816165


COMMENTS

author: Yoselin Hanna
date: 2015-11-30 02:58:12.000000000

Uploaded patch set 6.

-------------------------------------
author: Brenden Conley
date: 2015-11-30 03:05:22.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7649/

-------------------------------------
author: Brenden Conley
date: 2015-11-30 03:12:56.000000000

Patch Set 6: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7649/ : SUCCESS

-------------------------------------
author: Ariel Sawyer
date: 2015-11-30 23:10:11.000000000

Patch Set 6: Code-Review-1

(2 comments)

Line:186, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheBuilder.java -> Why is it safe to not do the beforeAdd validation here?

Line:192, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheBuilder.java -> "readTree" is a bit misleading. It is only initializing the parser, which from what I can tell only reads in the single "tree" root object. Maybe "readTreeRoot"?

-------------------------------------
author: Yoselin Hanna
date: 2015-11-30 23:32:35.000000000

Patch Set 6:

(2 comments)

Line:186, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheBuilder.java -> Because everything is sorted correctly in the tree objects. Once we have added the first from the tree we know everything following is sorts after that, and thus will append into the list in the correct location.

beforeAdd() just sets a boolean if the ordering is violated so we sort later. So if the first item was wrong, we'll sort later. If the first item is still correctly sorted, so will all of the next items.

Line:192, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheBuilder.java -> Well the root tree is still a tree...

-------------------------------------
author: Ariel Sawyer
date: 2015-11-30 23:38:36.000000000

Patch Set 6:

(1 comment)

Line:192, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheBuilder.java -> Above, "addTree" is recursive. "readTree" is not. Lack of symmetry makes the code jarring to read. addTree is already public API, so "readTree" is a really bad name for this. "createTreeParser" would be better.

-------------------------------------
author: Yoselin Hanna
date: 2015-11-30 23:46:59.000000000

Patch Set 6:

(1 comment)

Line:192, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheBuilder.java -> Done

-------------------------------------
author: Gerrit Code Review
date: 2015-12-01 00:03:11.000000000

Change has been successfully merged into the git repository by Ariel Sawyer

-------------------------------------
