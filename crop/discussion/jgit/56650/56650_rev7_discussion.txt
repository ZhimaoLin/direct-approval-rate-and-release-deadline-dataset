DESCRIPTION

RepoCommand: Add an optional branch config to the gitmodules creation

When there is a branch key in the .gitmodules file, such that you can
instruct git submodule to use the --remote option.

[1] https://review.openstack.org/Documentation/user-submodules.html

Change-Id: I1a10861bcd0df3b3673fc2d481c8129b2bdac5f9
Signed-off-by: Beau Terry xxx@xxx.xxx


COMMENTS

author: Beau Terry
date: 2015-10-01 18:15:20.000000000

Uploaded patch set 7.

-------------------------------------
author: Brenden Conley
date: 2015-10-01 18:15:26.000000000

Patch Set 7:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7195/

-------------------------------------
author: Brenden Conley
date: 2015-10-01 18:22:30.000000000

Patch Set 7: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7195/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2015-10-01 18:37:40.000000000

Patch Set 7:

(1 comment)

Line:10, /COMMIT_MSG -> I'm having trouble parsing this. Can you explain briefly what the patch will do? (In the comments here is fine --- then that would give a starting point for a commit message.)

-------------------------------------
author: Beau Terry
date: 2015-10-01 18:41:39.000000000

Patch Set 7:

(1 comment)

Line:10, /COMMIT_MSG -> My original intention:
When transforming a repo manifest to a git superproject,
I need an option to enable setting `submodule.<name>.branch` to be the upstream branch, such that Gerrit can make use of the superproject subscription feature.

-------------------------------------
author: Kayleigh Dennis
date: 2015-10-01 18:43:24.000000000

Patch Set 7: Code-Review+1

(2 comments)

Line:708, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> in pure Java's view this additional indentation looks weird, but logically this is the same xml tag so it makes sense. I'm OK with it.

Line:749, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> I don't think this one is "default" branch?

-------------------------------------
author: Kayleigh Dennis
date: 2015-10-01 18:43:31.000000000

Patch Set 7: Code-Review-1

-------------------------------------
author: Eden Lin
date: 2015-10-01 18:49:42.000000000

Patch Set 7: Code-Review-1

(4 comments)

Line:743, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> assertEquals? (and likewise below)

Line:789, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> What does this comment mean?

Line:805, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> What is this test checking? Both "submodule update --remote" and Gerrit submodule subscription would get confused by tags.

Line:322, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> I'm having trouble parsing this. Maybe an example or more detail would help.

  /**
   * Set whether the branch name should be recorded in .gitmodules
   * <p>
   * Submodule entries in .gitmodules can include a "branch" field
   * to indicate what remote branch each submodule tracks.
   * <p>
   * That field is used by "git submodule update --remote" to update
   * to the tip of the tracked branch when asked and by Gerrit to
   * update the superproject when a change on that branch is merged.
   * <p>
   * Subprojects that request a specific commit or tag will not have
   * a branch name recorded.
   * <p>
   * Not implemented for non-bare repositories.
   *
   xxx@xxx.xxx record Whether to record the branch name
   xxx@xxx.xxx this command
   xxx@xxx.xxx 4.2
   */

-------------------------------------
author: Eden Lin
date: 2015-10-01 18:54:00.000000000

Patch Set 7:

(1 comment)

Line:10, /COMMIT_MSG -> Okay, cool. I think that would be something like

 RepoCommand: Add setRecordRemoteBranch option to record upstream branch

 On a server also running Gerrit that is using RepoCommand to
 convert from an XML manifest to a git submodule superproject
 periodically, it would be handy to be able to use Gerrit's
 submodule subscription feature[1] to update the superproject
 automatically between RepoCommand runs as changes are merged
 in each subprojects.

 This requires setting the 'branch' field for each submodule
 so that Gerrit knows what branch to watch.  Add an option to
 do that.

 Setting the branch field also is useful for plain Git users,
 since it allows them to use "git submodule update --remote" to
 manually update all submodules between RepoCommand runs.

 [1] https://gerrit-review.googlesource.com/Documentation/user-submodules.html

-------------------------------------
author: Gerrit Code Review
date: 2015-10-05 23:24:48.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
