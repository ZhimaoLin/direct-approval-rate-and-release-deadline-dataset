DESCRIPTION

Add CHERRY_PICK_HEAD for cherry-pick conflicts

Add handling of CHERRY_PICK_HEAD file in .git (similar to MERGE_HEAD),
which is written in case of a conflicting cherry-pick merge.

It is used so that Repository.getRepositoryState can return the new
states CHERRY_PICKING and CHERRY_PICKING_RESOLVED. These states, as well
as CHERRY_PICK_HEAD can be used in EGit to properly show the merge tool.

Also, in case of a conflict, MERGE_MSG is written with the original
commit message and a "Conflicts" section appended. This way, the
cherry-picked message is not lost and can later be re-used in the commit
dialog.

Bug: 339092
Change-Id: I947967fdc2f1d55016c95106b104c2afcc9797a1
Signed-off-by: Danika Greer xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2011-04-03 17:42:18.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/231/ 

-------------------------------------
author: Brenden Conley
date: 2011-04-03 17:45:05.000000000

Patch Set 1: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/231/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2011-04-04 17:31:42.000000000

Patch Set 1: I would prefer that you didn't submit this

(6 inline comments)



Line:1238, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Style-nit: There is no good reason for this local variable "head".

Line:146, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/CherryPickCommandTest.java -> Message should end in \n.

Line:375, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Style-nit: Unnecessary introduction of a blank line.

Line:135, org.eclipse.jgit/src/org/eclipse/jgit/merge/MergeMessageFormatter.java -> I don't like then name "add" here. Perhaps instead call this formatWithConflicts()?

Since this is being introduced, it should also be added to MergeCommand so that conflicted merges include the Conflicts section (because I don't think they do today).

Line:146, org.eclipse.jgit/src/org/eclipse/jgit/merge/MergeMessageFormatter.java -> The resulting message should end with an LF. So I think you instead want:

  sb.append("Conflicts:\n");
  for (String conflictingPath : conflictingPaths)
    sb.append('\t').append(conflictingPath).append('\n');

Line:137, org.eclipse.jgit/src/org/eclipse/jgit/api/ResetCommand.java -> Asking for the state is expensive due to the number of file stat calls involved. Do this once before line 133 and save the result into a local variable so that all three of these references reuse the same computed value.

It may be worth using a switch statement here instead of if.

-------------------------------------
author: Danika Greer
date: 2011-04-05 16:54:39.000000000

Patch Set 1: (6 inline comments)



Line:1238, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Done

Line:146, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/CherryPickCommandTest.java -> Done

Line:375, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Done

Line:135, org.eclipse.jgit/src/org/eclipse/jgit/merge/MergeMessageFormatter.java -> Renamed to formatWithConflicts.

I was going to add it to MergeCommand in a separate change.

Line:146, org.eclipse.jgit/src/org/eclipse/jgit/merge/MergeMessageFormatter.java -> Done

Line:137, org.eclipse.jgit/src/org/eclipse/jgit/api/ResetCommand.java -> Switch statements are so ugly in Java, I left it.

-------------------------------------
