DESCRIPTION

Externalized strings from JGit.

The strings are externalized into the root resource bundles.
The resource bundles are stored under the new "resources" source folder
to get proper maven build.

Strings from test project are, in general, not externalized. Only in
cases where it was necessary to make the test pass the strings were
externalized. This was typically necessary in cases where e.getMessage()
was used in assert and the exception message was slightly changed due
to reuse of the externlized strings.

Change-Id: Ic0f29c80b9a54fcec8320d8539a3e112852a1f7b
Signed-off-by: Dillon Cross xxx@xxx.xxx


COMMENTS

author: Dillon Cross
date: 2010-05-18 09:30:22.000000000

Uploaded patch set 2.

-------------------------------------
author: Douglas Trujillo
date: 2010-05-18 14:04:41.000000000

Patch Set 2: I would prefer that you didn't submit this; No score

Wow, this is a big piece of work requiring a lot of patience.

We need PMC approval to IP approve this change (Sasa is my colleague, SAP is member company).

Line:8, org.eclipse.jgit/META-INF/MANIFEST.MF -> trailing whitespace

Line:4, org.eclipse.jgit.console/resources/org/eclipse/jgit/console/ConsoleText.properties -> is this trailing whitespace intentionally added ?

Line:5, org.eclipse.jgit.console/resources/org/eclipse/jgit/console/ConsoleText.properties -> again trailing whitespace

Line:27, org.eclipse.jgit.pgm/META-INF/MANIFEST.MF -> this looks like a change not correlated to string externalization

Line:193, org.eclipse.jgit/src/org/eclipse/jgit/util/IO.java -> should be shortSkipOfBlock

Line:371, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> maybe more specific: serviceCannotOpen

Line:123, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> 3 redundant copies of the same text

Line:166, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> property name could be more specific

Line:173, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> anything missing here ? key looks like some "incorrect object type" is missing

Line:214, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> looks incomplete

Line:237, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> no argument ?

Line:238, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> no argument ?

Line:239, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> no argument ?

Line:240, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> no argument ?

Line:244, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> no argument ?

Line:275, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> trailing whitespace ?

Line:281, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> redundant copy of same property

Line:301, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> redundant copy of same property

Line:13, org.eclipse.jgit.pgm/resources/org/eclipse/jgit/pgm/CLIText.properties -> trailing whitespace

Line:202, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/TextBuiltin.java -> typo: s/used/be/

Line:60, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/debug/ReadDirCache.java -> why some line breaks more than in the original println ?

Line:130, org.eclipse.jgit.ui/src/org/eclipse/jgit/awtui/AwtAuthenticator.java -> camel case ?
s/authenticationrequired/authenticationRequired/

Line:89, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ServletUtils.java -> should we use camel case here ?
s/expectedrepositoryAttribute/expectedRepositoryAttribute/

Line:256, org.eclipse.jgit/src/org/eclipse/jgit/transport/RefSpec.java -> shouldn't that be sourceIsNotAWildcard ?

-------------------------------------
author: Malia Sampson
date: 2010-05-18 14:26:32.000000000

Patch Set 2: No score; IP review completed

+1 from PMC, just clean it up and we'll be good to go :)

-------------------------------------
author: Juliet Cantu
date: 2010-05-18 20:34:38.000000000

Patch Set 2: No score; No score

If I were to translate some of this I'd like some hints about what is internal technical stuff and what the user should be able to interpret without assistance, so I could skip the internal stuff when translating.

Line:449, org.eclipse.jgit.iplog/src/org/eclipse/jgit/iplog/IpLogGenerator.java -> Does translating internal errors like this make sense?

Line:132, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/opt/AbstractTreeIteratorHandler.java -> move the ":" + e.getMessage() into the translation to. (e.getMessage() as a parameter)

Line:67, org.eclipse.jgit/src/org/eclipse/jgit/api/ConcurrentRefUpdateException.java -> Shouldn't the position of message in the resulting string  be made by the translator?

Line:148, org.eclipse.jgit/src/org/eclipse/jgit/transport/PacketLineIn.java -> ` part of transaltion?

Line:298, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> Debugging printouts. Don't translate

Line:305, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> Debugging printouts. Don't translate

Line:312, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> Debugging printouts. Don't translate

Line:526, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> This main is a test utiliyty. Don't translate

Line:205, org.eclipse.jgit.iplog/src/org/eclipse/jgit/iplog/IPZillaQuery.java -> Splitting this into two translations makes little sense.

Line:64, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/debug/ReadDirCache.java -> I think this is better translated using one string.
One thing about translations is that they sometimes change orders of things and the original author doesn't know all language conventions and styles.

e.g. suppose it looks better to say (roughly) in some language

average (ms/read):  nnnn

Doesn't help us if milliseconds is not a viable unit, but then we can't think of everything :)

Line:79, org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffFormatter.java -> I'm not convinced programmer errors should be translated

Line:73, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/debug/ShowCacheTree.java -> One string only so transaltors can use their language conventions.

I think „German“ and »French« people prefer a different type of quotes

Line:346, org.eclipse.jgit/src/org/eclipse/jgit/lib/Commit.java -> Add Non-NLS comment

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:449, org.eclipse.jgit.iplog/src/org/eclipse/jgit/iplog/IpLogGenerator.java -> Here is my question about that and the answer from Yoselin Hanna:
> 1. How to decide if a text should or shouldn't be translated? Is it only error message as stated above?
>    I assume (j)git output should stay parsable and some texts mustn't be translated. Right?

IMHO, if the text is an english message that isn't a string required
for a file name or file content or network protocol keyword, we
should translate it.  That's *most* of the strings in the JGit code.

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:132, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/opt/AbstractTreeIteratorHandler.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:8, org.eclipse.jgit/META-INF/MANIFEST.MF -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:4, org.eclipse.jgit.console/resources/org/eclipse/jgit/console/ConsoleText.properties -> Yes it is intentional. The relevant piece of code before before string
externalization was:
char[] password = cons.readPassword("Password: ");

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:5, org.eclipse.jgit.console/resources/org/eclipse/jgit/console/ConsoleText.properties -> Intentionally. See the previous answer.

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:67, org.eclipse.jgit/src/org/eclipse/jgit/api/ConcurrentRefUpdateException.java -> I wasn't sure about cases like this one. "message" could be anything.
What should be the name of the translation key if the message is included? How would this look like in the resource bundle:

	refUpdateReturnCodeWas={0}. RefUpdate return code was: {1}

I also know that as it is now is not ideal but at least the entry in resource bundle looks well defined:

	refUpdateReturnCodeWas=RefUpdate return code was: {0}

Let me know your final opinion on that.

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:27, org.eclipse.jgit.pgm/META-INF/MANIFEST.MF -> The org.eclipse.jgit.test project needs to import CLIText from this package because of the TestStringExternalization test which verifies that there are no missing translation keys in resource bundles associated to the translation bundle classes (CLIText being one of them).

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:193, org.eclipse.jgit/src/org/eclipse/jgit/util/IO.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:148, org.eclipse.jgit/src/org/eclipse/jgit/transport/PacketLineIn.java -> the concatenation with empty string "" was necessary to tell Java
to perform character concatenation.

Without the (empty) string concatenation Java threats these (char)s
as numbers and performs arithmetical plus operation. Thanks to
test failure I was able to spot that.

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:298, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> well, this is exception text not just System.err.print.
We need clear criteria what should (not) be externalized and especially
what are debugging printouts and what are not.
I would like to get another opinion on this topic.

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:305, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> same like previous reply

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:312, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> same like previous reply

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:526, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> same like previous reply

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:205, org.eclipse.jgit.iplog/src/org/eclipse/jgit/iplog/IPZillaQuery.java -> The loginFailed is (re)used 3 times within this class. Check the lines 189, 197 and 203. I think it makes sense to reuse it in this case.
Otherwise we would have 3 times the same string prefix in the resourcebundle:
loginFailed1=Login as {0} to {1} failed: {2}: {3}
loginFailed2=Login as {0} to {1} failed: {2}: Response not HTML as expected
loginFailed3=Login as {0} to {1} failed: {2}: page title was "{3}"

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:371, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:123, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:166, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:173, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> No.
It was exactly like that, for example in PackWriter.java:
		throw new IncorrectObjectTypeException(object,
					"COMMIT nor TREE nor BLOB nor TAG");

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:214, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:237, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> There was no argument, at least not directly:
				throw new TransportException(transport.uri, "not a bundle");

TransportException itself does some string join:
	public TransportException(final URIish uri, final String s) {
		super(uri.setPass(null) + ": " + s);
	}

But this was too far for a "simple" string externalization task :-)

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:238, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> Yes, no argument. Was like that:
		if (!is_DIRC(hdr))
			throw new CorruptObjectException("Not a DIRC file.");
in DirCache.java

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:239, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> the same reason as for the notABundle above.

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:240, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> No argument. Was like that:
		if (RawParseUtils.match(buf, 0, Constants.PACK_SIGNATURE) != 4)
			throw new IOException("Not a PACK file.");

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:244, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> Similar case like for the TransportException above.
		return new NoRemoteRepositoryException(uri, JGitText.get().notFound);

and the NoRemoteRepositoryException looks like:
public class NoRemoteRepositoryException extends TransportException {
	...
	public NoRemoteRepositoryException(final URIish uri, final String s) {
		super(uri, s);
	}
}

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:275, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> Intentionally. Was like:
	private static final String PFX_REMOTE = "remote: ";

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:281, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:301, org.eclipse.jgit/resources/org/eclipse/jgit/JGitText.properties -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:13, org.eclipse.jgit.pgm/resources/org/eclipse/jgit/pgm/CLIText.properties -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:202, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/TextBuiltin.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:60, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/debug/ReadDirCache.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:64, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/debug/ReadDirCache.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:79, org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffFormatter.java -> Again, here is the answer from Shawn on this question:
> 1. How to decide if a text should or shouldn't be translated? Is it only error message as stated above?
>    I assume (j)git output should stay parsable and some texts mustn't be translated. Right?

IMHO, if the text is an english message that isn't a string required
for a file name or file content or network protocol keyword, we
should translate it.  That's *most* of the strings in the JGit code.

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:130, org.eclipse.jgit.ui/src/org/eclipse/jgit/awtui/AwtAuthenticator.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:73, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/debug/ShowCacheTree.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:89, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ServletUtils.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:256, org.eclipse.jgit/src/org/eclipse/jgit/transport/RefSpec.java -> Done

-------------------------------------
author: Dillon Cross
date: 2010-05-19 15:05:09.000000000

MISMATCHED INLINE COMMENT
Line:346, org.eclipse.jgit/src/org/eclipse/jgit/lib/Commit.java -> Well, OK, added it.
However, this is definitely not the only place where Non-NLS comment would be needed.
This is a huge change and I would like to get it through without having to rebase several times and redo string externalization each time.

Could we agree to have another follow-up change where we ensure to have NON-NLS comments for non externalized strings and ensure
to have design/compile time checks for that?

-------------------------------------
