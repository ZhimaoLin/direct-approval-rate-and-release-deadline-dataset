DESCRIPTION

Speed up walking on simple repositories without submodules

Don't treat subdirectories containing .git files as FileMode.GITLINK if
the repository does not have .gitmodules at all.

This is only solution for the case repository has no git modules - if
the repository contains submodules, the FileEntry should check if the
current file is known submodule root.

Bug: 436200
Change-Id: I2367dcc7e2007a20ba4fb2b57f6c17eeb63b3780
Signed-off-by: Jayvion Booth xxx@xxx.xxx


COMMENTS

author: Jayvion Booth
date: 2015-08-09 22:08:29.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-08-09 22:08:35.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6998/

-------------------------------------
author: Brenden Conley
date: 2015-08-09 22:16:18.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6998/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2015-08-10 11:07:57.000000000

Patch Set 1: Code-Review-1

(1 comment)

Line:110, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/FileTreeIterator.java -> What is if the .gitmodules file was deleted from working tree but it's still in the index. So git knows that this repo contained submodules. The next commit should contain a submodule because the commit will contain a .gitmodules file.

Similar argument but not the same: What is if you are looking at path x/y/z and the index tells that underneath x/y/z there is a submodule. Shouldn't we take this as a hint x/y/z should be a submodule regardless of the existence of a .gitmodules file in the worktree?

Check out this to see what native git does:

  + git init sub
  Initialized empty Git repository in /tmp/sub/.git/
  + cd sub
  + touch a
  + git add a
  + git commit -m addA
  [master (root-commit) 531d4d8] addA
   1 file changed, 0 insertions(+), 0 deletions(-)
   create mode 100644 a
  + cd ..
  + git init container
  Initialized empty Git repository in /tmp/container/.git/
  + cd container
  + touch b
  + git add b
  + git commit -m addB
  [master (root-commit) 3be5e9b] addB
   1 file changed, 0 insertions(+), 0 deletions(-)
   create mode 100644 b
  + git submodule add ../sub plugins/sub
  Cloning into 'plugins/sub'...
  done.
  + git commit -m addSubmodule
  [master e9b19ab] addSubmodule
   2 files changed, 4 insertions(+)
   create mode 100644 .gitmodules
   create mode 160000 plugins/sub
  + cd plugins/sub/
  + echo 2 >a
  + git commit -a -m newA
  [master 857c4f2] newA
   1 file changed, 1 insertion(+)
  + cd ../..
  + rm .gitmodules
  + git add plugins/sub
  + git commit -m newVersionOfSub_deletedGitmodules
  [master acd14b9] newVersionOfSub_deletedGitmodules
   1 file changed, 1 insertion(+), 1 deletion(-)
  + git ls-files -s
  100644 c16c5cbf89e80befa97ad60b5fd5dd3145751e4b 0	.gitmodules
  100644 e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 0	b
  160000 857c4f26427b28403bf3d7357fd2289315678a3e 0	plugins/sub
  /tmp>

-------------------------------------
