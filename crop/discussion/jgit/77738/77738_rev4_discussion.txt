DESCRIPTION

RefSpecs: allow construction of weird wildcarded RefSpecs

Gerrits superproject subscription feature uses RefSpecs to formalize
the ACLs of when the superproject subscription feature is allowed.

As this is a slightly different use case than describing a local/remote
pair of refs, we need to be more permissive. Specially we want to allow:

    refs/heads/*
    refs/heads/*:refs/heads/master
    refs/heads/master:refs/heads/*

Introduce a new constructor, that allows constructing these refs specs.

Change-Id: I46c0bea9d876e61eb2c8d50f404b905792bc72b3
Signed-off-by: Beau Terry xxx@xxx.xxx


COMMENTS

author: Beau Terry
date: 2016-07-22 00:57:07.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2016-07-22 00:57:13.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8770/

-------------------------------------
author: Brenden Conley
date: 2016-07-22 01:06:36.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8770/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2016-07-22 01:12:20.000000000

Patch Set 4:

(3 comments)

A few more nits. Essentially looks done now.

Line:137, org.eclipse.jgit/src/org/eclipse/jgit/transport/RefSpec.java -> effective java sayeth:

 Prefer two-element enum types to boolean parameters. It
 makes your code easier to read and to write, especially
 if youâ€™re using an IDE that supports autocompletion. Also,
 it makes it easy to add more options later.

So I suppose we should do that.

Line:375, org.eclipse.jgit/src/org/eclipse/jgit/transport/RefSpec.java -> This would be equally convenient when !allowMismatchedWildcards, but alas it would be an API change.

So I think it would be more consistent for the caller to be responsible for handling this. (Or in a followup change to have a method that sets the destination from src if unset, to make this more convenient.)

Line:336, org.eclipse.jgit/resources/org/eclipse/jgit/internal/JGitText.properties -> This can probably be phrased more strongly. For example,

 ExpandFromSource on a refspec that can have mismatched wildcards does not make sense

BTW, I never understood why jgit marks this kind of internal exception for translation.

-------------------------------------
author: Eden Lin
date: 2016-07-22 01:15:13.000000000

Patch Set 4:

(1 comment)

Line:336, org.eclipse.jgit/resources/org/eclipse/jgit/internal/JGitText.properties -> Please also add a note about this to the javadocs of the relevant methods (e.g. xxx@xxx.xxx

-------------------------------------
author: Gerrit Code Review
date: 2016-07-25 17:33:07.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
