DESCRIPTION

Try to send HTTP error messages over sideband

When a client POSTs to /git-{upload,receive}-pack, the first line
includes their client capabilities. As soon as the C git client sends
side-band(-64k), it goes into a state where it chokes on data not sent
in a valid sideband channel.

GitSmartHttpTools.sendError() is called early in the request, likely
before a {Upload,Receive}Pack handler is assigned and certainly before
it has read the request. So we must read the first line manually within
sendError() to tell whether sideband is needed.

Change-Id: I8277fd45a4ec3b71fa8f87404b4f5d1a09e0f384


COMMENTS

author: Brenden Conley
date: 2012-03-07 21:06:23.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1539/ 

-------------------------------------
author: Brenden Conley
date: 2012-03-07 21:09:53.000000000

Patch Set 1: Verified

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1539/ : SUCCESS

-------------------------------------
author: Santos Moore
date: 2012-03-07 22:33:17.000000000

Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)



Line:154, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java -> This assumption is problematic as it does not hold in ReceivePackServlet.doPost, which calls sendError in a catch block possibly after rp.receive() is called. It is *likely* that it's safe, since it's guarded by "if (!rsp.isCommitted())", and typcially  ReceivePack will flush some output (committing the response) as one of the first things it does. But I don't think it's good enough :(

This is going to require some more substantial hacking in ReceivePack/UploadPack to expose a) whether or not the capabilities have been read from the wire and b) if so, which capabilities are set. That's in addition to the case I've already done where the ReceivePack/UploadPack doesn't even exist yet, sigh.

-------------------------------------
author: Santos Moore
date: 2012-03-07 23:06:02.000000000

Patch Set 1: (1 inline comment)



Line:154, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java -> Done

-------------------------------------
