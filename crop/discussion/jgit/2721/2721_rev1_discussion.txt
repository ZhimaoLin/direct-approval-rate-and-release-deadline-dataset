DESCRIPTION

Fix "File too large" when reading References

Read the entire fetch file instead of aborting when the file is larger
than 4096 bytes

Change-Id: I969f39315216141f10d645d58120141b77b3b3cf
Signed-off-by: Mallory Peters xxx@xxx.xxx

COMMENTS

author: Brenden Conley
date: 2011-03-15 17:04:43.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/84/ 

-------------------------------------
author: Brenden Conley
date: 2011-03-15 17:07:28.000000000

Patch Set 1: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/84/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2011-03-15 17:18:00.000000000

Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)



Line:844, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/RefDirectory.java -> Instead of dropping the 4k limit, I would rather introduce a new IO.readSome(path, limit) method that allows us to read the first 4k and return when either the whole file or the limit is reached.

Line:9, /COMMIT_MSG -> You mean the FETCH_HEAD file?

-------------------------------------
author: Juliet Cantu
date: 2011-03-15 23:50:17.000000000

Patch Set 1: (1 inline comment)



Line:844, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/RefDirectory.java -> FETCH_HEAD contains more than one ref, so we should treat it separatelt and not let it go through this path.

-------------------------------------
author: Yoselin Hanna
date: 2011-03-16 00:08:47.000000000

Patch Set 1: (1 inline comment)



Line:844, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/RefDirectory.java -> No, that's not true. Its common practice to try and use the first ref in FETCH_HEAD as though it were a normal ref. So we should support reading it here, we just need to only read the first 40 bytes of it. :-)

The main reason we have the too large error is to fail out fast if we read a symbolic reference that has an insane name within it. If the name exceeds the reasonable length we support here, the ref name might be truncated and fail to be read correctly. But we have a limit here to prevent reading some massive binary file that was accidentally placed into the refs/ directory, sucking all of that into the JVM as a byte[] would be painful.

My proposed IO.readSome(path, limit) would need an additional check here, if isSymRef(buf, n) is true and n.length == limit then we need to abort and refuse to process this ref, as its a potentially truncated symbolic reference.

-------------------------------------
author: Yoselin Hanna
date: 2011-04-06 20:07:07.000000000

Patch Set 1: Abandoned

Merged as commit 11e2e746c13cc94cabc96e708f3c6a2b159b5995

-------------------------------------
