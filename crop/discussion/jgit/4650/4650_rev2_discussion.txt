DESCRIPTION

maxObjectSizeLimit for receive-pack.

ReceivePack (and PackParser) can be configured with the
maxObjectSizeLimit in order to prevent users from pushing too large
objects to Git. The limit check is applied too all object types
although it is most likely that a BLOB will exceed the limit.  In all
cases the size of the object header is excluded from the object size
which is checked against the limit as this is the size of which a BLOB
object would take in the working tree when checked out as a file.

Delta objects (both offset and ref delta) are also checked against the
limit.

When an object exceeds the maxObjectSizeLimit the receive-pack will
fail immediately. Therefore, we can only report the SHA1 of this (too
large) object back to the user. In order to help the user locate the
path to this object in his local repository we provide a Git command
for that in the error message.

Change-Id: I177ef24553faacda444ed5895e40ac8925ca0d1e
Signed-off-by: Dillon Cross xxx@xxx.xxx


COMMENTS

author: Dillon Cross
date: 2011-11-18 16:47:22.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2011-11-18 16:47:38.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1039/ 

-------------------------------------
author: Brenden Conley
date: 2011-11-18 16:50:39.000000000

Patch Set 2: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1039/ : SUCCESS

-------------------------------------
author: Gerrit Code Review
date: 2011-11-21 19:08:47.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
author: Gerrit Code Review
date: 2011-11-22 16:38:12.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
