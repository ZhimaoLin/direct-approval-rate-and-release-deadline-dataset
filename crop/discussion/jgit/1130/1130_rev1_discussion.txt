DESCRIPTION

Implemented file path based tie breaking to exact rename detection

During the exact rename detection phase in RenameDetector, ties were
resolved on a first-found basis. I added support for file path based
tie breaking during that phase. Basically, there are four situations
that have to be handled:

One add matching one delete:
	In this simple case, we pair them as a rename.

One add matching many deletes:
	Find the delete whos path matches the add the closest, and
	pair them as a rename.

Many adds matching one delete:
	Similar to the above case, we find the add that matches the
	delete the closest, and pair them as a rename. The other adds
	are marked as copies of the delete.

Many adds matching many deletes:
	Build a scoring matrix similar to the one used for content-
	based matching, scoring instead by file path. Some of the
	utility functions in SimilarityRenameDetector are used in
	this case, as we use the same encoding scheme. Once the
	matrix is built, scan it for the best matches, marking them
	as renames. The rest are marked as copies.

I don't particularly like the idea of using utility functions right
out of SimilarityRenameDetector, but it works for the moment. A later
commit will likely refactor this into a common utility class, as well
as bringing exact rename detection out of RenameDetector and into a
separate class, much like SimilarityRenameDetector.

Change-Id: I1fb08390aebdcbf20d049aecf402a36506e55611


COMMENTS

author: Yoselin Hanna
date: 2010-07-16 01:28:27.000000000

Patch Set 1: I would prefer that you didn't submit this

(3 inline comments)

Logic looks sound, only style nits.

Line:468, org.eclipse.jgit/src/org/eclipse/jgit/diff/RenameDetector.java -> Style-nit: This can be a static method.

Line:516, org.eclipse.jgit/src/org/eclipse/jgit/diff/RenameDetector.java -> Style-nit: We don't put () around ?: in a return.

Line:320, org.eclipse.jgit/src/org/eclipse/jgit/diff/DiffEntry.java -> Style-nit:  Our toString style looks more like

  DiffEntry[ADD newName]
  DiffEntry[COPY oldName -> newName score]
  DiffEntry[DELETE oldName]

etc...  Please match it here.  Of course this is a bit easier, you can do buf.append(type) to get the type part and not have to duplicate the name in both the case label and the string text.

-------------------------------------
