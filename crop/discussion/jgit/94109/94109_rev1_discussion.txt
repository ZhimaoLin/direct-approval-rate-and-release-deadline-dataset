DESCRIPTION

Only throw MissingObjectException when necessary

When preparing the bitmap, the flag ignoreMissingStart only applied to
the start object. However, sometime the start object is present but some
related objects are not present during the walk, we should only release
the MissingObjectException when the ignoreMissingStart is set false.

Change-Id: I1097a2defa4a9dcf502ca8baca5d32880378818f
Signed-off-by: Paloma Kennedy xxx@xxx.xxx


COMMENTS

author: Paloma Kennedy
date: 2017-03-30 05:58:05.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-03-30 05:58:11.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10055/

-------------------------------------
author: Brenden Conley
date: 2017-03-30 06:13:46.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10055/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2017-03-31 17:34:26.000000000

Patch Set 1:

(1 comment)

Line:120, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapWalker.java -> I think the scope of this try{} is too wide. It produces a very small bitmap.

Would something like this work?

  xxx@xxx.xxx null when the walk has finished */
 xxx@xxx.xxx
  private static RevCommit next(RevWalk rw, boolean ignoreMissing) throws IOException {
    while (true) {
      try {
        return rw.next();
      } catch (MissingObjectException e) {
        if (!ignoreMissing) {
          throw e;
        }
      }
    }
  }

Likewise for nextObject.

That said, I haven't checked if RevWalk is prepared to continue after noticing a missing object like this. RevWalk might need some changes to more gracefully recover (or it might make sense for the ignoreMissing logic to move there).

-------------------------------------
author: Paloma Kennedy
date: 2017-03-31 17:40:07.000000000

Patch Set 1:

(1 comment)

Line:120, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapWalker.java -> Yea, the reason I used a wider try{} block is I suspect the revwalk can not continue (or produce incorrect bitmap) if there is a missing object during the walk.

-------------------------------------
author: Paloma Kennedy
date: 2017-04-03 19:15:18.000000000

Patch Set 1:

(1 comment)

Line:120, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapWalker.java -> Done

-------------------------------------
author: Paloma Kennedy
date: 2017-04-05 22:52:29.000000000

Patch Set 1:

(1 comment)

Line:120, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapWalker.java -> The nextObject() may stuck at the same tree visit if we catch the Exception here, and continue the walk.

Revert it back and add a TODO to catch the exception in the ObjectWalk level.

-------------------------------------
author: Gerrit Code Review
date: 2017-04-12 14:25:11.000000000

Change has been successfully merged into the git repository by Ariel Sawyer

-------------------------------------
