DESCRIPTION

reftable: file format documentation

Some repositories contain a lot of references (e.g. android at 866k,
rails at 31k). The reftable format provides:

- Near constant time lookup for any single reference, even when the
  repository is cold and not in process or kernel cache.
- Near constant time verification a SHA-1 is referred to by at least
  one reference (for allow-tip-sha1-in-want).
- Efficient lookup of an entire namespace, such as `refs/tags/`.
- Support atomic push `O(size_of_update)` operations.
- Combine reflog storage with ref storage.

Change-Id: I29d0ff1eee475845660ac9173413e1407adcfbf2


COMMENTS

author: Yoselin Hanna
date: 2017-07-28 17:22:03.000000000

Uploaded patch set 3: Patch Set 2 was rebased.

-------------------------------------
author: Brenden Conley
date: 2017-07-28 17:22:13.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10720/

-------------------------------------
author: Brenden Conley
date: 2017-07-28 17:50:46.000000000

Patch Set 3: Verified-1

Build Failed 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10720/ : FAILURE

-------------------------------------
author: Ariel Sawyer
date: 2017-07-28 23:50:48.000000000

Patch Set 3: Code-Review-1

(3 comments)

Line:194, Documentation/technical/reftable.md -> AND there is no index block?

Line:508, Documentation/technical/reftable.md -> The structure above needs to be updated from
    log_blocks*
    log_index?
to
    log_block?
    log_index?
    log_blocks*

Line:513, Documentation/technical/reftable.md -> Given that log records are variable length blocks, should this be an absolute offset (like log_offset in the footer) rather than a block offset? Some more discussion in the "Reading the log" section about common access patterns would be helpful. My concern is that if log blocks compress really well, when we try to convert block_offset==10 we may overshoot it by so much that we end up doing a binary search anyway.

-------------------------------------
author: Yoselin Hanna
date: 2017-07-29 01:36:27.000000000

Patch Set 3:

(3 comments)

Line:194, Documentation/technical/reftable.md -> Yes, *AND*. Fixed.

Line:508, Documentation/technical/reftable.md -> No, the structure above is correct, this statement should be "after the *last* log block". Fixed.

Line:513, Documentation/technical/reftable.md -> block_offset is absolute bytes from start of the file in all index types. So there's no concern of overshoot. Readers read the block_offset from the record, seek to that byte position in the file, and read.

I'll rename block_offset to block_position.

-------------------------------------
