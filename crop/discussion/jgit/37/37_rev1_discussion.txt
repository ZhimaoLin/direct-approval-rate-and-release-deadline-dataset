DESCRIPTION

Fixed MyersDiff to be able to handle more than 100k

MyersDiff was crashing with ArrayIndexOutOfBoundsException when
diffing huge files. This was because the snake data (begin and
end position while processing chunks of the text) was sequeezed
into a single int. But with longer texts to diff these values
exceeded the range of java int values. It is fixed by introducing
the IntPair and IntPairList classes and make MyersDiff use them.

Change-Id: Iacb9082e1b076e994d1486aa8e512342ad7432b3
Signed-off-by: Zachary Orozco xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2009-10-05 17:14:29.000000000

Patch Set 1: I would prefer that you didn't submit this; No score



-------------------------------------
author: Zachary Orozco
date: 2009-10-06 08:55:32.000000000

Patch Set 1: No score



-------------------------------------
author: Gerrit Code Review
date: 2009-10-08 04:45:35.000000000

Change cannot be merged due to unsatisfiable dependencies.

The following dependency errors were found:

* Depends on patch set 1 of If8d187e7, however the current patch set is 2.
* Depends on commit 95ae751df760e470349a7418d42bb6a008a125d5 which has no change associated with it.
* Depends on commit eb5e3731289050745fa66f2c2e40776a853f10ac which has no change associated with it.
* Depends on commit b01271b957de74e127756433f5be01e766afb587 which has no change associated with it.
* Depends on commit a09e653a81659421252c86810c25b4816c6a7683 which has no change associated with it.

Please rebase the change and upload a replacement commit.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:257, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> If we only need 2 ints, why not use a long here?  Most processors are 64 bits these days, and we don't have to perform a heap object allocation with the 8 byte object header.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:257, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> Yea,  I guess profiling is a good choice here rather than just assuming, though I suspect List<IntPair> is going to cost a pretty sizeable chunk of memory over a specialized LongList.  (Tangent: why the heck doesn't the J2SE provide IntList, LongList?  We shouldn't have to write them!)

A good thing is, this appears to be fairly isolated to the internals of the MyersDiff class and thus isn't something we need to expose in our public API to consumers.  snake2x(snake) vs. snake.getX() isn't a big difference either way to higher level code built on top of this.

-------------------------------------
author: Zachary Orozco
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:257, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> Sure, it would be faster to use long. It's a tradeoff between speed and maintainability. If a method returns to int's I find it easier to understand (and maintain) if this is explicitly expressed.
My suggestion: I shortly measure it out what would be the difference in performance and memory consumption when diffing two 1mb texts. I'll let you know.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:459, org.eclipse.jgit/src/org/eclipse/jgit/diff/MyersDiff.java -> Unnecessary trailing whitespace.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:58, org.eclipse.jgit.test/tst/org/eclipse/jgit/diff/MyersDiffPerformanceTest.java -> I think this should be a different commit, separate from your overflow bug fix.

-------------------------------------
author: Zachary Orozco
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:58, org.eclipse.jgit.test/tst/org/eclipse/jgit/diff/MyersDiffPerformanceTest.java -> ok, i'll propose a new change for this

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:120, org.eclipse.jgit.test/tst/org/eclipse/jgit/diff/MyersDiffPerformanceTest.java -> Should this go in the public diff package?

-------------------------------------
author: Zachary Orozco
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:120, org.eclipse.jgit.test/tst/org/eclipse/jgit/diff/MyersDiffPerformanceTest.java -> the skeleton for this test was copied from MyersDiffTest. But since we have now two classes using it I'll move the common classes into the util packages

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:9, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> Copyright 2008 or 2009?

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:9, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> Yes, we do read copyright statements.  :-)

-------------------------------------
author: Zachary Orozco
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:9, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> 2009 of course. That was just a check whether you even read the copy-right comments :-)

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:50, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> We should also implement some normal Java features:

* hashCode
* equals
* toString

-------------------------------------
author: Zachary Orozco
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:50, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> agreed, will come with next changeset

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:51, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> Should these be declared private final?

Style-nit: We prefer one declaration per line.

-------------------------------------
author: Zachary Orozco
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:51, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> agreed, will come with next changeset

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:56, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> Style nit: Blank line between methods, and getters, even this short, use 4 lines (header, return (x); close brace, blank trailing line).

-------------------------------------
author: Zachary Orozco
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:56, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPair.java -> agreed, will come with next changeset

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:47, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPairList.java -> Is this really necessary vs. using ArrayList<IntPair>?

We created IntList because storing int in an ArrayList requires allocating an Integer wrapper object for each element.  But now that you are using IntPair which is a full blown object that advantage is gone.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:47, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPairList.java -> Yea, we try not to reinvent the wheel and generally assume that the J2SE libraries are "good enough".  But we've also found that memory consumption is important.  Wasting 12 bytes to store 4 bytes is fine when you have 1000 items.  Do that for 100,000 items and suddenly it starts to hurt.

-------------------------------------
author: Zachary Orozco
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:47, org.eclipse.jgit/src/org/eclipse/jgit/util/IntPairList.java -> oh, then I don't think we need it. I was thinking a bit how to get around to create this new class. When I inspected your previous code I saw that you created your own array list and I thought - ah, these guys don't trust the performances of jdk collections and want to have these low-level data-structures in their hands.
But since I know your motivation I agree that we should got vor an ArrayList. 
I'll post a new patchset

-------------------------------------
