DESCRIPTION

Fix AnyObjectId's generic type declaration of Comparable

If you look at any implementation of Comparable in the JDK, you'll see
that the type parameter for Comparable is supposed to be the type of
the implementing class:

http://docs.oracle.com/javase/6/docs/api/java/lang/Comparable.html

The current type signature of Comparable<Object> is pretty awful, at the
very least because you can not, in fact, successfully compare
AnyObjectId with any random subclass of Object. It also causes problems
with type-inference and the scala.math.Ordering trait in Scala.

In order to compile, this change *does* require removing the
AnyObjectId.ompareTo(Object) method - which actually only ever cast
to AnyObjectId in any case. Nothing in the JGit test suite requires this
method, but I suppose it does constitute a potential breaking API
change - however, I'm not able to imagine any sane code that would ever
have invoked it :-)

Change-Id: Ieeb815650d92cd9bbc3ae1206f1bcd5db513c5ed


COMMENTS

author: Brenden Conley
date: 2013-05-15 22:57:08.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3553/ 

-------------------------------------
author: Kendrick Carrillo
date: 2013-05-15 22:57:59.000000000

Patch Set 1:

I assert that:

1. I have authored 100% of the content I'm contributing

2. I have the rights to donate the content to Eclipse

3. I contribute the content under the EPL

-------------------------------------
author: Brenden Conley
date: 2013-05-15 23:03:30.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3553/ : SUCCESS

-------------------------------------
author: Danika Greer
date: 2013-05-16 10:24:23.000000000

Patch Set 1:

Could you rebase this change on stable-3.0 and push it to refs/for/stable-3.0? I think there is still time to include this in 3.0, which would be OK for the API break.

-------------------------------------
