DESCRIPTION

Ignore API errors about Tree, TreeEntry, FileTreeEntry and friends being removed

Change-Id: I04adcdb68bee7d5f608bb7ab959fe36a890f9ecd


COMMENTS

author: Yoselin Hanna
date: 2016-01-12 00:07:59.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-01-12 00:08:05.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7847/

-------------------------------------
author: Brenden Conley
date: 2016-01-12 00:17:35.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7847/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2016-01-13 00:10:31.000000000

Patch Set 1:

*puzzled* Why does this produce API errors in Eclipse? I would have expected xxx@xxx.xxx annotations in the baseline to avoid trouble.

-------------------------------------
author: Douglas Trujillo
date: 2016-01-13 00:43:51.000000000

Patch Set 1:

> *puzzled* Why does this produce API errors in Eclipse? I would have
 > expected xxx@xxx.xxx annotations in the baseline to avoid
 > trouble.

it seems API tooling doesn't xxx@xxx.xxx annotation in baseline, at least that's not mentioned in the documentation [1]

Added Dani as a reviewer maybe he knows ...

[1] http://help.eclipse.org/mars/index.jsp?topic=%2Forg.eclipse.pde.doc.user%2Freference%2Fapi-tooling%2Fpreferences%2Fref-errorswarnings.htm

-------------------------------------
author: Eden Lin
date: 2016-01-13 00:50:39.000000000

Patch Set 1: Code-Review+1

Thanks.

I think what I had missed is that ideally we'd want to compare against both 3.7.1 and 4.2.0 APIs. Removing API would be okay as long as that API was already deprecated in 3.7. But Eclipse only keeps track of one API baseline, so we can't do that.

Lacking that, is it fine to implement the same thing using API filters, or is it better to wait for a .0 release to remove things even when they've been deprecated for a long time?

-------------------------------------
author: Douglas Trujillo
date: 2016-01-13 01:09:01.000000000

Patch Set 1: Code-Review+1

I think it's ok to remove these classes, they were deprecated long time ago when JGit was still in incubation state at Eclipse.

-------------------------------------
author: Jayvion Booth
date: 2016-01-13 17:21:04.000000000

Patch Set 1:

I think independently if xxx@xxx.xxx annotations were there or not, removing API is a breaking change, which requires increase of the major version part of the jgit bundle.

https://wiki.eclipse.org/Version_Numbering#When_to_change_the_major_segment

The jgit version semantically should have been changed to 5.0.0 with the commit 0f8743d4.

But *usually* as far as I have seen this is the past, major part of the plugin version is rarely changed, even if the API is clearly broken between releases, mostly the minor part is the one which is modified.

BTW the removal itself should have been announced on the mailing list, see 

https://wiki.eclipse.org/Eclipse/API_Central/Deprecation_Policy#Removal_of_Deprecated_API
https://wiki.eclipse.org/Eclipse/API_Central/API_Removal_Process

So personally I think we should ask PMC or simply switch jgit to 5.0.0.

-------------------------------------
author: Sebastian Porter
date: 2016-01-15 14:06:15.000000000

Patch Set 1:

Andrey is right here in all points:

1. APIRemoval is only allowed if it has been announced and the grace period is over.

2. Once removing the API, the major version must be increased.

-------------------------------------
author: Jayvion Booth
date: 2016-01-15 14:21:09.000000000

Patch Set 1:

So how we should proceed now? Any proposals?

-------------------------------------
author: Sebastian Porter
date: 2016-01-15 14:55:20.000000000

Patch Set 1:

> So how we should proceed now? Any proposals?

I did not follow the project communication. If the deletion was never announced, then it should be reverted, announced and then deleted after the grace period.

-------------------------------------
author: Yoselin Hanna
date: 2016-01-15 15:45:04.000000000

Patch Set 1:

OK fine whatever.

-------------------------------------
author: Yoselin Hanna
date: 2016-01-15 15:45:06.000000000

Abandoned

-------------------------------------
author: Jayvion Booth
date: 2016-01-19 13:23:33.000000000

Patch Set 1:

Follow up bug: https://bugs.eclipse.org/bugs/show_bug.cgi?id=486105

-------------------------------------
author: Jayvion Booth
date: 2016-01-19 17:47:22.000000000

Restored

-------------------------------------
author: Gerrit Code Review
date: 2016-01-19 22:08:54.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
