DESCRIPTION

Do not fake a SymbolicRef as an ObjectIdRef

When doing a detaching operation, JGit fakes a SymbolicRef as an
ObjectIdRef. This is because RefUpdate#updateImpl dereferences the
SymbolicRef when updating it. For example, assume that HEAD is
pointing refs/heads/master. If I try to make a detached HEAD pointing
to a commit 0xc0ffee, RefUpdate dereferences HEAD as refs/heads/master
first and changes refs/heads/master to 0xc0ffee. The detach argument
of RefDatabase#newUpdate avoids this dereference by faking HEAD as
ObjectIdRef.

This faking is problematic for the linking operation of
DfsRefDatabase. It does a compare-and-swap operation on every
reference change because of its distributed systems nature. If a
SymbolicRef is faked as an ObjectRef, it thinks that there was a
change in the reference and rejects the update. Because of this, DFS
based repositories cannot change the link target of symbolic refs.
This has not been a problem for file-based repositories because it has
a file-lock based semantics instead of the CAS based one. The
reference implementation, InMemoryRepository, has a hack to revert the
reference back to a SymbolicRef.

When [1] introduced this faking code, there was no way for RefUpdate
to distinguish the detaching operation. When [2] fixed the detaching
operation, it introduced a detachingSymbolicRef flag. This commit uses
this flag to control whether it needs to dereference the symbolic refs
by calling Ref#getLeaf. The same flag is used to the reflog update
operation. As a side-effect, InMemoryRepository's compareAndPut
implementation becomes a straightforward CAS operation.

[1]: https://eclipse.googlesource.com/jgit/jgit/+/01b5392cdbc12ce2e21fd1d1afbd61fdf97e1c38
[2]: https://eclipse.googlesource.com/jgit/jgit/+/3a86868c0883d2a564db88bf9ae4a5fe235bb63f

Change-Id: I118f85f0414dbfad02250944e28d74dddd59469b
Signed-off-by: Sandra Garrison xxx@xxx.xxx


COMMENTS

author: Sandra Garrison
date: 2016-07-15 19:43:03.000000000

Uploaded patch set 2: Commit message was updated.

-------------------------------------
author: Eden Lin
date: 2016-07-15 19:50:42.000000000

Patch Set 2:

(2 comments)

Would the dfs/ and file/ parts of this work as separate changes?

Do tests exercise this code already? (I'm guessing yes, based on the InMemoryRepository part.) Could the commit message mention an example relevant test?

Line:13, /COMMIT_MSG -> nit: commit SHA1s are usually written without leading 0x

Line:14, /COMMIT_MSG -> likewise

-------------------------------------
author: Eden Lin
date: 2016-07-15 19:52:02.000000000

Patch Set 2:

(1 comment)

Line:270, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/CommitCommandTest.java -> This looks like an API change (but a good one). Will it need to go in release notes? Could the javadoc mention it so people know to be careful when targeting old and new jgit at the same time?

-------------------------------------
author: Brenden Conley
date: 2016-07-15 19:52:10.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8728/

-------------------------------------
author: Brenden Conley
date: 2016-07-15 20:22:14.000000000

Patch Set 2: Verified-1

Build Failed 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8728/ : ABORTED

-------------------------------------
author: Gerrit Code Review
date: 2016-08-26 00:57:42.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
