DESCRIPTION

Call clean filter during AddCommand

When filters are defined for certain pathes in the gitattributes make
sure that the clean filter is called during AddCommand.call().

Change-Id: Iffd72914cec5b434ba4d0de232e285b7492db868


COMMENTS

author: Zachary Orozco
date: 2015-06-19 13:20:15.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2015-06-19 13:20:22.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6777/

-------------------------------------
author: Brenden Conley
date: 2015-06-19 13:27:44.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6777/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2015-06-21 00:21:13.000000000

Patch Set 3: Code-Review-1

(10 comments)

Line:69, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Its confusing to read LocalFile below. I would prefer importing TemporaryBuffer and using TemporaryBuffer.LocalFile below.

Line:197, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Easier to read if the line breaks were at ? and : e.g.

  InputStream in = ...
    ? ...
    : ...

Breaking on . is very hard to read.

Line:198, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Switch to try-with-resources for in?

Line:203, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Consider putting this block into a helper method? It would reduce indentation and shorten the case in this if statement.

Line:1428, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> This can be done above without the try. You haven't done anything yet that needs to be undone in the finally.

So write instead:

  String path = getEntryPathString();
  try {
 
and then we aren't assigning p to null first before assigning it to a real value.

Same for entryAttributesNode. And see below about my dislike of assignment inside of a conditional.

Line:1431, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> Similar to below its easier to read if the assignment is not done inside of the if statement.

We only tend to do that with RevWalk/ObjectWalk.next methods producing a value in a loop. Or read() on an InputStream producing a byte count in a loop. Elsewhere we tend to break the assignment from the conditional.

Line:1438, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> This is very hard to read with an assignment wedged into an if conditional line wrapped the way it is with test against null.

Pull the assignment onto its own line and line wrap it sanely. Then the conditional will be easier to read.

Line:1440, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> Use the repository's FS.

Line:1444, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> This should be able to be a Heap buffer. A filter should not be spewing MiBs of information on stderr.

Line:1445, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> Use repo FS

-------------------------------------
author: Zachary Orozco
date: 2015-06-22 12:31:59.000000000

Patch Set 3:

(10 comments)

Line:69, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Done

Line:197, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Sure. Eclipse has strange ideas about formatting the code :-)

Line:198, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> with which resource? Can I rely on the assumption that InputStream instances are autocloseable in Java 7. From Java 8 onwards I can.

Line:203, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Done

Line:1428, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> I agree that it would be easier to read. But I wanted to prevent calling getEntryPathString() when there is no entryAttributtesNode for this path. Most of the pathes will have no attribute and getEntryPathString() doesn't look soo cheap.

Line:1431, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> Done

Line:1438, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> Done

Line:1440, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> Done

Line:1444, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> changed it to a Heap with initial size of 1K and maximum size of 1M

Line:1445, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> Done

-------------------------------------
author: Zachary Orozco
date: 2015-06-22 12:38:45.000000000

Patch Set 3:

(1 comment)

Line:198, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Sorry, forget this comment. I'll propose a try-resources block.

-------------------------------------
author: Douglas Trujillo
date: 2015-06-22 12:42:07.000000000

Patch Set 3:

(1 comment)

Line:198, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> according to http://docs.oracle.com/javase/7/docs/api/java/io/InputStream.html InputStream is autoclosable

-------------------------------------
author: Gerrit Code Review
date: 2015-11-27 23:20:01.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
