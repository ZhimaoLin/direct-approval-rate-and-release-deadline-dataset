DESCRIPTION

Ensure RevWalk is released when done

Update a number of calling sites of RevWalk to ensure the walker's
internal ObjectReader is released after the walk is no longer used.
Because the ObjectReader is likely to hold onto a native resource
like an Inflater, we don't want to leak them outside of their
useful scope.

Where possible we also try to share ObjectReaders across several
walk pools, or between a walker and a PackWriter.  This permits
the ObjectReader to actually do some caching if it felt inclined
to do so.

Not everything was updated, we'll probably need to come back and
update even more call sites, but these are some of the biggest
offenders.  Test cases in particular aren't updated.  My plan is to
move most storage-agnostic tests onto some purely in-memory storage
solution that doesn't do compression.

Change-Id: I04087ec79faeea208b19848939898ad7172b6672
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2010-06-30 22:01:09.000000000

Patch Set 1: Looks good to me, but someone else must approve; IP review completed



-------------------------------------
author: Juliet Cantu
date: 2010-07-05 22:04:04.000000000

Patch Set 1: Looks good to me, approved



-------------------------------------
author: Yoselin Hanna
date: 2010-07-27 16:11:44.000000000

Change has been successfully pushed.

-------------------------------------
