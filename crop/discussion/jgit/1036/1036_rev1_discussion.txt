DESCRIPTION

Git Porcelain API: Add Command for a single file

In this first iteration a single file can be added to the index.
The new Add command uses the DirCache to access the
git index. It works also in case of an existing conflict. 

The new Add command does add ignored files because
there is no gitignore support in jgit yet.

Bug: 318440
Signed-off-by: Carlie Harper xxx@xxx.xxx

COMMENTS

author: Yoselin Hanna
date: 2010-07-02 21:33:34.000000000

Patch Set 1: I would prefer that you didn't submit this

(3 inline comments)



-------------------------------------
author: Douglas Trujillo
date: 2010-07-02 22:55:48.000000000

Patch Set 1: I would prefer that you didn't submit this

(8 inline comments)



Line:136, org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java -> Returns a command object not a command class

Line:100, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> exception message should be externalized

Line:111, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> message should be externalized

Line:60, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/AddCommandTest.java -> typo in method name

Line:71, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/AddCommandTest.java -> typo in method name

Line:91, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/AddCommandTest.java -> typo in method name

Line:112, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/AddCommandTest.java -> typo in method name

Line:136, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/AddCommandTest.java -> typo in method name

-------------------------------------
author: Yoselin Hanna
date: 2010-07-02 21:33:33.000000000

MISMATCHED INLINE COMMENT
Line:145, org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java -> Here you call this filepattern, but in AddCommand you call it filepath, and actually treat it as relative to the root of the working directory.

Similar to merge() I think add() should be just a factory which provides the command, and arguments should be set on the command.  Then we can have addFile(), and addPattern(), which have different behaviors as to how they setup the add request.  Further, we can add multiple things in one call, so that the DirCache only needs to be locked and written once, rather than per file specified in the user interface.

-------------------------------------
author: Yoselin Hanna
date: 2010-07-02 21:33:33.000000000

MISMATCHED INLINE COMMENT
Line:96, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> Don't lock the DirCache if you are simply reading and unlocking, its sort of a waste of time.  Use read() if all you need is to look at it.

But, I have to question, why is this block here?  If the file doesn't exist in the working tree, and yet we were told to add it, we have nothing to do, don't we?  That is `rm foo; git add foo` doesn't stage the deletion.  We probably don't want to do that here either.

-------------------------------------
author: Yoselin Hanna
date: 2010-07-02 21:33:33.000000000

MISMATCHED INLINE COMMENT
Line:126, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> If you also do

  tw.setFilter(PathFilter.create(filepath))

You don't need to do anything in the while loop.  Just execute:

  while (tw.next()) {
    // Already positioned to the file we want to touch.
    ....
  }

The DirCacheBuilderIterator knows how to manage the rest of the entries outside of the space that the PathFilter matches against and ensure they stay unaffected in the resulting DirCache.

-------------------------------------
