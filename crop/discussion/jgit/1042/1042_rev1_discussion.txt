DESCRIPTION

Make type and size lazy for large delta objects

Callers don't necessarily need the getSize() result from a large
delta.  They instead should be always using openStream() or copyTo()
for blobs going to local files, or they should be checking the
result of the constant-time isLarge() method to determine the type
of access they can use on the ObjectLoader.  Avoid inflating the
delta instruction stream twice by delaying the decoding of the size
until after we have created the DeltaStream and decoded the header.

Likewise with the type, callers don't necessarily always need it
to be present in an ObjectLoader.  Delay looking at it as late as
we can, thereby avoiding an ugly O(N^2) loop looking up the type
for every single object in the entire delta chain.

Change-Id: I6487b75b52a5d201d811a8baed2fb4fcd6431320
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Blake Oneal
date: 2010-07-03 09:28:38.000000000

Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)



Line:81, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/LargePackedDeltaObject.java -> If these are two constant values, why not put them into the variable declaration? e.g. private int type = Constants.OBJ_BAD.

-------------------------------------
author: Yoselin Hanna
date: 2010-07-03 17:56:48.000000000

Patch Set 1: (1 inline comment)



Line:81, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/LargePackedDeltaObject.java -> They aren't final, they do change during the object's life.  And our style tends to be to initialize in the constructor, not inline in the declaration for non-final fields.

Anyway, I pulled the -1 into a constant to better declare the intent of the value.

-------------------------------------
