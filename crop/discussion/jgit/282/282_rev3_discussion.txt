DESCRIPTION

Allow users of ReceivePack access to the objects being sent

When implementing branch read access, we need to prove that the
newly created reference(s) point to objects that the user can see.

There are two ways that an object is reachable:
1)  It's reachable from a branch or change the user can see
2)  It was uploaded as part of the pack file the user sent us

This change adds additional methods in ReceivePack that will allow a
server to check the above conditions, in order to ensure that a user
is not trying to create a reference that they cannot see, or that a
malicious user isn't attempting to forge the SHA-1 of an object that
they cannot see in order to base a change off of it.

Change-Id: Ieba75b4f0331e06a03417c37f4ae1ebca4fbee5a


COMMENTS

author: Maddison Bishop
date: 2010-02-11 00:21:12.000000000

Uploaded patch set 3.

-------------------------------------
author: Yoselin Hanna
date: 2010-02-11 17:59:26.000000000

Patch Set 3: I would prefer that you didn't submit this; No score



-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:704, org.eclipse.jgit/src/org/eclipse/jgit/transport/ReceivePack.java -> Not every ReceivePack user wants these collections.  So we probably should expose these set methods as pass-throughs.  But that means we actually need booleans here in ReceivePack to hold the flags until the IndexPack can be allocated.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:370, org.eclipse.jgit/src/org/eclipse/jgit/transport/IndexPack.java -> I think this is being computed too early.  If there are deltas in this pack, they won't appear in the entry collection yet.  They don't get added until resolveDeltas runs.  Worse, if this is a thin pack, some detals don't get added until the middle of fixThinPack().

I think instead of doing this loop here, write a utility function that does:

  entries[entryCount++] = entry;

  if (needNewObjectIds)
    newObjectIds.add(entry);

and replace any location that assigns into the entries array with this utility method.  Except in fixThinPack when we add oe right after writeWholeObject.

And since you now need to allocate the set kind of early, maybe drop the boolean field altogether and use the set != null to determine if the set should be updated or not.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:394, org.eclipse.jgit/src/org/eclipse/jgit/transport/IndexPack.java -> I think you should compute needBaseObjectIds right before this method call.  Prior to resolveDeltas baseById can contain objects which are also in this pack file, and thus aren't in the assumed base and shouldn't be reported in that baseIds collection.  After resolveDeltas, baseById contains only the objects which aren't in this pack, and must come from the local repository.  That's the set you want.

-------------------------------------
