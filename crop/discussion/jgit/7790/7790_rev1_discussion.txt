DESCRIPTION

Suppress resource warnings with Java 7

Change-Id: I4d883ba2e7d07f199fe57ccb3459ece00441a570


COMMENTS

author: Brenden Conley
date: 2012-09-17 17:33:18.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2278/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-17 17:38:50.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2278/ : SUCCESS

-------------------------------------
author: Danika Greer
date: 2012-09-18 10:36:22.000000000

Patch Set 1:

According to:

http://help.eclipse.org/juno/topic/org.eclipse.jdt.doc.user/gettingStarted/qs-with-java7.htm?cp=1_1_3

The warning is disabled by default. Is this not the case? Maybe a better option would be to disable it in the project preferences instead of suppressing it everywhere.

-------------------------------------
author: Juliet Cantu
date: 2012-09-18 22:29:44.000000000

Patch Set 1:

The idea is to disable it where we are comfortable that it not a problem, leaving room for new warnings in new code.

-------------------------------------
author: Danika Greer
date: 2012-10-07 14:35:54.000000000

Patch Set 1: (2 inline comments)



Line:122, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/FileRepositoryBuilderTest.java -> The warning is legitimate here, no? Why not use write(dotGit, "...") here? Also applies to the following two and the next file.

Line:72, org.eclipse.jgit.test/tst/org/eclipse/jgit/util/io/UnionInputStreamTest.java -> I'd rather close these at the end. Also applies to others.

-------------------------------------
author: Juliet Cantu
date: 2012-10-07 19:00:31.000000000

Patch Set 1: (2 inline comments)



-------------------------------------
author: Danika Greer
date: 2012-10-07 22:41:26.000000000

Patch Set 1: (1 inline comment)



Line:72, org.eclipse.jgit.test/tst/org/eclipse/jgit/util/io/UnionInputStreamTest.java -> Well, it's also 1 line xxx@xxx.xxx so the same amount of bloat :). I think in general it's good if test code shows best practice, even though it's "just test code".

-------------------------------------
author: Juliet Cantu
date: 2012-10-08 04:55:27.000000000

Patch Set 1: (1 inline comment)



Line:72, org.eclipse.jgit.test/tst/org/eclipse/jgit/util/io/UnionInputStreamTest.java -> We need more than one line for best practice, i.e try/catch. Just a close produces a bad example.

-------------------------------------
author: Juliet Cantu
date: 2012-10-08 05:09:55.000000000

Patch Set 1:

We can, for test projects,

1) silence the warnings for specific instances as the close is not needed because there are no external resources involved.

2) add a close without regard to best practice regarding close.

3) wrap the result of the constructor with a dummy method which effectively disables the warning. 

4) disable the warning in project settings

-------------------------------------
author: Danika Greer
date: 2012-10-09 10:48:57.000000000

Patch Set 1:

Ok, then I think 1) is the way to go, with a note that GC takes care of it.

-------------------------------------
author: Gerrit Code Review
date: 2012-10-25 22:16:31.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
author: Juliet Cantu
date: 2012-10-07 19:00:30.000000000

MISMATCHED INLINE COMMENT
Line:122, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/FileRepositoryBuilderTest.java -> Good idea.

The warning here is bogus, it could be rewritten into multiple statements with try/catch but your suggestion is better.

-------------------------------------
author: Juliet Cantu
date: 2012-10-07 19:00:30.000000000

MISMATCHED INLINE COMMENT
Line:72, org.eclipse.jgit.test/tst/org/eclipse/jgit/util/io/UnionInputStreamTest.java -> The GC handles that fine since these are in-memory only, adding code to close just adds bloat

-------------------------------------
