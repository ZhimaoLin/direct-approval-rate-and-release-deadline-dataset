DESCRIPTION

Attempt to fix graph layout when new heads are introduced

Sometime the new commit is no allocated onto a new lane leading to
the commit being drawn on the wrong branch and something that looks
like a merge.

The drawback is that this also changes existing valid graphs.

Bug: 368927
Change-Id: Ic8a8247c8a53be802c1be83850ed766b902ca646


COMMENTS

author: Juliet Cantu
date: 2013-03-18 20:39:27.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-03-18 20:39:33.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3193/ 

-------------------------------------
author: Brenden Conley
date: 2013-03-18 20:47:25.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3193/ : SUCCESS

-------------------------------------
author: Danika Greer
date: 2013-03-20 00:21:54.000000000

Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)



Line:160, org.eclipse.jgit.test/tst/org/eclipse/jgit/revplot/PlotCommitListTest.java -> I tried this situation in the history view and it looks strange with this change. Is there really no way to fix the problem without affecting these? gitk seems to get this right. I wonder if it really matters in "real" histories though.

-------------------------------------
author: Juliet Cantu
date: 2013-03-20 14:51:41.000000000

Patch Set 2: (1 inline comment)



Line:160, org.eclipse.jgit.test/tst/org/eclipse/jgit/revplot/PlotCommitListTest.java -> I find it mostly a matter of taste. The "new" logic is that new head tend get allocated to the left at the expense of other commits. 

Looking at JGit's history the new layout tends to re-use columns more. In total it doesn't reduce the total width of all column, unfortunately.

I really don't understand the algorithm enough to say how to improve, but I do know the previous behavior is wrong and the current isn't as far as I can find, but I'd appreciate if other too.

-------------------------------------
author: Zachary Orozco
date: 2013-03-21 16:55:58.000000000

Patch Set 2: (1 inline comment)



Line:160, org.eclipse.jgit.test/tst/org/eclipse/jgit/revplot/PlotCommitListTest.java -> Yes, this algorithm is too complicated in my eyes also. I also contributed to this mess and I am not very happy about the current state.

I can imagine that we could go in long discussions about how to present graph's correct. As Robin said, that's a matter of taste. I would suggest to save this discussion time and to take what "gitk" or "git log --graph" show as our goal. If we really find a thing where we dislike heavily what gitk shows we could diverge --- but I don't see this in the moment.

I'll try to find some time over the weekend to add comments about this algorithm. Also I know about certain really wrongly displayed graphs where the topology is displayed wrong which I'll put into tests. 

I'll also try to finally bring in my change https://git.eclipse.org/r/#/c/4863 which brings a lot some more very complicated tests and an easier way to test complicated graphs.

-------------------------------------
author: Juliet Cantu
date: 2013-03-23 06:45:04.000000000

Patch Set 2:

Maybe Shawn has some insight into this. Perhaps it's better to fix the original code than fixing the fixes.

-------------------------------------
author: Juliet Cantu
date: 2013-03-30 14:47:13.000000000

Patch Set 2: Looks good to me, but someone else must approve

Will merge unless someone comes up with something better

-------------------------------------
author: Zachary Orozco
date: 2013-04-03 13:30:49.000000000

Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)

Robin, I don't like all effects this change. I spent a lot of effort in trying to bring EGit History display close to what gitk and git-log do. In order to do so whe can't always positon commits when they want to enter the list. We postpone the decision about the correct lane until we know enough. With your proposal this postponed positioning of some commits is gone - you position them when they enter the list. This leads to a display of the history graph which differs from native git and looks more ugly to me (that's a matter of taste, I know)

Please look at the commit message of https://git.eclipse.org/r/#/c/4863/ which talks exactly about the situation you want to fix here.

Here you see screenshots of what gitk, "git log", the current jgit (what is currently in master) and your proposal do to the history display of the repo from "PlotCommitListTest.test2SideBranches()"

- Gitk: http://i.imgur.com/t1iPKUS.png
- git log: http://i.imgur.com/D6grQc9.png
- current jgit: http://i.imgur.com/qARGRbq.png
- your proposal: http://i.imgur.com/VQdHeRj.png

I'll see whether I can find a solution for the bug. That's a severe bug where we present a topologically wrong history graph - so a solution must be found

Line:184, org.eclipse.jgit.test/tst/org/eclipse/jgit/revplot/PlotCommitListTest.java -> Before your change jgit was positioning the commits like gitk and "git log --graph". But now, with your change, we position the commit in our own JGit specific fashion. I know it's a matter of taste, but I prefer the lane positions as they have been before and as gitk shows it.

-------------------------------------
author: Juliet Cantu
date: 2013-05-23 19:01:53.000000000

Patch Set 2:

Any new ideas?

-------------------------------------
author: Zachary Orozco
date: 2013-05-24 08:08:19.000000000

Patch Set 2:

yes, I was working with 10% on this topic.

There was the git merge conference in Berlin lately and I had the chance to talk to core git developers like Jeff King about the algorithms on layouting commit graphs. With that info I have a new version of PlotCommitList which now fits on one page. The old one is far to complicated. But I am still not happy with the results. Still hunting for bugs.

If you really want your proposal to be included now we could merge the current proposal. And I would propose my new PlotCommitList when its ready. Or we simply wait until my proposal is ready.

-------------------------------------
author: Danika Greer
date: 2013-09-18 08:23:25.000000000

Patch Set 2:

@Christian: Any updates on this? Just had another duplicate bug report about this.

-------------------------------------
author: Zachary Orozco
date: 2013-09-19 10:46:22.000000000

Patch Set 2: Code-Review+1

I don't have much time for my change regarding version graph rendering. So I would suggest to accept this change because it at least shows more correct graphs.

-------------------------------------
author: Danika Greer
date: 2013-09-19 11:21:05.000000000

Patch Set 2:

+1 for merging. Juliet Cantu, could you retarget for 3.1?

@Christian: Maybe you could post your not yet finished new version of PlotCommitList somewhere so that others can take a stab at fixing the remaining issues?

-------------------------------------
author: Douglas Trujillo
date: 2013-09-26 12:08:55.000000000

Abandoned

moved to stable-3.1 as change Ic8a8247c8a53be802c1be83850ed766b902ca646

Christian will provide his alternative changes and tests later

-------------------------------------
