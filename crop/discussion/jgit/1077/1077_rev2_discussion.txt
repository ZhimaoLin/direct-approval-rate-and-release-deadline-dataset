DESCRIPTION

Deprecate all of the older Tree related code

We want to get rid of these APIs, because they don't perform as well
as DirCache/TreeWalk, or don't offer nearly as many features.

Bug: 319145
Change-Id: I2b28f9cddc36482e1ad42d53e86e9d6461ba3bfc
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-07-07 15:33:21.000000000

Uploaded patch set 2.

-------------------------------------
author: Malia Sampson
date: 2010-07-07 15:41:24.000000000

Patch Set 2: IP review completed

(15 inline comments)

Added some comments about pointing to other classes when deprecating something... also we should send an email to jgit-dev when we deprecate these and inform people that they will be removed by 1.0...

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/lib/GitlinkTreeEntry.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:556, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:571, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:602, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:629, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:641, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:676, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:689, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:58, org.eclipse.jgit/src/org/eclipse/jgit/lib/IndexTreeWalker.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:55, org.eclipse.jgit/src/org/eclipse/jgit/lib/TreeEntry.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/lib/SymlinkTreeEntry.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:64, org.eclipse.jgit/src/org/eclipse/jgit/lib/WorkDirCheckout.java -> Should be "not performed" but doesn't matter anymore..

Line:66, org.eclipse.jgit/src/org/eclipse/jgit/lib/WorkDirCheckout.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:51, org.eclipse.jgit/src/org/eclipse/jgit/lib/FileTreeEntry.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

Line:52, org.eclipse.jgit/src/org/eclipse/jgit/lib/Treeish.java -> Should we point them somewhere else? Our policy at Eclipse is that if you deprecate something, you generally want to point them to use another class...

-------------------------------------
