DESCRIPTION

Fix infinite loop in IndexPack

A programming error using the Inflater API led to an infinite
loop within IndexPack, caused by the Inflater returning 0 from
the inflate() method, but it didn't want more input.  This happens
when it has reached the end of the stream, or has reached a spot
asking for an external dictionary.  Such a case is a failure for us,
and we should abort out.

Thanks to Alex for pointing out that we had 3 implementations of
the inflate rountine, which should be consolidated into one and
use a switch to determine where to load data from.

Bug: 317416
Change-Id: I34120482375b687ea36ed9154002d77047e94b1f
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-07-06 23:23:06.000000000

Uploaded patch set 3.

-------------------------------------
author: Yoselin Hanna
date: 2010-07-06 23:24:37.000000000

Patch Set 3:

Robin, yes I fixed an infinite loop here.  There are conditions where inflate() returns 0 and yet finished() returns false, and so does needsInput().  This now crashes with a CorruptObjectException, rather than trying to call inflate again.

AFAIK this can only happen when the inflation stream is corrupted and the bit sequence implies that a dictionary is required here, but we haven't supplied one to the Inflater.

-------------------------------------
author: Juliet Cantu
date: 2010-07-07 05:10:14.000000000

Patch Set 3: IP review completed



-------------------------------------
author: Blake Oneal
date: 2010-07-07 08:32:06.000000000

Patch Set 3: Looks good to me, but someone else must approve



-------------------------------------
author: Yoselin Hanna
date: 2010-07-16 17:11:53.000000000

Patch Set 3: Looks good to me, approved; IP review completed



-------------------------------------
author: Gerrit Code Review
date: 2010-07-16 17:11:54.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
