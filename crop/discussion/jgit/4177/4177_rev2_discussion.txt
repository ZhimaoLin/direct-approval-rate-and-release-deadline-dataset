DESCRIPTION

Fast-forward merge fails with an exception when work tree is dirty

Expected a MergeResult object with MergeFailureReason.DIRTY_WORKTREE as
the reason.

Bug: 356918
Change-Id: I0d3b172c76d622367df6c2db4af198d6624fafa8


COMMENTS

author: Clay Cameron
date: 2011-09-14 09:50:19.000000000

Uploaded patch set 2.

-------------------------------------
author: Clay Cameron
date: 2011-09-14 09:55:49.000000000

Patch Set 2:

Note, I haven't checked if all MergeFailureReasons are 100% correct. It's a patch proposal, so any comments and corrections are welcome.

-------------------------------------
author: Brenden Conley
date: 2011-09-16 09:54:26.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/786/ 

-------------------------------------
author: Brenden Conley
date: 2011-09-16 09:57:35.000000000

Patch Set 2: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/786/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2011-09-23 14:14:56.000000000

Patch Set 2: (4 inline comments)

It took me some time to find out what this change is doing. I was searching for the change in DirCacheCheckout ... In the end I found out that what you are doing is enhancing DirCacheCheckout not to return only conflicting pathes but to report also the reason for the conflict, right?

Line:190, org.eclipse.jgit/src/org/eclipse/jgit/api/MergeCommand.java -> can't we expose our new knowledge about why checkout/merge failed to the user of MergeCommand, CheckoutCommand?

Line:86, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> is this really a MergeFailureReason? This class is used also during normal checkouts, resets, ...and it sounds strange to me that we have to import org.eclipse.jgit.merge.ResolveMerger when I want understand the exceptions thrown by a checkout.

One example: during the merge operation we don't like dirty indexes and publish MergeFailureReason.DIRTY_INDEX. But here, in the DirCacheCheckout, a dirty index alone is not a reason to fail. You can checkout succesfully although your index is dirty.

My suggestion: Let's introduce a CheckoutFailureReason located in org.eclipse.jgit.dircache.

Line:723, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> these todos - they are there because it is not clear which MergeFailureReason should be choosen, or?

Line:807, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/ReadTreeTest.java -> please remote the empty line

-------------------------------------
author: Clay Cameron
date: 2011-09-23 14:52:50.000000000

Patch Set 2:

Right, but first of all I wanted to get rid of the ugly exception from the summary. So, the most important change is to catch the exception thrown by dco.checkout() in MergeCommand.call() once #setFailOnConflict is set to true. It's line 184 with the patch applied. Sorry, I should have wrote few lines describing the change.

-------------------------------------
