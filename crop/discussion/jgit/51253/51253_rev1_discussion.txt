DESCRIPTION

URIish: fix parsing of URIs with hostname only

We fail to parse URIs that contain a hostname only, like
"ssh://example.com". Fix this by making the path component of the
URI optional and moving the home-part into the path-group.

Change-Id: I44400c6ab72a2722d2155d53d63671bd867d6c44
Signed-off-by: Elaina Perkins xxx@xxx.xxx


COMMENTS

author: Elaina Perkins
date: 2015-07-02 12:55:37.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-07-02 12:55:43.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6826/

-------------------------------------
author: Brenden Conley
date: 2015-07-02 13:03:57.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6826/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2015-07-10 13:19:07.000000000

Patch Set 1:

I am not sure how much would break if we allow URLs without path. When I look at https://www.kernel.org/pub/software/scm/git/docs/git-clone.html#URLS I don't see it explicitly mentioned. All examples have a path. And I guess some functionality needs a path. E.g. when you "jgit clone http://example.com" then what should be the name of the local folder into which you clone the repo. Normally this is determined by the last component of the path.

-------------------------------------
author: Elaina Perkins
date: 2015-07-16 12:19:38.000000000

Patch Set 1:

It might be a problem when we have no path, agreed, though I don't think this warrants parsing the URI wrong. We might either reject the URI even though it might be possible to close a repository without path or think about some callback that may be used as folder name. Maybe we could just use the host and clone the repository to e.g. "example.com"?

-------------------------------------
author: Zachary Orozco
date: 2015-07-23 06:57:59.000000000

Patch Set 1:

What does native git do if you "git clone ssh://example.com" . Maybe we can mimic what they do.

-------------------------------------
author: Elaina Perkins
date: 2015-07-27 07:25:48.000000000

Patch Set 1:

Well, git does error out saying that no working copy name could be deduced and that a name should be given explicitly.

-------------------------------------
author: Zachary Orozco
date: 2015-07-27 08:08:13.000000000

Patch Set 1:

And if you do "git clone ssh://example.com localDir"? If native git succeeds in this case than a jgit "Git.cloneRepository().setURI("ssh://example.com").setDirectory(new File("localDir")).call()" should also work (means, we need this fix)

-------------------------------------
author: Elaina Perkins
date: 2015-07-27 09:18:37.000000000

Patch Set 1:

Oh wait, seems I've been mistaken. Actually it is not possible to clone 'ssh://127.0.0.1', but it is possible to clone 'ssh://127.0.0.1/' (regard the trailing '/'). Native git then automatically falls back to use the authority of the URL:

$ git clone ssh://127.0.0.1/
Cloning into '127.0.0.1'...
[snip]

Current jgit errors out cloning a repository with this URL. The proposed fix in here does not fix the issue, either, so I'll create a new patch that fixes it.

-------------------------------------
author: Zachary Orozco
date: 2015-07-27 09:51:43.000000000

Patch Set 1:

Be careful not to use full "Authority". This would also contain port numbers. May add a test which enables cloning  xxx@xxx.xxx into "example.com"

-------------------------------------
author: Elaina Perkins
date: 2015-07-27 09:57:28.000000000

Patch Set 1:

I've just tried cloning a repository with a port:

$ git clone xxx@xxx.xxx
Cloning into '2222'...

I don't think this behavior is really intended by git.git. Also:

$ git clone xxx@xxx.xxx
Cloning into xxx@xxx.xxx

This is definitly wrong. I'll go check in with the git.git mailing list and correct the issue there first.

-------------------------------------
author: Zachary Orozco
date: 2015-07-27 10:42:01.000000000

Patch Set 1:

agree, that sounds like a native git bug. Especially cloning into folders which contain a password seems to be wrong.

-------------------------------------
author: Gerrit Code Review
date: 2015-09-10 11:46:25.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
