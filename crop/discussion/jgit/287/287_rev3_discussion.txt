DESCRIPTION

Refactor SideBandOutputStream to be buffered

Instead of relying on our callers to wrap us up inside of a
BufferedOutputStream and using the proper block sizing, do the
buffering directly inside of SideBandOutputStream.  This ensures
we don't get large write-throughs from BufferedOutputStream that
might overflow the configured packet size.

The constructor of SideBandOutputStream is also beefed up to check
its arguments and ensure they are within acceptable ranges for the
current side-band protocol.

Change-Id: Ic14567327d03c9e972f9734b8228178bc448867d
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-02-11 20:17:31.000000000

Uploaded patch set 3.

-------------------------------------
author: Yoselin Hanna
date: 2010-02-11 20:17:41.000000000

Patch Set 3:  Looks good to me, but someone else must approve; IP review completed



-------------------------------------
author: Yoselin Hanna
date: 2010-02-12 03:00:32.000000000

Patch Set 3:  Looks good to me, but someone else must approve; IP review completed



-------------------------------------
author: Blake Oneal
date: 2010-02-16 23:48:12.000000000

Patch Set 3: Looks good to me, but someone else must approve



-------------------------------------
author: Juliet Cantu
date: 2010-03-12 22:37:39.000000000

Patch Set 3: I would prefer that you didn't submit this; No score

close...

Line:83, org.eclipse.jgit/src/org/eclipse/jgit/transport/SideBandOutputStream.java -> 255 is allowed
reverting the order of operands this way is unnatural makes it easy to read it the wrong way. When there is only one condition or the condition expresses a between condition it is easier to read correctly,  min < v < max style. Howevery I prefer the variable op constant pattern always, because that aligns with how we pronounce the expression.

Hence this one is easier to grasp

if  (chan <=0 || chan > 255) throw...

And the valid range is [1..255], I think, according to the condition

if (!( 0 < chan && chan <= 255)) would be readable too, but perhaps top many parenthese for some people.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-13 00:08:33.000000000

Patch Set 3: I would prefer that you didn't submit this



Line:83, org.eclipse.jgit/src/org/eclipse/jgit/transport/SideBandOutputStream.java -> Done

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:83, org.eclipse.jgit/src/org/eclipse/jgit/transport/SideBandOutputStream.java -> can we use [0,255) here, since 255 isn't included in the list of possible values? Can we also document the parameter and size restrictions in a JavaDoc comment above?

-------------------------------------
