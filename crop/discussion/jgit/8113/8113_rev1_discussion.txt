DESCRIPTION

Merge Recursive strategy

Implement Java version of git-core:
builtin/merge-recursive.c and
merge-recursive.c

Change-Id: I6292bb7bda55c0242a448a94956f2d6a94fddbaa


COMMENTS

author: Brenden Conley
date: 2012-10-10 03:42:26.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2390/ 

-------------------------------------
author: Brenden Conley
date: 2012-10-10 03:47:52.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2390/ : SUCCESS

-------------------------------------
author: Danika Greer
date: 2012-10-10 12:29:00.000000000

Patch Set 1: I would prefer that you didn't submit this

Looks like a nice start. Some comments from the first glance:

1. The changes to .gitignore, *.launch and *.prefs don't belong in this commit. Please remove these changes.
2. A feature like this MUST come with test cases. E.g. see ResolveMergerTest.
3. Your committer name and author name do not match, you may want to check that out ("Patience Pratt" vs "Caleb Zhang").

-------------------------------------
author: Juliet Cantu
date: 2012-10-10 20:27:10.000000000

Patch Set 1: Unclean IP, do not check in

(4 inline comments)

CQ needed, large contribution.

Derivative work?

Line:47, org.eclipse.jgit/src/org/eclipse/jgit/merge/StrategyRecursive.java -> A contributors list is hard to maintain so we avoid it.
git blame /log is the mail tool for finding authorship

Line:103, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> Two javadocs?

Line:106, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> missing asterisk

Line:110, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> If this is derivative work you may need to ask for permission to relicense the code from the authors of the original work

-------------------------------------
author: Caleb Zhang
date: 2012-10-11 07:13:33.000000000

Patch Set 1: I would prefer that you didn't submit this

(4 inline comments)

I will remove my versions of .gitignore and *.prefs for patch 2. If we do/should not update these files, should they not be in .gitignore?

Line:47, org.eclipse.jgit/src/org/eclipse/jgit/merge/StrategyRecursive.java -> Sure. Should I convert me to author or remain anonymous?

Line:103, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> No. A mistake.

Line:106, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> Nice. I need a better JavaDoc friendly comment inserter. Eclipse didn't complain. Staring at code too much. Starting to see stars where there are none :-(

Line:110, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> I am not clear on what constitutes a derivation. I think strictly speaking, all of JGit would be derivative.

This implementation is not the native 'C' version transcribed to Java. The concepts of multiple bases, object trees, references and various types of merges have already been enumerated in JGit. The idea of recursively merging trees is re-used and implemented by adapting existing JGit code, largely the ThreeWay and Resolve mergers, so I suppose I *should* mention those original authors and thank them for all their hard work.

The native git code is licenced GPL v.2. Who "owns" the native version recursive strategy code? Do I call Linus?

-------------------------------------
author: Zachary Orozco
date: 2012-10-11 16:25:07.000000000

Patch Set 1:

I am also reviewing this. Great that we finally get this functionality. I am not ready with the review and I'll hope to finish this on the weekend. Looks already promising. We definitly need tests here. I also think we should attempt to have the common parts of Resolve and Recursive in a single place. I see some copy and paste regions which I would like to avoid.

-------------------------------------
author: Juliet Cantu
date: 2012-10-11 21:05:48.000000000

Patch Set 1:

We do update prefs files sometimes, but not together with other changes.

-------------------------------------
author: Juliet Cantu
date: 2012-10-11 22:05:07.000000000

Patch Set 1: (4 inline comments)



Line:110, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> With derivative work we mean something that is a translation of some kind of the original nontrivial code. Stealing the concepts and constants necessary for compatibility does not count (it could violate a patent but hopefully that is not the case). 

To ask for permission to use the code you need to ask all the copyright holders. Basically you run git blame and git log on the code and extract the list of copyright holders. You can eliminate trivial changes, e.g. formatting. It's entirely possible to go that route if you ask nicely. Then that is only neccesary if we consider this derivative work.

Line:563, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> re-format

Line:660, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> Removing anything but the last file from an arraylist is quite expensive for large lists. Though rare, we sometime have large changes and expect good performance. I haven't measured that here considering that we do IO here. On the other can using a LinkedList would remove the worries.

Line:896, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> Too much stuff is copied from the base class. Why should we review it again?

-------------------------------------
author: Zachary Orozco
date: 2012-10-12 23:05:25.000000000

Patch Set 1: I would prefer that you didn't submit this

Uff, I had a hard time reviewing this but finally I found out what has happened and now it get's much clearer.

To be honest: Initially I was shocked to see that your implementation of RecursiveMerge was so big. I thought that RecursiveMerge is a pimped up version of ResolveMerge. The results should only differ in cases where the commits to be merged have more than one merge base. But your change was 1800 lines big! 

Then I understood that your RecursiveMerge.java has been created by making a copy of ResolveMerge.java and modifying it. But when I diffed RecursiveMerge.java and ResolveMerge.java nearly every line looked different??? And additionally I saw that your RecursiveMerge.java contained some nasty bugs which I remember have been fixed in ResolveMerge.java.

To make a long story short: I think you copied a quite old version of ResolveMerge.java (at least as old as commit 17fb542 from May 8.). If I diff your RecursiveMerge.java with ResolveMerge.java from commit 17fb542 then everything makes sense. Then I see only those changes made by you. And the diff is only 400 lines big!!!

But in your current proposal RecursiveMerge.java is missing 10 bugfixes and enhancements which have been done to ResolveMerge.java since you copied it.

My suggestion:
- Cherry-pick your change onto 17fb542
- Try to avoid copying from ResolveMerge but to inherit as much as you can. I think 99% of your work is in:
merge(), getBaseCommits(), mergeBases(), reverseCommitList(), mergeRecursiveGeneric(). So your class only contain those work.
- Rebase your work back to current master.

What do you think? If it's not clear I can also make a proposal for that.

-------------------------------------
author: Caleb Zhang
date: 2012-10-18 14:11:18.000000000

Patch Set 1: (4 inline comments)



Line:110, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> The original where I found the idea is GPL v2.2. Do I copy the GPL collateral in here too with the permissions?

Line:563, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> Done

Line:660, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> this copy is removed. Original in ResolveMerger would be subject to review, buut not repairable by me.

Line:896, org.eclipse.jgit/src/org/eclipse/jgit/merge/RecursiveMerger.java -> removed. Original re-used

-------------------------------------
