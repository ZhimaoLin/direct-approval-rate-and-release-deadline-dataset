DESCRIPTION

Implement recursive merge strategy

Extend ResolveMerger with RecursiveMerger to merge two tips
that have up to 200 bases.

Bug: 380314
CQ: 6854
Change-Id: I6292bb7bda55c0242a448a94956f2d6a94fddbaa
Signed-off-by: Malia Sampson xxx@xxx.xxx
Also-by: Zachary Orozco xxx@xxx.xxx


COMMENTS

author: Zachary Orozco
date: 2012-12-11 22:22:35.000000000

Uploaded patch set 13.

-------------------------------------
author: Brenden Conley
date: 2012-12-11 22:27:47.000000000

Patch Set 13:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2563/ 

-------------------------------------
author: Brenden Conley
date: 2012-12-11 22:33:40.000000000

Patch Set 13: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2563/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2012-12-11 22:34:20.000000000

Patch Set 13: Looks good to me, but someone else must approve

George, I worked long to get green test on your code ... but in the end I had to rework a lot. But now, finally, we have green lights. Best thing is that during the rework I could get rid of 40% of the lines in RecursiveMerger.java. Now we have a RecursiveMerger which extends from ResolveMerger and which basically overrides only one method "getBaseCommit()". That's the only method where Resolve.. and Recursive... should differ.
I think you also have (maybe manual) test. Could you review this and run your test scenarios on this proposal?

-------------------------------------
author: Caleb Zhang
date: 2012-12-12 15:54:40.000000000

Patch Set 13: I would prefer that you didn't submit this

These changes solve several problems I had:
1) merging using the index, i.e. not in-core like Gerrit
2) merging more than two bases
3) using the merge command and setting a strategy instead of instantiating a Recursive merger directly the way 
Gerrit does.
4) simplifies the recursive part by focusing on base tree merges instead of deriving trees through commit objects
5) creates intermediate commits for the intermediate merges

Is it possible to test each of the scenarios with both index and in-core, that is from merge command with strategy and RecursiveMerger in-core instance, similar to how you had re-runs of Resolve merger tests with different flavors?

-------------------------------------
author: Zachary Orozco
date: 2012-12-12 16:51:37.000000000

Patch Set 13:

Good point. I agree, it would be best if we test the merger with different tests which are automatically executed in the two environments: bare (incore index, no working-tree) and non-bare (real index, working-tree). There may be some tests which are only applicable to one of the scenarios. E.g. how does the merge behave when we have dirty index/dirty working-tree. I'll try to provide this soon.

-------------------------------------
