DESCRIPTION

Checkout: expose a CheckoutResult

This is needed by callers to determine checkout conflicts and
possible files that were not deleted during the checkout so that they
can present the end user with a better Exception description and retry
to delete the undeleted files later, respectively.

This also fixes a small bug in DirCacheCheckout

Change-Id: I037930da7b1a4dfb24cfa3205afb51dc29e4a5b8
Signed-off-by: Willow Cantrell xxx@xxx.xxx


COMMENTS

author: Juliet Cantu
date: 2010-12-15 21:31:37.000000000

Patch Set 1: I would prefer that you didn't submit this; IP review completed

(6 inline comments)



Line:147, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/CheckoutCommandTest.java -> Accidentally write-protected directories would cause this on other OS:es too. Quite rare, but might need a different way of testing.

Line:167, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/CheckoutCommandTest.java -> Drop the catch clause here. The finally will do for cleanup, but let the exception fall out of the test and let JUnit handle it and report it as an error, rather than a failure. Your catch also drop the stack frame which is very bad for debugging.

Line:133, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> A separate commit please.

Line:86, org.eclipse.jgit/src/org/eclipse/jgit/api/CheckoutCommand.java -> Don't initialize references. Java guarantees default values for all fields. The initialization just means more code to read (and comment on).

Line:173, org.eclipse.jgit/src/org/eclipse/jgit/api/CheckoutCommand.java -> I'd prefer ! ... .isEmpty()

Line:90, org.eclipse.jgit/src/org/eclipse/jgit/api/CheckoutResult.java -> Undelete usually means "recovered after delete". 
Non-deleted would be better. What if we have both
conflicts and non-delete files. What status is that?
What is the status when we fail to update files (e.g. that are locked)?

-------------------------------------
author: Willow Cantrell
date: 2010-12-16 07:49:26.000000000

Patch Set 1: (6 inline comments)



Line:147, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/CheckoutCommandTest.java -> Done

Line:167, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/CheckoutCommandTest.java -> Done

Line:133, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> Done

Line:86, org.eclipse.jgit/src/org/eclipse/jgit/api/CheckoutCommand.java -> Done

Line:173, org.eclipse.jgit/src/org/eclipse/jgit/api/CheckoutCommand.java -> Done

Line:90, org.eclipse.jgit/src/org/eclipse/jgit/api/CheckoutResult.java -> Renamed to NONDELETED. If there are conflicts, the checkout won't complete as well as when update fails. In the first case, we have CONFLICTS, in the second case we have ERROR.

-------------------------------------
