DESCRIPTION

Sort Config entries and use O(log N) lookup

Decrease running time for getStringList (and all other get methods) by
looking for configuration entries using binary search rather than
linear search through the configuration file.

Configuration lines are sorted by section, subsection, name in a
sorted list whenever the snapshot is rebuilt. Binary search is used to
locate an index in the middle of the values, then walk backwards to
find the first value in the range.

Given a configuration of file of 5000 distinct section/subsection/name
triplets (e.g. a Gerrit Code Review project.config configuration file
with 5000 unique access control rules), this new code is faster to
lookup each rule individually using getStringList():

  old setStringList() 194 usec avg
      getStringList() 196 usec avg

  new setStringList() 188 usec avg
      getStringList()  24 usec avg

Change-Id: Ic8907231868c18eb946b72f341a6b58666b70324


COMMENTS

author: Brenden Conley
date: 2012-03-27 19:40:34.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1661/ 

-------------------------------------
author: Brenden Conley
date: 2012-03-27 19:44:42.000000000

Patch Set 1: Verified

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1661/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2012-03-27 20:48:07.000000000

Patch Set 1:

I haven't tested this yet in Gerrit, but I think this will speed up the time it takes to load projects from disk. Opening a project can take 100ms on a lot of systems due to the complexity of the project.config file, if at least 50% of that time is in the Config class, this should cut project loading down to ~56ms.

-------------------------------------
author: Juliet Cantu
date: 2012-03-30 15:59:05.000000000

Patch Set 1:

This does not support non-ascii branch names.

-------------------------------------
author: Juliet Cantu
date: 2012-03-30 16:19:34.000000000

Patch Set 1:

It probably supports non-ascii names, just not in a case sensitive manner, but on the other hand C git seems to be case-sensitive for subsection names

-------------------------------------
author: Juliet Cantu
date: 2012-03-30 16:22:47.000000000

Patch Set 1: Verified; Looks good to me, approved; IP review completed



-------------------------------------
author: Juliet Cantu
date: 2012-03-30 16:25:49.000000000

Change has been successfully merged into the git repository.

-------------------------------------
author: Yoselin Hanna
date: 2012-03-30 16:47:05.000000000

Patch Set 1:

The behavior of equality here matches the behavior of equality for C Git. Subsection names are case sensitive. Section names and variable names are case insensitive in the US-ASCII character set.

This is OK because section names and variable names are limited to a subset of US-ASCII. Subsection names are case sensitive because they could contain localized characters in e.g. branch names and C Git didn't want to mess with that. :-)

-------------------------------------
