DESCRIPTION

[RFC] Additional unit tests for the GC

I am trying to provide additional unit test for the GC implementation
from Chris Halstrick. Since we work independently of each other I will
be providing the tests in a separate change. Once both changes are ready
we will squash them into one.

Change-Id: Id5b578f7040c6c896ab9386a6b5ed62b0f495ed5
Signed-off-by: Dillon Cross xxx@xxx.xxx


COMMENTS

author: Dillon Cross
date: 2012-01-31 12:50:49.000000000

Uploaded patch set 2.

-------------------------------------
author: Zachary Orozco
date: 2012-01-31 16:18:29.000000000

Patch Set 2: I would prefer that you didn't submit this

(5 inline comments)



Line:102, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/GCTest.java -> Unreachable loose objects are currently not pruned. We prune only those loose objects which made it into packfiles. That's why the following assertion currently doesn't work. Maybe we should invent a option for gc() which tells when to prune loose, unreachable objects. Currently this parameter is set to NEVER.

Line:111, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/GCTest.java -> Unreachable loose objects are currently not pruned. See above.

Line:129, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/GCTest.java -> This will create a tag object in the database. But this tag object is not referenced by any ref. The tag object is unreachable and therefore doesn't save the blob from being pruned. Both object's should be be gc'd.

Line:168, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/GCTest.java -> Unreachable loose objects are currently not pruned. See above.

Line:183, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/GCTest.java -> Unreachable loose objects are currently not pruned. See above.

-------------------------------------
author: Dillon Cross
date: 2012-02-02 10:09:12.000000000

Patch Set 2: (1 inline comment)



Line:102, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/GCTest.java -> Should I skip this assert?

The option to prune loose unreachable objects may be important when there is a huge blob which is unreachable and we want to reduce the total size of the repository by pruning it.

-------------------------------------
