DESCRIPTION

Bitmap builder: actually compress EWAH bitmaps in memory

For construction performance each new EWAHBitmap is allocated at the
roughly worst-case size the bitmap would need if all of the words must
be literal and no run length compression is available.  In practice
this is far larger than is required, wasting heap memory while the
bitmaps are computed.

Trim down each bitmap to its minimum required size. This copies the
internal array to a new smaller array, allowing the GC to reclaim the
prior larger array for reuse.

A single bitmap of 5.2M bits is only 79 KiB of memory without this
trim call but 15,000 such bitmaps is 1.1 GiB. Trimming can help fit
a larger number of bitmaps during processing.

Change-Id: I2bd19a786189db5b01c4c96f209b83de50e10c3b


COMMENTS

author: Yoselin Hanna
date: 2015-08-13 06:22:13.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-08-13 06:22:19.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7007/

-------------------------------------
author: Brenden Conley
date: 2015-08-13 06:29:56.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7007/ : SUCCESS

-------------------------------------
author: Ariel Sawyer
date: 2015-08-13 15:43:29.000000000

Patch Set 1: Code-Review+1

-------------------------------------
author: Yoselin Hanna
date: 2015-08-13 16:08:28.000000000

Patch Set 1: Code-Review+2

-------------------------------------
author: Gerrit Code Review
date: 2015-08-13 16:08:31.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
