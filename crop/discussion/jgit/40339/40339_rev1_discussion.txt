DESCRIPTION

Handle invalid tree extensions

In case the index contains wrong tree extensions don't throw a
ArrayIndexOutOfBounds exception but revalidate the tree extension.

It happened that the git index written by Git for Windows contained valid
(means entryCount>0) tree extensions for pathes which are not existing
in the index. Native git handles this inconsistency silently but JGit
was crashing with a ArrayIndexOutOfBounds exception. Teach JGit to
better recognize such cases and revalidate such extensions.

It's hard to write a test because JGit doesn't write such extensions. It
only reads, validates and makes use of them. But the bug tells how to
create such situations.

Bug: 457152
Change-Id: Id3ffd7dc7ae1c55674d88bf1b43953234fe0b68d


COMMENTS

author: Zachary Orozco
date: 2015-01-26 10:18:43.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-01-26 10:18:49.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/5943/

-------------------------------------
author: Brenden Conley
date: 2015-01-26 10:26:42.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/5943/ : SUCCESS

-------------------------------------
author: Saniya Hill
date: 2015-01-26 10:49:31.000000000

Patch Set 1: Code-Review+1

This fix resolves the problem for my test repository.

-------------------------------------
author: Yoselin Hanna
date: 2015-01-27 05:48:59.000000000

Patch Set 1: Code-Review+2

-------------------------------------
author: Yoselin Hanna
date: 2015-01-27 05:49:06.000000000

Change has been successfully merged into the git repository.

-------------------------------------
