DESCRIPTION

dfs: compact reftables during DfsPackCompactor

Combine intermediate, non-GC reftables when combining pack files.
This shrinks the reftable stack, improving lookup times.

Change-Id: I5dbba41806f99af5ecaff3a3119f6630e9404256


COMMENTS

author: Yoselin Hanna
date: 2017-08-28 22:07:28.000000000

Uploaded patch set 8: Patch Set 7 was rebased.

-------------------------------------
author: Brenden Conley
date: 2017-08-28 22:31:43.000000000

Patch Set 8:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/11184/

-------------------------------------
author: Brenden Conley
date: 2017-08-28 22:56:35.000000000

Patch Set 8: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/11184/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2017-09-05 16:05:29.000000000

Patch Set 8:

(2 comments)

Line:255, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackCompactor.java -> Done

Line:519, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackCompactor.java -> Changed to ignore the cache size at writing time. I really only cared about the stream itself having a recommended blockSize.

-------------------------------------
author: Ariel Sawyer
date: 2017-09-05 15:33:54.000000000

MISMATCHED INLINE COMMENT
Line:255, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackCompactor.java -> getNewPacks() already does all of this.

-------------------------------------
author: Ariel Sawyer
date: 2017-09-05 15:33:54.000000000

MISMATCHED INLINE COMMENT
Line:519, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackCompactor.java -> This enforces max(cfg.blockSize, DfsBlockCache.getInstance().getBlockSize()). Shouldn't it be max(cfg.blockSize, out.blockSize()) above?

-------------------------------------
