DESCRIPTION

Backout RevObject's  object-identity based equals implementation

This restores the transitivity and symmetry properties of the equals
methods on the AnyObjectId type hierarchy as defined in [1]. 
Following [2] we declare these equals methods final to ensure that 
semantics of equals are consistent across AnyObjectId's type hierarchy.

[1] http://download-llnw.oracle.com/javase/6/docs/api/java/lang/Object.html#equals(java.lang.Object)
[2] http://www.angelikalanger.com/Articles/JavaSolutions/SecretsOfEquals/Equals.html

Bug: 321502
Change-Id: Ibace21fa268c4aa15da6c65d42eb705ab1aa24b3
Signed-off-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Carlie Harper
date: 2010-08-18 10:05:31.000000000

Patch Set 1: Looks good to me, but someone else must approve

I still do not know if the RevObject's equality was changed on purpose.

In that case things would get complicated. We could try the trick wtih comparing classes (http://www.angelikalanger.com/Articles/JavaSolutions/SecretsOfEquals/Equals.html#Listing4) but this would be complicated because there are more than two classes in the Hierarchy. But then RevObjects and AnyObjectIds would never be equal to each other.

-------------------------------------
author: Yoselin Hanna
date: 2010-08-18 19:00:32.000000000

Patch Set 1: Looks good to me, approved; IP review completed

RevObject's equals() was changed to be identity equals because two RevCommits parsed by two different RevWalk instances aren't exactly equal.  You cannot use one RevCommit in the other RevWalk... their object pools are different.

However I think this has turned out to be a non-issue.  Most developers are able to follow the rule of using only that RevWalk's RevObjects within the RevWalk that made them.  And if they don't, this different equals() implementation didn't help them to identify the problem.

Basically, I royally screwed this up ages ago when I created RevObject/RevWalk.  Its taken us years to realize it, and SAP to fix it.  I think the change makes sense, we should do it as part of 0.9, and applications that were depending on reference equality of RevObjects should use == and not .equals().

-------------------------------------
author: Yoselin Hanna
date: 2010-08-18 19:00:33.000000000

Change has been successfully merged into the git repository.

-------------------------------------
