DESCRIPTION

For git submodules don't rely on metadata check in isModified() call

Similar to SYMLINK case, if the GITLINK entry has changed metadata,
check entry content.

Bug: 498759
Change-Id: Ic8c181dee8397dfd7a8bc0d7f7101bfeb1c923df
Signed-off-by: Jayvion Booth xxx@xxx.xxx


COMMENTS

author: Jayvion Booth
date: 2016-07-28 12:31:25.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-07-28 12:31:32.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8821/

-------------------------------------
author: Brenden Conley
date: 2016-07-28 12:41:03.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8821/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2016-07-29 07:36:00.000000000

Patch Set 1:

(1 comment)

Line:921, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> Have you seen this failing? Maybe a test would be nice. If e.g. while inspecting file mode you see in the workingtree a GITLINK and in the index you see a FILE then we would reach this block. In this case we do not have to do a contentCheck anymore, or? Can you imagine differences in the Metadata where you say a contentcheck is needed?

-------------------------------------
author: Jayvion Booth
date: 2016-07-29 07:53:39.000000000

Patch Set 1:

(1 comment)

Line:921, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/WorkingTreeIterator.java -> I saw in debugger in compareMetadata() that we had a case where entry.getLength() != (int) getEntryLength() 

It was 100 in one case and 150 in other. I have no idea where it comes from, but adding the GITLINK condition above resulted in right status.

I think the differences are coming if I modify submodule directory content, e.g. if I do

git clone -b master --recursive

I don't see that submodules are "modified". Once I touch something in submodules, OR do not clone them together with the parent repo, I see that jgit reports this "modified" status while git doesn't.

So this can probably be something related to timestamps of the directory/subtree?

-------------------------------------
author: Zachary Orozco
date: 2016-07-29 11:05:18.000000000

Patch Set 1:

I think it makes a lot of sense not to rely on timestamp of filesystem folders in compareMetadata. I am not sure but I think the problem is more generic and your fix fixes only one case (that's better than nothing). Maybe compareMetadata should return something like "undecided" which will then force content checks. E.g. what is if the workingtree is a folder (not a gitlink anymore) and the index still contains a gitlink (submodule). Then your change wouldn't fix it because you look at the mode of the workingtree only.
I think we need some tests here. I'll also contribute some.

-------------------------------------
author: Zachary Orozco
date: 2016-08-07 18:03:59.000000000

Patch Set 1:

Could you check wheter https://git.eclipse.org/r/#/c/78586/ solves your problem?

-------------------------------------
author: Jayvion Booth
date: 2016-08-25 21:32:12.000000000

Abandoned

In favour of https://git.eclipse.org/r/#/c/78586/

-------------------------------------
