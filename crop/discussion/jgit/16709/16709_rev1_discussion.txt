DESCRIPTION

Close unfinished entries on putArchiveEntry error

If putArchiveEntry encounters an I/O error (for example due to the
reader of an HTTP stream closing the connection), the result is an
archive with unclosed entries, causing TarArchiveOutputStream.finish()
to throw IOException("This archives contains unclosed entries"),
hiding the real IOException.

Wrap putArchiveEntry in a try {} finally block to avoid this.

Change-Id: I328ced19aa8a1888e5353cdbb6106a85fd72d5d7
Signed-off-by: Eden Lin xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-09-23 23:38:00.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/4035/

-------------------------------------
author: Yoselin Hanna
date: 2013-09-23 23:43:01.000000000

Patch Set 1:

(1 comment)

Line:83, org.eclipse.jgit.archive/src/org/eclipse/jgit/archive/TarFormat.java -> I think this is still flawed. If the reason putArchiveEntry() throws is also going to cause closeArchiveEntry() to throw we still lose the original exception and get get something from the closeArchiveEntry() instead.

-------------------------------------
author: Eden Lin
date: 2013-09-23 23:45:00.000000000

Patch Set 1:

(1 comment)

Line:83, org.eclipse.jgit.archive/src/org/eclipse/jgit/archive/TarFormat.java -> Yeah, it's even worse than that. closeArchiveEntry() will fail because there are no unclosed entries.

This check in finish() is obnoxious. I think we'll just have to catch Exception instead of relying on a finally block to close the archive.

-------------------------------------
author: Brenden Conley
date: 2013-09-23 23:46:46.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/4035/ : SUCCESS

-------------------------------------
