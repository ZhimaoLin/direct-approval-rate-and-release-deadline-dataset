DESCRIPTION

Work around "archives contains unclosed entries" check

If we encounter an I/O error while writing an archive (for example
due to the reader of an HTTP stream closing the connection), the
result is an archive with unclosed entries, causing
TarArchiveOutputStream.finish() to throw IOException("This archives
contains unclosed entries"), hiding the real IOException.

The unclosed entries are fine --- the same exception that occured in
the first place will probably prevent closing the entries before
finishing this partial archive that should be discarded anyway.
Use an exception handler to try to close the archive and propagate
the real exception that caused us to enter this code path.

This check means the underlying OutputStream will still not be closed,
so there's still a file handle leak until the OutputStream is
finalized by the garbage collector, but there's nothing simple we can
do about that.

Change-Id: I328ced19aa8a1888e5353cdbb6106a85fd72d5d7
Signed-off-by: Eden Lin xxx@xxx.xxx


COMMENTS

author: Eden Lin
date: 2013-09-23 23:57:05.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2013-09-23 23:57:10.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/4037/

-------------------------------------
author: Brenden Conley
date: 2013-09-23 23:57:34.000000000

Patch Set 3: Verified-1

Build Failed 

https://hudson.eclipse.org/egit/job/jgit.gerrit/4037/ : FAILURE

-------------------------------------
author: Eden Lin
date: 2013-09-23 23:59:19.000000000

Patch Set 3: Code-Review-1

(1 comment)

Line:21, /COMMIT_MSG -> Yuck. I think it will be better for me to talk to the commons-compress maintainer about dropping the haveUnclosedEntry check in close().

-------------------------------------
author: Yoselin Hanna
date: 2013-09-24 00:00:32.000000000

Patch Set 3:

(1 comment)

Line:21, /COMMIT_MSG -> Is another option to close the raw OutputStream and just discard the commons compress object?

-------------------------------------
author: Eden Lin
date: 2013-09-24 00:05:56.000000000

Patch Set 3:

(1 comment)

Line:21, /COMMIT_MSG -> Sure. It would be forgoing a chance to rid the world of this awful check in TarArchiveOutputStream.close(), though. :) Patching incoming...

-------------------------------------
