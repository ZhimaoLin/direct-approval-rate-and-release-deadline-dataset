DESCRIPTION

Validate paths during DirCheckout

DirCacheCheckout and CanonicalTreeParser cooperate. CanonicalTreeParser
can detect malformed, potentially malicious tree entries and sets a
flag, while DirCacheCheckout refuses to work with such paths.

Malicious tree entries are ".", "..", ".git" (case insensitive), any
name containing '/' and (on Windows '\') and also (on Windows)
any paths ending in a combination of '.' or space or containing a ':'.
We also forbid all special names like "con" etc on Windows.

Some of the test can execute on any platform by enabling partial
platform emulation.

A new runtime exception, InvalidPathException, is introduced. For
backwards compatibility it extends InvalidArgumentException.

Change-Id: I86199105814b63d4340e5de0e471d0da6b579ead


COMMENTS

author: Juliet Cantu
date: 2011-11-30 07:57:32.000000000

Uploaded patch set 9.

-------------------------------------
author: Brenden Conley
date: 2011-11-30 07:58:40.000000000

Patch Set 9:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1094/ 

-------------------------------------
author: Brenden Conley
date: 2011-11-30 08:02:03.000000000

Patch Set 9: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1094/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2011-11-30 13:06:35.000000000

Patch Set 9: I would prefer that you didn't submit this

(2 inline comments)



Line:496, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> We need a check for invalid pathes also here.

Line:458, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/DirCacheCheckoutTest.java -> that's a test for a checkout when HEAD is not yet set. That kind of checkouts we do e.g. during clone to do the very first checkout.

You should also add a test for standard DirCacheCheckout which happens e.g. during a commit. I would simply do a second commit on refs/heads/master which tries to add malicious pathes. It's completely different code in DirCacheCheckout which is executed then and which is worth to be tested.

-------------------------------------
author: Juliet Cantu
date: 2012-03-20 21:48:26.000000000

Patch Set 9: (2 inline comments)



Line:496, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> Done

Line:458, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/DirCacheCheckoutTest.java -> Is there a checkout during commit?

I'm less concerned about committers shooting themselves in the foot during commit and it's kind-of-hard to do anyway. My concern is with bad stuff coming in from the outside.

Other than that: Done

-------------------------------------
author: Zachary Orozco
date: 2012-03-21 08:27:18.000000000

Patch Set 9: (1 inline comment)



Line:458, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/DirCacheCheckoutTest.java -> No, we don't checkout during commit. What I meant was: Create a second commit object and then check it out. 
What you changed in line 518 of https://git.eclipse.org/r/#/c/4617/12/org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java is not covered by the tests. And that line is called much more often then line 309 for which you provided a test.
If you simply create another commit with bad content and check it out then we cover an important line in DirCacheCheckout (because then HEAD is != null and we do a non-trivial checkout).

-------------------------------------
author: Gerrit Code Review
date: 2012-04-23 18:04:58.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
