DESCRIPTION

Validate paths during DirCheckout

DirCacheCheckout and CanonicalTreeParser cooperate. CanonicalTreeParser
can detect malformed, potentially malicious tree entries and sets a
flag, while DirCacheCheckout refuses to work with such paths.

Malicious tree entries are ".", "..", ".git" (case insensitive), any
name containing '/' and (on Windows '\') and also (on Windows)
any paths ending in a combination of '.' or space.

Some of the test can execute on any platform by enabling partial
platform emulation.

A new runtime exception, InvalidPathException, is introduced. For
backwards compatibility it extends InvalidArgumentException.

Change-Id: I86199105814b63d4340e5de0e471d0da6b579ead


COMMENTS

author: Juliet Cantu
date: 2011-11-15 23:38:20.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2011-11-15 23:43:05.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1026/ 

-------------------------------------
author: Brenden Conley
date: 2011-11-15 23:46:17.000000000

Patch Set 5: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1026/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2011-11-16 10:52:33.000000000

Patch Set 5: Looks good to me, but someone else must approve; IP review completed



-------------------------------------
author: Yoselin Hanna
date: 2011-11-18 22:23:37.000000000

Patch Set 5: I would prefer that you didn't submit this

(3 inline comments)



Line:2, org.eclipse.jgit/src/org/eclipse/jgit/dircache/InvalidPathException.java -> I kind of doubt i have copyright on this class. :-)

Line:354, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/CanonicalTreeParser.java -> I strongly disagree with putting this code into the tree parser. We use this in so many places that are not connected with the local filesystem that are also performance critical that I am concerned about the running time impact this is going to have.

I would instead put this stuff into the DirCacheCheckout code. Maybe you can have isInvalid() on AbstractTreeIterator check the path buffer when its invoked, and DirCacheCheckout calls it only once per path to check that the path buffer is sane before it hands the buffer over to the filesystem?

But don't check the path buffer every time we parse a record from a canonical tree.

Line:664, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/AbstractTreeIterator.java -> Why is this true by default?

-------------------------------------
author: Zachary Orozco
date: 2011-11-21 09:23:35.000000000

Patch Set 5: I would prefer that you didn't submit this

(1 inline comment)



Line:354, org.eclipse.jgit/src/org/eclipse/jgit/treewalk/CanonicalTreeParser.java -> I also think it's better to trigger this path validation only when we want to touch the local filesystem. I checked DirCacheCheckout and found the following places which should be adapted:
- checkoutEntry /* most important */
- doCheckout()   /* when trying to delete files from 'removed' set and when calling mkdirs() for parent-dirs of updated files */
- removeEmptyParents()
- cleanUpConflicts()

-------------------------------------
author: Gerrit Code Review
date: 2012-04-23 18:04:58.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
