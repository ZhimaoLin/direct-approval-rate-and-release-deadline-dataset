DESCRIPTION

PackWriter: Make want/have actual sets

During parsing these are used with contains(). If they are a List
type, the contains operation is not efficient. Some callers such
as UploadPack often pass a List here, so convert to Set when the
type isn't efficient for contains().

Change-Id: If948ae3bf1f46e756bd2d5db14795e12ba7a6207
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2011-08-15 02:34:24.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2011-08-15 02:41:13.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/715/ 

-------------------------------------
author: Brenden Conley
date: 2011-08-15 02:44:27.000000000

Patch Set 3: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/715/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2011-08-15 13:53:36.000000000

Patch Set 3: (1 inline comment)



Line:1262, org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java -> If we want to have Sets then we could also simply change the signature to accept "Set<? extends ObjectID>". This would put the burden of converting Lists to Sets to the caller. But the benefit would be that some callers can create Sets in the first place (instead of first creating Lists and then converting them to Sets). Is it because we have too many callers which have to be adapted or why don't you go this way

-------------------------------------
author: Yoselin Hanna
date: 2011-08-15 17:18:09.000000000

Patch Set 3: (1 inline comment)



Line:1262, org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java -> Ah, you are probably right. These could be changed to sets.

There aren't that many callers inside of JGit, but changing this type from Collection to Set will impact our public API and break it. Are we ready to go to JGit 2.0?

-------------------------------------
author: Zachary Orozco
date: 2011-08-16 12:43:48.000000000

Patch Set 3: (1 inline comment)



Line:1262, org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java -> We are not free anymore to jump to 2.0 anymore, right? But what we could do is to add a method which expects Set's and at least internally only call the new method. When we jump to 2.0 we remove the old  method which expects Collections.

-------------------------------------
author: Douglas Trujillo
date: 2011-08-16 13:53:51.000000000

Patch Set 3: (1 inline comment)



Line:1262, org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java -> I think we should not go for 2.0 now as we want to ship the next release with Indigo SR1 (in mid September). Shipping a version in a SR which isn't compatible with the version in the base release seems wrong to me.

-------------------------------------
author: Yoselin Hanna
date: 2011-08-16 17:08:36.000000000

Patch Set 3: I would prefer that you didn't submit this

(1 inline comment)



Line:1262, org.eclipse.jgit/src/org/eclipse/jgit/storage/pack/PackWriter.java -> Christian is right, we can add a new method that accepts Set here, and keep the Collection version with this auto-convert-to-Set logic in it before invoking the new Set driven version, and mark that Collection xxx@xxx.xxx to be removed in 2.0.

I'll try to rework the patch sometime today and get an updated version uploaded.

-------------------------------------
