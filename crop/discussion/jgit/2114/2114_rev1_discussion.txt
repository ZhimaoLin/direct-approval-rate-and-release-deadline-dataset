DESCRIPTION

Extract pack directory last modified check code

Pulling the last modified checking logic out of ObjectDirectory
makes it possible to reuse this code for other files, such as
the $GIT_DIR/config or $GIT_DIR/packed-refs files.

Change-Id: If2f27a89fc3b7adde7e65ff40bbca5d55b98b772
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2010-12-14 08:24:31.000000000

Patch Set 1: (1 inline comment)

could we add a test for the case when FileSnapshot.isModified() returns false ?

Line:174, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/FileSnapshot.java -> typo: s/the a/a/

-------------------------------------
author: Juliet Cantu
date: 2010-12-14 23:09:04.000000000

Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)



Line:85, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/FileSnapshot.java -> Use SystemReader.

Line:176, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/FileSnapshot.java -> This is three minutes. 

An since FAT is two seconds we require only larger than two seconds. On many file systems that is three seconds, but 2.001 would do.

With a Unit test you would have found this out.

Do we break anything because the ObjectDirectory had two /minutes/ as fudge?

-------------------------------------
author: Yoselin Hanna
date: 2010-12-15 21:07:09.000000000

Patch Set 1: (3 inline comments)



Line:85, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/FileSnapshot.java -> Done

Line:174, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/FileSnapshot.java -> Done

Line:176, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/FileSnapshot.java -> Ah, right.  Good catch.  I'm changing this to 2500 (2.5 seconds).

ObjectDirectory's use of 2 minutes dates back to pre-Eclipse history:

  commit 4c8d63e588212f48e7ebd09580defd9a62c73c61
  Author: Jaycee Hickman xxx@xxx.xxx  Wed Aug 12 12:45:23 2009
  Committer: Juliet Cantu xxx@xxx.xxx  Wed Aug 12 15:24:37 2009
  Original File: org.spearce.jgit/src/org/spearce/jgit/lib/ObjectDirectory.java

  Fix racy condition when a repository is repacked

  If the filesystem clock granularity is sufficiently large enough it
  is possible for a repacking program such as `git repack` to change
  the same directory more than once within the same modification time.

  If JGit were to scan the directory between changes in the same
  clock step it will never see the later edits, because the directory
  modification time has not changed.

  Instead we now keep track of the last time we read the directory.
  If an object cannot be found on disk and the pack directory's last
  modified time is less than 2 minutes since the last time we read
  the directory's contents, we scan it again looking for changes.

  Worst case scenario, JGit will list the pack directory once for
  each requested missing object, until the directory has aged at
  least 2 minutes.  Most repositories modify this directory only a
  few times a week, so this is not an undue burden on the host.

I didn't have a real justification for 2 minutes, it was just a fudge number.  We can probably safely change this to 2.5 seconds.

-------------------------------------
author: Juliet Cantu
date: 2010-12-15 21:36:47.000000000

Patch Set 1: (1 inline comment)



Line:176, org.eclipse.jgit/src/org/eclipse/jgit/storage/file/FileSnapshot.java -> I think it was because updating a pack file might take some time to complete and the check is on the directory. I think that is flawed because we don't write pack files to their final name, and when we rename to the final name, the directory timestamp is modified, so 2 seconds is probably ok here too.

-------------------------------------
