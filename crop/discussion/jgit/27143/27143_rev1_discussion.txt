DESCRIPTION

Adds a getMap() function to LsRemoteCommand.

The call() function of LsRemoteCommand returns Collection<Ref>, while its
internal is using Map<String, Ref> all the time. Sometimes the map is much more
useful to the caller so add a getMap() function to keep the API compatibility.

Change-Id: Icb96b71277d5e2de59872aa777352dedc048c4e3
Signed-off-by: Yuxuan 'fishy' Wang xxx@xxx.xxx


COMMENTS

author: Kayleigh Dennis
date: 2014-05-22 21:06:54.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-05-22 21:19:14.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/5166/

-------------------------------------
author: Brenden Conley
date: 2014-05-22 21:30:15.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/5166/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2014-05-23 09:04:38.000000000

Patch Set 1: Code-Review-1

(1 comment)

Line:170, org.eclipse.jgit/src/org/eclipse/jgit/api/LsRemoteCommand.java -> I like the idea of this change. I am not sure about how it is implemented. Normally our getter's don't have side effects. They are cheap and return either what you have explicitly set with a "setXXX()" method or they return something based on the result of the last call() (see CheckoutCommand.getResult()). Before you do "call()" nothing expensive will happen.

I would suggest to implement it in the same manner. Store the map you determine in call() in a field and implement getMap() as a getter for this field.

You would then have to call:

  new LsRemoteCommand("origin").call().getMap();

-------------------------------------
author: Douglas Trujillo
date: 2014-05-23 12:18:20.000000000

Patch Set 1: Code-Review-1

(2 comments)

Line:168, org.eclipse.jgit/src/org/eclipse/jgit/api/LsRemoteCommand.java -> missing since tag

Line:202, org.eclipse.jgit/src/org/eclipse/jgit/api/LsRemoteCommand.java -> the returned map should be an unmodifiable map to prevent that the caller can tamper with the internal representation

-------------------------------------
author: Kayleigh Dennis
date: 2014-05-23 17:49:54.000000000

Patch Set 1:

(3 comments)

PTAL, thanks!

Line:168, org.eclipse.jgit/src/org/eclipse/jgit/api/LsRemoteCommand.java -> Done

Line:170, org.eclipse.jgit/src/org/eclipse/jgit/api/LsRemoteCommand.java -> Maybe getMap is a bad name. This is not a getter and it doesn't make much sense to be a getter. Do you think map is a better name?

Line:202, org.eclipse.jgit/src/org/eclipse/jgit/api/LsRemoteCommand.java -> Done

-------------------------------------
author: Douglas Trujillo
date: 2014-05-23 22:26:08.000000000

Patch Set 1:

(1 comment)

Line:170, org.eclipse.jgit/src/org/eclipse/jgit/api/LsRemoteCommand.java -> this can't be done by chaining method calls since call() returns Collection<Ref> and not LsRemoteCommand

instead we could do it this way:

 LsRemoteCommand c = new LsRemoteCommand("origin");
 c.call();
 Map m = c.getMap();

-------------------------------------
