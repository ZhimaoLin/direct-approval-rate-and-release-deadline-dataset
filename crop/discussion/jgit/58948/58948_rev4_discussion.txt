DESCRIPTION

Bitmap builder: avoid synthetic accessors

I ran JProfiler on the pack bitmap index code. I observed that ~64% of the
time spent in PackWriterBitmapPreparer.selectCommits() was spent in
BitmapIndexImpl$CompressedBitmapBuilder.contains(), and that method showed
multiple hotspots in .access$N synthetic functions for nested classes.

By removing the "private" visibility modifiers in nested classes, the time in
CompressedBitmapBuilder.contains() went from ~64% to ~24%. Over five runs,
the total time for "selecting bitmaps" for the msm-3.10 Linux repository went
from 441.0 to 429.2 seconds. That isn't huge, but it is a fairly cheap win.

Remove getter accessors for several of these nested classes. Currently some
nested classes provide getters on private members while others allow direct
access of members by outer classes. Since these are primarily value types
used in computationally intenstive parts of code, I propose migrating to
a style of preferring direct access for members of these nested value types.

Change-Id: Idfbdecd63f12936f74637a2d57e117ec095c8a37
Signed-off-by: Ariel Sawyer xxx@xxx.xxx


COMMENTS

author: Ariel Sawyer
date: 2015-10-27 15:59:02.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2015-10-27 15:59:08.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7302/

-------------------------------------
author: Brenden Conley
date: 2015-10-27 16:07:29.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7302/ : SUCCESS

-------------------------------------
