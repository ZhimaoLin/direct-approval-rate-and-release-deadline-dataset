DESCRIPTION

Force update of tag ref on fetch instead of rejecting

The C Git behavior when a tag ref is updated on fetch is to write the
new ref. JGit rejected the update. This change makes JGit follow the C
Git behavior.

Example:

    % mkdir a
    % cd a
    % git init -q
    % touch test.txt
    % git add test.txt
    % git commit -q -m 'Initial'
    % git tag v1
    % cd ..
    % git clone -q a b
    % cd a
    % echo Test > test.txt
    % git commit -q -a -m 'Second'
    % git tag -f v1
    Updated tag 'v1' (was bc85c08)
    % cd ../b
    % git fetch --tags
     - [tag update]      v1         -> v1

Bug: 388095
Change-Id: I69404383068bf877faacfb28019f331ca2625803
Signed-off-by: Danika Greer xxx@xxx.xxx


COMMENTS

author: Danika Greer
date: 2012-08-27 12:48:04.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2012-08-27 12:48:09.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2181/ 

-------------------------------------
author: Danika Greer
date: 2012-08-27 12:48:32.000000000

Patch Set 3:

Rebased, add reference to new bug 388095.

-------------------------------------
author: Brenden Conley
date: 2012-08-27 12:53:45.000000000

Patch Set 3: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2181/ : SUCCESS

-------------------------------------
author: Carlie Harper
date: 2012-08-31 13:27:44.000000000

Patch Set 3: Looks good to me, but someone else must approve

This works well. However, I'm not completely sure if this is the right place to fix it. Another place could be setting the force flag in FetchProcess.createUpdate

Btw:
The scenario you describe in the commit message already works with egit/jgit. For lightweight tags a fast-forward update is possible. But I think this is a side-effect of the fact that in TrackingRefUpdate$Command(ReceiveCommand).updateType(RevWalk) lightweight tags are instances of RevCommit. 

This method seems to be broken for Annotated tags. Because of that there is the misleading 'non-fast-forward' tooltip mentioned in the bug.

-------------------------------------
author: Carlie Harper
date: 2012-08-31 15:17:46.000000000

Patch Set 3: I would prefer that you didn't submit this

A normal fetch from upstream must not update any tags if there is no explicit +refs/tags/*:refs/tags/* in the config. 

We do not have a menu entry for fetch --tags yet. This seems to do a force update.

-------------------------------------
author: Danika Greer
date: 2012-09-01 11:54:39.000000000

Patch Set 3:

Yes, the problem is only with annotated tags. Should have used annotated tags in the example and mentioned in the commit message, sorry about that.

> A normal fetch from upstream must not update any tags if there is no explicit +refs/tags/*:refs/tags/* in the config.

So then the real problem is that the fetch tries to update the tag (when it shouldn't) and then results in a REJECTED? When I don't specify --tags to C Git, I don't get a reject.

I could work on that if that is the accepted solution.

-------------------------------------
author: Carlie Harper
date: 2012-09-03 07:17:06.000000000

Patch Set 3:

> So then the real problem is that the fetch tries to
> update the tag (when it shouldn't) and then results in a
> REJECTED? When I don't specify --tags to C Git, I don't
> get a reject.

Yes, I understand it that way.  When I don't specify --tags to C Git, C Git does not update existing tags, it just fetches new tags in the following case: "if the repository has objects that are pointed by remote tags that it does not yet have, then fetch those missing tags" [1].

> I could work on that if that is the accepted solution.

That would be great.

Another problem we seem to have is that we do not update tags if we do specify +refs/tags/*:refs/tags/*, either explicitly in the Push... dialog or in the git config.

[1]http://www.kernel.org/pub/software/scm/git/docs/git-fetch.html

-------------------------------------
author: Danika Greer
date: 2012-09-23 22:23:11.000000000

Patch Set 3: Abandoned

Abandon this version for now as per discussion, see bug for updates.

-------------------------------------
