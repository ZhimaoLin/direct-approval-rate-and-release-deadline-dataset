DESCRIPTION

Add setTargetBranch in RepoCommand.

This will allow us to write the super project in a branch other than
master.

Change-Id: I578ed9ecbc6423416239e31ad644531dae9fb5c3
Signed-off-by: Yuxuan 'fishy' Wang xxx@xxx.xxx


COMMENTS

author: Kayleigh Dennis
date: 2015-07-10 05:15:05.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2015-07-10 05:20:41.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6896/

-------------------------------------
author: Brenden Conley
date: 2015-07-10 05:27:39.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6896/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2015-07-10 17:17:17.000000000

Patch Set 2:

(8 comments)

Line:679, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> Is this the same as used in some other tests? Would it make sense to have a method or constant to allow sharing them?

Line:685, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> (not about this change) This would be easier to read using String.format:

 String xmlContent = String.format(
     "<?xml ..."
     + "<manifest>\n"
     + "<remote ..."
     + ...
     + "<project path=\"foo\" name=\"%s\" />\n"
     + "</manifest>",
     defaultUri);

Line:690, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> (style nit)
Other tests put this method call on a separate line, indented by one tab.

Line:693, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> (optional) One way to do this would be to do a RepoCommand with the default target branch and a different target branch and confirm that the resulting trees are identical (i.e., compare the tree object id).

That way, it avoids the complexity of having to remember what details of the output to check --- it checks that the output is exactly the same as when no target branch was specified, just in a different branch.

Line:300, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> needs <p> to separate paragraphs

Line:303, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> (optional) HEAD was more intuitive.

Line:305, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Is there a more intuitive behavior when I set the target branch with a non-bare repository? Should it error out in call()?

Line:311, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> (not about this change) current style in jgit is to leave off the "final" in small methods like this one

-------------------------------------
author: Kayleigh Dennis
date: 2015-07-10 18:41:20.000000000

Patch Set 2:

(8 comments)

Line:679, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> This one in particular is the same as testBareRepo, but in general they are different case by case, so sharing them doesn't make much sense.

Line:685, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> When there are more than 1 %s to fill, it will be not so easy to read on which %s is the first parameter, or to easily answer "is this the 1st or 2nd %s?", so I still slightly prefer using append.

Line:690, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> Done

Line:693, org.eclipse.jgit.test/tst/org/eclipse/jgit/gitrepo/RepoCommandTest.java -> Done

Line:300, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Done

Line:303, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Done

Line:305, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> It will be ignored, similar to setAuthor.

Line:311, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Done

-------------------------------------
