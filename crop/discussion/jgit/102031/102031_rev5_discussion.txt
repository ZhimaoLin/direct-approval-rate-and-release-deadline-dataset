DESCRIPTION

RefDirectory: Retry acquiring ref locks with backoff

If a repo frequently uses PackedBatchRefUpdates, there is likely to be
contention on the packed-refs file, so it's not appropriate to fail
immediately the first time we fail to acquire a lock. Add some logic to
RefDirectory to support general retrying of lock acquisition.

Currently, there is a hard-coded wait starting at 100ms and backing off
exponentially to 1600ms, for about 3s of total wait. This is no worse
than the hard-coded backoff that JGit does elsewhere, e.g. in
FileUtils#delete. One can imagine a scheme that uses per-repository
configuration of backoff, and the current interface would support this
without changing any callers.

Change-Id: I4764e11270d9336882483eb698f67a78a401c251


COMMENTS

author: Santos Moore
date: 2017-07-28 11:53:31.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2017-07-28 11:53:38.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10713/

-------------------------------------
author: Brenden Conley
date: 2017-07-28 12:18:08.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10713/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2017-07-28 14:02:59.000000000

Patch Set 5: Code-Review+2

-------------------------------------
author: Santos Moore
date: 2017-07-28 14:06:04.000000000

Change has been successfully merged by Santos Moore

-------------------------------------
author: Santos Moore
date: 2017-07-28 15:01:24.000000000

Patch Set 5:

> > A follow-on change could be to add a ReentrantLock
 >
 > Good idea. This will absolutely help avoid retries in the Gerrit
 > Code Review case.

Done in https://git.eclipse.org/r/102162

-------------------------------------
