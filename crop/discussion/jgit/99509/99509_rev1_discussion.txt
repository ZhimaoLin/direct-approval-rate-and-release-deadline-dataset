DESCRIPTION

Support --match functionality in DescribeCommand

A `match()` method has been added to the DescribeCommand, allowing
users to specify a `glob(7)` matcher as per Git convention.

Bug: 518377
Change-Id: Ib4cf34ce58128eed0334adf6c4a052dbea62c601
Signed-off-by: Kylee Skinner xxx@xxx.xxx


COMMENTS

author: Kylee Skinner
date: 2017-06-16 14:31:39.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-06-16 14:31:45.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10357/

-------------------------------------
author: Brenden Conley
date: 2017-06-16 14:42:04.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10357/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2017-06-16 22:25:57.000000000

Patch Set 1: Code-Review-1

(4 comments)

Could you also enhance org.eclipse.jgit.pgm.Describe (in another patch) to add support for this option also to the JGit command line ?

Line:193, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> s/String/String.../

git describe allows to define multiple patterns, so we should use varargs here and store the result in a set

Line:193, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> s/match/pattern/ ?

Line:193, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> xxx@xxx.xxx 4.9 tag at the end of javadoc for new API method

Line:121, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/DescribeCommandTest.java -> how about tests using the '?' wildcard ?
Not sure if PathMatcher support '?' wildcards

-------------------------------------
author: Elise Key
date: 2017-06-17 00:53:53.000000000

Patch Set 1:

(1 comment)

Line:277, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> unrelated to this patch, but this is a strange variable name.

-------------------------------------
author: Kylee Skinner
date: 2017-06-19 09:04:19.000000000

MISMATCHED INLINE COMMENT
Line:121, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/DescribeCommandTest.java -> I have added some tests, you're absolutely right that we should prove this.

FYI Under the covers: PathMatcher, in the complex case, creates a WildCardMatcher, which in turn converts the glob expression into a regex Pattern.

See `org.eclipse.jgit.ignore.internal.Strings.convertGlob()` for how this is done.

-------------------------------------
