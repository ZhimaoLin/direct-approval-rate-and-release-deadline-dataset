DESCRIPTION

Use submodule name instead of path as key in config

When a submodule is moved, the "name" field remains the same, while
the "path" field changes.  Git uses the "name" field in .git/config
when a submodule is initialized, so this patch makes JGit do so too.

Change-Id: I48d8e89f706447b860c0162822a8e68170aae42b
Signed-off-by: Carissa Dunn xxx@xxx.xxx


COMMENTS

author: Carissa Dunn
date: 2017-10-19 21:30:25.000000000

Uploaded patch set 2: Patch Set 1 was rebased.

-------------------------------------
author: Brenden Conley
date: 2017-10-19 21:30:32.000000000

Patch Set 2:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/11449/

-------------------------------------
author: Brenden Conley
date: 2017-10-19 21:54:07.000000000

Patch Set 2: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/11449/ : SUCCESS

-------------------------------------
author: Alayna Houston
date: 2017-10-19 22:35:56.000000000

Patch Set 2:

(2 comments)

How does this affect:

* working with new JGit with a repo containing submodules inited by older JGit?
* working with older JGit with a repo containing submodules inited by newer JGit?

Line:646, org.eclipse.jgit/src/org/eclipse/jgit/submodule/SubmoduleWalk.java -> Shouldn't this become

  getModuleName(path)

now? (And the comment above be deleted.)

And what about repositories with submodules inited by an older JGit that _did_ use the path as the subsection key? Do we need a migration for this?

Line:673, org.eclipse.jgit/src/org/eclipse/jgit/submodule/SubmoduleWalk.java -> Likewise here.

-------------------------------------
author: Carissa Dunn
date: 2017-10-19 22:44:06.000000000

Patch Set 2:

> How does this affect:
 > 
 > * working with new JGit with a repo containing submodules inited by
 > older JGit?
 > * working with older JGit with a repo containing submodules inited
 > by newer JGit?

I would say that compatibility with git is more important than compatibility with an older jgit.  Anyway, you can always re-initialize the submodule if necessary.  And there is no true way to migrate, because we don't know what the section name was supposed to be in the general case.  Keep in mind that git config doesn't change when you change branches, so it's possible that the correct value for one branch is wrong for another.  I think that it's conceivable that this bug fix would make someone's life a little harder, but I would guess that the actual aggregate pain that it will cause is significantly less than the pain that would be cause by trying to avoid it.

-------------------------------------
