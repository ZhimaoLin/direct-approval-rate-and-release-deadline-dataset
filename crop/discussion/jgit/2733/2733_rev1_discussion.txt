DESCRIPTION

Abort merge when file to be checked out or modified is dirty

In case a file needs to be checked out (from THEIRS) or modified (with
merged content) during a merge operation, it has to be checked if the
worktree version of this file is dirty. If this is true, merge shall
fail.

Change-Id: I17c24845584700aad953c3d4f2bea77a0d665ec4
Signed-off-by: Reed Meza xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2011-03-16 11:12:28.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/96/ 

-------------------------------------
author: Brenden Conley
date: 2011-03-16 11:14:39.000000000

Patch Set 1: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/96/ : SUCCESS

-------------------------------------
author: Reed Meza
date: 2011-03-16 11:16:50.000000000

Patch Set 1:

Awaiting comments

-------------------------------------
author: Zachary Orozco
date: 2011-03-16 23:06:17.000000000

Patch Set 1: I would prefer that you didn't submit this; IP review completed

(3 inline comments)

I was near to give up reviewing this. I spent more than one hour looking at this before I got the point. 

You did a few refactorings (extracting blocks into own methods) and moving code around alltogether which made it
hard for me to find out where you really changed stuff semantically. If we are touching these core parts like merge algorithm I suggest that we really split pure refactorings/cleanup into an own proposal and do the real fixes in a seperate one. I bet that this is much faster to review although we have one proposal more.

-------------------------------------
author: Reed Meza
date: 2011-03-17 09:59:59.000000000

Patch Set 1: (3 inline comments)

Sorry for mixing things up. There now is a separate change for the refactorings (Ieb089668834d0a395c9ab192c555538917dfdc47).

Line:739, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/MergeCommandTest.java -> Okay, I understand your concern. From my point of view writing tests becomes easier if you have more powerful utility methods. When you only have to change a parameter to create a new test, it becomes possible to increase the total number of tests significantly. Also refactoring tests is easier, I think. But reviewing these tests then becomes harder, that is true. So I have inlined most of these helper methods again and tried to come up with a compromise.

Line:7, /COMMIT_MSG -> Yes, that's correct. I have changed the message now so that it only refers to the fixed scenario.

Line:400, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> Yes, this is the fix. Sorry for all the confusing stuff... I put the refactorings into a separate commit now.

-------------------------------------
author: Gerrit Code Review
date: 2011-03-18 15:34:16.000000000

Change cannot be merged due to unsatisfiable dependencies.

The following dependency errors were found:

* Depends on patch set 1 of Ieb089668, however the current patch set is 2.

Please rebase the change and upload a replacement commit.

-------------------------------------
author: Zachary Orozco
date: 2011-03-16 23:06:16.000000000

MISMATCHED INLINE COMMENT
Line:739, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/MergeCommandTest.java -> Maybe that's only my personal taste but I think that these kind of methods make the test code harder to read then before. The method name is already very long and it still doesn't explain everything you do ("modifiying file a" - took me some time to understand the test case because I overlooked this method touches a). I prefer to have longer test-methods using utility methods with smaller scope then this long utility methods. How about modify(path) (creating-or-modifiying a file), checkout(branch) (creating (if not already there) and switching to a branch), and commit() (adding everything before).

-------------------------------------
author: Zachary Orozco
date: 2011-03-16 23:06:16.000000000

MISMATCHED INLINE COMMENT
Line:7, /COMMIT_MSG -> This commit message led me in the wrong direction because the merge was failing when merge wanted to modify a dirty file. What you wanted to do is to a the same test for the checkout-from-theirs case.

-------------------------------------
author: Zachary Orozco
date: 2011-03-16 23:06:16.000000000

MISMATCHED INLINE COMMENT
Line:400, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> Do I guess right that this if-statement is the where the real fix is? All the other modifications in this file are cleanups/refactorings/style nits, right? At least all youre new tests succeed if I only add add a test for a dirty-worktree file in case of a checkout from theirs.

-------------------------------------
