DESCRIPTION

Add constructor Git(File gitDir) to API

Our API in org.eclipse.jgit.api was forcing us to specify an
Repository object. It's much more convenient to have an additional
constructor which accepts a File instance pointing to gitdir.

Change-Id: I5f6b8b7252ec2f608a497905e5bbc4e6f4ee81a1
Signed-off-by: Zachary Orozco xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2011-03-28 13:52:23.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/185/ 

-------------------------------------
author: Brenden Conley
date: 2011-03-28 13:54:41.000000000

Patch Set 1: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/185/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2011-03-28 14:15:42.000000000

Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)



Line:133, org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java -> Is the .git folder always the easiest path to give here? I would expect applications to want to pass something like new File(".") and have us automatically get the repository for the current working directory. Which starts to imply using a FileRepositoryBuilder here rather than assuming the argument is exactly the $GIT_DIR.

-------------------------------------
author: Zachary Orozco
date: 2011-03-29 10:59:17.000000000

Patch Set 1: Do not submit

(1 inline comment)



Line:133, org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java -> Hmmm, you are right. The logic which you miss is already there in Git.init().setDirectory(...).call().
But then: why do I need this constructor if InitCommand does everything? I will abandon this one.

-------------------------------------
author: Zachary Orozco
date: 2011-03-29 11:00:18.000000000

Patch Set 1: Abandoned

abandoned because the same functionality can be reached by
Git.init().setDirectory(...).call()

-------------------------------------
author: Yoselin Hanna
date: 2011-03-29 14:04:40.000000000

Patch Set 1: (1 inline comment)



Line:133, org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java -> Using Git.init().setDirectory().call() to obtain a Git instance from a File is awkward at best.

I think we should do:

  public static Git open(File path) {
    return Git.init().setDirectory(path).call();
  }

  public static Git wrap(Repository repo) {
    return new Git(repo);
  }

in this class.

-------------------------------------
author: Zachary Orozco
date: 2011-03-29 14:35:48.000000000

Patch Set 1: (1 inline comment)



Line:133, org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java -> I also like open() and wrap() because they express nicely the side-effects (you would not expect any git repo creation in this case). I like them as static methods (and not as commands) because there is no real equivalent for such op's in native git command line.

But when you really want to create a new git repo in an empty dir on the filesystem I think going through git.init()... is quite consistent - that's what I would do with native git. Therefore I personally would like to add a check to open() to make sure the repo does not yet exist.

I'll suggest something like that in a new change

-------------------------------------
