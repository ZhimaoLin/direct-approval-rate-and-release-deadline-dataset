DESCRIPTION

Fixed checkouts when HEAD is ignored

In the case where DirCacheCheckout was used to checkout a tree
without taking HEAD into account (e.g. during a clone or hard reset)
we didn't handle conflicts correctly. E.g. if there are conflicts
(entries with stage != 0) in the index and we tried to hard reset
we have been processing the conflicting pathes multiple times (once
for every stage). With this fix we will update the index with the
entry from the "merge" state (the state we want checkout) when we
detect existing conflicts.

Change-Id: Iffbddccaa588cf0d1460a5e44dabaf540d996e26
Signed-off-by: Zachary Orozco xxx@xxx.xxx


COMMENTS

author: Willow Cantrell
date: 2010-11-12 08:05:06.000000000

Patch Set 1: Looks good to me, but someone else must approve

Works fine with the RebaseCommand.

-------------------------------------
author: Yoselin Hanna
date: 2010-11-12 16:50:03.000000000

Patch Set 1: I would prefer that you didn't submit this

(3 inline comments)



Line:338, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> The classic way to write this loop is:

 for (int i = removed.size() - 1; i >= 0; i--) {
   String r = removed.get(i);

That way you save a subtraction operation during each iteration.  And that form is what most C programmers use to go backwards (because they want to save the subtraction), so its what most people reading a backwards loop expect to see.

This form I had never seen before, it took me a while to process the loop condition and conclude it was correct.  :-(

Line:341, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> Why isn't this expression changed to be:

  if (!file.delete() && file.exists())

?  If the file doesn't delete and doesn't exist, why shouldn't we fall through to the else case below for isSamePrefix() removeEmptyParents?  If the file deletion failed because its already gone, then the parent might be empty and we might be able to remove it.

Line:160, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/DirCacheCheckoutTest.java -> getId() here isn't necessary, RevTree is an ObjectId.

-------------------------------------
author: Zachary Orozco
date: 2010-11-12 22:37:26.000000000

Patch Set 1: (3 inline comments)



Line:338, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> I fully agree. I can't explain why that kind of loop went in. I'll repair it.

Line:341, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> Done

Line:160, org.eclipse.jgit.test/tst/org/eclipse/jgit/lib/DirCacheCheckoutTest.java -> Done

-------------------------------------
author: Gerrit Code Review
date: 2010-11-13 00:10:06.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
