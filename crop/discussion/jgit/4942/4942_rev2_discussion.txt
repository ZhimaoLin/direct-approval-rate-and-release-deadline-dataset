DESCRIPTION

RFC Implement core.safecrlf handling

When core.safecrlf is true any attempt to add a text file containing
a mix of CRLF and LF line ending will fail. Only CRLF or only LF
will be accepted, resulting in a clean up of the blob on checkout on
a system with CRLF line endings.

Change-Id: I6fa40b496047564317e7721ce7583d5f16a0fd74


COMMENTS

author: Juliet Cantu
date: 2012-09-06 11:59:13.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2012-09-06 12:04:19.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2219/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-06 12:09:12.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2219/ : SUCCESS

-------------------------------------
author: Juliet Cantu
date: 2012-09-06 15:54:15.000000000

Patch Set 2:

I have not done any user level testing on this after the rebase.

-------------------------------------
author: Douglas Trujillo
date: 2012-09-06 21:13:46.000000000

Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)

- applications hitting the conversion exception will probably always want to get the file path for the offending file causing this.
- any idea how to implement safecrlf=warn with this implementation ?

Line:273, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> when trying to commit a file with mixed line endings I end up here and the exception gets wrapped as an internal exception EGit can't handle properly so the underlying UnsafeCrlfException shouldn't be masked and it should also identify the path of the file causing the trouble so that we can give meaningful feedback

Line:220, org.eclipse.jgit/src/org/eclipse/jgit/api/AddCommand.java -> when trying to stage a file with mixed line endings from the staging view I end up here and this throws  UnsafeCRLFException without mentioning the path of the offending file causing this exception, I think we always need the path of the file causing the exception in order to provide useful feedback to the user.

-------------------------------------
author: Juliet Cantu
date: 2012-09-06 22:27:59.000000000

Patch Set 2:

Forgot about the warn. No idea.

-------------------------------------
author: Juliet Cantu
date: 2012-09-09 15:14:00.000000000

Patch Set 2:

Maybe we should report a list like we with conflicts for both warn and true.

That list could then be reported via the problem view in Eclipse.

I'm not sure how useful this option is without the ability to define excpeptions via gitattributes.

-------------------------------------
author: Douglas Trujillo
date: 2012-09-10 07:20:00.000000000

Patch Set 2:

> Maybe we should report a list like we with conflicts for both warn and true.
> That list could then be reported via the problem view in Eclipse.

good idea

> I'm not sure how useful this option is without the ability to define excpeptions via gitattributes.

Miles Parker mentioned on bug 342372 that Tasktop plans to contribute gitattributes support, so maybe this isn't too far away

-------------------------------------
author: Elise Key
date: 2017-08-29 13:16:32.000000000

Abandoned

Abandoning after 1 year or more of inactivity.

If this change is still needed, please restore it.

-------------------------------------
