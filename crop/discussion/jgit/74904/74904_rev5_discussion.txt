DESCRIPTION

Time based eviction strategy for repository cache

When Repository.close() decrements the useCount to 0 currently the cache
immediately evicts the repository from WindowCache and RepositoryCache.
This leads to I/O overhead on busy repositories because pack files and
references are inserted and deleted from the cache frequently.

This commit defers the eviction of a repository from the caches until
last use of the repository is older than time to live. The eviction is
handled by a background task running periodically.

Add two new configuration parameters:
* core.repositoryCacheExpireAfter: cache entries are evicted if the
cache entry wasn't accessed longer than this time in milliseconds
* core.repositoryCacheCleanupDelay: defines the interval in milliseconds
for running a background task evicting expired cache entries. If set to
-1 the delay is set to min(repositoryCacheExpireAfter, 10 minutes). If
set to 0 the time based eviction is switched off and no background task
is started. If time based eviction is switched off the JVM can still
evict cache entries if heap memory is running low.

Change-Id: I4a0214ad8b4a193985dda6a0ade63b70bdb948d7
Also-by: Douglas Trujillo xxx@xxx.xxx
Also-by: Mitchell Griffith xxx@xxx.xxx
Also-by: Dillon Cross xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2016-06-09 23:38:13.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2016-06-09 23:38:19.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8499/

-------------------------------------
author: Brenden Conley
date: 2016-06-09 23:49:47.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8499/ : SUCCESS

-------------------------------------
author: Mitchell Griffith
date: 2016-06-10 12:44:42.000000000

Patch Set 5: Code-Review-1

(1 comment)

Line:100, org.eclipse.jgit/src/org/eclipse/jgit/lib/RepositoryCacheConfig.java -> This is wrong, it should be cleanupDelayMillis >= 0 otherwise it's impossible to disable clean up. Currently, if we set it to 0(NO_CLEANUP), getCleanupDelay returns 1/10 of expireAfterMillis instead of 0.

Follow up change(https://git.eclipse.org/r/#/c/75060) is adding test cases and fix the problem. Please squash it into this change.

-------------------------------------
author: Dillon Cross
date: 2016-06-13 09:06:53.000000000

Patch Set 5:

(1 comment)

Line:100, org.eclipse.jgit/src/org/eclipse/jgit/lib/RepositoryCacheConfig.java -> Done

-------------------------------------
author: Gerrit Code Review
date: 2016-07-12 13:16:36.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
