DESCRIPTION

Steal work from delta threads to rebalance CPU load

If the configuration wants to run 4 threads the delta search work
is initially split somewhat evenly across the 4 threads. During
execution some threads will finish early due to the work not being
split fairly, as the initial partitions were based on object count
and not cost to inflate or size of DeltaIndex.

When a thread finishes early it now tries to take 50% of the work
remaining on a sibling thread, and executes that before exiting.
This repeats as each thread completes until a thread has only 1
object remaining.

Change-Id: I65e45422edd96778aba4b6e5a0fd489ea48e8ca3


COMMENTS

author: Yoselin Hanna
date: 2013-04-09 01:40:44.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-04-09 01:40:49.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3322/ 

-------------------------------------
author: Brenden Conley
date: 2013-04-09 01:45:51.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3322/ : SUCCESS

-------------------------------------
