DESCRIPTION

Add EOL stream type detection to TreeWalk

TreeWalk provides the new method getEolStreamType. This new method can
be used with EolStreamTypeUtil in order to create a wrapped InputStream
or OutputStream when reading / writing files. The implementation
implements support for the git configuration options core.crlf, core.eol
and the .gitattributes "text", "eol" and "binary"

CQ: 10896
Bug: 486563
Change-Id: Ie4f6367afc2a6aec1de56faf95120fff0339a358
Signed-off-by: Nicolas Patterson xxx@xxx.xxx
Signed-off-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Nicolas Patterson
date: 2016-03-01 15:45:12.000000000

Uploaded patch set 18.

-------------------------------------
author: Brenden Conley
date: 2016-03-01 15:45:18.000000000

Patch Set 18:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8144/

-------------------------------------
author: Brenden Conley
date: 2016-03-01 16:01:47.000000000

Patch Set 18: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8144/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2016-03-02 11:39:26.000000000

Patch Set 18:

(6 comments)

Line:129, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> I'll upload a patchset with only one method to generate tests data. Just to make the patchset smaller.

Line:155, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> I'll upload a version where we have speaking names instead of file1,file2,file3.

Line:170, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> I'll upload a version where we have speaking names instead of entry1,entry2,entry3.

Line:179, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> I'll upload a version with a helper method which decreases the size of this class

Line:606, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> By first deleting the working tree files and then do a hard reset causes some problems for tests which I would like to add. The reset will leave us with workingtree files and an index-file which has the same last-modification time. This causes that all index entries are smudged (lenght is set to 0). Maybe that was the reason you had an fstick() in the code (which I removed :-(). But an fstick in createAndGetFile() doesn't help. The reset --hard in an empty working tree will always end up in smudged index. One solution which I'll upload is to do an "git add ." in the end. This forces JGit to write a new index which has a younger modification timestamp than the files.

I'll upload such a version.

Line:662, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> using walk.getObjectId(1) is ok to find out the objectid stored in the index. But I would like to be very explicit and reading the indexdata by a seperate DirCache instance. I'll upload such a version

-------------------------------------
author: Zachary Orozco
date: 2016-03-02 11:46:34.000000000

Patch Set 18:

Previously there existed some tricky bugs because the index did not contain the right size. When filters or eol handling is in the game then directly after and "git add" the index contains different content in the filesystem. Then index entries objectid should of course point to the content which is stored in the git object database. But the index entries length field has to match the filesystem content. An index entry is therefore not consistent because contentid and length are releated to different contents. I would like to add test which make sure that the index entry length field is set correctly when eol conversion is in place.

-------------------------------------
author: Gerrit Code Review
date: 2016-03-07 18:08:35.000000000

Change has been successfully merged into the git repository by Zachary Orozco

-------------------------------------
