DESCRIPTION

Add EOL stream type detection to TreeWalk

TreeWalk provides the new method getEolStreamType. This new method can
be used with EolStreamTypeUtil in order to create a wrapped InputStream
or OutputStream when reading / writing files. The implementation
implements support for the git configuration options core.crlf, core.eol
and the .gitattributes "text", "eol" and "binary"

CQ: 10896
Bug: 486563
Change-Id: Ie4f6367afc2a6aec1de56faf95120fff0339a358
Signed-off-by: Nicolas Patterson xxx@xxx.xxx
Signed-off-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Zachary Orozco
date: 2016-03-04 13:49:59.000000000

Uploaded patch set 21.

-------------------------------------
author: Brenden Conley
date: 2016-03-04 13:50:05.000000000

Patch Set 21:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8151/

-------------------------------------
author: Brenden Conley
date: 2016-03-04 14:06:32.000000000

Patch Set 21: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8151/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2016-03-04 14:09:56.000000000

Patch Set 21:

(1 comment)

Line:359, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> Somehow native git expects something different here. Native git will checkout CONTENT_CRLF and index should be CONTENT_LF. I do not yet know why ... but somehow we behave differently from native git.

-------------------------------------
author: Nicolas Patterson
date: 2016-03-04 14:57:03.000000000

Patch Set 21:

(1 comment)

Line:359, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> This is *exactly* the forceEol on checkout issue we talked about earlier with the jgit.forceEol flag. Git in general is imho not specific what to do in this case. Therefore I assume native git as being the template implementation and changed EolStreamTypeUtil accordingly. I added the private flag EolStreamTypeUtil.FORCE_EOL_LF_ON_CHECKOUT=false. This fixes the tests and matches with our new knowledge of handling that use case.

-------------------------------------
author: Zachary Orozco
date: 2016-03-07 16:07:22.000000000

Patch Set 21:

(1 comment)

Line:359, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> That's ok for me now. I was a little bit surprised that although you added already a lot of tests I had to add another complex test to see the difference between JGit and native git. All the previously existing tests went through fine and showed that JGit behaves like native git.

Anyhow, from my side looks good now. Let's bring it in.

-------------------------------------
author: Douglas Trujillo
date: 2016-03-07 16:11:27.000000000

Patch Set 21:

(1 comment)

Line:359, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/EolRepositoryTest.java -> +1 for bringing this in if all tests succeed and you think we cover the important use cases

a big thank you to Ivan for fixing the most wanted JGit bug with this work :-)

-------------------------------------
author: Gerrit Code Review
date: 2016-03-07 18:08:35.000000000

Change has been successfully merged into the git repository by Zachary Orozco

-------------------------------------
