DESCRIPTION

Add pre-receive hook to require signed push

There is no standard C git config option for this behavior, so we do
not yet provide a standard way to configure it. If such an option is
added upstream, this can be easily wired in via SignedPushConfig. For
now, callers have to manually add the hook instance to the pre-receive
hook chain.

Change-Id: Ia7d2e8427f7a046615e39f48f556727c11b37ac1


COMMENTS

author: Santos Moore
date: 2015-06-29 19:29:43.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-06-29 19:29:50.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6797/

-------------------------------------
author: Eden Lin
date: 2015-06-29 19:34:03.000000000

Patch Set 1:

(1 comment)

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/transport/SignedPushRequiredHook.java -> Please add some documentation about how this is intended to be used.

Is it a demo? Is it a way to get clients in the habit of signing pushes before a site operator is ready to turn on verification? Or is the idea that another PreReceiveHook verifies the signature, after this one checks that the signature is present? What is the advantage of having two hooks instead of the one that verifies the signature being responsible for checking that it is present?

-------------------------------------
author: Brenden Conley
date: 2015-06-29 19:36:41.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6797/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2015-06-29 19:37:47.000000000

Patch Set 1: Code-Review+2

-------------------------------------
author: Santos Moore
date: 2015-06-29 19:43:44.000000000

Patch Set 1:

(1 comment)

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/transport/SignedPushRequiredHook.java -> > Is it a demo?

No.

> Is it a way to get clients in the habit of signing pushes before a site operator is ready to turn on verification?

No.

> Or is the idea that another PreReceiveHook verifies the signature, after this one checks that the signature is present?

Yes.

> What is the advantage of having two hooks instead of the one that verifies the signature being responsible for checking that it is present?

a. The verifier hook can be a singleton rather than e.g. taking a boolean parameter in its constructor indicating whether it should require a push cert.

b. This hook can live in JGit even before we have the crypto libraries to support the verifier hook.

Neither is a very strong argument.

Another alternative is to go back to putting this option in SignedPushConfig despite not existing upstream.

-------------------------------------
author: Eden Lin
date: 2015-06-29 19:53:33.000000000

Patch Set 1:

(1 comment)

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/transport/SignedPushRequiredHook.java -> My fear is that this makes it too easy to require signed pushes and forget about the verification step and celebrate that one's installation is more secure.

As long as the javadoc makes it clear that this is usually accompanied by another PreReceiveHook that does the cert verification or storage, that fear can go away.

(not about this patch) I like the idea of putting the option in SignedPushConfig, whether SignedPushRequiredHook or some other hook does the checking.

The use case of getting clients in the habit of signing their pushes seems sensible to me, so I guess I like keeping the SignedPushRequiredHook (but either way seems fine).

-------------------------------------
author: Eden Lin
date: 2015-06-29 19:55:14.000000000

Patch Set 1:

(1 comment)

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/transport/SignedPushRequiredHook.java -> (above, by 'whether SignedPushRequiredHook or some other hook does the checking' I mean 'regardless of whether SignedPushRequiredHook or some other hook does the checking')

-------------------------------------
author: Santos Moore
date: 2015-06-29 20:47:41.000000000

Patch Set 1:

(1 comment)

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/transport/SignedPushRequiredHook.java -> > My fear is that this makes it too easy to require signed pushes and forget about the verification step and celebrate that one's installation is more secure.

IMHO this fear is not unique to requiring signed pushes, it is equally applicable to any installation that optionally accepts signed pushes. Like for example any C git server that just sets receive.certNonceSeed and expects that to do anything besides enable the protocol capability.

-------------------------------------
author: Eden Lin
date: 2015-06-29 21:40:39.000000000

Patch Set 1:

(1 comment)

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/transport/SignedPushRequiredHook.java -> I think I didn't communicate well. I'll try explaining in person.

The only potential problem I saw was that *requiring* signed pushes can look like a security check to someone who doesn't think things through completely. *Permitting* signed pushes is much less likely to create that kind of confusion.

Luckily, the fix is really easy. It just needs a sentence or so in the javadoc so that newcomers understand how to use this hook.

If you don't agree with the security motivation, think of it as a usability concern. I'm saying that a mention in the javadoc of how the caller is expected to use this would make this easier to use correctly.

-------------------------------------
author: Santos Moore
date: 2015-06-29 21:55:03.000000000

Patch Set 1:

(1 comment)

Line:54, org.eclipse.jgit/src/org/eclipse/jgit/transport/SignedPushRequiredHook.java -> > The only potential problem I saw was that *requiring* signed pushes can look like a security check to someone who doesn't think things through completely. *Permitting* signed pushes is much less likely to create that kind of confusion.

I understood, I just disagree. I think permitting signed pushes is also likely to be construed as a security check.

-------------------------------------
author: Elise Key
date: 2017-08-29 13:16:04.000000000

Abandoned

Abandoning after 1 year or more of inactivity.

If this change is still needed, please restore it.

-------------------------------------
