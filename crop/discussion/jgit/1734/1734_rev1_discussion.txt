DESCRIPTION

Add Cherry-Pick command

Implemented the initial version of a cherry-pick command.
A correct error handling is missing (what happens if the
checkout fails, the cherry-pick leads to conflicts etc).
But straightforward cherry-picks works.

Change-Id: I235c0eb3a7a2d5bdfe40400f1deed06f29d746e1
Signed-off-by: Zachary Orozco xxx@xxx.xxx
Signed-off-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-10-12 19:31:00.000000000

Patch Set 1: I would prefer that you didn't submit this

(5 inline comments)



Line:95, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> The final commit is what is returned when there are multiple commits, right?  So maybe instead say the new HEAD is returned.  What happens if one succeeds and another fails, does the whole command stop, or is HEAD partially updated?

Line:101, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> Don't initialize to null.

  RevWalk revWalk = new RevWalk(repo);
  try {
  } finally {
    revWalk.release();
  }

Line:126, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> This is faster:

  revWalk.parseHeaders(srcCommit.getParent(0))

Line:131, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> Ugh.  Can we do something to improve the name of setWorkingTreeIt?  Maybe call it setWorkingTreeIterator?

I don't know if you have heard, but there is this fancy editor for Java called Eclipse.  You can use Ctrl-Space to ask it to complete aLengthyMethodNameThatIsTooLongToTypeButIsVeryDescriptiveOfItsPurpose, which means using abbreviations isn't necessary.  :-)

Line:143, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> The loop just stopped.  Shouldn't we continue looking at the next commit in the commits collection?

-------------------------------------
author: Zachary Orozco
date: 2010-10-13 09:32:06.000000000

Patch Set 1: (5 inline comments)



-------------------------------------
author: Zachary Orozco
date: 2010-10-13 09:32:00.000000000

MISMATCHED INLINE COMMENT
Line:95, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> Regarding failure handling. This command should stop after the first failing cherry-pick. HEAD will then point to the result of the last successful cherry-pick. But you are right, how do I then report the overall success of this command. 

My proposal: I'll return a RevCommit which points to new HEAD only if all cherry-picks where succesfull. Otherwise null is returned. Additionally I add a getSuccesfullyCherryPickedRefs() to publish a list of all successful cherry-picks.

-------------------------------------
author: Zachary Orozco
date: 2010-10-13 09:32:00.000000000

MISMATCHED INLINE COMMENT
Line:101, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> Done

-------------------------------------
author: Zachary Orozco
date: 2010-10-13 09:32:00.000000000

MISMATCHED INLINE COMMENT
Line:126, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> I'll do. That this line was wrong costed me an hour during development. I only looked up the srcParent RevCommit and when I later set the base of the merge to srcParent.getTree() the base was set to null. Everything succeeded afterwards but of course the merge result was buggy.

-------------------------------------
author: Zachary Orozco
date: 2010-10-13 09:32:00.000000000

MISMATCHED INLINE COMMENT
Line:131, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> Heard about that editor :-) Of course I can change that. Farewell ugly name! Had some long debugging sessions together and now its time to go.

-------------------------------------
author: Zachary Orozco
date: 2010-10-13 09:32:00.000000000

MISMATCHED INLINE COMMENT
Line:143, org.eclipse.jgit/src/org/eclipse/jgit/api/CherryPickCommand.java -> Done

-------------------------------------
