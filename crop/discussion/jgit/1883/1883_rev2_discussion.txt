DESCRIPTION

Support core.fsyncObjectFiles option

Some repositories may be on really unstable filesystems, but still
want to have good reliability when objects are written to disk.  If
core.fsyncObjectFiles is set to true, request the JVM to ensure the
data is written before returning success to the caller of insert.

The option defaults to false because it should be useless on any
filesystem that orders writes and metadata, such as ext3 mounted with
data=ordered (or data=journal).  But it may be useful on some systems
(especially HFS+) where file content may flush to the disk
independently of filesystem structure changes.

Because FileChannel.force(boolean) only claims to ensure data is
written if it was written using the write(ByteBuffer) method of
FileChannel, redirect all writes when using fsyncObjectFiles to go
through the FileChannel interface instead of through the older style
OutputStream interface.  This may not be necessary on all JVMs, but
its more portable to follow the definition than the common behavior.

Change-Id: I57f6b6bb7e403c07fbae989dbf3758eaf5edbc78
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-11-11 01:11:48.000000000

Uploaded patch set 2.

-------------------------------------
author: Yoselin Hanna
date: 2010-11-11 01:12:14.000000000

Patch Set 2: Looks good to me, but someone else must approve; IP review completed

Patch set 2 fixes the unit tests.

-------------------------------------
author: Phoebe Mays
date: 2010-11-12 20:12:24.000000000

Patch Set 2:

http://download.oracle.com/javase/6/docs/api/java/nio/channels/Channels.html#newOutputStream(java.nio.channels.WritableByteChannel)

-------------------------------------
