DESCRIPTION

Implement support for adding binary files in ApplyCommand

Binary patches in Git were designed to be transferred via email, so they
are compressed and custom-base85 encoded in the patch file. This patch
implements support for applying new literal binary patches in JGit.

Change-Id: I36e392346ee8342b75d9547d9bb75d2d805ad5e1
Signed-off-by: Angel Preston xxx@xxx.xxx


COMMENTS

author: Angel Preston
date: 2016-08-11 23:07:37.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2016-08-11 23:07:43.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8934/

-------------------------------------
author: Brenden Conley
date: 2016-08-11 23:23:28.000000000

Patch Set 3: Verified-1

Build Failed 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8934/ : FAILURE

-------------------------------------
author: Angel Preston
date: 2016-08-12 21:26:22.000000000

Patch Set 3:

Just pushed the corrections needed and changed the Zlib code to use streams, which should take care of inf.setInput() as needed. 

The Hudson build fails due to a seemingly unrelated issue (can also see other builds fail on the same tests). Will ask for more info in the dev list.

-------------------------------------
author: Brenden Conley
date: 2016-08-12 21:38:25.000000000

Patch Set 3: -Verified

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8945/

-------------------------------------
author: Brenden Conley
date: 2016-08-12 21:47:45.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8945/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2016-08-12 21:59:32.000000000

Patch Set 3:

(8 comments)

Line:69, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/zlib/ZlibSupport.java -> use try-with-resources to ensure this is closed so the Inflater can be released.

Line:72, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/zlib/ZlibSupport.java -> IOException? We try not to just catch Exception.

Line:205, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> Should use a MessageFormat with JGitText.

Line:212, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> should we also do ptr < buf.length && buf[ptr] != '\n'

so that we don't ArrayIndexOutOfBoundsException here if nextLF walks off the end of the array? Or is that malformed enough that we should be throwing something like PatchApplyException?

Line:224, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> Should be in JGitText.

In general these messages in exceptions should go into a constants like JGitText.

Line:248, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> it is not necessary to initialize inflated

Line:55, org.eclipse.jgit.test/tst/org/eclipse/jgit/util/Base85Test.java -> please trim trailing whitespace at end of line (both lines)

Line:103, org.eclipse.jgit.test/tst/org/eclipse/jgit/util/Base85Test.java -> nit: unnecessary blank line at end of method

-------------------------------------
author: Angel Preston
date: 2016-08-13 01:30:17.000000000

Patch Set 3:

(6 comments)

Line:69, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/zlib/ZlibSupport.java -> Done

Line:72, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/zlib/ZlibSupport.java -> Done

Line:205, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> Done

Line:212, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> If we end up with ptr >= buf.length before we reach two newlines, it means we're either missing the reverse binary hunk or possibly with the wrong number of newline characters to separate them. C git fails on both instances with an error like:

error: corrupt binary patch at line 593: literal 0
fatal: unrecognized input  

---
I'll add a check and throw an exception with a clearer explanation. It's always better than an IndexOutOfBounds.

Line:224, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> Done

Line:248, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> Done

-------------------------------------
