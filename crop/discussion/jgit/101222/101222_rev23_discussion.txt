DESCRIPTION

reftable: merge-join reftables

MergedReftable combines multiple reference tables together in a stack,
allowing higher/later tables to shadow earlier/lower tables.  This
forms the basis of a transaction system, where each transaction writes
a new reftable containing only the modified references, and readers
perform a merge on the fly to get the latest value.

Change-Id: Ic2cb750141e8c61a8b2726b2eb95195acb6ddc83


COMMENTS

author: Yoselin Hanna
date: 2017-08-16 23:25:32.000000000

Uploaded patch set 23.

-------------------------------------
author: Brenden Conley
date: 2017-08-16 23:25:39.000000000

Patch Set 23:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/11068/

-------------------------------------
author: Brenden Conley
date: 2017-08-16 23:48:26.000000000

Patch Set 23: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/11068/ : SUCCESS

-------------------------------------
author: Ariel Sawyer
date: 2017-08-17 02:37:26.000000000

Patch Set 23: Code-Review-1

(3 comments)

Line:105, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/MergedReftable.java -> Adding these in the opposite order is counterintuitive (especially when seekLog() doesn't reverse the order. Please add a comment. I can see in the non-prefix case this hacks in the topmost cursor that contains the ref, but for prefixes it seems backwards.

Line:191, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/MergedReftable.java -> I'm missing something subtle here. This code appears to be pushing and popping the same cursor over and over again. RowCursor.next() just reports if there is another iterator, without advancing it, right?

Line:269, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/MergedReftable.java -> This isn't right.

-------------------------------------
author: Yoselin Hanna
date: 2017-08-17 16:23:17.000000000

Patch Set 23:

(3 comments)

Line:105, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/MergedReftable.java -> Rewrote and added comment.

Line:191, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/MergedReftable.java -> No, RowCursor.next() advances and its return value reports if its sitting on a value (true) or at eof (false).

- So we pop with queue.remove().
- We pass that RowCursor to add().
- Our add() calls next(), which advances the cursor and finds out if its at eof. If its eof it closes the cursor and throws it away.
- If next() returned true, our add() puts it back into the priority queue.
- The priority queue does a heap sort during the insertion, which means the queue.peek() above points to the now lowest entry. Which may be this RefCursor we just popped, or some other RefCursor.

Line:269, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/MergedReftable.java -> Done

-------------------------------------
