DESCRIPTION

Add Publisher http servlet implementation

Change-Id: Ib1a1aafe0de4a4200ac397feba38b71a7bf9b980


COMMENTS

author: Karlee Dorsey
date: 2012-07-09 18:15:13.000000000

Uploaded patch set 3.

-------------------------------------
author: Santos Moore
date: 2012-07-10 19:52:10.000000000

Patch Set 3: I would prefer that you didn't submit this

(18 inline comments)



Line:85, org.eclipse.jgit/src/org/eclipse/jgit/transport/PostReceiveHookChain.java -> Thanks for adding this, I've been meaning to do it.

Would you mind also adding analogous static factory methods to (deep breath) AdvertiseRefsHookChain, PreReceiveHookChain, PreUploadHookChain, and UploadPackLoggerChain? In a separate change, clearly.

Line:104, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ReceivePackServlet.java -> Ditto my previous comments on aggressive Eclipse auto-formatting.

Line:133, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ReceivePackServlet.java -> I recommend setting postReceiveHook = PostReceiveHook.NULL in the constructor, then you can drop this null check. newChain is smart enough to collapse out NULLs (but not nulls).

This also matches the behavior in ReceivePack.

Line:165, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ReceivePackServlet.java -> hook != null ? hook : PostReceiveHook.NULL

Line:126, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/glue/MetaFilter.java -> What does "minimum" mean? Are you contrasting between the ones configured by default and user-added ones? If so, maybe say that.

Also, not crazy about using "bare", which has another meaning in Git.

Line:95, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Unnecessary reformatting here and a few places below. Was this from the Eclipse auto-formatting? IMHO these changes are distracting enough from the review that it's probably worth it to put the Eclipse auto-format in its own change.

Line:196, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> This is a bit absurd, if you're doing formatting fixes, I'd change this one to an if/else :)

Line:214, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Typo: factory

Line:236, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> This wording (copied from above, I see) sounds like a non-sequitur. I think what you're trying to say is "Filter implementations may access the PublisherClient instance from the request attribute xxx@xxx.xxx

Line:246, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> I disagree with Eclipse here, I would put the newline after the IllegalStateException(

Line:262, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Nit: we tend to be precise about binary/decimal sizes, so this would be 1 GiB.

Line:273, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> 1 << 30 would be ok, and shorter methinks.

Line:305, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> It may be worth documenting somewhere like the class javadoc that the URL matching behavior for pubsub differs in that there is a single endpoint that services multiple repositories. This is obvious to people who understand pubsub, but perhaps not for casual readers of this class.

Note that this also means that if pubsub is enabled, you cannot serve a repository named "git-publish-subscribe" from a GitFilter.

Line:83, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/PublisherServlet.java -> Why does this need to exist? Obviously it will never return useful information other than whether or not pubsub is enabled/supported on the server. Why can't an HTTP pubsub client just connect directly to /git-publish-subscribe to get that information?

Line:138, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java -> Long line.

Line:445, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java -> Because the pubsub handler matches ^/ rather than */, this logic needs to be different.

Line:78, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ServletUtils.java -> Long line. I suppose we could come up with something shorter if Shawn's alright with it, though :)

Line:58, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/resolver/DefaultPublisherClientFactory.java -> Nit: class names are generally nouns, so Wrap -> Wrapper

Although this doesn't feel exactly right as a wrapper class. It seems like it make sense to instead parameterize PublisherClient itself.

Although, that raises the question of why we need to associate an HttpServletRequest with a PublisherClient when we don't for a n Upload/ReceivePack.

-------------------------------------
author: Karlee Dorsey
date: 2012-07-12 23:59:53.000000000

Patch Set 3: (16 inline comments)



Line:85, org.eclipse.jgit/src/org/eclipse/jgit/transport/PostReceiveHookChain.java -> Sure.

Line:104, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ReceivePackServlet.java -> Done

Line:133, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ReceivePackServlet.java -> Done

Line:165, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/ReceivePackServlet.java -> Done

Line:126, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/glue/MetaFilter.java -> There are 2 filters added by default: a caching one and one that adds a repository attribute to each request. In the pubsub case, there is no repository to be added, so that filter needs to be disabled.

s/isBare/noRepository

Line:95, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Done, reverted all of the auto-formatting so there will be lines > 80 chars.

Line:214, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Done

Line:236, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Done

Line:246, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Reverted formatting

Line:262, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Done

Line:273, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Done

Line:305, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitFilter.java -> Done

Line:83, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/PublisherServlet.java -> For simplicity I was re-using the isSmartHttp function in TransportHttp to detect if pubsub was enabled, which will ping /info/refs. It also avoids POSTing a potentially large subscription request to a server that doesn't support it (minor case), and avoids further mess in the main doSubscribe error handling.

Line:138, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java -> Done

Line:445, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/GitSmartHttpTools.java -> Done

Line:58, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/resolver/DefaultPublisherClientFactory.java -> We need the request object to do repository lookups. Upload/ReceivePack don't need to keep a reference because their repository instance is looked up once in a filter and attached to the request. I had a <C> parameter on PublisherClient earlier, but Shawn said to take it out.

-------------------------------------
author: Santos Moore
date: 2012-07-13 19:40:01.000000000

Patch Set 3: (1 inline comment)



Line:83, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/PublisherServlet.java -> Yeah, I see your point about code simplicity, but I'm still on the fence about it. /info/refs really just feels like the wrong place, but it is probably a good idea to avoid a large POST body if possible.

Actually, this is exactly the sort of thing that the Expect: Continue/HTTP/1.1 Continue feature is designed for. Unfortunately, we really can't use it, since even though it's frikkin' 2012 we can't depend on proxy servers (including Google's) supporting it correctly.

Can we come up with some other way to tell if pubsub is enabled/supported by the server? Perhaps a HEAD or GET request to /git-publish-subscribe?

Shawn, any thoughts?

-------------------------------------
author: Karlee Dorsey
date: 2012-07-13 21:49:29.000000000

Patch Set 3: (1 inline comment)



Line:83, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/PublisherServlet.java -> I'm fine with GET /git-publish-subscribe and returning the same smart HTTP response. Shawn?

-------------------------------------
author: Santos Moore
date: 2012-07-25 01:10:51.000000000

Patch Set 3: (1 inline comment)



Line:83, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/PublisherServlet.java -> Poke Shawn in IM about this. He's busy, but it's not like he's going to get too mad :)

-------------------------------------
