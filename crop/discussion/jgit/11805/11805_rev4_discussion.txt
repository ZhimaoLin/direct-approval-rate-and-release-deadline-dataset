DESCRIPTION

Expand delta candidate space to include bases up to 32x larger

JGit has a rule avoiding use of a delta base if the base is 16x
larger than the object being delta compressed. Even if a delta is
possible, recreating the result object requires reading 16x the
necessary data from the base, inflating that to a temporary buffer,
only to discard nearly all of it. Such a pairing slows down data
decompression at read time and does not help readers.

After some discussions with Junio Hamano, he alerted me to CGit
using 1/32th for this heuristic.

Updating to CGit's behavior should help JGit to create better packs
more quickly, as fewer candidates will need to be considered when
both large and small files appear in the window at the same time.

Hoist this check very early in the delta evaluation, even before
considering depth information. The size is faster to access from
ObjectToPack, allowing DeltaWindow to rule out poorly matched pairs
with fewer instructions spent.

Change-Id: I79ed376b211d79635e454b9604e5b704bd089af1


COMMENTS

author: Yoselin Hanna
date: 2013-04-12 15:13:17.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2013-04-12 15:16:50.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3364/ 

-------------------------------------
author: Brenden Conley
date: 2013-04-12 15:23:16.000000000

Patch Set 4: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3364/ : SUCCESS

-------------------------------------
author: Warren Watkins
date: 2013-04-12 18:57:21.000000000

Patch Set 4: Looks good to me, approved

(1 inline comment)



Line:126, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/DeltaWindow.java -> note: if h != toSearch[cur].getPathHash(), you can go to the left.

-------------------------------------
author: Yoselin Hanna
date: 2013-04-17 18:54:08.000000000

Patch Set 4: Abandoned

I'm not convinced we should take the slowdown to look for pairings where the difference in size is >16x. Lets leave it at 16x for now.

-------------------------------------
