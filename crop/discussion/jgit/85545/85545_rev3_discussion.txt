DESCRIPTION

dump HTTP: Avoid being confused by Content-Length of a gzipped stream

TransportHttp sets 'Accept-Encoding: gzip' to allow the server to
compress HTTP responses. When fetching a loose object over HTTP,
it uses the following code to read the response:

       InputStream in = openInputStream(c);
       int len = c.getContentLength();
       return new FileStream(in, len);

If the content is gzipped, openInputStream decompresses it and produces
the correct content for the object. Unfortunately the Content-Length
header contains the length of the compressed stream instead of the actual
content length. Use a length of -1 instead since we don't know the actual
length.

Loose objects are already compressed, so the gzip encoding typically
produces a longer compressed payload. The value from the Content-Length
is too high, producing EOFException: Short read of block.

Change-Id: I8d5284dad608e3abd8217823da2b365e8cd998b0
Signed-off-by: Paloma Kennedy xxx@xxx.xxx
Helped-by: Eden Lin xxx@xxx.xxx


COMMENTS

author: Paloma Kennedy
date: 2016-11-23 01:00:40.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2016-11-23 01:00:47.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9446/

-------------------------------------
author: Brenden Conley
date: 2016-11-23 01:16:00.000000000

Patch Set 3: Verified-1

Build Failed 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9446/ : FAILURE

-------------------------------------
author: Gerrit Code Review
date: 2016-11-23 01:25:26.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
