DESCRIPTION

[RFC] Add "jgit archive" tool that writes a tree as a ZIP file

In the long run it would be nice to have a more full-functioned
TreeArchiveStream to support "download tree as zip/tgz/txz" links in
web frontends like Gitiles and to give VCS-agnostic code search tools
access to the tracked source code.

This patch is a proof-of-concept to show what is possible and offers
minimal functionality.  It uses java.util.zip which is not aware of
InfoZIP extensions for representing symlinks and file permissions, so
symlinks, executable files, and gitlinks are represented as plain text
files.  Making this functionality available from the library,
improving handling of special entries, and support for other file
formats like (e.g., tar) are left for later patches.

Test with "jgit my-favorite-tree >out.zip".

Change-Id: Ib590f173ceff3df4b58493cecccd6b9a1b355e3d


COMMENTS

author: Brenden Conley
date: 2012-11-16 02:50:00.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2484/ 

-------------------------------------
author: Brenden Conley
date: 2012-11-16 02:55:33.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2484/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2012-11-16 06:21:14.000000000

Patch Set 1: I would prefer that you didn't submit this

(3 inline comments)



Line:71, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Archive.java -> nit: We tend to prefer to call this idbuf. buf in Java is often a temporary ByteArrayOutputStream or a StringBuilder. idbuf in JGit is usually a MutableObjectId.

Line:77, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Archive.java -> This isn't possible.

Line:87, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Archive.java -> IIRC when in recursive mode the TreeWalk does not actually giv you the TREE entries. So this should never hit.

-------------------------------------
author: Eden Lin
date: 2012-11-16 16:42:51.000000000

Patch Set 1: I would prefer that you didn't submit this

(3 inline comments)

Thanks for the review. v2 with tests coming later today.

Line:71, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Archive.java -> Done

Line:78, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Archive.java -> I'll drop the defensive assert.

For future reference, what's the idiom in jgit for checking invariants when they matter?

Line:87, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Archive.java -> Hm, when I tried it it did give the tree entries.

But git does not track empty directories so there's no point in including the directories in the ZIP output (and "git archive" doesn't include them there). I'll change the "if" body to "continue;" and the "if" below to expect REGULAR_FILE, which should make this easier to read.

-------------------------------------
author: Yoselin Hanna
date: 2012-11-16 19:06:09.000000000

Patch Set 1: (2 inline comments)



Line:78, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Archive.java -> This style. Check the condition and throw an exception with a message explaining the problem. But there are certain classes of things we just assume cannot fail, e.g. memory allocation, because those throw exceptions already. Creating a new reader is in that class of "can't happen unless the implementation of the ObjectDatabase utterly fails to meet the contract, in which case application level code shouldn't be concerned with this as the database is crap".

Line:87, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Archive.java -> Hmm. I wonder if my memory is fuzzy, or if things changed. But its far to avoid putting the directory in if git archive doesn't include them either.

-------------------------------------
