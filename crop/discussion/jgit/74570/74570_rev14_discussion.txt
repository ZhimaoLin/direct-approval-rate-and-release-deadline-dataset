DESCRIPTION

Preliminary implementation of option strings

Example usage:
$ ./jgit push --push-options xxx@xxx.xxx --push-options "<arbitrary string>" origin HEAD:refs/for/master

Change-Id: I6797e50681054dce3bd179e80b731aef5e200d77
Signed-off-by: Austin Swanson xxx@xxx.xxx


COMMENTS

author: Austin Swanson
date: 2016-06-16 22:27:15.000000000

Uploaded patch set 14.

-------------------------------------
author: Brenden Conley
date: 2016-06-16 22:27:21.000000000

Patch Set 14:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8524/

-------------------------------------
author: Brenden Conley
date: 2016-06-16 22:31:54.000000000

Patch Set 14: Verified-1

Build Failed 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8524/ : FAILURE

-------------------------------------
author: Beau Terry
date: 2016-06-17 17:02:33.000000000

Patch Set 14:

(6 comments)

Line:183, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushOptionsTest.java -> I think moving all variables to the top, would be more readable.

Line:189, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushOptionsTest.java -> So are we going to use db and db2 or the client/server class variables. I'd just go with one pair.

Line:199, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushOptionsTest.java -> So db is configured to receive things, so we push from db2 to db? (Or when testing only one side and crafting the packets ourselfs, we need to pretend to be the receiver when interacting with db2 and pretend to be the pusher when interacting with db)

Line:225, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushOptionsTest.java -> so now both db and db2 are configured to allow receiving push options? we only need one side for the receiver.

Line:254, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushOptionsTest.java -> I think here we need to add the push options, i.e.

inPckLine.writeString("Hello");
inPckLine.writeString("World");
inPckLine.end();

Line:346, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/PushCommandTest.java -> > Why does it set the remote to its own repository?

(was cut off in the web UI)

It is not its own. the remote "test" is an alias for `db2` as seen by `db`.

See the lines before the try, (paragraph with "//setup the first repository"), we configure `db`, but the URI is from `db2`.

-------------------------------------
author: Gerrit Code Review
date: 2016-07-22 23:27:20.000000000

Change has been successfully merged into the git repository by Ariel Sawyer

-------------------------------------
