DESCRIPTION

FetchCommand: Add basic support for recursing into submodules

Extend FetchCommand to expose a new method, setRecurseSubmodules(mode),
which allows to set the mode to ON, OFF or ON_DEMAND.

After fetching a repository, its submodules are recursively fetched:

- When the mode is YES, submodules are always fetched.

- When the mode is NO, submodules are not fetched.

- When the mode is ON_DEMAND, submodules are only fetched when the
  parent repository receives an update of the submodule.

The mode is determined in the following order of precedence:

- Value specified in the API call using setRecurseSubmodules.

- Value specified in the repository's config under the key
  submodule.name.fetchRecurseSubmodules

- Defaults to ON_DEMAND if neither of the previous is set.

Extend FetchResult to recursively include results for submodules, as
a map of the submodule path to an instance of FetchResult.

Test setup is based on testCloneRepositoryWithNestedSubmodules.

Change-Id: Ibc841683763307cb76e78e142e0da5b11b1add2a
Signed-off-by: Elise Key xxx@xxx.xxx


COMMENTS

author: Elise Key
date: 2017-02-22 04:51:01.000000000

Uploaded patch set 11.

-------------------------------------
author: Brenden Conley
date: 2017-02-22 04:51:08.000000000

Patch Set 11:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9869/

-------------------------------------
author: Brenden Conley
date: 2017-02-22 04:58:53.000000000

Patch Set 11: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9869/ : SUCCESS

-------------------------------------
author: Elise Key
date: 2017-02-24 00:52:41.000000000

Patch Set 12: Patch Set 11 was rebased

-------------------------------------
author: Gerrit Code Review
date: 2017-03-05 21:14:19.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
