DESCRIPTION

Handle SSL handshake failures in TransportHttp

When a https connection could not be established because the SSL
handshake was unsuccessful, TransportHttp would unconditionally
throw a TransportException.

Other https clients like web browsers or also some SVN clients
handle this more gracefully. If there's a problem with the server
certificate, they inform the user and give him a possibility to
connect to the server all the same.

In git, this would correspond to dynamically setting http.sslVerify
to false for the server.

Implement this using the CredentialsProvider to inform and ask the
user. We offer three choices:

1. trust the server for the current git operation, or
2. trust the server always from now on for requests originating from
   the current repository, or
3. always trust the server from now on.

For (1), we just suppress SSL verification for the current instance of
TransportHttp.

For (2), we store a http.<uri>.sslVerify = false setting for the
original URI in the repo config.

For (3), we store the http.<uri>.sslVerify setting in the git user
config.

Adapt the SmartClientSmartServerSslTest such that it uses this
mechanism instead of setting http.sslVerify up front.

Bug: 374703
Change-Id: Ie1abada9a3d389ad4d8d52c2d5265d2764e3fb0e
Signed-off-by: Alayna Houston xxx@xxx.xxx

COMMENTS

author: Alayna Houston
date: 2017-09-02 12:32:56.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-09-02 12:33:05.000000000

Patch Set 1:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/11268/

-------------------------------------
author: Brenden Conley
date: 2017-09-02 12:44:34.000000000

Patch Set 1: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/11268/ : SUCCESS

-------------------------------------
