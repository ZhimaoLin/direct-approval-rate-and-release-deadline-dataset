DESCRIPTION

Rewrite push certificate parsing

- Consistently return structured data, such as actual ReceiveCommands,
  which is more useful for callers that are doing things other than
  verifying the signature, e.g. recording the set of commands.
- Store the certificate version field, as this is required to be part
  of the signed payload.
- Add a toText() method to recreate the actual payload for signature
  verification.
- Separate the parser from the certificate itself, so the actual
  PushCertificate object can be immutable. Make a fair attempt at deep
  immutability, but this is not possible with the current mutable
  ReceiveCommand structure.
- Use more detailed error messages that don't involve NON-NLS strings.
- Document null return values more thoroughly. Instead of having the
  undocumented behavior of throwing NPE from certain methods if they
  are not first guarded by enabled(), eliminate enabled() and return
  null from those methods.
- Add tests for parsing a push cert from a section of pkt-line stream
  using a real live stream captured with Wireshark (which, it should
  be noted, uncovered several simply incorrect statements in C git's
  Documentation/technical/pack-protocol.txt).

Since these classes are public APIs in 4.0, we need to leave the
existing inheritance structure and methods. For PushCertificate, the
only way to create an instance with non-null field values was to use a
subclass, so it is sufficient to add a public no-arg constructor that
sets all fields to null. For the parser, we mark the getters as
@Deprecated and refer to the results of build().

Change-Id: I5382193347a8eb1811032d9b32af9651871372d0


COMMENTS

author: Santos Moore
date: 2015-06-10 21:36:20.000000000

Uploaded patch set 3.

-------------------------------------
author: Santos Moore
date: 2015-06-10 21:36:49.000000000

Patch Set 3:

Fixed the API issues so this is strictly speaking a backwards compatible change. Please pay close attention to make sure I didn't miss anything.

-------------------------------------
author: Brenden Conley
date: 2015-06-10 21:43:23.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6700/

-------------------------------------
author: Brenden Conley
date: 2015-06-10 21:50:17.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6700/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2015-06-10 21:52:04.000000000

Patch Set 3: Code-Review-1

(3 comments)

Line:1026, org.eclipse.jgit/src/org/eclipse/jgit/transport/BaseReceivePack.java -> nonce?

Line:31, /COMMIT_MSG -> Screw that. I would break this and just mark the exceptions in our api exception file thing. Wouldn't be the first time.

Line:104, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushCertificateParserTest.java -> You don't have to be an example to others if you don't want to be. "Push Er", aka xxx@xxx.xxx is perfectly happy to be an example.

-------------------------------------
author: Santos Moore
date: 2015-06-10 22:27:47.000000000

Patch Set 3:

(1 comment)

Line:104, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushCertificateParserTest.java -> This test is for a real, valid signed payload hot off the wire (despite the fact that JGit can't actually do the GPG validation).

To use someone other myself I would have to first generate a public key for that user. I'm ok with the tradeoff of showing up in the source here :)

-------------------------------------
author: Santos Moore
date: 2015-06-10 22:29:17.000000000

Patch Set 3:

(2 comments)

Line:1026, org.eclipse.jgit/src/org/eclipse/jgit/transport/BaseReceivePack.java -> Done

Line:31, /COMMIT_MSG -> Obviously _I_ agree with you but some people might not; maybe we should wait?

If I did want to do that, how do I go about it?

-------------------------------------
author: Yoselin Hanna
date: 2015-06-10 22:39:18.000000000

Patch Set 3:

(1 comment)

Line:31, /COMMIT_MSG -> Add some sort of whitelist entry to org.eclipse.jgit/.settings/.api_filters that tells Eclipse its OK we fucked up the API.

-------------------------------------
author: Beau Terry
date: 2015-06-10 22:43:08.000000000

Patch Set 3:

(1 comment)

Line:104, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushCertificateParserTest.java -> As JGit doesn't check the actual PGP but only the formal aspects, you could just s/Santos Moore/Jon Doe/ and Jgit would not notice (it's still your signature, but the name attached is not).

Maybe Shawn was hinting at that?

-------------------------------------
author: Santos Moore
date: 2015-06-10 22:44:32.000000000

Patch Set 3:

(1 comment)

Line:104, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PushCertificateParserTest.java -> Ideally this test data would not have to change if/when JGit learns how to do the PGP verification.

Seriously, my name already shows up if you run git blame on this line. I just don't care about privacy here.

-------------------------------------
author: Santos Moore
date: 2015-06-11 15:56:30.000000000

Patch Set 3:

(1 comment)

Line:31, /COMMIT_MSG -> That is some crazy arcane XML format. Seems like there must be a way to get Eclipse to generate it for me, but I can't for the life of me figure out how to get Eclipse to generate the necessary API warnings that would be corrected by adding that.

I removed all xxx@xxx.xxx stuff from the previous patch set of this change and explained the breaking change in the commit message. Take your pick between the two versions and I'll trust your judgment.

-------------------------------------
