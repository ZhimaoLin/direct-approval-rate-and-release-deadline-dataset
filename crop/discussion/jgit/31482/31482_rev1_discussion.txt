DESCRIPTION

Allow DfsInserter to buffer up to 10 MiB from an InputStream

Since 2badedcbe0f87c0a in-core merges can write up to 10 MiB
into a TemporaryBuffer.Heap strategy, where the data is stored
as a chain of byte[] blocks.

Allow the inserter to pull up to 10 MiB from that input stream
and hash the content to determine if the merged result blob is
already present in the repository. This allows the inserter to
avoid creating duplicate objects in more cases, reducing churn.

Change-Id: I38967e2a0cff14c0a856cdb46a2c8fedbeb21ed5


COMMENTS

author: Yoselin Hanna
date: 2014-08-12 21:57:56.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-08-12 21:58:03.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/5466/

-------------------------------------
author: Brenden Conley
date: 2014-08-12 22:18:15.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/5466/ : SUCCESS

-------------------------------------
author: Santos Moore
date: 2014-08-13 01:02:47.000000000

Patch Set 1: Code-Review-1

(1 comment)

Line:123, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsInserter.java -> Would be nice if we could share a constant here to match the buffer sizes.

-------------------------------------
author: Yoselin Hanna
date: 2014-08-13 01:50:07.000000000

Patch Set 1:

(1 comment)

Line:123, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsInserter.java -> Actually, this should be the configured streamFileThreshold. DfsPackFile uses that to determine if its OK to hold the entire file contents in a byte[], or attempt to stream. Since this is also DFS code, that same configuration parameter should be used.

So really this should be:

  buf.length < len && len < db.getReaderOptions().getStreamFileThreshold()

or somesuch expression. I'll fix that and upload a new version later.

The merger code can't use that same logic, because its not DFS code and that value isn't shared between DFS code and core library code. That might also be another WTF, but not something I plan to fix anytime soon.

-------------------------------------
