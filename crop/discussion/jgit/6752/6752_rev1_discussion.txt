DESCRIPTION

Integration tests for PubSub

Change-Id: I1feb2309bba379a708612318559e76134832e82a


COMMENTS

author: Karlee Dorsey
date: 2012-07-13 01:00:50.000000000

Patch Set 1:

- I am the author 100% of the content.
- My employer, Google, owns the copyright of the content.
- I have the right to contribute the content to Eclipse.

-------------------------------------
author: Santos Moore
date: 2012-07-13 19:54:24.000000000

Patch Set 1: I would prefer that you didn't submit this

(13 inline comments)

This is good stuff, I <3 tests.

I might quibble with calling this an "integration" test, which to me would imply actually setting up a server and talking to it over the (loopback) network. I believe there are some other JGit tests that do that kind of thing.

But in that case, not exactly sure what to call this style of test...

Line:223, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Ok, but wouldn't it be nice if we also tested the multiple repository case? :)

(Not necessary in this change, though.)

Line:241, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> This should probably be test://test.com/, since your TransportProtocol's name is "test".

In fact, I'm kind of surprised it works with http...

Line:251, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> You probably want the test to fail in this case?

Line:280, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> I'm a bit shaky on this area of JUnit4, but I think a better way to do this is to name this method something else rather than overriding setUp, and then annotating it with @Before. Then you don't need to call super.setUp(). IIUC the test runner will automatically call all @Before/@After methods starting from the root of the inheritance chain, in order. (But it makes no guarantees about order xxx@xxx.xxx within the same class.)

Line:288, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> See above.

Line:302, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> -1 on using Thread.sleep in tests, it makes them slow and brittle.

Instead, see if there's some place you can hook in a CountDownLatch that counts down when the client thread connects.

Line:309, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Don't use Thread.sleep.

Line:320, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Don't use Thread.sleep.

Line:331, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Don't use Thread.sleep.

Line:346, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Don't use Thread.sleep.

Line:359, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Don't use Thread.sleep.

Line:375, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Might as well just store this in a field as serverGit.

Line:400, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Nit: don't use exceptions for control flow if you can avoid it:
parent = commit.getParentCount() > 0 ? commit.getParent(0) : ObjectId.zeroId()
(or something)

-------------------------------------
author: Santos Moore
date: 2012-07-13 19:58:46.000000000

Patch Set 1: (1 inline comment)



Line:302, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Given that you would be reusing this latch, it might be cleaner to use a CyclicBarrier (which automatically resets after it trips), I'm not sure. If you do, note that unlike CountDownLatch, you would be calling the same blocking await() method in both the "sending" and "receiving" threads, so the "sending" thread won't actually proceed/finish until the "receiving" thread "receives" its "message"

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:223, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> For another day :)

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:241, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done. It works because new transports get added to the front of the list, and I always return "true" from the canHandle() call.

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:251, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:280, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Probably true, but all of the other tests stick xxx@xxx.xxx to stay consistent :).

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:302, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:309, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:320, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:331, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:346, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:359, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:375, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
author: Karlee Dorsey
date: 2012-07-14 02:05:04.000000000

MISMATCHED INLINE COMMENT
Line:400, org.eclipse.jgit.test/tst/org/eclipse/jgit/transport/PubSubTest.java -> Done

-------------------------------------
