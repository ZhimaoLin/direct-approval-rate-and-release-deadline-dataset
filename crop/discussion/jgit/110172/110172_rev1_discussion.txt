DESCRIPTION

basic submodule merge handling

Fixes (sort-of)
https://bugs.eclipse.org/bugs/show_bug.cgi?id=494551

This doesn't handle the really hard thing, which is merging spurious
conflicts inside .gitmodules files.  That's OK: git.git doesn't
either.  Users can resolve the conflict themselves and then commit
the merge.

This does prevent crashes and leave the correct state for both
non-conflicting merges which add submodules, and submodule add/add
(and presumably add/edit) merges which do so.

Reported-by: Alexey Korobkov
Change-Id: I79db6798c2bdcc1159b5b2589b02da198dc906a1
Signed-off-by: Carissa Dunn xxx@xxx.xxx


COMMENTS

author: Carissa Dunn
date: 2017-10-16 23:19:57.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-10-16 23:20:05.000000000

Patch Set 1:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/11420/

-------------------------------------
author: Brenden Conley
date: 2017-10-16 23:33:09.000000000

Patch Set 1: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/11420/ : SUCCESS

-------------------------------------
author: Carissa Dunn
date: 2017-10-17 21:46:15.000000000

Patch Set 1: Code-Review-1

(1 comment)

Line:120, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> On reflection (and on trying this out), I don't think a submodule conflict ought to fail the merge -- I think it should instead be a conflict.  I'm not sure whether this will be possible, but I'm going to try.

-------------------------------------
author: Carissa Dunn
date: 2017-10-18 04:19:10.000000000

Patch Set 1:

OK, let's try this version.

-------------------------------------
