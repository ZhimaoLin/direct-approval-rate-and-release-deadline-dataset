DESCRIPTION

HistogramDiff: Convert stack recursion to heap managed queue

Each time the longest common substring is found the diff algorithm
recurses to reprocess the regions before and after the common string.

Large files with many edits can trigger StackOverflowError as the
algorithm attempts to process a deeply split tree of regions. This
is especially prone to happen in servers where the Java stack size
may have been limited to 1M or even 256K.

To keep edits produced in order two queues are used. "tmp" stores
between 0 and 2 edits found in this cycle, which are then pushed
onto the head of the global processing queue. This preserves the
depth-first search strategy previously implemented through recursion.

Change-Id: Iae7260c6934efdffac7c7bee4d3633a8208924f7


COMMENTS

author: Yoselin Hanna
date: 2014-07-25 16:39:12.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2014-07-25 16:39:18.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/5375/

-------------------------------------
author: Santos Moore
date: 2014-07-25 16:44:07.000000000

Patch Set 3: Code-Review+2

Hoping test coverage is good enough.

-------------------------------------
author: Yoselin Hanna
date: 2014-07-25 16:45:53.000000000

Patch Set 3:

Test coverage is decent for HistogramDiff. If only Maven would run them on my workstation.

-------------------------------------
author: Brenden Conley
date: 2014-07-25 16:46:49.000000000

Patch Set 3: Verified-1

Build Failed 

https://hudson.eclipse.org/egit/job/jgit.gerrit/5375/ : FAILURE

-------------------------------------
author: Yoselin Hanna
date: 2014-07-25 16:57:26.000000000

Patch Set 3:

(1 comment)

Line:209, org.eclipse.jgit/src/org/eclipse/jgit/diff/HistogramDiff.java -> This is the test failure. We add a recursion to held, then an edit to edits. Then "recurse" on held. The edit that comes out of that recursion is sorted too late in edits, resulting in a test failure from testEdit_DuplicateAButCommonUniqueInB.

-------------------------------------
