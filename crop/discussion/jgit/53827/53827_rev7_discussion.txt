DESCRIPTION

Delete non empty directories before checkout

I the checkout path is currently a non-empty directory (and was a link
or a regular file before), this directory will be removed before
performing checkout, but only if the checkout path is specified.

Bug: 474973
Change-Id: Ifc6c61592d9b54d26c66367163acdebea369145c
Signed-off-by: Jayvion Booth xxx@xxx.xxx


COMMENTS

author: Jayvion Booth
date: 2015-08-23 14:30:27.000000000

Uploaded patch set 7.

-------------------------------------
author: Brenden Conley
date: 2015-08-23 14:37:51.000000000

Patch Set 7:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7050/

-------------------------------------
author: Jayvion Booth
date: 2015-08-23 14:44:04.000000000

Patch Set 7:

> (1 comment)

I've played around with git / jgit and the patched version.
First of all, I've removed the part of the patch which tried to check the index - it is not needed. Git CLI doesn't care if there are files in the index or not - if the path argument is specified via "git checkout <name> -- <path>", git simply restores requested version.

The modified code in question in jgit is also used *only* after checks for conflicts are already done, so even if it is used in "git checkout master" the checks prevents that untracked files are deleted. I've added two extra tests verifying that: testOverwriteUntrackedFileModeChange() and testOverwriteUntrackedLinkModeChange().

I've also added the "finally" block before "rename" (line 1198) to avoid cases where the temp file is created but not deleted after unsuccessful rename operation.

Finally, the last patch moves the "rm -rf" part just before the actual rename or link operation, to make sure we don't delete original files and fail too early before even starting the link/rename operation. Unfortunately deleting directory cannot be made atomic operation with rename or link, so there is always a danger that the directory is deleted but the actual file is not created. To prevent that one should try to *move* the directory to some other place, create link or file and only after that delete (or restore) the original directory - which of course can also fail. Not sure if we want go this way, since the files most likely must be deleted anyway.

-------------------------------------
author: Brenden Conley
date: 2015-08-23 14:44:48.000000000

Patch Set 7: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7050/ : SUCCESS

-------------------------------------
author: Jayvion Booth
date: 2015-08-26 20:18:18.000000000

Patch Set 8: Patch Set 7 was rebased

-------------------------------------
author: Gerrit Code Review
date: 2015-10-09 15:09:46.000000000

Change has been successfully merged into the git repository by Zachary Orozco

-------------------------------------
