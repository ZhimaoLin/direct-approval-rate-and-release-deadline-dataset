DESCRIPTION

Add Publisher implementation

Adds the server-side Publisher implementation and protocol. The
Publisher hooks the post-receive update and generates packs to cover
all connected Sessions. Clients establish Sessions that store their
subscriptions and stream pointers for PublisherPushes. PublisherPacks
are generated on the fly by PublisherPushes and the
PublisherPackFactory. Each Pack is split into PublisherPackSlices.
All Packs are placed in a global linked-list for which each client
creates an iterator. The memory footprint of Packs is managed by the
PublisherMemoryPool, which loads the Slices in and out of memory as
necessary to reclaim memory.

Change-Id: I35cadea785160585fc76ed9280c7a16f3da9e724


COMMENTS

author: Karlee Dorsey
date: 2012-08-14 21:22:04.000000000

Uploaded patch set 16.

-------------------------------------
author: Brenden Conley
date: 2012-08-14 21:22:10.000000000

Patch Set 16:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2120/ 

-------------------------------------
author: Brenden Conley
date: 2012-08-14 21:28:57.000000000

Patch Set 16: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2120/ : SUCCESS

-------------------------------------
author: Warren Watkins
date: 2012-08-17 19:14:15.000000000

Patch Set 16: I would prefer that you didn't submit this

(12 inline comments)



Line:84, org.eclipse.jgit/src/org/eclipse/jgit/transport/PublisherClient.java -> final

Line:87, org.eclipse.jgit/src/org/eclipse/jgit/transport/PublisherClient.java -> final

Line:267, org.eclipse.jgit/src/org/eclipse/jgit/transport/PublisherPackFactory.java -> is there a way to reuse the buffer when the buf is copied or the slice is stored:
  byte[] toWrite;
  if (bufLen < buf.length)
    toWrite = Arrays.copyOf(buf, bufLen);
  else 
    toWrite = buf;

Line:273, org.eclipse.jgit/src/org/eclipse/jgit/transport/PublisherPackFactory.java -> then in here

  if (toWrite == buf)
    buf = new byte[sliceSize];

Line:66, org.eclipse.jgit/src/org/eclipse/jgit/transport/PublisherStream.java -> please subclass Node to simplify logic.

Line:78, org.eclipse.jgit/src/org/eclipse/jgit/transport/PublisherPackSlice.java -> nit: name NOOP or EMPTY

Line:86, org.eclipse.jgit/src/org/eclipse/jgit/transport/PublisherPush.java -> try {} finally may be needed for the close(), unless you want the db to remain open  when an exception is thrown. I'm not sure the implications of db.incrementOpen();

Line:177, org.eclipse.jgit/src/org/eclipse/jgit/transport/Publisher.java -> i'll leave this up to shawn for the correct behavior

Line:200, org.eclipse.jgit/src/org/eclipse/jgit/transport/Publisher.java -> same here

Line:264, org.eclipse.jgit/src/org/eclipse/jgit/transport/Publisher.java -> ah so you can't read sessionLifetime outside of synchronization either. you could just make this field volatile and then you would be OK.

Line:272, org.eclipse.jgit/src/org/eclipse/jgit/transport/Publisher.java -> nit: you could remove this field and rely on sessionDeleter.shutdown() and sessionDeleter.isShutdown()

Line:101, org.eclipse.jgit/src/org/eclipse/jgit/transport/PublisherMemoryPool.java -> use the value returned from the previous op for comparison

-------------------------------------
