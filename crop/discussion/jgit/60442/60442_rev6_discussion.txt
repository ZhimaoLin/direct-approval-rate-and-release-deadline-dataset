DESCRIPTION

Null-annotated Repository class and fixed related compiler errors

org.eclipse.jgit.lib.Repository class is an example of the API which
should be written with Java 8 java.util.Optional<T> type. Unfortunately
this API is already released and widely used. The good clients are
currently doing their best with checking return values for null and bad
clients do not know how bad their code is.

I've tried not to change any logic and to be as less intrusive as
possible. Most of the JGit code was well prepared to this, only few
classes needed some smaller fixes. 

This change fixes all compiler errors in JGit and replaces possible
NPE's with either appropriate exceptions, avoiding multiple "Nullable
return" method calls or early returning from the method.

Because annotating getDirectory() and getFS() as Nullable would cause
lot of additional changes in JGit and EGit they are postponed.

Change-Id: Ie8369d2c9c5fac5ce83b3b1b9bc217d7b55502a3
Signed-off-by: Jayvion Booth xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2015-11-23 06:01:18.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7585/

-------------------------------------
author: Brenden Conley
date: 2015-11-23 06:11:06.000000000

Patch Set 6: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7585/ : SUCCESS

-------------------------------------
author: Jayvion Booth
date: 2015-11-24 23:17:59.000000000

Patch Set 6:

Ping...

-------------------------------------
author: Eden Lin
date: 2015-11-24 23:37:37.000000000

Patch Set 6:

(6 comments)

Thanks for the ping.

Line:205, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java xxx@xxx.xxx

Line:236, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java xxx@xxx.xxx

Line:1056, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Every repository with a worktree has an index. isBare would return true in a repository without a worktree, so this should always be non-null.

Line:679, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> This can happen in one step:

  ObjectId = getHead().getObjectId();

(resolve() is not able to avoid creating a Ref along the way so this is as simple as resolve behind the scenes).

Line:229, org.eclipse.jgit/src/org/eclipse/jgit/api/CheckoutCommand.java -> optional: NoHeadException or UnsupportedOperationException? Would a message like

  throw new UnsupportedOperationException("cannot checkout from unborn branch")

make sense?

Line:17, /COMMIT_MSG -> nit: trailing space

-------------------------------------
author: Eden Lin
date: 2015-11-24 23:45:28.000000000

Patch Set 6: Code-Review-1

The rest looks good. Hopefully next patchset will be the one.

-------------------------------------
author: Jayvion Booth
date: 2015-11-25 19:52:34.000000000

Patch Set 6:

(6 comments)

Next patch set will contain all fixes.

Line:205, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Done

Line:236, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Done

Line:1056, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Done

Line:679, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Done

Line:229, org.eclipse.jgit/src/org/eclipse/jgit/api/CheckoutCommand.java -> The both exceptions are equally distributed in jgit code. I've taken Unsupported one because this fits better to the TODO above.

Line:17, /COMMIT_MSG -> Done

-------------------------------------
author: Gerrit Code Review
date: 2015-11-25 20:05:11.000000000

Change has been successfully merged into the git repository by Jayvion Booth

-------------------------------------
