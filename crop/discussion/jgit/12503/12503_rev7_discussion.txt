DESCRIPTION

Allow mergers to swap out ObjectInserter and ObjectReader

RecursiveMerger needs to store intermediate state from the virtual
merge base construction, and read it back through an ObjectReader.

Build both the inserter and reader at merger creation time, but
change the fields to non-final, allowing a subclassing implementation
to swap them out for different instances.

This refactoring would also support future work like permitting
non-flushed reads through an ObjectInserter, as proposed by
https://git.eclipse.org/r/12422.

Change-Id: I9682a6aa4a2c37dccef8e163f132ddb791d79103


COMMENTS

author: Gerrit Code Review
date: 2014-02-07 22:19:15.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-08 22:19:16.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-09 22:19:17.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-10 22:19:18.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-11 22:19:21.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-12 22:19:24.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-13 22:19:27.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-14 22:19:28.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-15 22:19:32.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-16 22:19:34.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-17 22:19:37.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-18 22:19:40.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-19 22:19:43.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-20 22:19:44.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-21 22:19:47.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-22 22:19:48.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-23 22:19:50.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-24 22:19:51.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-25 22:23:35.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-26 22:23:38.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-27 22:23:39.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-02-28 22:23:40.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-03-01 22:23:42.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-03-02 22:23:44.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-03-03 22:23:46.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Gerrit Code Review
date: 2014-03-04 19:13:53.000000000

Change could not be merged because of a missing dependency.

The following changes must also be submitted:

* I454fdfb88f4d215e31b7da2b2a069853b197b3dd


-------------------------------------
author: Yoselin Hanna
date: 2014-08-11 22:52:27.000000000

Uploaded patch set 7.

-------------------------------------
author: Brenden Conley
date: 2014-08-11 22:52:32.000000000

Patch Set 7:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/5462/

-------------------------------------
author: Santos Moore
date: 2014-08-11 22:57:44.000000000

Patch Set 7:

(2 comments)

Line:97, org.eclipse.jgit/src/org/eclipse/jgit/merge/Merger.java -> Would it make sense to add another protected constructor that just passes all three of these in? Could they remain final in that case? (Probably not without changing the newMerger method signatures, sigh...)

Line:99, org.eclipse.jgit/src/org/eclipse/jgit/merge/Merger.java -> I think the reason it was the way it was was that for the common case of setObjectInserter immediately after creation:

 Merger m = MergeStrategy.RESOLVE.newMerger(...);
 m.setObjectInserter(oldInserter);

we wouldn't create and then immediately throw away an inserter.

This change does simplify the code by removing a whole bunch of null checks, so if you're confident that creating inserters and readers is sufficiently cheap in every implementation then this is fine.

-------------------------------------
author: Brenden Conley
date: 2014-08-11 23:01:05.000000000

Patch Set 7: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/5462/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2014-08-11 23:04:26.000000000

Patch Set 7:

(2 comments)

Line:97, org.eclipse.jgit/src/org/eclipse/jgit/merge/Merger.java -> Yea, we were trying to avoid changing those newMerger method signatures, which is how we grew setObjectInserter().

I wanted to drop the final part because I'm considering swapping in a different ObjectInserter/ObjectReader in RecursiveMerger that tries hard to buffer the virtual base stuff in-memory without ever leaking it into the repository as a stored object.

Unclear what happens with a conflict and we try to load the higher stages with virtual ObjectIds. I guess we would then be forced to write those virtual bases out to the repository. But we could at least delay it until the top level pass, and avoid all intermediate stages.

I'm not set on that approach. I may need to finish out the reader-from-inserter to really fix RecursiveMerger. But an in-memory wrapper for the virtual base might be sufficient.

Line:99, org.eclipse.jgit/src/org/eclipse/jgit/merge/Merger.java -> Fortunately they are fairly cheap to create in either storage backend. Deferring their allocation would eliminate any issue, but makes for a mess in the code trying to ensure they are created first.

-------------------------------------
author: Santos Moore
date: 2014-08-11 23:06:57.000000000

Patch Set 7: Code-Review+2

Sounds like we should delay submitting until you've figured out the later usage, but either way.

-------------------------------------
