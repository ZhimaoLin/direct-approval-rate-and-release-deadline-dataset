DESCRIPTION

DirCacheEditor: Apply PathEdit for each stage

This behavior was defined in the Javadoc of PathEdit, but not actually
implemented.

It's necessary when one wants to use a PathEdit to check out a specific
stage in apply.

Bug: 390147
Change-Id: Iaed5cf60c554fc17e6c4d188caf4f0231da920d0


COMMENTS

author: Danika Greer
date: 2012-09-25 20:28:09.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2012-09-25 20:28:17.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2336/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-25 20:33:47.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2336/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2012-09-25 21:37:16.000000000

Patch Set 2:

In general I think this change is ok. With this change we the DirCacheEditor does what was documented.

I am just wondering whether we have to correct also the different subclasses of PathEdit. Some of them do not care about the stage. Most PathEdit implementations currently would do exactly the same thing to all stages. And I guess that's in most cases the wrong thing to do. I looked at PathEdit implementations in e.g. ResetCommand or StashApplyCommand.

-------------------------------------
author: Danika Greer
date: 2012-09-25 21:47:48.000000000

Patch Set 2:

Good point.

Another possibility would be to leave apply() as it currently is and add applyStage1, applyStage2, applyStage3 that can be implemented (but don't have to). Maybe apply() should also only be called on stage 0 then (not on stage 1 too).

-------------------------------------
author: Danika Greer
date: 2012-10-09 10:55:40.000000000

Patch Set 2:

So, any opinion on what would be better? The same apply() for all stages or an apply method per stage.

-------------------------------------
author: Zachary Orozco
date: 2012-10-09 13:29:49.000000000

Patch Set 2:

I personally think that the signature of PathEdit with one apply() is ok. The JavaDoc of PathEdit explicitly mentions that apply() will may be called multiple times for each path, once for each stage.

I would suggest to first accept this change. Afterwards I would fix our PathEdit subclasses as needed.

-------------------------------------
author: Danika Greer
date: 2012-10-10 20:32:33.000000000

Patch Set 2:

Ok. Maybe we should fix the subclasses before applying this change. Then we could reorder the commits so that this one comes first so that no breakage occurs in between.

If that's ok I'll proceed with that.

-------------------------------------
author: Zachary Orozco
date: 2012-10-11 10:33:06.000000000

Patch Set 2:

that's ok for me

-------------------------------------
author: Danika Greer
date: 2012-10-13 17:06:50.000000000

Patch Set 2:

Christian: I've gone through the list of PathEdit subclasses and created bugs for them, see dependencies of bug 391855. 

Could you please review them and help with the expected behavior on some of them? Would be nice :).

-------------------------------------
author: Juliet Cantu
date: 2012-11-10 17:40:01.000000000

Patch Set 2:

Since there is more than one way to add PathEdits, when adding a DirCacheEntry I think it would be enouugh to apply the edit only the that stage and when adding a path it would apply to all stages.

-------------------------------------
author: Danika Greer
date: 2012-11-12 21:49:07.000000000

Patch Set 2:

Hm, I'm not sure how that would work with the implementation of DirCacheEditor#applyEdits. Should it be possible to add a PathEdit for the stage 2 entry AND stage 3 entry for the same file?

-------------------------------------
