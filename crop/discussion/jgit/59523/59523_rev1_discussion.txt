DESCRIPTION

Bitmap generation: Clarify commit selection revwalk code

This is preparation for a followup patch that speeds it up.

Change-Id: I6e246afa735e8fa7ebf40c750b053d599204961f
Signed-off-by: Ariel Sawyer xxx@xxx.xxx


COMMENTS

author: Eden Lin
date: 2015-11-02 23:51:09.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-11-02 23:51:16.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7361/

-------------------------------------
author: Eden Lin
date: 2015-11-02 23:54:37.000000000

Patch Set 1:

(1 comment)

Line:268, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapPreparer.java -> I don't understand this part of the comment. Can you say more about it? What does it mean that writeBitmaps is the backing index? What is overly subtle here? Is the comment meant to be a TODO?

-------------------------------------
author: Brenden Conley
date: 2015-11-02 23:59:28.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7361/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2015-11-03 00:22:29.000000000

Patch Set 1:

(1 comment)

Line:268, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapPreparer.java -> Populate a bitmap representing the set of all reachable commits
from the current commit, excluding reused commits.

The RevFilter does this by, for each object encountered:
- or-ing against its bitmap if already computed and saved in writeBitmaps
- otherwise, adding the object

Bitmaps reused from writeBitmaps speed up the RevWalk by
allowing us to skip their ancestors.

-------------------------------------
author: Ariel Sawyer
date: 2015-11-03 02:26:32.000000000

Patch Set 1:

(1 comment)

Line:268, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapPreparer.java -> I was not planning to follow up on this as a TODO. The class relationships are complex and I think it would be nice to rework them but that is out of scope for the performance fix. It sounds like you might have an idea of how to simplify the code further.

One thing I learned from talking to Shawn is that there was a conscious decision to not reuse bitmaps when building bitmaps. I think that makes sense because if some git implementation introduces a bug in bitmap generation, you would like to be able to fix mangled repositories by just packing with a newer version that doesn't rely on bitmaps.

My claim "reachable commits from the current commit, excluding reused commits" is not what the code is doing. It really is all commits reachable from the current commit, with no exclusions. And the "or-ing" claim isn't quite correct.

What happens is that the RevFilter always adds the object, but CompressedBitmapBuilder.add() is smart in that if it finds that the commit being added has a corresponding bitmap, ORs in that bitmap into its bitset so that it contains the full set of reachable commits and then aborts the RevWalk.

-------------------------------------
author: Ariel Sawyer
date: 2015-11-05 19:44:28.000000000

Patch Set 1: Code-Review-1

I think we should drop all of the comments in this commit and only do the variable renamings. We can look at improving the comments once you have merged in all of your other commits.

-------------------------------------
author: Elise Key
date: 2017-08-29 13:16:00.000000000

Abandoned

Abandoning after 1 year or more of inactivity.

If this change is still needed, please restore it.

-------------------------------------
