DESCRIPTION

Extract UploadPack request parsing and response writing code

This is a refactoring for response buffering for non-bidirectional
requests. Extract the request parsing and ersponse writing code to
separate classes.

Change-Id: I67d609efb349ed6b2b74828f77101e5ce72e6d5e
Signed-off-by: Sandra Garrison xxx@xxx.xxx


COMMENTS

author: Sandra Garrison
date: 2017-03-30 23:26:02.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-03-30 23:26:10.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10064/

-------------------------------------
author: Brenden Conley
date: 2017-03-30 23:54:58.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10064/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2017-03-31 00:02:09.000000000

Patch Set 1: Code-Review-1

(7 comments)

I like where you're going with this. Some nits below. The general idea looks sensible.

Line:717, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> This just parses the "want"s, not "have"s, right? A name like parseWants would make it clearer.

Line:57, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPackRequest.java -> It's too bad that is public. It belongs as an inner class here, but it's hard to do anything about it.

Maybe worth marking xxx@xxx.xxx (in a separate change).

Line:88, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPackRequest.java -> Does this parse the entire request or a subset? My first guess was the entire request but looking closer I think that guess was wrong. Either way, this suggests that a javadoc comment would be helpful.

Line:152, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPackRequest.java -> peerHas is an output parameter? A javadoc comment would help.

Line:159, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPackRequest.java -> Not your fault, but I'm having trouble parsing this comment. Can you summarize for me? Does it mean to say that EOF is normal in some cases but not in others?

Line:9, /COMMIT_MSG -> Does this mean no functional change is intended? Best to explicitly say so, if so.

Line:10, /COMMIT_MSG -> response

-------------------------------------
author: Sandra Garrison
date: 2017-03-31 18:57:53.000000000

Patch Set 1:

(6 comments)

Line:717, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> Done

Line:88, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPackRequest.java -> Renamed the method name based on the other comment. I guess the name and the return type explain the behavior well?

Line:152, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPackRequest.java -> Done

Line:159, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPackRequest.java -> I interpret this comment in the same way. I added a Javadoc in NegotiateState and changed the name appropriately.

Line:9, /COMMIT_MSG -> Done

Line:10, /COMMIT_MSG -> Done

-------------------------------------
