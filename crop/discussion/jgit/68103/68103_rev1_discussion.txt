DESCRIPTION

Made a large chunk TextBuiltin's API public.  This gives clients the ability to shoot themselves in the foot, but it also allows them to initialize the commands in custom ways for purposes such as streaming output.

Signed-off-by: Aylin Meadows xxx@xxx.xxx
Change-Id: I1e5ebd9157e41bcf5ac5a885d1c1515a263955fa

COMMENTS

author: Aylin Meadows
date: 2016-03-09 23:02:10.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-03-09 23:02:16.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8170/

-------------------------------------
author: Aylin Meadows
date: 2016-03-09 23:05:55.000000000

Patch Set 1:

Hey guys!  I'm here at EclipseCon, trying to start to feed my changes in.  If you wanna discuss any of this in person, just gimme a call at 540-336-8043 and I'd be happy to meet up.  This change is probably the most potentially controversial, all the rest are pretty simple, I think.

-------------------------------------
author: Brenden Conley
date: 2016-03-09 23:18:52.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8170/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2016-03-12 01:07:31.000000000

Patch Set 1: Code-Review-1

(1 comment)

Line:7, /COMMIT_MSG -> * this line is way too wide
* I still don't understand the motivation why this is needed

-------------------------------------
author: Aylin Meadows
date: 2016-03-12 02:09:28.000000000

Patch Set 1:

Roger on line width.  From now on I'll wrap my commit messages at 72 characters.
As a gerrit newbie - I should now upload a new commit with the same change-id,
but with the commit message wrapped, correct?

As for why I made the fields public - I need to capture the streaming output of the commands (output and error), and I'd like to handle their exceptions in my own way.

The only way to access the commands using the public API is through Main, which
has a lot of hardcoded opinions about how a command should be called.

https://github.com/eclipse/jgit/blob/master/org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Main.java 

I tried refactoring main to make it less opinionated, but I couldn't figure out a way to do it while preserving its current behavior.  I also considered adding a new Main, called MainBare, to allow more barebones access to the commands, but it seemed like I was polluting JGit with the specifics of my problem.

By making the fields public, it's possible for clients to instantiate a command, and then set its various fields so that they can control exactly how the command is run to suit their own needs.

For example, here is how I call the commands, which is much smaller but totally
incompatible with how Main calls commands.
https://gist.github.com/nedtwigg/54ceb8a9b5498ca04fb1#file-gitclijgitwrapper-java-L32-L59

Making all these fields public isn't great.  A better way might be for
TextBuiltin.init() to take an InputStream and a pair of OutputStreams, and then expose them all as getters so that clients can flush them in case of errors.  But then you've got a method that takes 5 parameters, and two of them would be OutputStreams.  By making the fields public, it's at least clear in client code which OutputStream is which. It also seems like TextBuiltin is already past the point of hiding its implementation.

I'm happy to replace this with a 5-parameter TextBuiltin.init() method if you prefer.

-------------------------------------
