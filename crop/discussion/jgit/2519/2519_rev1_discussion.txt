DESCRIPTION

Ease access restrictions to allow subclassing of TransportGitSsh

Rather than creating a connection factory, as first suggested,
Roland and I can achieve our goal by being able to subclass
TransportGitSsh. This allows us to create our own
TransportGitSsh.Connection. Also, the resulting patch is much
smaller (only the word "protected" is added in several places,
along with required javadoc comments). A more elegant solution
could use a connection factory and make the
TransportGitSsh.Connection class non-nested. Such a Connection
class could allow the remote execution by any method (e.g.
telnet, rsh, etc.) (In our case we use
org.eclipse.ptp.remote.core.IRemoteProcessBuilder)

Bug: 336749


COMMENTS

author: Yoselin Hanna
date: 2011-02-17 17:56:26.000000000

Patch Set 1: (2 inline comments)



Line:173, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportGitSsh.java -> Empty Javadoc to get around API documenting is pointless. We require documentation for a reason, so implementors know what they need to implement the abstraction, or callers know how to use it.

Line:11, /COMMIT_MSG -> I wonder if the better solution is to create a ConnectionFactory class within TransportGitSsh and use a setConnectionFactory method. Then callers can still use Transport.open() to get a Transport instance, and if it is an SSH type set the factory, and if its not, leave it alone. This frees callers from needing to parse the URIish on their own and determine the protocol that JGit will use.

It might be a few more lines of code to add the factory, but the extra level of indirection might be useful.

A different approach would be to start removing the JSch information from TransportGitSsh and make a slightly more generic RemoteCommandConnection (by extracting TransportGitSsh.Connection into a new top level class), and rename TransportGitSsh to TransportGitRemoteCommand. Then we can hide all of the JSch stuff inside of a JSchRemoteCommandConnection and start to free JGit from only supporting JSch. (I'd like to also support MINA SSHD client as it looks to be a more solid implementation.)

-------------------------------------
author: Yoselin Hanna
date: 2011-02-23 21:54:09.000000000

Patch Set 1: Abandoned

Moved to change Iece43632086afadf175af6638255041ccaf2bfbb

-------------------------------------
