DESCRIPTION

RFC Extend the FS class for Java7

The most important difference is that in Java7 we have symbolic links
and for most operations in the work tree we want to operate on the link
itself rather than the link target, which the old File methods generally
do.

We also add support for the hidden attribute, which only makes sense
on Windows.

A new bundle is only activated when run with a Java7 execution
environment. It is implemented as a fragment.

Change-Id: I3d6580d6fa7b22f60d7e54ab236898ed44954ffd


COMMENTS

author: Juliet Cantu
date: 2012-12-27 14:46:11.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2012-12-27 14:46:18.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2615/ 

-------------------------------------
author: Brenden Conley
date: 2012-12-27 14:47:17.000000000

Patch Set 2: Fails

Build Failed 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2615/ : FAILURE

-------------------------------------
author: Brenden Conley
date: 2012-12-29 00:19:14.000000000

Patch Set 2: No score

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2634/ 

-------------------------------------
author: Brenden Conley
date: 2012-12-29 00:24:05.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2634/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2012-12-29 01:57:44.000000000

Patch Set 2: I would prefer that you didn't submit this

(22 inline comments)

I updated the build jobs to use jdk 7 to fix the build error on hudson

Line:1, org.eclipse.jgit.java7/src/org/eclipse/jgit/java7/FS_POSIX_Java7.java -> missing license header

Line:1, org.eclipse.jgit.java7/META-INF/eclipse.inf -> this file shouldn't be necessary, we excluded jgit from pack200 packing since pack200 hit errors when trying to pack jgit [1], but in general it should be used in order to reduce archive size

[1] https://bugs.eclipse.org/bugs/show_bug.cgi?id=372845

Line:1, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/java7/FSTest.java -> missing license header

Line:45, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/java7/FSTest.java -> style nit: it looks like there is an extra blank between FS and fs

Line:8, org.eclipse.jgit.java7/.settings/org.eclipse.jdt.core.prefs -> s/1.5/1.7/

Line:10, org.eclipse.jgit.java7/.settings/org.eclipse.jdt.core.prefs -> s/1.5/1.7/

Line:109, org.eclipse.jgit.java7/.settings/org.eclipse.jdt.core.prefs -> s/1.5/1.7/

Line:198, org.eclipse.jgit.test/tst/org/eclipse/jgit/util/FileUtilTest.java -> did you want to remove the comments here ?

Line:1, org.eclipse.jgit.java7/src/org/eclipse/jgit/java7/Java7FSFactory.java -> missing license header

Line:24, org.eclipse.jgit.test/org.eclipse.jgit.core--All-Tests (Java 7).launch -> s/JavaSE-1.6/JavaSE-1.7/

Line:1, org.eclipse.jgit.java7/src/org/eclipse/jgit/java7/FS_Win32_Java7Cygwin.java -> missing license header

Line:1, org.eclipse.jgit.java7.test/plugin.properties -> s/JGit Core Tests/JGit Core Java 7 Tests/

Line:1, org.eclipse.jgit.java7/src/org/eclipse/jgit/java7/FileUtil.java -> missing license header

Line:150, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> does this work when JGit is used outside of an OSGi runtime ? Instead we could directly check if Java 7 is available by checking for some JDK method introduced with Java 7, e.g. (see FS_POSIX_Java6)

 boolean isJava7 = needMethod(File.class, "toPath") != null;

and then we could instantiate Java7FSFactory instead of FSFactory

Line:243, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> s/an file/a file/

Line:256, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> s/an file/a file/

Line:115, org.eclipse.jgit.pgm/pom.xml -> instead we could make this dependent on available jdk version

 <activation>
      <jdk>1.7</jdk>
 </activation>

Line:443, pom.xml -> this is getting ugly, I think we should invert this and define properties explicitly specifying the Java version to be used instead of the ones to be skipped or we drop all these properties, have a maven profile per Java version and select the one to be activated by default using

 <profile>
     <id>jgit.java6</id>
       <activation>
          <jdk>1.6</jdk>
       </activation>
       ...
 </profile>
 <profile>
     <id>jgit.java7</id>
       <activation>
          <jdk>1.7</jdk>
       </activation>
      ...
 </profile>

Line:3, org.eclipse.jgit.java7.test/pom.xml -> Copyright should be yours, this was probably copied from somewhere else

Line:59, org.eclipse.jgit.java7.test/pom.xml -> s/Core Tests/Core Java 7 Tests/

Line:68, org.eclipse.jgit.java7.test/pom.xml -> instead we could use

 <activation>
      <jdk>1.7</jdk>
 </activation>

Line:3, org.eclipse.jgit.java7.test/.gitignore -> it looks like directory trash is created under directory target so this isn't necessary

-------------------------------------
author: Juliet Cantu
date: 2012-12-29 14:11:27.000000000

Patch Set 2: (22 inline comments)



Line:1, org.eclipse.jgit.java7/src/org/eclipse/jgit/java7/FS_POSIX_Java7.java -> Done

Line:1, org.eclipse.jgit.java7/META-INF/eclipse.inf -> This is a copy from org.eclipse.jgit

Line:1, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/java7/FSTest.java -> Done

Line:45, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/java7/FSTest.java -> Done

Line:8, org.eclipse.jgit.java7/.settings/org.eclipse.jdt.core.prefs -> Done

Line:10, org.eclipse.jgit.java7/.settings/org.eclipse.jdt.core.prefs -> Done

Line:109, org.eclipse.jgit.java7/.settings/org.eclipse.jdt.core.prefs -> Done

Line:198, org.eclipse.jgit.test/tst/org/eclipse/jgit/util/FileUtilTest.java -> Done

Line:1, org.eclipse.jgit.java7/src/org/eclipse/jgit/java7/Java7FSFactory.java -> Done

Line:24, org.eclipse.jgit.test/org.eclipse.jgit.core--All-Tests (Java 7).launch -> Done

Line:1, org.eclipse.jgit.java7/src/org/eclipse/jgit/java7/FS_Win32_Java7Cygwin.java -> Done

Line:1, org.eclipse.jgit.java7.test/plugin.properties -> Done

Line:1, org.eclipse.jgit.java7/src/org/eclipse/jgit/java7/FileUtil.java -> Done

Line:150, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> It works in Non-OSGi, i.e. jgit.sh. This checks if the jgit java7 module is in the classpath in a format readable by the JRE. Your jsJava7 would just be additional code, we'd still need what I wrote.

The fragment bundle is our way of making OSGi behave like non-OSGi in this respect, so no extra tricks are required for non-OSGi.

Line:243, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> Done

Line:256, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> Done

Line:115, org.eclipse.jgit.pgm/pom.xml -> Done

Line:443, pom.xml -> Done

Line:3, org.eclipse.jgit.java7.test/pom.xml -> Well it was. Done

Line:59, org.eclipse.jgit.java7.test/pom.xml -> Done

Line:68, org.eclipse.jgit.java7.test/pom.xml -> Done

Line:3, org.eclipse.jgit.java7.test/.gitignore -> Done

-------------------------------------
author: Douglas Trujillo
date: 2012-12-30 20:47:02.000000000

Patch Set 2: (1 inline comment)



Line:150, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> ok

-------------------------------------
