DESCRIPTION

Switch JSchSession to simple isolated OutputStream

Work around issues with JSch not handling interrupts by
isolating the JSch interactions onto another thread. Use
a simple lock to negotiate which thread is able to update
the buffer:  either application thread or the copier thread.

Change-Id: I42e3ba3d8c35a2e40aad340580037ebefbb99b53


COMMENTS

author: Yoselin Hanna
date: 2016-11-13 05:48:26.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2016-11-13 05:48:32.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9371/

-------------------------------------
author: Yoselin Hanna
date: 2016-11-13 05:51:27.000000000

Patch Set 3:

Thanks for the review Jonathan ... but I just rewrote it (again) as there were many bugs (as you were noticing) in earlier patch sets.

Latest ps3 is much simpler by using an ExecutorService with a SynchronousQueue to run no more than one "operation" at a time on the background thread.

-------------------------------------
author: Brenden Conley
date: 2016-11-13 06:18:36.000000000

Patch Set 3: Verified-1

Build Failed 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9371/ : ABORTED

-------------------------------------
author: Yoselin Hanna
date: 2016-11-13 16:19:33.000000000

Removed the following votes:

* Verified-1 by Brenden Conley (442)


-------------------------------------
author: Eden Lin
date: 2016-11-13 17:47:37.000000000

Patch Set 3: Code-Review+2

(2 comments)

Line:127, org.eclipse.jgit/src/org/eclipse/jgit/util/io/IsolatedOutputStream.java -> Would it be simpler to copier.awaitTermination and close dst ourselves, or does that run into problems in case the current thread is interrupted?

Line:10, /COMMIT_MSG -> nit: the commit message is stale now

-------------------------------------
author: Ariel Sawyer
date: 2016-11-13 18:35:02.000000000

Patch Set 3: Code-Review-1

(1 comment)

Line:150, org.eclipse.jgit/src/org/eclipse/jgit/util/io/IsolatedOutputStream.java -> submit() isn't documented as throwing an InterruptedException. Does it? If not then I don't see how this scheme works to allow timeouts.

-------------------------------------
author: Ariel Sawyer
date: 2016-11-13 18:39:21.000000000

Patch Set 3: Code-Review+2

(1 comment)

Line:150, org.eclipse.jgit/src/org/eclipse/jgit/util/io/IsolatedOutputStream.java -> Nevermind, I see it is the Future.get() that throws the InterruptedException.

-------------------------------------
author: Yoselin Hanna
date: 2016-11-13 19:05:20.000000000

Patch Set 3:

(1 comment)

Line:10, /COMMIT_MSG -> Done

-------------------------------------
author: Gerrit Code Review
date: 2016-11-13 21:13:04.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
