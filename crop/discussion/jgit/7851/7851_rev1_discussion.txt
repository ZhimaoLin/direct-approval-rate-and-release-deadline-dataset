DESCRIPTION

Fixed instability in some GC tests.

Some GC tests were sporadically failing. The reason was that they used
the setExpireAgeMillis method to define object expiration before
invoking the prune method. Depending on the CPU load during the test
run, the prune method may reach an object (which is considered
non-expired by the test) too late and actually prune it.

To make the test stable we now use the setExpire(Date expire) method and
define a time instant before which objects are considered to be expired.
This way the outcome of the prune method doesn't depend on the CPU load.

Change-Id: Ifc3323ca55ae56dbccdbc90a282ec3cf18ad7297
Signed-off-by: Dillon Cross xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2012-09-20 14:58:25.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2304/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-20 15:03:28.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2304/ : SUCCESS

-------------------------------------
author: Brenden Conley
date: 2012-09-20 20:04:15.000000000

Patch Set 1: No score

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2305/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-20 20:09:34.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2305/ : SUCCESS

-------------------------------------
author: Brenden Conley
date: 2012-09-20 20:21:02.000000000

Patch Set 1: No score

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2306/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-20 20:26:14.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2306/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2012-09-20 20:29:03.000000000

Patch Set 1: Looks good to me, approved; IP review completed



-------------------------------------
author: Douglas Trujillo
date: 2012-09-20 20:29:06.000000000

Change has been successfully merged into the git repository.

-------------------------------------
author: Danika Greer
date: 2012-09-23 00:59:38.000000000

Patch Set 1: (1 inline comment)



Line:330, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/GCTest.java -> Sasa: The above assertion `assertTrue(repo.hasObject(b))` still sometimes fails for me. Does fsTick() not wait long enough?

-------------------------------------
author: Dillon Cross
date: 2012-09-25 11:13:37.000000000

Patch Set 1: (1 inline comment)



Line:330, org.eclipse.jgit.test/tst/org/eclipse/jgit/storage/file/GCTest.java -> Strange. fsTick is based on the last-modified attribute of a (temporary) file in the file system. It will create a temporary file,
then keep touch-ing it until its last-modified changes and then return. This ensures that b is newer than a wrt the last-modified.

We could try two things:

- when this test fails on your machine please check the last-modified time for the blobs 'a' and 'b' in your test Git repository. You may need to comment out the tearDown method in order to prevent the deletion of the test repository

- try the following change in the test code: remove the gc.setExpire from the line 232 and use the last-modified of the blob b as the expiration date. Means: add 

 gc.setExpire(new Date(lastModified(b));

after the line 326. Let me know if this makes the test stable on your platform.

-------------------------------------
