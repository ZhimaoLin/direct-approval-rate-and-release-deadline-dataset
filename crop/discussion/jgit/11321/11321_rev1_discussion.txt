DESCRIPTION

File.renameTo behaves differently on Unix and Windows

On Windows renameTo will not overwrite a file, so it must be deleted
first. The fix for Bug 402834 did not account for that.

Bug: 403685
Change-Id: I3453342c17e064dcb50906a540172978941a10a6


COMMENTS

author: Brenden Conley
date: 2013-03-19 19:38:20.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3207/ 

-------------------------------------
author: Brenden Conley
date: 2013-03-19 19:43:54.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3207/ : SUCCESS

-------------------------------------
author: Juliet Cantu
date: 2013-03-19 20:16:57.000000000

Patch Set 1: Looks good to me, but someone else must approve; IP review completed



-------------------------------------
author: Danika Greer
date: 2013-03-20 00:05:50.000000000

Patch Set 1: (1 inline comment)



Line:1134, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> Delete twice, why?

-------------------------------------
author: Zachary Orozco
date: 2013-03-20 09:12:36.000000000

Patch Set 1: I would prefer that you didn't submit this

In the meantime we have a utility method in FileUtils.rename(). I suggest to put this logic there. There are also cases where the right solution to a failing rename is to try it again (see the javadoc of FS.retryFailedLockFileCommit()). And we should make clear that this could be harmful. If we first delete and then rename if somebody pulls the plug between these two steps we may have a corrupt repo.

-------------------------------------
author: Juliet Cantu
date: 2013-03-20 23:45:23.000000000

Patch Set 1: (1 inline comment)

The delete empty directory hierarchy does not belong on FileUtils.rename

Line:1134, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> One for file and one for empty directories

-------------------------------------
author: Zachary Orozco
date: 2013-03-21 15:45:54.000000000

Patch Set 1:

I was working on a similar problem that File.renameTo() behaved strange on Windows (change 11188). I solved this by introducing FileUtils.rename(). Now, in a different area of the coding we are solving the same problem: how to react on a failed renameTo(). My idea: Shouldn't we update FileUtils.rename() to do what ever we think is needed for a succesful rename (e.g. delete the target, delete empty folder structures) and use it everywhere?

-------------------------------------
author: Juliet Cantu
date: 2013-03-24 00:51:19.000000000

Patch Set 1:

something like this: https://git.eclipse.org/r/#/c/11414/

-------------------------------------
