DESCRIPTION

Align core.logAllRefUpdates={true,false} with C git

There are two separate ways C git sets the "default" for
core.logAllRefUpdates.

First, when initializing a repo, "git init" prepopulates the value in
the config file as "true" if non-bare, and leaves it unset otherwise:

  $ git init -q nonbare && cat nonbare/.git/config
  [core]
          repositoryformatversion = 0
          filemode = true
          bare = false
          logallrefupdates = true
  $ git init -q --bare bare.git && cat bare.git/config
  [core]
          repositoryformatversion = 0
          filemode = true
          bare = true

Fix FileRepository#create to match this behavior.

Second, separate from prepopulating the config file,
refs/files-backend.c:2055 treats an unset value as "false" if the repo
is bare and "true" otherwise:

  if (log_all_ref_updates == LOG_REFS_UNSET)
    log_all_ref_updates = is_bare_repository() ? LOG_REFS_NONE : LOG_REFS_NORMAL;

Fixing CoreConfig to match this behavior is ugly, because until now
there was a constant SectionParser KEY, and SectionParser can only read
a Config, it can't take into account any properties of the containing
repo that are not part of the Config. Deprecate the constant KEY and
replace it with a method key(Repository), using the new method (almost)
everywhere in JGit itself.

Change-Id: Ib5c2ff8650b67d889ad7af0329376f8700dea5a8


COMMENTS

author: Santos Moore
date: 2017-08-02 20:53:38.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2017-08-02 21:32:27.000000000

Patch Set 4:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/10796/

-------------------------------------
author: Brenden Conley
date: 2017-08-02 21:51:35.000000000

Patch Set 4: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/10796/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2017-08-04 22:34:39.000000000

Patch Set 4: Code-Review-1

(1 comment)

Line:78, org.eclipse.jgit/src/org/eclipse/jgit/lib/CoreConfig.java -> This is a problem. The SectionParser instance is used as the cache key in a Map. Each invocation is going to make a new entry in the cache which isn't caching at all.

You probably need to hold the SectionParser instance in the Repository. Or implement the interface with equals/hashCode methods so that its not producing a new cache entry on every call.

-------------------------------------
