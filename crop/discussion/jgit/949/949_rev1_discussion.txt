DESCRIPTION

Delegate repository access to refs, objects

Instead of using the internal field directly to access references
or objects, use the getter method to obtain the proper type of
database, and follow down from there.  This permits us to later
do a refactoring that makes those methods abstract and strips the
field out of the Repository class, moving it into a concrete base
class that is more storage implementation specific.

Change-Id: Ic21dd48800e68a04ce372965ad233485b2a84bef
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Blake Oneal
date: 2010-06-30 19:57:28.000000000

Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)



Line:448, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Why is this objectDatabase not refactored as well? Granted, not everything has a file - is this function scheduled for later deprecation? If so, perhaps having xxx@xxx.xxx would be a good idea. If not, can we call getObjectDatabase() and do some instanceof check?

-------------------------------------
author: Douglas Trujillo
date: 2010-06-30 21:28:18.000000000

Patch Set 1: Looks good to me, approved; IP review completed



-------------------------------------
author: Yoselin Hanna
date: 2010-06-30 23:01:43.000000000

Patch Set 1: (1 inline comment)



Line:448, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Because later in the series I remove toFile.  I didn't want to bother dealing with editing this here, to only remove it later.

I'm pretty sure that the way I did this series was non-optimal, and that yea, there's a case like this where something that should be changed in this commit, wasn't, because its gone 3 commits down or whatever.  *sigh*  That's what I get for doing some experimental refactoring hacking, and winding up with a 65 commit series.

-------------------------------------
author: Yoselin Hanna
date: 2010-07-27 16:11:58.000000000

Change has been successfully pushed.

-------------------------------------
