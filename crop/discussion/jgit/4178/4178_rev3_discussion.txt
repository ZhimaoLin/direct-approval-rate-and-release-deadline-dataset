DESCRIPTION

Remove ambiguous CheckoutConflictException

Remove the declared exception
org.eclipse.jgit.api.errors.CheckoutConflictException in MergeCommand
and PullCommand, since it is not actually thrown. Then, remove the
exception class itself. Leave
org.eclipse.jgit.errors.CheckoutConflictException untouched.

Bug: 356922
Change-Id: I865c4905997d9834c85a97fbe7287604daf99075

COMMENTS

author: Clay Cameron
date: 2011-09-08 09:46:55.000000000

Uploaded patch set 3.

-------------------------------------
author: Zachary Orozco
date: 2011-09-09 12:29:39.000000000

Patch Set 3: I would prefer that you didn't submit this

Why don't we fix it that these commands do really throw 
org.eclipse.jgit.api.errors.CheckoutConflictException 

The intention behind wrapping org.eclipse.jgit.errors.CheckoutConflictException inside a org.eclipse.jgit.api.errors.CheckoutConflictException was that "all" JGit API commands only throw GitAPIException and RuntimeExceptions. If you start using jgit api you can always start  with

try {
  mergeCmd.include(...).call()
} catch (GitAPIException e) {
  System.out.println("git problem: "+e.toString();
....
}

As a beginner who doesn't know how to react on all the different low-level JGit exceptions you should not be forced to catch dozens of exceptions just to do a "git log". Therefore we collect all possible exceptions in wrappers extending GitAPIException allowing you to write 
code catching only one exception type.

And then, if you get more experienced with Git exceptions, you still have the chance to catch the specific subclasses of GitAPIException exceptions.

-------------------------------------
author: Clay Cameron
date: 2011-09-12 14:27:19.000000000

Patch Set 3:

"wrapping org.eclipse.jgit.errors.CheckoutConflictException inside a org.eclipse.jgit.api.errors.CheckoutConflictException" is something that already exists or is it a solution to be implemented? I don't see such relation in the current code. 

The idea behind my latest patch was to remove one of the exceptions with as little changes as possible but I agree that leaving the one from the *.api.errors package makes more sense.

-------------------------------------
author: Gerrit Code Review
date: 2012-03-06 14:15:46.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
