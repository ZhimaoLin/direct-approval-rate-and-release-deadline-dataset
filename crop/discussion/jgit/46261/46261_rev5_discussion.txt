DESCRIPTION

Add support to follow HTTP redirects

git-core follows HTTP redirects so JGit should also provide this.

Implement config setting http.followRedirects with possible values
"false" (= never), "true" (= always), and "initial" (only on GET, but
not on POST).[1]

We must do our own redirect handling and cannot rely on the support
that the underlying real connection may offer. At least the JDK's
HttpURLConnection has two features that get in the way:

* it does not allow cross-protocol redirects and thus fails on
  http->https redirects (for instance, on Github).
* it translates a redirect after a POST to a GET unless the system
  property "http.strictPostRedirect" is set to true. We don't want
  to manipulate that system setting nor require it.
  
Additionally, git has its own rules about what redirects it accepts;[2]
for instance, it does not allow a redirect that adds query arguments.

We handle response codes 301, 302, 303, and 307 as per RFC 2616.[3]
On POST we do not handle 303, and we follow redirects only if
http.followRedirects == true.

Redirects are followed only a certain number of times. There are two
ways to control that limit:

* by default, the limit is given by the http.maxRedirects system
  property that is also used by the JDK. If the system property is
  not set, the default is 5. (This is much lower than the JDK default
  of 20, but I don't see the value of following so many redirects.)
* this can be overwritten by a http.maxRedirects git config setting.

The JGit http.* git config settings are currently all global; JGit has
no support yet for URI-specific settings "http.<pattern>.name". Adding
support for that is well beyond the scope of this change.

Like git-core, we log every redirect attempt (LOG.info) so that users
may know about the redirection having occurred.

[1] https://git-scm.com/docs/git-config
[2] https://kernel.googlesource.com/pub/scm/git/git/+/6628eb41db5189c0cdfdced6d8697e7c813c5f0f
[3] https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html

Bug: 465167
Change-Id: I86518cb76842f7d326b51f8715e3bbf8ada89859
Signed-off-by: Douglas Trujillo xxx@xxx.xxx
Signed-off-by: Alayna Houston xxx@xxx.xxx

COMMENTS

author: Alayna Houston
date: 2017-08-07 06:49:01.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2017-08-07 06:49:07.000000000

Patch Set 5:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/10865/

-------------------------------------
author: Alayna Houston
date: 2017-08-07 06:53:11.000000000

Patch Set 5:

(1 comment)

Line:655, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> I know that Log.info(String format, Object... args) exists. But the placeholder format is different, and I found it confusing to have one property using {} placeholders. I find it clearer with {0}, {1}, ... placeholders everywhere.

-------------------------------------
author: Brenden Conley
date: 2017-08-07 07:00:10.000000000

Patch Set 5: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/10865/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2017-08-07 07:11:12.000000000

Patch Set 5:

(1 comment)

Line:655, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> I think slf4j parameter substitution is faster in case logging for the relevant severity is switched off since it skips formatting in that case, see
https://www.slf4j.org/faq.html#logging_performance

-------------------------------------
author: Alayna Houston
date: 2017-08-07 07:20:02.000000000

Patch Set 5:

(1 comment)

Line:655, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> I know. I hadn't thought about info logging being switched off... your original code already had the LOG.info; I thought the idea was to always and unconditionally log, like C git.

(At least that's how I understood the text "when we encounter a whole-repo redirect during the initial ref discovery, we now inform the user on stderr" from the commit message at [1].)

If we want to stick with LOG.info and not use MessageFormat, then I think we should at least rename the message property to make clear it's a log message. "redirectHttpLogMessage", or "logMessageRedirectHttp".

Alternatively we can of course wrap the statement with
LOG.isInfoEnabled()...

[1] https://kernel.googlesource.com/pub/scm/git/git/+/50d3413740d1da599cdc0106e6e916741394cc98

-------------------------------------
