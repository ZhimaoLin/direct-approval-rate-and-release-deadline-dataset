DESCRIPTION

IndexPack: Use stack-based recursion for delta resolution

Replace 'method' with 'heap'-based recursion for resolving deltas.

Git packfile delta-chain depth can exceed 50 levels in certain files
(the packfile of the JGit project itself has >800 objects with
chain-length >50). Using method-based recursion on such packfiles will
quickly throw a StackOverflowError on VMs with constrained stack.

Benefits:

* packfile delta-resolution no longer limited by the maximum number
  of stack frames permitted on the current thread.

* slight performance improvement
  (3% speed increase on the packfile of the JGit project)

Change-Id: I1d9b3a8ba3c6d874d83cb93ebf171c6ab193e6cc


COMMENTS

author: Kendrick Carrillo
date: 2010-12-30 23:10:54.000000000

Uploaded patch set 4.

-------------------------------------
author: Kendrick Carrillo
date: 2010-12-30 23:40:59.000000000

Patch Set 4: Looks good to me, but someone else must approve

(2 inline comments)

This is a fairly minor tidy-up over Patch Set 3 - the nextVisit() method sits better on the DeltaVisit class if you ask me.

The code looks good to me, tho I just wanted to say that personally I prefer lobbing around immutable strongly-typed objects - I find the code easier to follow. I can see that mutability is sometimes necessary  but I wouldn't like to think it was being used prematurely... my 2 cents :-)

Line:22, /COMMIT_MSG -> It's a little bit faster!

Line:1141, org.eclipse.jgit/src/org/eclipse/jgit/transport/IndexPack.java -> made this a non-static method, putting it onto DeltaVisit where it looks a bit tider

-------------------------------------
author: Yoselin Hanna
date: 2010-12-31 00:49:13.000000000

Patch Set 4: (1 inline comment)

Yea, immutable objects work well... usually.  Here DeltaVisit is almost immutable, but its not where we implement tail recursion, and the list of children that need to be processed, because those are faster to be mutable.  The Java GC is good, but its not *that* good.

Line:1141, org.eclipse.jgit/src/org/eclipse/jgit/transport/IndexPack.java -> Good change making this an instance member, thanks.

-------------------------------------
