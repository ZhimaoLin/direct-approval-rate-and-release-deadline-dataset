DESCRIPTION

Added merge strategy RESOLVE

This adds the first merge strategy to JGit which does real
content-merges if necessary. The new merge strategy "resolve" takes as
input three commits: a common base, ours and theirs. It will simply takeover
changes on files which are only touched in ours or theirs. For files
touched in ours and theirs it will try to merge the two contents
knowing taking into account the specified common base.

Rename detection has not been introduced for now.

Change-Id: I49a5ebcdcf4f540f606092c0f1dc66c965dc66ba
Signed-off-by: Zachary Orozco xxx@xxx.xxx
Signed-off-by: Carlie Harper xxx@xxx.xxx


COMMENTS

author: Zachary Orozco
date: 2010-08-23 08:30:30.000000000

Uploaded patch set 5.

-------------------------------------
author: Zachary Orozco
date: 2010-08-23 08:49:43.000000000

Patch Set 5: Looks good to me, but someone else must approve; IP review completed

All merge tests succeed now

-------------------------------------
author: Carlie Harper
date: 2010-08-23 14:29:18.000000000

Patch Set 5: I would prefer that you didn't submit this

Plesae rebase. There are conflicts and compile errors which are difiicult to solve.

-------------------------------------
author: Yoselin Hanna
date: 2010-08-23 23:38:31.000000000

Patch Set 5: I would prefer that you didn't submit this

(6 inline comments)

Some early notes.  Given that this needs a rebase based on Stefan's remark I'm punting on further review right now.

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/merge/StrategyResolve.java -> Style-nit: Missing copyright header.

Line:6, org.eclipse.jgit/src/org/eclipse/jgit/merge/StrategyResolve.java -> Style-nit: We don't xxx@xxx.xxx tags.  And even if we did, this one isn't very useful to the rest of the world.  :-)

Line:17, org.eclipse.jgit/src/org/eclipse/jgit/merge/StrategyResolve.java -> I think "resolve" fits better with the other strategy names we have.

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> Missing copyright header.

Line:93, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> This isn't necessary.  When you need the inserter call getObjectInserter().  Your super class manages allocation and release for you.

Line:109, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> This should be customizable by the caller.  And more interestingly, I'd love to use this in Gerrit Code Review, and also to implement the recursive variant for multiple merge bases.

The latter two uses require that we *do not* have a working tree during the merge, and also that we don't lockDirCache() above but instead create a new in-core only DirCache.

-------------------------------------
