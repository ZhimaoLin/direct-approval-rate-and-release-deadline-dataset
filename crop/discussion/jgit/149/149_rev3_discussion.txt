DESCRIPTION

Clarify the definition of AnyObjectId.RAW_LEN and make assumptions explicit

This value should always be 20, and should always match with
Constants.OBJECT_ID_LENGTH.  Hardcode the constant to 20 to
support inlining, but check at class load time that the value
in Constants still matches our assumptions.

Also make the check for it an explicit assert. This will make the programm
fail at runtime when the assumption is violated.
Also it will eliminate the "dead code" warning encountered before.
The added comment will warn off anybody trying to change the assert.

Change-Id: I03f52131e64edcd0aa74bbbf36e7d42faaf4a698


COMMENTS

author: Perla Miles
date: 2009-12-25 18:21:40.000000000

Uploaded patch set 3.

-------------------------------------
author: Perla Miles
date: 2009-12-25 18:23:46.000000000

Patch Set 3: Looks good to me, but someone else must approve

I think now everybody's concerns should be in there.

It will fail if the assumption is violated. It explains why it does so. The intentions are clear to the syntactic checker so no warning will pop up.

-------------------------------------
author: Juliet Cantu
date: 2009-12-25 23:44:15.000000000

Patch Set 3: I would prefer that you didn't submit this; No score



-------------------------------------
author: Juliet Cantu
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:69, org.eclipse.jgit/src/org/eclipse/jgit/lib/AnyObjectId.java -> Thiis is the most backward thing I've seen for a long  time, You assert that 20 == 20 which is so obvious I do think we need to check that, lest we port this code to FORTRAN. 

Ack, for  the comment. Leave the rest or prove we need to "optimize" this,

-------------------------------------
