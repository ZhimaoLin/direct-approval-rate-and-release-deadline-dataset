DESCRIPTION

Make lib.Repository abstract and lib.FileRepository its implementation

To support other storage models other than just the local filesystem,
we split the Repository class into a nearly abstract interface and
then create a concrete subclass called FileRepository with the file
based IO implementation.

We are using an abstract class for Repository rather than the much
more generic interface as implementers will want to inherit a large
array of utility functions, such as resolve(String).  Having these in
a base class makes it easy to inherit them.

This isn't the final home for lib.FileRepository.  Future changes will
rename it into storage.file.FileRepository, but to do that we need to
also move a number of other related class, which we aren't quite ready
to do.

Change-Id: I1bd54ea0500337799a8e792874c272eb14d555f7
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-06-22 22:59:10.000000000

Uploaded patch set 3.

-------------------------------------
