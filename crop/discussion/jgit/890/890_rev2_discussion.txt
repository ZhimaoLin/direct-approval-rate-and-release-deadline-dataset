DESCRIPTION

Make lib.Repository abstract and lib.FileRepository its implementation

To support other storage models other than just the local filesystem,
we split the Repository class into a nearly abstract interface and
then create a concrete subclass called FileRepository with the file
based IO implementation.

We are using an abstract class for Repository rather than the much
more generic interface as implementers will want to inherit a large
array of utility functions, such as resolve(String).  Having these
in a base class makes it easy to inherit them.

This isn't the final home for lib.FileRepository.  Future changes
will rename it into storage.file.FileRepository, but to do that we
need to also move a number of other related class, which we aren't
quite ready to do.

Change-Id: I1bd54ea0500337799a8e792874c272eb14d555f7
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-06-19 00:09:54.000000000

Uploaded patch set 2.

-------------------------------------
author: Yoselin Hanna
date: 2010-06-19 00:13:43.000000000

Patch Set 2: Looks good to me, but someone else must approve; IP review completed

Splitting up Repository into its generic form and its concrete file based form is harder than it sounds.

I think the easiest approach is to do this step first.  Get the API split into abstract and concrete, then refine from there.

Moving lib.FileRepository to storage.file.FileRepository is a disaster.  We run into all sorts of package visibility issues.  I'd like to do it in smaller increments, after this initial split is done.

This means we'll be breaking our public API at least twice during the 0.9 development cycle, but both times the breakage is mostly limited to the construction of the FileRepository... and the second breakage is just an import statement edit (s/.lib.FileRepository/.storage.file.FileRepository/) and updating META-INF/MANIFEST.MF to export/import that package, and its mostly a mechanical change.

-------------------------------------
author: Douglas Trujillo
date: 2010-06-19 13:05:14.000000000

Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)



Line:70, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> typo: s/by any type/be any type/

-------------------------------------
