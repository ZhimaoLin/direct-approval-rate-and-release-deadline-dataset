DESCRIPTION

Skip nested copyfiles in RepoCommand.

Similar to nested directories, nested copyfiles won't work with git submodule
either.

Change-Id: Idbe965ec20a682fca0432802858162f8238f05de
Signed-off-by: Yuxuan 'fishy' Wang xxx@xxx.xxx


COMMENTS

author: Kayleigh Dennis
date: 2015-12-18 04:08:40.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2015-12-18 04:08:46.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7746/

-------------------------------------
author: Brenden Conley
date: 2015-12-18 04:16:53.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7746/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2015-12-21 18:33:40.000000000

Patch Set 2: Code-Review+1

(4 comments)

Line:438, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> (not about this change) could this be a try-with-resources? E.g.

 try (InputStream in = inputStream != null ? inputStream : new FileInputStream(path)) {
   ...
 }

Line:454, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> This seems like an odd place for this sort call. Would it make sense for it to go immediately after the addSubmodule loop above?

 for (RepoProject proj : ...) {
   addSubmodule(...);
 }
 if (repo.isBare()) {
   sort(bareProjects);
 }

Line:592, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Can this be static?

Line:604, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Looks sane.

An alternative implementation would be to iterate over the path components of copyFile and look up each string in bareProjects. That would be extra complication for not much performance benefit --- this is simpler.

-------------------------------------
author: Kayleigh Dennis
date: 2015-12-21 21:00:02.000000000

Patch Set 2:

(4 comments)

Line:438, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Done.

Line:454, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Actually parser.getFilteredProjects will return a sorted List of projects in the current implementation, but that's not guaranteed in anyway (and is not relied on before introducing isNestedCopyfile) so I added this sort to guarantee it's sorted (and if it's already sorted, resorting will be quite fast). I just feel it's more meaningful to put it near the code that really need it to be sorted (call to isNestedCopyfile), and of course, sort it before the loop is more efficient than sort it in the loop.

Put the sort call before won't make much sense there, as that's too far away from the code that relies on it being sorted.

Line:592, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Done

Line:604, org.eclipse.jgit/src/org/eclipse/jgit/gitrepo/RepoCommand.java -> Ack.

-------------------------------------
author: Gerrit Code Review
date: 2015-12-22 22:49:17.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
