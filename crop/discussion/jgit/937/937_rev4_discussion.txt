DESCRIPTION

Added support for whitespace ignoring

JGit did not have support for skipping whitespace when comparing
lines in RawText objects. I added a subclass of RawText that skips
whitespace in its equals and hashCode methods. I used a subclass
rather than adding functionality into RawText so that performance
would not be impacted by extra logic.

This class only supports ignoring all whitespace. Others will follow
that allow other forms of whitespace ignoring.

Change-Id: Ic2f79e85215e48d3fd53ec1b4ad13373dd183a4a


COMMENTS

author: Eliezer Sellers
date: 2010-06-25 17:37:38.000000000

Uploaded patch set 4.

-------------------------------------
author: Yoselin Hanna
date: 2010-06-25 18:46:34.000000000

Patch Set 4: I would prefer that you didn't submit this

(4 inline comments)



Line:93, org.eclipse.jgit/src/org/eclipse/jgit/diff/RawTextIgnoreAllWhitespace.java -> Given that you just trimmed whitespace before the loop, this is going to be redundant.  I think you can remove the trimLeadingWhitespace of as on 84/85 and just let these loops inside the main loop handle that.

Line:110, org.eclipse.jgit/src/org/eclipse/jgit/diff/RawTextIgnoreAllWhitespace.java -> Well, ideally ae - as = 0 and be - bs = 0 here.  That's the only way that we know we checked every character.  Thing is, this expression is an odd way to say it.

Wouldn't

  return as == ae && bs == be;

Be a more direct way  to say that we must have evaluated every character in both ranges?

Line:65, org.eclipse.jgit.test/tst/org/eclipse/jgit/diff/RawTextIgnoreAllWhitespaceTest.java -> We should also test that foo != f, and f != foo, to make sure we test the end condition when we fall out of the main loop because one of the strings is shorter than the other.

Line:92, org.eclipse.jgit.test/tst/org/eclipse/jgit/diff/RawTextIgnoreAllWhitespaceTest.java -> I wouldn't include this case in testEqualsWithWhitespace.  Do it in the test above, as these two compares don't have any whitespace on their lines.

-------------------------------------
