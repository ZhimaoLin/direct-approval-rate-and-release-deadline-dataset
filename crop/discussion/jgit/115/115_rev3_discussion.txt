DESCRIPTION

Method to get a 'humanish' name from a path

Change-Id: Iec0688232bd59d4626111d77633109918e8e1df3


COMMENTS

author: Ace Duncan
date: 2009-12-08 10:29:10.000000000

Uploaded patch set 3.

-------------------------------------
author: Ace Duncan
date: 2009-12-08 10:41:25.000000000

Patch Set 3: No score



-------------------------------------
author: Ace Duncan
date: 2009-12-09 23:14:55.000000000

Patch Set 3: Looks good to me, but someone else must approve; No score



-------------------------------------
author: Juliet Cantu
date: 2009-12-10 21:45:48.000000000

Patch Set 3: No score; No score



-------------------------------------
author: Ace Duncan
date: 2009-12-11 08:34:36.000000000

Patch Set 3: No score



-------------------------------------
author: Ace Duncan
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:410, org.eclipse.jgit/src/org/eclipse/jgit/transport/URIish.java -> It seems to me we shouldn't return an empty value because it's not a name if it's empty.

However I'm not sure which solution would be the best: a) always using a try/catch block (even if an empty value is absolutely OK for some case) or b) just use "".equals(getHumanishName()) if an empty string isn't suitable in a particular case.

Another question is should we behave in this case in an exactly same way as a C implementation does.

-------------------------------------
author: Juliet Cantu
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:410, org.eclipse.jgit/src/org/eclipse/jgit/transport/URIish.java -> So we allow cloning /.git but cannot get the humanish name of it?

C Git allows this
$ git clone /.git
Initialized empty Git repository in /home/me/tmp/.git/.git/

Shouldn't we return "" then?

Tried some other combinations with C git that "workded", but made no sense.

-------------------------------------
author: Ace Duncan
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:410, org.eclipse.jgit/src/org/eclipse/jgit/transport/URIish.java -> We need this check because org.eclipse.jgit.transport.URIish.URIish(String) accepts these URIs and we'll return an empty string:

- "git://" + ".git"
- "/.git"
- "//.git"
- "git://" + "/abc//.git"

-------------------------------------
