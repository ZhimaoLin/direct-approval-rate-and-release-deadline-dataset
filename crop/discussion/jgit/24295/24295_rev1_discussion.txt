DESCRIPTION

RFC: BucketQueue (LinearMinFinder)

Add new data structure BucketQueue. BucketQueue is a natural stable
priority queue which does not use any auxiliary variables (i.e. a
counter or an index) to stably break ties which means it uses O(n) less
storage than an implementation that does require an auxiliary variable
(e.g. the Java PriorityQueue).

Elements are inserted into a staging list. Whenever an element is
requested either through peek() or pop() the stage is consolidated into
"buckets" using the following rule: the stage is pushed onto the front
of the list of buckets. If buckets.head.size > buckets.head^.size/2 then
the bucket is merged into buckets.head^. This is done recursively until
it can no longer be done.

Insert times will always be O(1) since it is simply placed on the stage
each time. Retrieval times will be worst case O(nlgn + klgn) where n
is the number of elements and k is the number of buckets. The upper
bound for k is lgn due to the consolidation rule. The worst case for
retrievals is thus O(nlgn + lgnlgn) = O(nlgn). In practice, if many
retrievals are done in succession the amortized worst case running time
for retrievals should be O(lgn) since consolidation will only happen
once on the first retrieval after an add.

MinFinder is a generic abstract class that when implemented finds the
list with the smallest head element.

This commit implements a MinFinder which just linearly scans each list
to find the smallest one.

Change-Id: I2bba90e4c1cce1e0172793c748d8574f2183bac4
Signed-off-by: Zane Norton xxx@xxx.xxx


COMMENTS

author: Zane Norton
date: 2014-04-01 22:37:17.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-04-01 22:42:30.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/4929/

-------------------------------------
author: Brenden Conley
date: 2014-04-01 22:53:30.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/4929/ : SUCCESS

-------------------------------------
author: Zane Norton
date: 2014-05-01 22:02:03.000000000

Patch Set 1:

Dave, any chance you could take a look at this?

-------------------------------------
author: Esmeralda Fritz
date: 2015-03-04 16:21:59.000000000

Patch Set 1:

Any update on the status of this patch? Am I correct to assume that this will help to increase the push performance to repos with a lot of refs in refs/changes?

-------------------------------------
author: Zane Norton
date: 2015-03-04 18:59:50.000000000

Patch Set 1:

> Any update on the status of this patch? Am I correct to assume that
 > this will help to increase the push performance to repos with a lot
 > of refs in refs/changes?

It certainly did when we developed it.  As for how it compares to the tip of jgit today, I don't know.  Please do post any results you come up with if you do any testing to find out for yourself.

-------------------------------------
author: Elise Key
date: 2017-08-29 13:16:08.000000000

Abandoned

Abandoning after 1 year or more of inactivity.

If this change is still needed, please restore it.

-------------------------------------
