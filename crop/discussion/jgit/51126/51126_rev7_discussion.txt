DESCRIPTION

IO: Add a method for reading lines

Change-Id: Ib7be76aa7ac889354ad4782e2b64d4221a0e25b9


COMMENTS

author: Santos Moore
date: 2015-07-07 19:45:27.000000000

Uploaded patch set 7.

-------------------------------------
author: Brenden Conley
date: 2015-07-07 20:31:08.000000000

Patch Set 7:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6862/

-------------------------------------
author: Brenden Conley
date: 2015-07-07 20:38:19.000000000

Patch Set 7: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6862/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2015-07-08 17:04:22.000000000

Patch Set 7: Code-Review-1

(1 comment)

Line:425, org.eclipse.jgit/src/org/eclipse/jgit/util/IO.java -> Don't we want to keep reading in this case? We haven't hit EOF yet as n > 0. Maybe the underlying stream didn't have 1024 chars ready but had 250 ready and gave those to you above. Calling again would block until more become ready and you can find LF in that next batch?

Maybe I made a mistake by suggesting this. Would it be simpler to just document the caller should pass BufferedReader or a Reader(BufferedInputStream) to minimize the cost of single character IO ... and then verify callers are doing that?

-------------------------------------
author: Santos Moore
date: 2015-07-08 17:30:42.000000000

Patch Set 7:

(1 comment)

Line:425, org.eclipse.jgit/src/org/eclipse/jgit/util/IO.java -> I forgot n may be less than the buffer length in this case. Easy fix.

Requiring BufferedReader in this method is a possibility. I don't know how we would check for Reader(BufferedInputStream); InputStreamReader doesn't expose its delegate stream.

-------------------------------------
