DESCRIPTION

StreamCopyThread: Do not drop data when flush is observed before writing

A caller runs

	pipe.write(some data);
	pipe.flush();
	copyThread.flush();

After the pipe.flush(), the StreamCopyThread reads the data that was
written and prepares to copy it out.  If the copyThread.flush() call
interrupts the copyThread before it acquires writeLock and starts
writing, we throw away the data we just read to fulfill the flush.
Oops.

Noticed during the review of e67d59df3fb8ae1efe94a54efce36784f7cc83e8
(StreamCopyThread: Do not let flush interrupt a write, 2016-11-04),
which introduced this bug.

Change-Id: I4aceb5610e1bfb251046097adf46bca54bc1d998


COMMENTS

author: Eden Lin
date: 2016-11-04 23:04:04.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-11-04 23:04:11.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9349/

-------------------------------------
author: Eden Lin
date: 2016-11-04 23:08:32.000000000

Patch Set 1: Verified+1

-------------------------------------
author: Brenden Conley
date: 2016-11-04 23:21:02.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9349/ : SUCCESS

-------------------------------------
author: Gerrit Code Review
date: 2016-11-04 23:48:55.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
