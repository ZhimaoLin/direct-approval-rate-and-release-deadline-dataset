DESCRIPTION

Rebase: Add --preserve-merges support

With --preserve-merges C Git re-does merges using the rewritten merge
parents, discarding the old merge commit. For the common use-case of
pull with rebase this is unfortunate, as it loses the merge conflict
resolution (and other fixes in the merge), which may have taken quite
some time to get right in the first place.

To overcome this we use a two-fold approach:
If any of the (non-first) merge parents of a merge were rewritten, we
also redo the merge, to include the (potential) new changes in those
commits.
If only the first parent was rewritten, i.e. we are merging a branch
that is otherwise unaffected by the rebase, we instead cherry-pick the
merge commit at hand. This is done with the --mainline 1 and --no-commit
options to apply the changes introduced by the merge. Then we set up an
appropriate MERGE_HEAD and commit the result, thus effectively forging a
merge.

Apart from the approach taken to rebase merge commits, this
implementation closely follows C Git. As a result, both Git
implementations can continue rebases of each other.

Preserving merges works for both interactive and non-interactive rebase,
but as in C Git it is easy do get undesired outcomes with interactive
rebase.

CommitCommand supports committing merges during rebase now.

Change-Id: I4cf69b9d4ec6109d130ab8e3f42fcbdac25a13b2
Signed-off-by: Kaden Henson xxx@xxx.xxx


COMMENTS

author: Kaden Henson
date: 2014-07-10 22:37:54.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-07-10 23:17:54.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/5327/

-------------------------------------
author: Brenden Conley
date: 2014-07-10 23:36:48.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/5327/ : SUCCESS

-------------------------------------
author: Danika Greer
date: 2014-07-11 01:35:29.000000000

Patch Set 1:

Don't yet have the time to review, but looking forward to this :). Could you create a corresponding bug report, so we can link to it and track it?

-------------------------------------
author: Kaden Henson
date: 2014-07-11 10:40:04.000000000

Patch Set 1:

Submitted bug 439421 (https://bugs.eclipse.org/bugs/show_bug.cgi?id=439421) to track this. There is also bug 429664 (https://bugs.eclipse.org/bugs/show_bug.cgi?id=429664) for supporting merge preservation during pull-with-rebase.

-------------------------------------
author: Juliet Cantu
date: 2014-07-14 06:08:56.000000000

Patch Set 1: Code-Review-1

(5 comments)

nit-picks only

Line:498, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> nit-pick: An empty line would be nice here or break out the "else" into a method too

Line:544, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Capitalize If

Line:554, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Metioning the difference to C Git might be worthwhile here (too).

Line:13, /COMMIT_MSG -> The forgotten git-rerere ;-)

Line:27, /COMMIT_MSG -> This approach sound sane. Have you discussed changing C Git to match?

-------------------------------------
author: Juliet Cantu
date: 2014-07-14 06:09:41.000000000

Patch Set 1:

(1 comment)

Line:36, /COMMIT_MSG -> mention the bugzilla issue you opened

-------------------------------------
author: Kaden Henson
date: 2014-07-14 18:43:44.000000000

Patch Set 1:

(6 comments)

Line:498, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Done

Line:544, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Done

Line:554, org.eclipse.jgit/src/org/eclipse/jgit/api/RebaseCommand.java -> Done

Line:13, /COMMIT_MSG -> With rerere support in JGit this changeset would probably not exist in this "explorative" form :-)

Line:27, /COMMIT_MSG -> Will do.

Line:36, /COMMIT_MSG -> Done

-------------------------------------
