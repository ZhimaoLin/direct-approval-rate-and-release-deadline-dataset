DESCRIPTION

Fix misspelled class name: EmtpyCommitException -> EmptyCommitException

Change-Id: I55196020146f26951988988c14ac9a6f85061ae2
Signed-off-by: Elise Key xxx@xxx.xxx


COMMENTS

author: Elise Key
date: 2017-07-05 01:44:54.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-07-05 01:45:01.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10401/

-------------------------------------
author: Brenden Conley
date: 2017-07-05 02:01:02.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10401/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2017-07-05 06:39:20.000000000

Patch Set 1:

I wanted to directly merge this. But on the second thought: wouldn't we break existing clients when we rename an API class?

-------------------------------------
author: Elise Key
date: 2017-07-05 06:40:59.000000000

Patch Set 1:

> I wanted to directly merge this. But on the second thought:
 > wouldn't we break existing clients when we rename an API class?

Yes, I was wondering how we should handle this.

Mark the misspelled one xxx@xxx.xxx and add a new one with correct spelling?

-------------------------------------
author: Zachary Orozco
date: 2017-07-05 06:45:04.000000000

Patch Set 1:

> Yes, I was wondering how we should handle this.
 > 
 > Mark the misspelled one xxx@xxx.xxx and add a new one with
 > correct spelling?

Yes, this could be done now. But what's about the existing usages of the exception in our public API? CommitCommand would have to continue to throw the misspelled Exception, or?

-------------------------------------
author: Elise Key
date: 2017-07-05 06:47:18.000000000

Patch Set 1:

> > Yes, I was wondering how we should handle this.
 > >
 > > Mark the misspelled one xxx@xxx.xxx and add a new one with
 > > correct spelling?
 > 
 > Yes, this could be done now. But what's about the existing usages
 > of the exception in our public API? CommitCommand would have to
 > continue to throw the misspelled Exception, or?

Hmm, yes, it's not as straightforward as it seemed.

How strict do we need to be about breaking the API for cases like this?

-------------------------------------
author: Elise Key
date: 2017-07-18 05:07:55.000000000

Abandoned

-------------------------------------
