DESCRIPTION

Introduce transfer descriptor for FileLfsServlet

Requirement:
As a gerrit administrator I want to have a possibility to configure
various file based lfs repositories so that I can group LFS data
for potential migration.

Solution:
Delegate file based repository resolution from FileLfsServlet to
FileLfsTransferDescriptor so that it may be dynamically retrieved
from request content path.

Patch contains also DefaultFileLfsTransferDescriptor that preserves
current behaviour and resolves request to the one file based
repository.

Change-Id: If06659c00aa4f203bb90abf530a2c4af8ce4967e
Signed-off-by: Rylan Clark xxx@xxx.xxx


COMMENTS

author: Rylan Clark
date: 2016-10-11 06:42:13.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2016-10-11 06:42:19.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9231/

-------------------------------------
author: Brenden Conley
date: 2016-10-11 06:53:07.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9231/ : SUCCESS

-------------------------------------
author: Dillon Cross
date: 2016-10-11 11:10:49.000000000

Patch Set 2: Code-Review-1

I think that supporting per-project LFS backend in the LFS plugin justifies
introduction of a new abstraction in JGit (FileLfsTransferDescriptor).

Routing LFS content requests to the responsible LFS backend could likely be
achieved in the LFS plugin itself.

IMHO, If we need to fix something in JGit it should at most be some implementation class.

-------------------------------------
author: Douglas Trujillo
date: 2016-10-11 13:50:29.000000000

Patch Set 2: Code-Review-1

* I don't understand why we need a new abstraction in order to support multiple big object repositories, maybe we need to change some implementation
* only push bug fixes to stable branches, we don't release enhancements in service releases

-------------------------------------
author: Rylan Clark
date: 2016-10-12 19:47:15.000000000

Abandoned

supporting multiple object repositories was hopefully achieved without this change :) however I believe that sooner or later we will have to revisit some design decisions here as it is really hard to extend functionality of solution internals...

-------------------------------------
