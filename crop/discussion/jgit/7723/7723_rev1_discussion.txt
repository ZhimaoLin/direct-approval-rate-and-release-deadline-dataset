DESCRIPTION

Fix ResolveMerger issue with submodule conflict

ResolveMerger throws a MissingObjectException when it encounters
a submodule conflict while merging. The reason is that it treats
the submodule link as a blob and tries to read its contents.

We solve the issue by detecting before content merge whether the
path to be merged is a submodule link, and skip the content
merge if it is.

Bug: 389238
Change-Id: I9a58dfc7716b28a21f5c04cf3a865091ae8dfe7e
Signed-off-by: Tony Gould xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2012-09-12 05:26:58.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2240/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-12 05:31:48.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/2240/ : SUCCESS

-------------------------------------
author: Tony Gould
date: 2012-09-12 05:41:48.000000000

Patch Set 1:

I am the author of this commit. The copyright is owned by my employer Eficode Oy Finland. I have Eficode's permission to contribute this content to Eclipse.

-------------------------------------
author: Zachary Orozco
date: 2012-09-12 09:43:14.000000000

Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)

Good catch. I like this modification. I only propose to move the modification a few lines down to make the intent clearer.

Line:543, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> I would move this block 5 lines down directly before the call to contentMerge(). This makes it clearer that the only thing you are preventing is the attempt to content merge submodules. At the current place it is not obvious that the next thing we would try is content-merge.

-------------------------------------
author: Tony Gould
date: 2012-09-12 10:23:30.000000000

Patch Set 1: (1 inline comment)



Line:543, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> Done

-------------------------------------
