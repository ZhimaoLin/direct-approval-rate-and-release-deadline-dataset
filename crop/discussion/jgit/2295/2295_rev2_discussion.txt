DESCRIPTION

RFC Store Git on any DHT

jgit.storage.dht is a new storage provider implementation for JGit
that permits storing the Git repository into a distributed hashtable,
NoSQL system, or traditional database.  The actual underlying storage
system is completely undefined, and can be plugged in by implementing
9 small interfaces:

  *  Database
  *  RepositoryIndexTable
  *  RepositoryTable
  *  RefTable (and RefTransaction)
  *  ChunkTable
  *  ObjectIndexTable
  *  ObjectListTable
  *  WriteBuffer

The storage provider interface tries to assume very little about the
underlying storage system, and requires only three key features:

  *  key -> value lookup (a hashtable is suitable)
  *  atomic updates on single rows
  *  asynchronous operations (Java's ExecutorService is easy to use)

Most NoSQL database products offer all 3 of these features in their
clients, and so does any decent network based cache system like the
open source memcache product.  Relying only on key equality for data
retrevial makes it simple for the storage engine to distribute across
multiple machines.  Traditional SQL systems could also be used with a
(yet to be written) JDBC based spi implementation.

Thus far I have implemented three storage systems for the spi layer:
Apache Cassandra [1], Google Bigtable and a generic caching
implementation that can ride on top of memcache.  All three systems
weigh in with an spi layer around 1000 lines of code to implement the
above 9 interfaces.  This is a huge reduction in size compared to
prior attempts to implement a new JGit storage layer.  As this package
shows, a complete JGit storage implementation is closer to 10,000
lines of fairly complex code.

A simple network cache is also provided in storage.dht.spi.cache,
implementers can use CacheDatabase to wrap any other type of Database
and perform fast reads against a network based cache service, such as
the open source memcached.

[1] https://github.com/spearce/jgit_cassandra

Change-Id: I0aa4072781f5ccc019ca421c036adff2c40c4295
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2011-01-28 00:29:01.000000000

Uploaded patch set 2.

-------------------------------------
author: Yoselin Hanna
date: 2011-01-28 00:34:54.000000000

Patch Set 2:

Still not a final implementation.  However, it can now handle the linux-2.6 repository.  I also added an abstract implementation of a caching service.  I've glued it onto a variant of memcache, and with memcache and cached object lists we can clone linux-2.6 in about 3 minutes.

I'm keeping it blocked from submission because I want to clean up documentation, and add high-level docs about how the schema works first.  Oh, and unit tests, and ... :-)

-------------------------------------
