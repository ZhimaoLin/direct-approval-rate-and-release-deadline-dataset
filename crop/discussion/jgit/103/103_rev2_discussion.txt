DESCRIPTION

Refactor our Maven build to be modular

Drop our simple and stupid jgit.sh and instead rely upon Maven
for the command line based build.  Maven is relatively simple to
download and install, and doesn't require the entire Eclipse IDE.

To avoid too much refactoring of the current code we reuse the
existing src/ directory within each plugin, and treat each of
the existing OSGI bundles as one Maven artifact.

The command line wrapper jgit.sh no longer works in the uncompiled
state, as we don't know where to obtain our JSch or args4j from.
Developers will now need to compile it with `mvn package`, or run
our Main class from within an IDE which has the proper classpath.

Bug: 291265
Change-Id: I355e95fa92fa7502651091d2b651be6917a26805
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2009-11-03 01:56:19.000000000

Uploaded patch set 2.

-------------------------------------
author: Yoselin Hanna
date: 2009-11-03 17:55:13.000000000

Patch Set 2:  Looks good to me, approved; IP review completed



-------------------------------------
author: Yoselin Hanna
date: 2009-11-03 19:33:11.000000000

Change has been successfully merged into the git repository.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 15:26:29.000000000

MISMATCHED INLINE COMMENT
Line:1, .gitignore -> If I used a single ignore at the top level with the lines:

  bin
  target

these would match in *every* subdirectory within the entire repository.  Thus a source package called "bin" or "target" would be omitted, which may lead a contributor to forget to git add something they have created.

The only safe way to force limit these to the top of each plugin directory is to use a leading "/" as I have done.  I could use an identical file in each plugin (as this patch does), or I could have used a single top-level file with every plugin:

  /org.eclipse.jgit/bin
  /org.eclipse.jgit/target
  /org.eclipse.jgit.test/bin
  /org.eclipse.jgit.test/target

Either form is ugly, but using the identical file makes it easier to setup a new project as you just need to cp .gitignore.

-------------------------------------
author: Ace Duncan
date: 2010-03-10 15:26:29.000000000

MISMATCHED INLINE COMMENT
Line:1, .gitignore -> Why not using single .gitignore in the project's root? Any reason for duplicating same lines for every project?

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:79, pom.xml -> Good point.  I'll send another patch shortly to use this URL.

-------------------------------------
author: Ace Duncan
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:79, pom.xml -> What about using more specific URL like https://bugs.eclipse.org/bugs/buglist.cgi?query_format=advanced;component=JGit;product=EGit;classification=Technology ?

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:8, org.eclipse.jgit.pgm/jgit.sh -> The added copyright statement made the file too dissimilar from its source so git decided it wasn't a rename.

-------------------------------------
author: Ace Duncan
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:8, org.eclipse.jgit.pgm/jgit.sh -> Why this was recorded as delete/add and not a move?

-------------------------------------
