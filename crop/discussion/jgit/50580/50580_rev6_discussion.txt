DESCRIPTION

Enable annotation based NPE analysis in jgit

Bug: 470647
Change-Id: I14d1983bb7c208faeffee0504e0567e38d8a89f3
Signed-off-by: Jayvion Booth xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2015-08-14 19:36:47.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7014/

-------------------------------------
author: Brenden Conley
date: 2015-08-14 19:43:35.000000000

Patch Set 6: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7014/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2015-08-18 07:54:52.000000000

Patch Set 6:

(1 comment)

Line:70, org.eclipse.jgit.archive/.settings/org.eclipse.jdt.core.prefs -> why is this now ignored ?

-------------------------------------
author: Jayvion Booth
date: 2015-08-18 08:07:12.000000000

Patch Set 6:

(1 comment)

Line:70, org.eclipse.jgit.archive/.settings/org.eclipse.jdt.core.prefs -> Honestly, I can't remember. I've made a setup which had no new "compile errors". I can load the patch this night and play with it again.

-------------------------------------
author: Jayvion Booth
date: 2015-08-18 19:00:11.000000000

Patch Set 6:

> (1 comment)

I've played now a bit with this option.

The problem is that the JDT compiler seem not to perform real data flow analysis, so that if you have an "interruption" in the data flow, it can't track the original Nullness state even if the code is crystal clear and so you are forced to annotate each and every occurence of the data with some kind of Nullness annotation.

Example is RefDirectory.LooseNonTag and RefDirectory.LooseRef.

If one annotates RefDirectory.LooseRef.peel() method with @NonNull, jdt reports error at RefDirectory.LooseNonTag.peel() even if we know that the only value returned by this method is a final private field assigned in the constructor from a @NonNull annotated parameter, so it is xxx@xxx.xxx

The solution would be to annotate that final private field also xxx@xxx.xxx which is an overkill IMHO.

So for now I would not enable this particular option and hope that later versions of jdt can better trace the data flow.

-------------------------------------
author: Gerrit Code Review
date: 2015-08-21 08:47:50.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
