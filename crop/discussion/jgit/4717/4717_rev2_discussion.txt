DESCRIPTION

Add ApplyCommand to JGit API 

Bug: 361548
Change-Id: I08e1369e142bb19f42a8d7bbb5a7d062cc8533fc


COMMENTS

author: Clay Cameron
date: 2011-12-09 11:13:56.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2011-12-09 11:14:02.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1179/ 

-------------------------------------
author: Brenden Conley
date: 2011-12-09 11:17:07.000000000

Patch Set 2: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1179/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2012-01-16 00:34:58.000000000

Patch Set 2: I would prefer that you didn't submit this

(14 inline comments)



Line:58, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/ApplyCommandTest.java -> these tests only cover change type ADD, we also need tests for the other change types, also it would be good to have tests for error situations

Line:90, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/ApplyCommandTest.java -> why do you test this for E, X, Y, Z ? Somehow I feel I miss the point here...

Line:95, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> add a technical check to prevent that the same command object can be run more than once, see e.g. AddComand.call()

Line:99, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> Commands should declare to throw GitAPIException for exceptions which are supposed to be handled by clients, specific exceptions should be subclasses of GitAPIException. 

JGitInternalException should wrap internal exception clients can't handle in a reasonable way.

Line:109, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> why don't you throw a checked exception here ? I would expect something like a PatchFormatException extending GitAPIException and wrapping the format errors

Line:151, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> use FileUtils.createNewFile() instead in order to check return value

Line:158, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> style nit: no curly braces around single line blocks

Line:164, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> style nit: no curly braces around single line blocks

Line:169, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> style nit: no curly braces around single line blocks

Line:207, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> style nit: no curly braces around single line blocks

Line:208, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> fix TODO

Line:219, org.eclipse.jgit/src/org/eclipse/jgit/api/ApplyCommand.java -> style nit: no curly braces around single line blocks

Line:89, org.eclipse.jgit/src/org/eclipse/jgit/patch/HunkHeader.java -> fix TODO

Line:95, org.eclipse.jgit/src/org/eclipse/jgit/patch/HunkHeader.java -> externalize the error message

maybe better use "Illegal hunk control character" ?

-------------------------------------
author: Clay Cameron
date: 2012-01-23 00:10:01.000000000

Patch Set 2: (1 inline comment)



Line:90, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/ApplyCommandTest.java -> I'm reusing test cases from DiffFormatterReflowTest. E is for modifying an empty file; Y and Z are two different cases with the "No newline at end of file" info. X contains hunks adding, removing and replacing lines.

-------------------------------------
