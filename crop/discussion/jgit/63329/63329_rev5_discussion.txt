DESCRIPTION

DirCacheEditor: Replace file-with-tree and tree-with-file

If a PathEdit tries to store a file where a subtree was, or a subtree
where a file was, replace the entry in the DirCache with the new
name(s).  This supports switching between file and tree entry types
using a DirCacheEditor.

Add new unit tests to cover the conditions where these can happen.

Change-Id: Ie843d9388825f9e3d918a5666aa04e47cd6306e7


COMMENTS

author: Yoselin Hanna
date: 2015-12-29 19:33:57.000000000

Uploaded patch set 5: Patch Set 4 was rebased.

-------------------------------------
author: Brenden Conley
date: 2015-12-29 19:50:46.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7848/

-------------------------------------
author: Brenden Conley
date: 2015-12-29 19:59:12.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7848/ : SUCCESS

-------------------------------------
author: Jayvion Booth
date: 2015-12-29 23:50:14.000000000

Patch Set 5:

(3 comments)

Line:241, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheEditor.java -> shouldn't be "mid - 1"?

Line:191, org.eclipse.jgit/src/org/eclipse/jgit/dircache/BaseDirCacheEditor.java -> I must confess I didn't get this comparison. If the "a" path is longer as "b" we compare '/' or '\0' with something (non-'/') in the "middle" of "a". If we have '\0' (file at "b") this will be always > 0 (OK), but if we have '/' at "b" (dir at "b"), it might be < or > 0, but shouldn't this be < 0, since we expect that "a" path must be from the parent of "b"?.

Something like:
int a = aPath[aPos] & 0xff;
int b = lastPathChar(bMode);
return b == 0 ? a : -1;

Line:200, org.eclipse.jgit/src/org/eclipse/jgit/dircache/BaseDirCacheEditor.java -> Why not just 0?

-------------------------------------
author: Yoselin Hanna
date: 2015-12-29 23:58:58.000000000

Patch Set 5:

(3 comments)

Line:241, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheEditor.java -> No. high is 1 past the end point. If we did mid - 1 here we'd move the end point down 1 position to low and fail to find some entries that may be of interest.

Line:191, org.eclipse.jgit/src/org/eclipse/jgit/dircache/BaseDirCacheEditor.java -> No. Git sorts paths by flat string order:

  a = "Q.c"
  b = "Q" bMode = TREE

We need to sort b comparing / with the . in a because if put a file named "c" inside of Q the ordering is:

  Q.c
  Q/c

So directory Q must come after file Q.c. So yes when b is a tree we compare a / with the next position of a.

Line:200, org.eclipse.jgit/src/org/eclipse/jgit/dircache/BaseDirCacheEditor.java -> Good point, but I went with NUL char literal here to match the '/' char literal from a readability perspective.

-------------------------------------
author: Jayvion Booth
date: 2015-12-30 00:11:02.000000000

Patch Set 5:

(1 comment)

Line:241, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheEditor.java -> But we just tested entries[mid] one line above?

-------------------------------------
author: Yoselin Hanna
date: 2015-12-30 00:33:59.000000000

Patch Set 5:

(1 comment)

Line:241, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheEditor.java -> Yes and the code treats this as [low, high).

Low is inclusive, high is exclusive.

By setting high = mid we never consider mid again. If we set high = mid - 1, we will also never consider the value at mid -1. Which is wrong. We haven't considered it yet. It might be the thing we are looking for.

-------------------------------------
author: Yoselin Hanna
date: 2016-01-01 17:27:54.000000000

Topic set to add-df

-------------------------------------
author: Yoselin Hanna
date: 2016-01-01 17:58:20.000000000

Patch Set 5: Code-Review+2

-------------------------------------
author: Gerrit Code Review
date: 2016-01-01 17:58:35.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
