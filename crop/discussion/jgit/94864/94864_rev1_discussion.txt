DESCRIPTION

BundleWriter: Allow constructing from only an ObjectReader

Change-Id: I01821d6a9fbed7a5fe4619884e42937fbd6909ce


COMMENTS

author: Santos Moore
date: 2017-04-11 19:31:24.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-04-11 19:31:30.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10166/

-------------------------------------
author: Brenden Conley
date: 2017-04-11 19:45:41.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10166/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2017-04-12 00:36:05.000000000

Patch Set 1: Code-Review-1

(2 comments)

I like it. My only nit is the override of PackWriter.close that I don't think has any effect.

Line:118, org.eclipse.jgit/src/org/eclipse/jgit/transport/BundleWriter.java -> Is it worth mentioning when the reader gets closed (or maybe in the opposite direction, saying that we do not want to guarantee it gets closed)? Readers are still usable after they are closed so as long as the caller closes it, they should be okay, but it might be useful for understanding.

Line:275, org.eclipse.jgit/src/org/eclipse/jgit/transport/BundleWriter.java -> super.close() already closes 'or' (as does writePack).

Is the idea that PackWriter would gain a boolean to disable that behavior?

-------------------------------------
author: Santos Moore
date: 2017-04-12 12:28:25.000000000

Patch Set 1:

(2 comments)

Line:118, org.eclipse.jgit/src/org/eclipse/jgit/transport/BundleWriter.java -> Done

Line:275, org.eclipse.jgit/src/org/eclipse/jgit/transport/BundleWriter.java -> Didn't realize that, of course PackWriter doesn't document it. Since readers can be reused I will do the easier thing and just let it get closed (and document it here).

-------------------------------------
author: Gerrit Code Review
date: 2017-04-13 01:12:15.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
