DESCRIPTION

PackWriter: Reduce GC during enumeration

Instead of resizing an ArrayList until all objects have been added,
append objects into a specialized List type that uses small arrays
of 1024 entries for each 1024 objects added.

For a large repository like linux-2.6, PackWriter will now allocate
1,758 smaller arrays to hold the object list, without creating any
garbage from the intermediate states due to list expansion.

1024 was chosen as the block size (and initial directory size) as this
is a reasonable balance for the PackWriter code.  Each block uses
approximately 4096 bytes in a 32 bit JVM, as does the default top
level block directory.  The top level directory doesn't expand until 1
million items have been added to the list, which for linux-2.6 won't
yet occur as the lists are per-object-type and are thus bounded to
about 1/3 of 1.8 million.

Change-Id: If9e4092eb502394c5d3d044b58cf49952772f6d6
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Malia Sampson
date: 2011-03-08 13:44:27.000000000

Patch Set 1: Looks good to me, approved; Build Successful; IP review completed

Looks good.

-------------------------------------
author: Malia Sampson
date: 2011-03-08 13:44:28.000000000

Change has been successfully merged into the git repository.

-------------------------------------
