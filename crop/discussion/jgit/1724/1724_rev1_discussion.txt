DESCRIPTION

[RFC] Cache large delta bases on disk

Rather than using a loose object to cache a large delta encoded
object, cache the base of that object as a plain file in the new
$GIT_DIR/objects/delta-base-cache directory.  This permits the delta
stream to read from the base using RandomAccessFile, which should have
higher throughput than needing to close, reopen and skip through an
inflater stream.

Similar to the in-memory implementation we cache the delta base and
not the delta itself, as the base is more likely to be requested.

This is only an RFC as there is no upper limit on the size of the
delta-base-cache directory.  Files are created, but there is no method
to remove older entries when the cache gets large.  There is also no
validation that the base object hasn't been corrupted.  Normally JGit
relies on zlib's CRC to warn about data corruption during access.
Reading from the base object should trigger a re-validation of its
SHA-1, or check a CRC code that is also stored in the cache file.

Change-Id: I94de3c8b7e3b9e373c77f7190f1910dab79d9d04
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-10-11 04:35:51.000000000

Patch Set 1: I would prefer that you didn't submit this

This is a simple proof of concept to see if the idea of using RandomAccessFile to read from the base when applying a delta is suitable.  If it is we need to add robustness checks to validate the base isn't corrupted, and we need to have some sort of mechanism to clear out less useful entries from the cache.

-------------------------------------
