DESCRIPTION

[performance] Remove synthetic access$ methods in transport package

Java compiler must generate synthetic access methods for private methods
and fields of the enclosing class if they are accessed from inner
classes and vice versa.

While invisible in the code, those synthetic access methods exist in the
bytecode and seem to produce some extra execution overhead at runtime
(compared with the direct access to this fields or methods), see
https://git.eclipse.org/r/58948/.

By removing the "private" access modifier from affected methods and
fields we help compiler to avoid generation of synthetic access methods
and hope to improve execution performance.

To validate changes, one can either use javap or use Bytecode Outline
plugin in Eclipse. In both cases one should look for "synthetic
access$<number>" methods at the end of the class and inner class files
in question - there should be none.

NB: don't mix this "synthetic access$" methods up with "public synthetic
bridge" methods generated to allow generic method override return types.

Change-Id: I0ebaeb2bc454cd8051b901addb102c1a6688688b
Signed-off-by: Jayvion Booth xxx@xxx.xxx


COMMENTS

author: Jayvion Booth
date: 2015-10-28 19:30:44.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-10-28 19:30:50.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7323/

-------------------------------------
author: Eden Lin
date: 2015-10-28 19:32:44.000000000

Patch Set 1: Code-Review+2

-------------------------------------
author: Brenden Conley
date: 2015-10-28 19:38:57.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7323/ : SUCCESS

-------------------------------------
author: Gerrit Code Review
date: 2015-10-28 19:48:24.000000000

Change has been successfully merged into the git repository by Jayvion Booth

-------------------------------------
