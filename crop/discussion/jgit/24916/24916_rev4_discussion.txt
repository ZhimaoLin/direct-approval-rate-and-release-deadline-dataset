DESCRIPTION

Blame correctly in the presence of conflicting merges

Problem:
The BlameGenerator used the RevFlag SEEN to mark commits it had
already looked at (but not necessarily processed), to prevent
processing a commit multiple times. If a commit is a conflicting
merge that contains lines of the merge base, that have been deleted
in its first parent, either these lines or the lines untouched
since the merge base would not be blamed properly.

This happens for example if a file is modified on a main branch in an
earlier commit M and on a side branch in a later commit S. For this
example, M deletes some lines relative to the common base commit B,
and S modifies a subset of these lines, leaving some other of these
lines untouched.

Then side is merged into main, creating a conflict for these
lines. The merge resolution shall carry over some unmodified lines
from B that would otherwise be deleted by M. The route to blame
these lines is via S to B. They can't be blamed via M, as they
don't exist there anymore.

     Q
    / \
    | S
    | |
    M |
    \ /
     B

Blaming the merged file first blames via S, because that is the
most recent commit. Doing so, it also looks at B to blame the
unmodified lines of B carried over by S into the merge result. In the
course of this, B is submitted for later processing and marked SEEN.

Later M is blamed. It notices that its parent commit B has been
SEEN and aborts processing for M. B is blamed after that, but only
for the lines that survived via S.

As a result, only the lines contributed by S or by B via S are
blamed. All the other lines that were unchanges by both M and S,
which should have been blamed to B via M, are not blamed.

Solution:
Don't abort processing when encountering a SEEN commit. Rather add the
new region list of lines to be blamed to those of the already SEEN and
enqueued commit's region list. This way when the B commit of the
above example is processed, it will blame both the lines of M and S,
yielding a complete blame result.

Bug: 374382
Change-Id: I369059597608022948009ea7708cc8190f05a8d3
Signed-off-by: Kaden Henson xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2014-04-17 19:57:48.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2014-04-17 20:23:52.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/4979/

-------------------------------------
author: Kaden Henson
date: 2014-04-17 20:34:31.000000000

Patch Set 4:

(1 comment)

It's a bit unfortunate that we both worked on this in parallel, but now let's go with your version.

Line:315, org.eclipse.jgit/src/org/eclipse/jgit/blame/Candidate.java -> Candidate.add(Region, Candidate, Region) has region merge code that also compares sourceStart Should we look at sourceStart here, too?

-------------------------------------
author: Brenden Conley
date: 2014-04-17 20:40:27.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/4979/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2014-04-17 21:00:53.000000000

Patch Set 4: Code-Review-1

(1 comment)

Line:315, org.eclipse.jgit/src/org/eclipse/jgit/blame/Candidate.java -> Good question. I almost used add() here but then didn't because of the sourceStart compare. But I think you are right, we should be comparing by sourceStart too.

I will fix this and upload a new version.

-------------------------------------
