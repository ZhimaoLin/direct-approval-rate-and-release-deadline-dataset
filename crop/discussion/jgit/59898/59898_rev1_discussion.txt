DESCRIPTION

RFC: Skip redundant 'OR-reuse' step in tip commit bitmap setup

When creating bitmaps during gc, the bitmaps in tipCommitBitmaps are
built in setupTipCommitBitmaps using the following procedure:

 0. create a bitmap ('reuse') that lists all ancestors of commits
    whose existing bitmaps will be reused.  I will call this the
    reused part of history.

 1. initialize a bitmap for each of the pack's "want"s by taking
    a copy of the 'reuse' bitmap and setting the bit corresponding
    to the one wanted commit.

 2. walk through ancestors of wants, excluding the reused part of
    history.  Add parents of visited commits to bitmaps that have
    those commits.

 3. AND-NOT each tipCommitBitmap against the 'reuse' bitmap

 4. Sort the bitmaps and AND-NOT each against the previous so they
    partition the new commits.

The OR against 'reuse' in step 1 and the AND-NOT against 'reuse'
cancel each other out, except when commits from the reused part of
history are added to a bitmap in step 2.  So avoid adding commits from
the reused part of history in step 2 and skip the OR and AND-NOT.

DO NOT SUBMIT unless this is measured to be faster.

Change-Id: I26ea695809594347575d14a1d8e6721b8608eb9c


COMMENTS

author: Eden Lin
date: 2015-11-07 19:54:55.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-11-07 19:55:01.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7421/

-------------------------------------
author: Brenden Conley
date: 2015-11-07 20:03:15.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7421/ : SUCCESS

-------------------------------------
author: Ariel Sawyer
date: 2015-11-08 23:35:51.000000000

Patch Set 1: Code-Review+1

Thanks for pushing through with the revwalk filtering cleanups. This method is much clearer than before!

I measured the improvement of this change and the initial "selecting bitmaps" phase decreased from (83 + 81 + 85) / 3 = 83 to (56 + 57 + 56) / 3 = 56.3, so nearly a ~50% speedup.

-------------------------------------
author: Gerrit Code Review
date: 2015-11-09 00:35:56.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
