DESCRIPTION

FileUtils.toPath to convert File to Path

When invoking File.toPath(), an (unchecked) InvalidPathException may be
thrown which should be converted to a checked IOException.

Change-Id: I0f0c5fd2a11739e7a02071adae9a5550985d4df6
Signed-off-by: Saniya Hill xxx@xxx.xxx


COMMENTS

author: Saniya Hill
date: 2017-10-25 09:28:02.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-10-25 09:28:09.000000000

Patch Set 1:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/11482/

-------------------------------------
author: Brenden Conley
date: 2017-10-25 09:41:56.000000000

Patch Set 1: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/11482/ : SUCCESS

-------------------------------------
author: Elise Key
date: 2017-10-25 10:41:31.000000000

Patch Set 1:

(1 comment)

Line:89, org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java -> Can we add a throws declaration to an existing public API, even if it's deprecated?

We just reverted a change [1] because adding throws broke backwards compatibility.

[1] https://git.eclipse.org/r/#/c/110567/

-------------------------------------
author: Saniya Hill
date: 2017-10-25 12:30:02.000000000

Patch Set 1:

(1 comment)

Line:89, org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java -> Is only FileUtil public API or FileUtils as well? In both cases, we could return defaults instead which would be identical to non-existing paths. For the actual crashes we are encountering with FileUtils.lastModified [1], we fortunately have IOException in the throws clause already.

[1] http://dev.eclipse.org/mhonarc/lists/jgit-dev/msg03444.html

-------------------------------------
author: Elise Key
date: 2017-10-25 13:05:33.000000000

Patch Set 1:

(1 comment)

Line:89, org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java -> > Is only FileUtil public API or FileUtils as well?

As far as I can see they're both public.  (My reasoning being they're public classes not in the .internal. package)

> return defaults instead

You mean catch the exception here and return false?  In that case maybe also log that it failed?

-------------------------------------
author: Saniya Hill
date: 2017-10-25 13:15:06.000000000

Patch Set 1:

(1 comment)

Line:89, org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java -> > You mean catch the exception here and return false?

Yes.

> In that case maybe also log that it failed?

I agree, logging makes sense here.

-------------------------------------
author: Douglas Trujillo
date: 2017-10-25 22:30:33.000000000

Patch Set 1: Code-Review-1

(1 comment)

Line:89, org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java -> public methods in both FileUtil and FileUtils are API and we can't change signature incompatibly in a minor version

I think when we cannot change signature we should not silently hide the exception, if the path is invalid that's a problem which should be reported to the application using jgit. Not being a symlink is a different thing than trying to resolve an invalid path.

-------------------------------------
author: Saniya Hill
date: 2017-10-26 08:43:08.000000000

Patch Set 1:

(1 comment)

Line:89, org.eclipse.jgit/src/org/eclipse/jgit/util/FileUtil.java -> > I think when we cannot change signature we should not silently hide
> the exception, if the path is invalid that's a problem which should
> be reported to the application using jgit. Not being a symlink is a
> different thing than trying to resolve an invalid path.

Would you agree that logging problems is sufficient, as David has suggested? If not, should we better postpone to release 5.0, too? Or should I reduce the patch to those methods which already throw an IOException, as for example FileUtils.lastModified? (This is exactly the method which is causing troubles in practice and not just in theory.)

-------------------------------------
author: Douglas Trujillo
date: 2017-11-05 20:12:55.000000000

Patch Set 1:

> (1 comment)

I would restrict this to the methods which already throw IOException. In 5.0 we may decide to migrate from File to Path which would also remove this issue

-------------------------------------
