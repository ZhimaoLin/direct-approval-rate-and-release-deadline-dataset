DESCRIPTION

Drastically speed up PatienceDiff

Previously PatienceDiff has been one of our slower implementations,
lagging behind even HistogramDiff, even though it should have less
work to perform for the same inputs:

  Comparator      Algorithm             Time         Result
  ----------------------------------------------------------
  testDefault     Myers                 638977 ns    8 edits
  testDefault     Patience              975609 ns    6 edits
  testDefault     Histogram             520833 ns    8 edits

  testIgnoreAll   Myers                1459854 ns    8 edits
  testIgnoreAll   Patience              749063 ns    6 edits
  testIgnoreAll   Histogram             539083 ns    8 edits

Instead of scanning through both indexes twice and then looping
over the joined results in the hash table, avoid the last step and
pick our longest common subsequence as we scan the B sequence.

With that minor simplification we now see PatienceDiff running as
one of the fastest algorithms, and halving the time required for
a common source code file:

  Comparator      Algorithm             Time         Result
  ----------------------------------------------------------
  testDefault     Myers                 620000 ns    8 edits
  testDefault     Patience              480000 ns    6 edits
  testDefault     Histogram             520000 ns    8 edits

  testIgnoreAll   Myers                1580000 ns    8 edits
  testIgnoreAll   Patience              440000 ns    6 edits
  testIgnoreAll   Histogram             540000 ns    8 edits

Change-Id: I3c3ec3abd24889faccd571d02c57331c907c0198
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-09-22 01:13:51.000000000

Patch Set 1: Looks good to me, but someone else must approve

I think this is a nice simplification of the code, and a decent performance improvement too.  :-)

-------------------------------------
author: Yoselin Hanna
date: 2010-09-22 04:10:58.000000000

Patch Set 1: Do not submit

(1 inline comment)



Line:177, org.eclipse.jgit/src/org/eclipse/jgit/diff/PatienceDiffIndex.java -> This is wrong.  We need to account for the fact that another element within the region spanned by lcs might be unique even though the original element that caused us to create the region is now not unique.

-------------------------------------
author: Yoselin Hanna
date: 2010-09-25 01:19:51.000000000

Patch Set 1: Abandoned

This seems to be not worthwhile.  HistogramDiff runs so close to PatienceDiff that it beats the optimized PatienceDiff that needs to fallback on HistogramDiff when there are no more unique elements in the region.

Consequently I may queue up a change to delete PatienceDiff.

-------------------------------------
