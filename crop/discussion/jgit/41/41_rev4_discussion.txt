DESCRIPTION

Simple dumb HTTP server for Git

This is a horribly simple HTTP server which provides only the
server side support required for dumb transport clients.  We
produce the info/refs and objects/info/packs file on the fly
from the local repository state, but otherwise serve data as
raw files from disk.

We could better optimize the Sender class and those that use
it to take advantage of direct file to network APIs in more
advanced servlet containers like Jetty.  This is left for a
future improvement to the code.

Change-Id: Ia0f1a425d07d035e344ae54faf8aeb04763e7487
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2009-10-08 20:39:50.000000000

Uploaded patch set 4.

-------------------------------------
author: Blake Oneal
date: 2009-10-09 00:24:24.000000000

Patch Set 4: Looks good to me, but someone else must approve

Various red boxes in gerrit; don't know if they're important or not.

-------------------------------------
author: Yoselin Hanna
date: 2009-10-09 00:56:05.000000000

Patch Set 4: No score; No score



-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:83, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/InfoRefsServlet.java -> Might be more efficient to walk the chars in line and do the replacement on the fly, like:
int l = line.length();
for(i=0;i<l;i++) {
  char c = line.charAt(i);
  if( c == ' ' ) out.append( '\t' ) else out.append (c );
}
Would be worth testing to see if this is faster/slower than the above; it may well be slower.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:83, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/InfoRefsServlet.java -> Possibly, but not sure its worth the code change.  This whole part of the code just sucks due to the several copies we are making of the data as we try to generate and convert it for output.

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:88, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/WrappedRequest.java -> Bit of negation going on here; why not:

return p == null ? null : getRealPath(p)

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:88, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/WrappedRequest.java -> Our coding convention is what we have written:

  a != null ? a : defaultValueWhenAIsNull

Thus that is the way we code it.

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:140, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryRouter.java -> There's an implicit ordering here. We might have overlaps in servlets (e.g. one serving info/ and one serving info/refs). Can we ensure that the sorting does the longest/most specific URL first somehow?

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:140, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryRouter.java -> The ordering is the ordering above in init, which must be carefully updated to prevent problems.  Since its maintained by hand its easy enough to ensure the ordering is correct.  Doing longest match is a pain just because we'd have to have knowledge of how the servlet decided to take a request.  In my opinion its not worth the effort to ensure longest match here.

I'm putting a warning comment in the binding code above.  If it ever becomes something we simply can't manage by code reviews someone can revisit this to do longest match, or something better.

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:105, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryServlet.java -> May have lost this comment from before - isn't the epoch 1970?

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:105, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryServlet.java -> I don't see any of your comments on http://egit.eclipse.org/r/#patch,unified,41,3,org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryServlet.java if that's what you mean. Can you point me to where you're talking about ? All of the 9 comments shown against that file are mine, as far as I can tell.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:105, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryServlet.java -> For this and the next 2 comments about Cache-Control see my remarks on patch set 3 of this change (expand the History Table at the top of the patch view screen).

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:107, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryServlet.java -> Some proxies may not grok the comma-separated headers; any reason we can't just do Cache-Control: no-cache here?

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:122, org.eclipse.jgit.http.server/src/org/eclipse/jgit/http/server/RepositoryServlet.java -> See above; any reason we can't just do max-age= here?

-------------------------------------
