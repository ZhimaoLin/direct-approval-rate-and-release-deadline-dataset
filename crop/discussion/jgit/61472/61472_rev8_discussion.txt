DESCRIPTION

WIP: LfsProtocolServlet and lfs-store command

This introduces the LargeFileRepository interface which enables the
protocol servlet to stay independent from the details of how LFS
protocol generates large object URLs and how it accesses the large
objects metadata.

At the client side we have to configure the lfs.url:

  [lfs]
	  url = http://host:port/lfs

git-lfs client appends the objects/batch to the lfs.url.

Hard code an Authorization header in the PlainFSRepository.getHeaders
because then git-lfs client will skip asking for credentials. It will
just forward the Authorization header from the response to the
download/upload request.

The LfsProtocolServlet handles the "Git LFS v1 Batch API" protocol [1].

The lfs-store command is used to run the LfsProtocolServlet and,
optionally, the LargeObjectServlet which makes it easier to setup a
local test server.

TODO: cleanup the lfs-store command. It uses a class from a test
package, depends on junit and the options are not very intuitive

[1]
https://github.com/github/git-lfs/blob/master/docs/api/http-v1-batch.md

Change-Id: Ie576c17f347fc828819e10e4c9fc234ec94ad97b
Signed-off-by: Douglas Trujillo xxx@xxx.xxx

COMMENTS

author: Douglas Trujillo
date: 2015-12-02 22:43:34.000000000

Uploaded patch set 8.

-------------------------------------
author: Brenden Conley
date: 2015-12-02 23:04:53.000000000

Patch Set 8:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7666/

-------------------------------------
author: Brenden Conley
date: 2015-12-02 23:13:54.000000000

Patch Set 8: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7666/ : SUCCESS

-------------------------------------
author: Ximena Pugh
date: 2015-12-03 11:56:09.000000000

Patch Set 8: Code-Review-1

(1 comment)

Line:58, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/lib/LargeFileRepository.java -> Is this an upload or a download URL? They are not necessarily the same.

-------------------------------------
author: Douglas Trujillo
date: 2015-12-06 22:12:21.000000000

Patch Set 8:

(1 comment)

Line:58, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/lib/LargeFileRepository.java -> So you envision an implementation where you upload an object x to url A and download it from url B ? Why is this useful ?

-------------------------------------
author: Ximena Pugh
date: 2015-12-07 14:22:36.000000000

Patch Set 8:

(1 comment)

Line:58, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/lib/LargeFileRepository.java -> I wouldn't say that *I* envision it but it seems to me that the LFS protocol as proposed be github distinguished between an upload, a download and a verify url. I think we'd better stick closer  to the protocol outlined here: https://github.com/github/git-lfs/blob/master/docs/api/http-v1-batch.md.

Also in REST it is not unusual to POST to a collection but to get a single element from a collection by specifying it's ID in the URL, like

upload:
 POST .../LOBs
{
  id: <sha256>,
  lob: <data>
}

download:
GET .../LOBs/<sha256>

see also : https://en.wikipedia.org/wiki/Representational_state_transfer#Example

-------------------------------------
author: Douglas Trujillo
date: 2016-01-20 10:54:18.000000000

Abandoned

replaced by https://git.eclipse.org/r/#/c/52177/

-------------------------------------
