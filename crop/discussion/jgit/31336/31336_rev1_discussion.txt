DESCRIPTION

Process most in-core merges without local temp files

Instead of always writing to disk use TemporaryBuffer.LocalFile to
store up to 10 MiB of merge result in RAM. Most source code will
fit into this limit, avoiding local disk IO for simple merges.

Larger files will automatically spool to a temporary file that
can be cleaned up in the finally, reducing the risk of leaving
them on disk and consuming space in /tmp.

Change-Id: Ieccbd9b354d4dd3d2bc1304857325ae7a9f34ec6


COMMENTS

author: Yoselin Hanna
date: 2014-08-09 00:54:45.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-08-09 00:54:51.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/5453/

-------------------------------------
author: Brenden Conley
date: 2014-08-09 01:03:36.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/5453/ : SUCCESS

-------------------------------------
author: Juliet Cantu
date: 2014-08-10 08:10:19.000000000

Patch Set 1: Code-Review+1

(3 comments)

Line:771, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> This control flow change made the patch harder to read.

Other than that, I actually like early returns

Line:783, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> (Formatting inconsistent with formatting settings)

Line:791, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> Unrelated: Is this consistent with autocrlf settings?

-------------------------------------
author: Yoselin Hanna
date: 2014-08-11 15:53:48.000000000

Patch Set 1:

(3 comments)

Line:771, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> Agreed. I realized about halfway through this change that it was too large and may need to be broken up into two commits.

I can try to rebuild this as two commits; one to implement the early return flow control change, and another to handle the in-memory processing.

Line:783, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> I don't always follow the standard formatting settings. Eclipse does some stupid things.

Line:791, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> No. But neither was the old code I am replacing. Either way the autocrlf is broken during merges. If we are going to fix that, I would prefer to do it during a follow-up commit.

-------------------------------------
author: Santos Moore
date: 2014-08-11 16:14:49.000000000

Patch Set 1: Code-Review+1

(1 comment)

FWIW I think the control flow change is fine, it's just changing:

 if (foo) {
   doStuff();
 } else {
   doOtherStuff();
 }

to 

 if (foo) {
   doStuff();
   return;
 }
 doOtherStuff();

Of course, if I've misinterpreted, then I guess that's an argument that it's sufficiently non-obvious that it should be split out ;)

Line:787, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> My first reaction is this should be !inCore and the writeMergedFile call should be inside this block.

But IIUC it's at the top so the file in the workdir is written out even if there's a conflict, is that right?

-------------------------------------
author: Yoselin Hanna
date: 2014-08-11 16:24:20.000000000

Patch Set 1:

(1 comment)

Line:787, org.eclipse.jgit/src/org/eclipse/jgit/merge/ResolveMerger.java -> Correct. We want the file written if !inCore and there is a conflict. We just can't add the file to the index, and that is why we early return.

-------------------------------------
author: Yoselin Hanna
date: 2014-08-11 16:42:07.000000000

Patch Set 1: Code-Review+2

1+1=2 :)

-------------------------------------
author: Yoselin Hanna
date: 2014-08-11 16:42:13.000000000

Change has been successfully merged into the git repository.

-------------------------------------
