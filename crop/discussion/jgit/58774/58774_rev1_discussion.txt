DESCRIPTION

Handle AccessControlException for configuration files

If the JVM does not have permission to read configuration files
(such as the user's .gitconfig, .gitignore, or excludesfile),
handle it similarly to how it handles these files not existing.

Change-Id: I29ebadc9ff185edee3c697cc4cda63d9b9cae956
Signed-off-by: Mareli Pittman xxx@xxx.xxx


COMMENTS

author: Mareli Pittman
date: 2015-10-22 22:58:40.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-10-22 22:58:46.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7295/

-------------------------------------
author: Brenden Conley
date: 2015-10-22 23:07:04.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7295/ : SUCCESS

-------------------------------------
author: Jayvion Booth
date: 2015-10-30 16:44:02.000000000

Patch Set 1:

Matt,
do you have a bug describing why do you want to do this? 

Reading commit description surprising me since why should user have no permissions to read it's own .gitconfig or repository .gitignore files???

Is it a kind of a "paranoia" security mode?

Also can you outline how is this handled in the native git and if we introduce here a difference in behavior?

-------------------------------------
author: Mareli Pittman
date: 2015-10-30 20:05:41.000000000

Patch Set 1:

Hi Andrey,

do you have a bug describing why do you want to do this? 
- I do not have a bug but I can create one if it is required

Reading commit description surprising me since why should user have no permissions to read it's own .gitconfig or repository .gitignore files???
- The reason for this change comes from an interesting use case I have encountered recently. I believe this change would be beneficial to others who
also come across it:
Running an application that uses JGit on a server, so there is no real user. There won't be a user's .gitconfig,
or .gitignore on the system, which is no problem because JGit handles this by behaving as though the file exists and is empty.
The issue is if many people are developing this application on their local machines, and need to have the
same environment (empty config files) as the server. Currently, their personal configuration files will be read by JGit
which could possibly change the behavior of the application. So therefore the application is not allowed to read user's home directory.

Is it a kind of a "paranoia" security mode?
- This could solve security concerns for people who do not want to give access to the user's home directory. For instance
if multiple applications using jgit are running on the same machine and need to be confined to their own directory.

Also can you outline how is this handled in the native git and if we introduce here a difference in behavior?
- I just get a warning in native git when I remove read access, but everything still works. Ex:
$ git status
warning: unable to access '/Users/matt.coleman/.gitignore_global': Permission denied

This does not look like it introduces a difference in behavior

-------------------------------------
author: Mareli Pittman
date: 2015-11-19 18:30:03.000000000

Patch Set 1:

As a follow up, native Git used to fail (starting from v1.8.1.1) if it did not have access to a user's .gitconfig.
However, this was changed in CGit commit 4698c8feb1bb56497215e0c10003dd046df352fa (authored by Eden Lin).
Now when CGit cannot access $HOME configuration files due to access permissions, it is treated
as though no user configuration was provided at all.

So this patch actually makes JGit behave more similarly to native git.

Here's a link to the commit, it contains more rationale for the reasons behind the change:
https://git.kernel.org/cgit/git/git.git/commit/?id=4698c8feb1bb56497215e0c10003dd046df352fa

-------------------------------------
author: Eden Lin
date: 2015-11-19 23:36:40.000000000

Patch Set 1: Code-Review-1

(2 comments)

Line:120, org.eclipse.jgit/src/org/eclipse/jgit/util/SystemReader.java -> Does this lose the parent Config?

Line:7, /COMMIT_MSG -> Worth mentioning that this only applies to $HOME/.gitconfig, not /etc/gitconfig and .git/config, and either summarizing or pointing to git.git commit 4698c8feb1bb (config: allow inaccessible configuration under $HOME, 2013-04-12) for an explanation of why.

-------------------------------------
