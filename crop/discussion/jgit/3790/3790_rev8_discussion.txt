DESCRIPTION

[RFC] git-stash support

This is a start on a git-stash implementation.
Not enough to review here yet, that part's coming soon

Signed-off-by: Makenzie Simon xxx@xxx.xxx

Change-Id: Ide104e43092942029f8b4eb3a339758540e1ed7f


COMMENTS

author: Makenzie Simon
date: 2011-09-02 20:39:19.000000000

Uploaded patch set 8.

-------------------------------------
author: Juliet Cantu
date: 2011-10-23 09:16:41.000000000

Patch Set 8: I would prefer that you didn't submit this

(21 inline comments)



Line:482, org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java -> Missing stashPop

Line:75, org.eclipse.jgit/src/org/eclipse/jgit/api/StashCreateCommand.java -> "the stash commit" is more precise

Line:169, org.eclipse.jgit/src/org/eclipse/jgit/api/StashCreateCommand.java -> R_STASH is "refs/stash/". Can this work?

Line:173, org.eclipse.jgit/src/org/eclipse/jgit/api/StashCreateCommand.java -> We should have a constant here

Line:174, org.eclipse.jgit/src/org/eclipse/jgit/api/StashCreateCommand.java -> and here

Line:69, org.eclipse.jgit/src/org/eclipse/jgit/api/StashApplyCommand.java -> Javadoc for the return values

Line:71, org.eclipse.jgit/src/org/eclipse/jgit/api/StashApplyCommand.java -> object id or ObjectId

Line:82, org.eclipse.jgit/src/org/eclipse/jgit/api/StashApplyCommand.java -> There must be something useful we could return.
Or you could state that, so far this method does not
return anything. hmm  I wonder if it is possible to use Void (capital V) and then changing to something else without breaking the API

Line:238, org.eclipse.jgit/src/org/eclipse/jgit/lib/Constants.java -> refs/stash should it be, not? and then the constant should be called just STASH

Line:1, org.eclipse.jgit.test/NOW EDITED -> What's this?

Line:59, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/StashApplyCommandTest.java -> We usually invent names here. After all it is not you that create the commits when the test execute on somebody else's machine.

Line:108, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/StashApplyCommandTest.java -> You should test the index AND the files that we expect/do not expect

Line:131, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/StashApplyCommandTest.java -> ouch

Line:133, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/StashApplyCommandTest.java -> ouch

Line:137, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/StashApplyCommandTest.java -> Doesn't writeTrashFile work?

Line:147, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/StashApplyCommandTest.java -> ouch

Line:149, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/StashApplyCommandTest.java -> ouch

Line:66, org.eclipse.jgit/src/org/eclipse/jgit/api/StashListCommand.java -> Good question. You could return

a string, e.g. xxx@xxx.xxx (not the message)

Iterable<RevCommit>

Iterable<RefLogEntry> This is the most complete of all
the readily available types.

Not sure. Chris?

Line:67, org.eclipse.jgit/src/org/eclipse/jgit/api/StashListCommand.java -> Use constant.
Incomplete method.

Line:72, org.eclipse.jgit/src/org/eclipse/jgit/api/StashListCommand.java -> Tell us what the content is. "string" is just too general a description

Line:77, org.eclipse.jgit/src/org/eclipse/jgit/api/StashListCommand.java -> Use a Constant. Is this needed?

-------------------------------------
author: Juliet Cantu
date: 2014-02-02 08:57:07.000000000

Abandoned

We have stash support now

-------------------------------------
