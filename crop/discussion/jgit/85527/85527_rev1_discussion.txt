DESCRIPTION

Fix content length in HttpClientConnection

Per the interface specification, the getContentLength method should
return -1 if content length is unknown or greater than
Integer.MAX_VALUE.

Change-Id: Iaa36b5c146a8d654e364635fa0bd2d14129baf17
Signed-off-by: Paloma Kennedy xxx@xxx.xxx


COMMENTS

author: Paloma Kennedy
date: 2016-11-22 19:29:19.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-11-22 19:29:26.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9437/

-------------------------------------
author: Brenden Conley
date: 2016-11-22 19:39:19.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9437/ : SUCCESS

-------------------------------------
author: Eden Lin
date: 2016-11-22 19:51:27.000000000

Patch Set 1:

(2 comments)

Can you say more about the context? Was this happening in practice?

Is it possible to recreate the problem in tests?

Line:329, org.eclipse.jgit.http.apache/src/org/eclipse/jgit/transport/http/apache/HttpClientConnection.java -> nit: can decrease indentation by avoiding this 'else'.

  if (contentLength == null) {
    return -1;
  }

Line:330, org.eclipse.jgit.http.apache/src/org/eclipse/jgit/transport/http/apache/HttpClientConnection.java -> parseLong can throw NumberFormatException, e.g. for very large numbers. Should we handle that?

That might simplify the code a little, since Integer.parseInt is guaranteed to produce an int:

  private static final Pattern DIGITS = Pattern.compile("[0-9]+");

  String s = getHeaderField("content-length"); //$NON-NLS-1$
  if (s == null) {
    return -1;
  }
  if (!DIGITS.matcher(s).matches()) {
    ... handle invalid content-length ...
  }
  try {
    int l = Integer.parseInt(contentLength.getValue());
    return l < 0 ? -1 : l;
  } catch (NumberFormatException e) {
    return -1;
  }

-------------------------------------
author: Paloma Kennedy
date: 2016-11-22 20:08:06.000000000

Patch Set 1:

(2 comments)

Line:329, org.eclipse.jgit.http.apache/src/org/eclipse/jgit/transport/http/apache/HttpClientConnection.java -> Done

Line:330, org.eclipse.jgit.http.apache/src/org/eclipse/jgit/transport/http/apache/HttpClientConnection.java -> Catch the exception.

Long.parseLong is the JDK standard way to parse the content length.

-------------------------------------
author: Gerrit Code Review
date: 2016-11-22 20:35:24.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
