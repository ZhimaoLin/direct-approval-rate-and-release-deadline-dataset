DESCRIPTION

Support LFS protocol and a file system based LFS storage

Implement LfsProtocolServlet handling the "Git LFS v1 Batch API"
protocol [1]. Add a simple file system based LFS content store and the
debug-lfs-store command to simplify testing.

Introduce a LargeFileRepository interface to enable additional storage
implementation while reusing the same protocol implementation.

At the client side we have to configure the lfs.url:

  [lfs]
	  url = http://host:port/lfs

git-lfs client appends the "objects/batch" to the lfs.url.

Hard code an Authorization header in the PlainFSRepository.getHeaders
because then git-lfs client will skip asking for credentials. It will
just forward the Authorization header from the response to the
download/upload request.

The LargeObjectServlet supports file content storage for "Large File
Storage" (LFS) server as defined by the Github LFS API [2].

- upload and download of large files is probably network bound hence use
  an asynchronous servlet for good scalability
- simple object storage in file system with 2 level fan-out
- use LockFile to protect writing large objects against multiple
  concurrent uploads of the same object
- to prevent corrupt uploads the uploaded file is rejected if its hash
  doesn't match id given in URL

The debug-lfs-store command is used to run the LfsProtocolServlet and,
optionally, the LargeObjectServlet which makes it easier to setup a
local test server.

[1] https://github.com/github/git-lfs/blob/master/docs/api/http-v1-batch.md
[2] https://github.com/github/git-lfs/tree/master/docs/api

Bug: 472961
Change-Id: I7378da5575159d2195138d799704880c5c82d5f3
Signed-off-by: Douglas Trujillo xxx@xxx.xxx
Signed-off-by: Dillon Cross xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2016-01-19 08:18:42.000000000

Uploaded patch set 12.

-------------------------------------
author: Brenden Conley
date: 2016-01-19 08:29:06.000000000

Patch Set 12:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7900/

-------------------------------------
author: Brenden Conley
date: 2016-01-19 08:38:26.000000000

Patch Set 12: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7900/ : SUCCESS

-------------------------------------
author: Ximena Pugh
date: 2016-01-20 15:50:57.000000000

Patch Set 12: Code-Review-1

(29 comments)

This contains a generic implementation of the protocol API and file system based poc/reference implementation of the object store. I'd like to suggest that you separate these into dedicated packages:

protocol/api:
  - [Abstract]LfsProtocolServlet
  - LargeFileRepository
  - Response
plainFsImpl
 - LargeObjectServlet
 - LfsObject
 - ObjectDownloadListener
 - ObjectUploadListener
 - PlainFSRepository (maybe stripped down to implement the interface only)
 - TransferHandler
 - maybe a subclass of LfsProtoolServlet dedicated to Plain FS

Line:49, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> Thrown when the an object id is given that doesn't match the hash of the object's content

Line:57, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> final

Line:59, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> final

Line:80, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> , i.e. the expected hash of the object's content

Line:87, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> the actual hash of the object's content

Line:43, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LargeFileRepository.java -> move to .api package?

Line:73, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LargeFileRepository.java -> id of the object to verified

Line:74, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LargeFileRepository.java -> in the implementation you return null. Please document what the return value null means. Otherwise please return some NULL object (e.g. Response.Action.NOP) to indicate that no verify action is supported. You might also add a method supportsVerify so that the caller is not forced to try out if verify is supported.

Line:81, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> private?

Line:82, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> private?

Line:84, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> private ?

Line:90, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> package private ?

Line:119, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> Why not extract a method that returns ObjectInfo. This is quite deeply nested, already. You can then add the info in the loop.

Line:145, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> Why is == 0 this an issue? Are objects with size 0 illegal?

Line:155, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> extract method (see above).

Line:146, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/ObjectUploadListener.java -> Or you return some content, e.g.
{
  oid: abc,
  size: 345,
  href: <url>
}

Line:71, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LargeObjectServlet.java -> I understand that this servlet is particular to the PlainFSRepository. The name of this class should indicate this, I think. Also it should be moved to a package dedicated to the plain FS repo implementation.

Line:106, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LfsProtocolServlet.java -> I don't like this construct. Why not just make this servlet abstract with an abstract getLargeFileReopsitory method. To initialize a final variable with null is strange, from my point of view.

Line:135, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LfsProtocolServlet.java -> I think this is expensive. Can we have a singleton of this?

Line:88, org.eclipse.jgit.lfs.server.test/tst/org/eclipse/jgit/lfs/server/LfsServerTest.java -> Sure we want to wait 5 minutes in a test for this timeout to occur?

File Comment: org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> It appears that this class has two responsibilities:

1) It implements the LargeFileRepository interface for the Plain FS Repo and hence serves the protocol API.
2) It is the implementation of the Plain FS Repo content store.

I think these two concerns would be better addressed by two dedicated classes.

Line:43, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> Please consider to use a separate package for the API and this filesystem based implementation.

Line:129, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> A bit deep indentation levels.

How about

if (aborted) return;

or

if (!aborted) {
  try {
     assertHashIsOK();
     locked.commit();
  } finally {
     out.close();
  }
}


... 
private void assertHashIsOK() {
  AnyLongObjectId contentHash = LongObjectId
						.fromRaw(out.getMessageDigest().digest());

  if (contentHash.equals(id)) {
    abort();
    String msg = MessageFormat.format(LfsServerText.get().corruptLongObject, contentHash, id));
    throw new CorruptLongObjectException(id, contentHash, msg);
  }
}

Line:178, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> org.apache.HttpHeaders.AUTHORIZATION

Line:178, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> maybe use Collections.singletonMap, which also returns an immutable map

Line:250, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> static ?

Line:259, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> private ?

File Comment: org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/Response.java -> As this class is part of the API it deserves a more detailed documentation.

Line:44, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/Response.java -> move to .api package?

-------------------------------------
author: Ximena Pugh
date: 2016-01-20 15:52:26.000000000

Patch Set 12:

> (29 comments)
 > 
 > This contains a generic implementation of the protocol API and file
 > system based poc/reference implementation of the object store. I'd
 > like to suggest that you separate these into dedicated packages:
 > 
 > protocol/api:
 > - [Abstract]LfsProtocolServlet
 > - LargeFileRepository
 > - Response
 > plainFsImpl
 > - LargeObjectServlet
 > - LfsObject
 > - ObjectDownloadListener
 > - ObjectUploadListener
 > - PlainFSRepository (maybe stripped down to implement the interface
 > only)
 > - TransferHandler
 > - maybe a subclass of LfsProtoolServlet dedicated to Plain FS

TransferHandler should go into protocol/api, of course.

-------------------------------------
author: Douglas Trujillo
date: 2016-01-21 11:58:42.000000000

Topic set to lfs

-------------------------------------
author: Douglas Trujillo
date: 2016-01-27 01:42:50.000000000

Patch Set 12:

(26 comments)

Line:49, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> Done

Line:57, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> Done

Line:59, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> Done

Line:80, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> Done

Line:87, org.eclipse.jgit.lfs/src/org/eclipse/jgit/lfs/errors/CorruptLongObjectException.java -> Done

Line:43, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LargeFileRepository.java -> throughout jgit all public classes in exported packages not marked x-internal are public API

Line:73, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LargeFileRepository.java -> Done

Line:74, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LargeFileRepository.java -> Done

Line:81, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> no, subclasses Upload and Download need access

Line:82, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> no, subclasses Upload and Download need access

Line:84, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> no, called by subclasses

Line:90, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> Done

Line:119, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> Done

Line:145, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> we allow size 0

maybe we should not since https://github.com/github/git-lfs/blob/master/docs/api/http-v1-batch.md says that size must be positive integer

Line:155, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/TransferHandler.java -> Done

Line:146, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/ObjectUploadListener.java -> The API spec doesn't mention that the PUT response has a body, see the example in https://github.com/github/git-lfs/tree/master/docs/api

Line:71, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LargeObjectServlet.java -> Done

Line:135, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LfsProtocolServlet.java -> Done

Line:88, org.eclipse.jgit.lfs.server.test/tst/org/eclipse/jgit/lfs/server/LfsServerTest.java -> Done

Line:43, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> Done

Line:129, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> Done

Line:178, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> Done

Line:178, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> Done

Line:250, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> Done

Line:259, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> Done

File Comment: org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/Response.java -> Done

-------------------------------------
author: Douglas Trujillo
date: 2016-01-28 23:31:58.000000000

Patch Set 12:

(2 comments)

Line:106, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/LfsProtocolServlet.java -> Done

File Comment: org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/PlainFSRepository.java -> we think this is not necessary unless there is a second implementation using a different storage but can share the same implementation of LargeFileRepository

-------------------------------------
author: Douglas Trujillo
date: 2016-02-03 10:26:41.000000000

Patch Set 12:

(1 comment)

Line:44, org.eclipse.jgit.lfs.server/src/org/eclipse/jgit/lfs/server/Response.java -> this is a public package so it's part of the public API and specific implementations have been moved to their own package

-------------------------------------
author: Gerrit Code Review
date: 2016-02-04 21:08:43.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
