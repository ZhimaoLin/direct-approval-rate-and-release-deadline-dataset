DESCRIPTION

Smart fetch over HTTP: client side

Clients take advantage of the info/refs?service=git-upload-pack URL
to determine if the remote side will support a standard upload-pack
command stream.  If so each block of 32 have lines is sent in one
POST request, prefixed by all of the 'want' lines and any previously
discovered common bases as 'have' lines.

Change-Id: I8c69b16ac15c442e1a4c3bd60b4ea1a47882b851
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2009-10-08 20:41:08.000000000

Uploaded patch set 3.

-------------------------------------
author: Blake Oneal
date: 2009-10-08 23:48:08.000000000

Patch Set 3: Looks good to me, but someone else must approve



-------------------------------------
author: Yoselin Hanna
date: 2009-10-09 00:35:01.000000000

Patch Set 3: No score; No score



-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:125, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> Maybe define these services in some kind of constants/Interface as static final in a future change

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:125, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> I know that it can't change, but as you say, it's used in two locations. So defining it once and then cross-referencing the constant means that we don't duplicate the string literal. 

In addition, when it comes to pulling out strings to be translated, having these kind of strings as literals make for a more difficult job in figuring out magic strings (like this) vs human-readable text (which needs to be translated).

FWIW Eclipse can put // $NON-NLS-1$ markers on the line (or similar) to indicate that it's a non-translatable string, but I thought we'd see this string more than once.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:125, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> Why, what does making this service string static buy us?

That service name is part of the protocol, it can't change.  Its used in two locations, once in the client, once in the server.

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:140, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> Can we rename 'r' to something else? It looks like it should be 'reader' related, but it's a walk fetch connection.

-------------------------------------
author: Blake Oneal
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:140, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> In this case, the introduction of the BufferedReader caused that confusion, since 'r' can also mean 'reader' (as in 'br'). It was confusing whether we should be calling br.flush() or r.flush() since normally one flushes the outer reader; so I think the confusion is higher because of this change and merits the renaming of the variable rather than the case where there as a 3 line method with an 'r' in it.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:140, org.eclipse.jgit/src/org/eclipse/jgit/transport/TransportHttp.java -> The old code called it "r", I just changed the indentation level here.  We have a rule about not changing old code unless absolutely required.  For what its worth we/I have a habit of using "r" for return values when the scope is really small and there is little chance of confusing the meaning of the value.

-------------------------------------
