DESCRIPTION

Rename files using NIO2 atomic rename

Bug: 319233
Change-Id: I5137212f5cd3195a52f90ed5e4ce3cf194a13efd
Signed-off-by: Douglas Trujillo xxx@xxx.xxx

COMMENTS

author: Jayvion Booth
date: 2015-10-13 19:35:22.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2015-10-13 19:35:28.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7242/

-------------------------------------
author: Brenden Conley
date: 2015-10-13 19:42:56.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7242/ : SUCCESS

-------------------------------------
author: Jayvion Booth
date: 2015-10-15 04:19:19.000000000

Patch Set 5: Code-Review+1

-------------------------------------
author: Douglas Trujillo
date: 2015-10-15 20:39:25.000000000

Patch Set 5:

- thanks Andrey for your fixes, looks good

- I am not yet sure we should switch to atomic rename unconditionally, it should improve reliability on file systems supporting atomic rename, but it would make JGit useless on file systems not supporting atomic rename, not sure how many users would be affected. Maybe we should add a configuration option to allow non-atomic rename in such use cases and let the user decide if he wants to accept this or not.

What do you think ?

-------------------------------------
author: Jayvion Booth
date: 2015-10-15 20:42:17.000000000

Patch Set 5:

> - thanks Andrey for your fixes, looks good
 > 
 > - I am not yet sure we should switch to atomic rename
 > unconditionally, it should improve reliability on file systems
 > supporting atomic rename, but it would make JGit useless on file
 > systems not supporting atomic rename, not sure how many users would
 > be affected. Maybe we should add a configuration option to allow
 > non-atomic rename in such use cases and let the user decide if he
 > wants to accept this or not.
 > 
 > What do you think ?

Arrgh, I've missed that there can be such systems at all. Which one (or many?) are affected? Can we simply fail back on NotSupportedException to the old API?

-------------------------------------
author: Douglas Trujillo
date: 2015-10-15 22:00:32.000000000

Patch Set 5:

> Arrgh, I've missed that there can be such systems at all. Which one
 > (or many?) are affected? Can we simply fail back on
 > NotSupportedException to the old API?

I don't know which filesystems don't support atomic move, the filesystems we tried all support atomic move

-------------------------------------
author: Jayvion Booth
date: 2015-12-30 22:22:35.000000000

Patch Set 6: Patch Set 5 was rebased

-------------------------------------
author: Gerrit Code Review
date: 2015-12-30 23:12:40.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
