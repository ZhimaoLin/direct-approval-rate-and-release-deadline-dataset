DESCRIPTION

JGit fsck implementation

JGit already had some fsck-like classes like ObjectChecker which can
check for an individual object as well as ObjectWalk which can check
the connectivity of the object.

The JGit fsck utilizes these two classes through a read-only
FsckPackParser which will parse all objects within a pack file. It will
also check the pack index file against the object information from the
pack parser.

Change-Id: Ifd8e0d28eb68ff0b8edd2b51b2fa3a50a544c855
Signed-off-by: Paloma Kennedy xxx@xxx.xxx


COMMENTS

author: Paloma Kennedy
date: 2017-06-21 00:16:28.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2017-06-21 00:20:40.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10369/

-------------------------------------
author: Paloma Kennedy
date: 2017-06-21 00:21:40.000000000

Patch Set 2:

WIP, more tests coming.

-------------------------------------
author: Brenden Conley
date: 2017-06-21 00:42:55.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10369/ : SUCCESS

-------------------------------------
author: Ariel Sawyer
date: 2017-06-21 21:35:42.000000000

MISMATCHED INLINE COMMENT
Line:106, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> There is no need to override this method.

-------------------------------------
author: Paloma Kennedy
date: 2017-07-14 18:54:18.000000000

MISMATCHED INLINE COMMENT
Line:106, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> Done

-------------------------------------
author: Paloma Kennedy
date: 2017-07-14 18:54:18.000000000

MISMATCHED INLINE COMMENT
Line:116, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> Done

-------------------------------------
author: Ariel Sawyer
date: 2017-06-21 21:35:42.000000000

MISMATCHED INLINE COMMENT
Line:116, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> "INSERT/RECEIVE packs don't always contain the correct object count in their headers."

-------------------------------------
author: Paloma Kennedy
date: 2017-07-14 18:54:18.000000000

MISMATCHED INLINE COMMENT
Line:167, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> This event is not used for sha1 and crc computation. And it is ignored by all implementations in JGit.

-------------------------------------
author: Ariel Sawyer
date: 2017-06-21 21:35:42.000000000

MISMATCHED INLINE COMMENT
Line:167, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> Can you explain why this is safe to ignore?

-------------------------------------
author: Ariel Sawyer
date: 2017-06-21 21:35:42.000000000

MISMATCHED INLINE COMMENT
Line:245, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> s/expect/are expected/

-------------------------------------
author: Paloma Kennedy
date: 2017-07-14 18:54:18.000000000

MISMATCHED INLINE COMMENT
Line:245, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> Done

-------------------------------------
author: Ariel Sawyer
date: 2017-07-13 23:58:48.000000000

MISMATCHED INLINE COMMENT
Line:250, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> Ping on this question.

-------------------------------------
author: Ariel Sawyer
date: 2017-06-21 21:35:42.000000000

MISMATCHED INLINE COMMENT
Line:250, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> Does git-core report a single error in the index and abort, or attempt to report multiple problems? It would be nice to be consistent with whatever it does.

-------------------------------------
author: Paloma Kennedy
date: 2017-07-14 18:54:18.000000000

MISMATCHED INLINE COMMENT
Line:250, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/FsckPackParser.java -> git-core takes a different approach. It starts with index file, using index entries to check the object. Here, we don't trust the index file since it is derived information from the pack file.

-------------------------------------
author: Ariel Sawyer
date: 2017-06-21 21:35:42.000000000

MISMATCHED INLINE COMMENT
Line:70, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsFsck.java -> I understand that we want to override this on the server side to add additional checks for our data store, but this basic functionality is also useful to clients, so maybe move it to a non-DFS class?

-------------------------------------
author: Paloma Kennedy
date: 2017-07-14 18:54:18.000000000

MISMATCHED INLINE COMMENT
Line:70, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsFsck.java -> Client side also has some loose objects, a separate class is necessary to deal with those.

-------------------------------------
author: Ariel Sawyer
date: 2017-07-13 23:58:48.000000000

MISMATCHED INLINE COMMENT
Line:70, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsFsck.java -> Done

Since DFS doesn't support the loose file format I understand that it is the FsckPackParser portion that can be shared by the DFS and non-DFS implementations.

-------------------------------------
author: Ariel Sawyer
date: 2017-07-13 23:58:48.000000000

MISMATCHED INLINE COMMENT
Line:128, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsFsck.java -> Is the connectivity check gone completely?

-------------------------------------
author: Ariel Sawyer
date: 2017-06-21 21:35:42.000000000

MISMATCHED INLINE COMMENT
Line:128, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsFsck.java -> This looks O(N^2). I looked at ObjectWalk.checkConnectivity() and it doesn't seem to color any of the parent nodes as uninteresting when it walks. Can you make sure this isn't doing unnecessary work?

-------------------------------------
author: Paloma Kennedy
date: 2017-07-14 18:54:18.000000000

MISMATCHED INLINE COMMENT
Line:128, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsFsck.java -> It is in next change.

-------------------------------------
