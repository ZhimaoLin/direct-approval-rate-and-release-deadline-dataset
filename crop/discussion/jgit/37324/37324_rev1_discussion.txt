DESCRIPTION

CheckoutCommand: Fix checking out ours/theirs when no base stage exists

In case of an add/add conflict, no base stage exists. The previous
implementation would skip over the entries because the condition
expected the base stage to always exist.

Change-Id: Ie2b3685d958c09b241991b74e6177401e8a1ebc9
Signed-off-by: Danika Greer xxx@xxx.xxx


COMMENTS

author: Danika Greer
date: 2014-11-30 10:22:50.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-11-30 10:22:56.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/5791/

-------------------------------------
author: Brenden Conley
date: 2014-11-30 10:28:47.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/5791/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2014-12-10 10:13:50.000000000

Patch Set 1:

(2 comments)

looks good. Only one minor comment.

Line:299, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/PathCheckoutCommandTest.java -> jfi: you are assuming that cache.getEntry(String) always returns the lowest available stage. That's not documented to be like that but I think it's true. So, that's ok.

Line:300, org.eclipse.jgit.test/tst/org/eclipse/jgit/api/PathCheckoutCommandTest.java -> To clarify that the checkout is really touching the file I would assert also on the content of the file just before checkout

  assertTrue(read(file).startsWith("<<<<<<< HEAD"));

-------------------------------------
