DESCRIPTION

Fire IndexChangedEvent on DirCache.commit()

Since we replaced GitIndex by DirCache JGit didn't fire
IndexChangedEvents anymore. For EGit this still worked with a high
latency since its RepositoryChangeScanner which is scheduled to
run each 10 seconds fires the event in case the index changes.
This scanner is meant to detect index changes induced by a different
process e.g. by calling "git add" from native git.

When the index is changed from within the same process we should fire
the event synchronously. Compare the index checksum on write to index
checksum when index was read earlier to determine if index really
changed. Use IndexChangedListener interface to keep DirCache decoupled
from Repository.

Change-Id: Id4311f7a7859ffe8738863b3d86c83c8b5f513af
Signed-off-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2011-09-25 22:11:51.000000000

Uploaded patch set 6.

-------------------------------------
author: Brenden Conley
date: 2011-09-25 22:11:54.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/815/ 

-------------------------------------
author: Marlie Beasley
date: 2011-09-26 16:08:26.000000000

Patch Set 6: I would prefer that you didn't submit this

(2 inline comments)



Line:209, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheBuilderTest.java -> A bit ugly. Runtime exception could occur for other reasons. Define an own exception type or wait for flag.

Line:244, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCache.java -> What about DirCache.read? Users could read the cache first and lock afterwards (perhaps this is exotic, I don't know).

-------------------------------------
