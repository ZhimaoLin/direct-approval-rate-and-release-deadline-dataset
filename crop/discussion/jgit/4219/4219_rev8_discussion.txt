DESCRIPTION

Fire IndexChangedEvent on DirCache.commit()

Since we replaced GitIndex by DirCache JGit didn't fire
IndexChangedEvents anymore. For EGit this still worked with a high
latency since its RepositoryChangeScanner which is scheduled to
run each 10 seconds fires the event in case the index changes.
This scanner is meant to detect index changes induced by a different
process e.g. by calling "git add" from native git.

When the index is changed from within the same process we should fire
the event synchronously. Compare the index checksum on write to index
checksum when index was read earlier to determine if index really
changed. Use IndexChangedListener interface to keep DirCache decoupled
from Repository.

Change-Id: Id4311f7a7859ffe8738863b3d86c83c8b5f513af
Signed-off-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2011-09-27 20:50:51.000000000

Uploaded patch set 8.

-------------------------------------
author: Brenden Conley
date: 2011-09-27 20:50:57.000000000

Patch Set 8:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/831/ 

-------------------------------------
author: Brenden Conley
date: 2011-09-27 20:54:36.000000000

Patch Set 8: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/831/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2011-09-28 22:43:36.000000000

Patch Set 8: (2 inline comments)



Line:252, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheBuilderTest.java -> For a full test that persisting an unchanged index doesn't fire an IndexChanged event I would also add a test which uses DirCacheBuilder. It is quite easy to detect that an DirCacheEditor with no edits will not change the index. But a builder which creates new DirCacheEntry instances which happen to have the same content as before - that's much more demanding.
Suggestion: in the previous test testBuildOneFile_Commit_FiresIndexChangedEvent() just add some block to the end where you again create a builder, add a new DirCacheEntry with the same values as before and commit that. That should not throw an event.

Line:9, /COMMIT_MSG -> not sure, but isn't it called "doesn't" instead of "didn't"

-------------------------------------
author: Zachary Orozco
date: 2011-09-28 22:50:14.000000000

Patch Set 8: (1 inline comment)



Line:253, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheBuilderTest.java -> just found out: a DirCacheEditor with no edit's will not persist the index on commit(). It detects it has nothing to do and just unlocks the index. Therefore this test is no good.

-------------------------------------
author: Douglas Trujillo
date: 2011-09-29 22:03:05.000000000

Patch Set 8: (3 inline comments)



Line:252, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheBuilderTest.java -> Done

Line:253, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheBuilderTest.java -> removed this test which only proves DirCacheEditor's smartness

Line:9, /COMMIT_MSG -> it didn't fire events anymore before this change so I think this is correct

-------------------------------------
