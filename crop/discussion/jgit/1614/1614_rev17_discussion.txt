DESCRIPTION

Add basic support for attributes.

Core classes to parse and process .gitattributes files including
support for reading attributes in WorkingTreeIterator and the
dirCacheIterator.

The implementation follows the git ignore implementation. It supports
lazy reading attributes while walking the working tree.

Bug: 342372
Change-Id: I05f3ce1861fbf9896b1bcb7816ba78af35f3ad3d
Also-by: Saniya Hill xxx@xxx.xxx
Also-by: Rocco Fowler xxx@xxx.xxx
Also-by: Bernard Hawkins xxx@xxx.xxx
Signed-off-by: Rocco Fowler xxx@xxx.xxx
Signed-off-by: Saniya Hill xxx@xxx.xxx
Signed-off-by: Bernard Hawkins xxx@xxx.xxx

COMMENTS

author: Bernard Hawkins
date: 2014-10-31 16:26:07.000000000

Uploaded patch set 17.

-------------------------------------
author: Brenden Conley
date: 2014-10-31 16:26:12.000000000

Patch Set 17:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/5631/

-------------------------------------
author: Brenden Conley
date: 2014-10-31 16:33:59.000000000

Patch Set 17: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/5631/ : SUCCESS

-------------------------------------
author: Jayvion Booth
date: 2014-11-02 07:45:07.000000000

Patch Set 17:

Small issue: can you please remove that empty stp file from commit?

-------------------------------------
author: Jayvion Booth
date: 2014-11-03 08:14:33.000000000

Patch Set 17: Code-Review-1

(14 comments)

Line:60, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java xxx@xxx.xxx missing?

Line:94, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> I would like to see Assert.isNotNull(key) here and also javadoc on the key and state getter methods saying they can never be null.

Line:116, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> I personally prefer to check once if(!(obj instanceof Attribute)) instead of two checks for null and class.

Line:121, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> the code was autogenerated and doesn't use the knowledge that key cant' be null.

Line:165, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> null checks on key and state are redundand

Line:61, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java xxx@xxx.xxx missing?

Line:77, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> Looks like it also accept invalid "empty" attributes like
*.txt - -text

Line:86, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> Looks like it also accept invalid "empty" keys like 
*.txt =

Line:162, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> I would put a note that return value can never be null.

Line:165, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> the attributes can be changed by client since this method returns the original reference. Is this intended?

Line:177, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> I would put a note that return value can never be null.

Line:61, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesNode.java xxx@xxx.xxx missing?

Line:94, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesNode.java -> I think it would make sense to move the check for leading negation sign "!" from AttributesRule to here.

Line:138, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesNode.java -> Actually the code can be simplified (it was direct copy from IgnoreNode), because giving two rules in one file (which might be a mistake, but anyway):
*.txt hello=bla
*.txt hello=bla2
the first one will be simply overriden by the second one if iterating in usual order - so one could remove 2x unusual iteration order (which are hard to read) and skip "containsKey" check.

-------------------------------------
author: Bernard Hawkins
date: 2014-11-03 10:52:55.000000000

Patch Set 17:

(13 comments)

Line:60, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> Done

Line:94, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> Done.
I have used a != null since Assert.isNotNull is not available from this plugin.

Line:116, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> Done.
I have set this class final since this implementation could loose the transitivity (and symmetry) property if the equals method is used with an instance of a subclass of Attribute.

Line:121, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> Done

Line:165, org.eclipse.jgit/src/org/eclipse/jgit/attributes/Attribute.java -> Done

Line:61, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> Done

Line:77, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> Done

Line:86, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> Done

Line:162, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> Done

Line:165, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> Done.
No it is not but I did not want to impact performances since this method was going to be called really often. However I have added a cache for the computation of the attribute on the next review so it does not matter anymore.
Thx

Line:177, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesRule.java -> Done

Line:94, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesNode.java -> Done

Line:138, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesNode.java -> Done

-------------------------------------
author: Bernard Hawkins
date: 2014-11-03 14:00:04.000000000

Patch Set 17:

(1 comment)

Line:138, org.eclipse.jgit/src/org/eclipse/jgit/attributes/AttributesNode.java -> In fact I had to change back this modification (patch set 19). The javadoc of this methods says, "... If it is not empty, this method will NOT override any existing entry". So the modification you suggested does not work. I have implemented it this way so we can easily implement the precedence mechanism of the git attributes files (current folder attribute > parent folder attributes > ... >info/attributes > global attributes). To have a better understanding of the problem you can have a look at he next review https://git.eclipse.org/r/#/c/35377/4 in the treewalk implementation).

-------------------------------------
