DESCRIPTION

Buffer the response until request parsing has done

This is a continuation from https://git.eclipse.org/r/#/c/4716/. For a
non-bidirectional request, we need to consume the request before writing
any response. In UploadPack, we write "shallow"/"unshallow" responses
before parsing "have" lines. This has happened not to be a problem most
of the time in the smart HTTP protocol because the underlying
InputStream has a 32 KiB buffer in SmartOutputStream.

Change-Id: I7c61659e7c4e8bd49a8b17e2fe9be67bb32933d3
Signed-off-by: Sandra Garrison xxx@xxx.xxx


COMMENTS

author: Sandra Garrison
date: 2017-04-04 17:53:02.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2017-04-04 17:53:09.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10101/

-------------------------------------
author: Eden Lin
date: 2017-04-04 17:56:05.000000000

Patch Set 3: Code-Review+2

Thanks.

I think we also want to add a guard to prevent stopBuffering() from writing output before input has been consumed. That can wait for a later change.

I was initially worried that the output buffer during negotiation may be a DoS vector. I think my worries were correct, but worse: we have memory usage proportional to the number of "have" lines even before buffering. Limiting "have" lines can happen in a separate change.

-------------------------------------
author: Brenden Conley
date: 2017-04-04 18:09:16.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10101/ : SUCCESS

-------------------------------------
author: Gerrit Code Review
date: 2017-04-04 18:25:41.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
