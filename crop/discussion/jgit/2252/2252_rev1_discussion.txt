DESCRIPTION

Refactor IndexPack to not require local filesystem

By moving the logic that parses a pack stream from the network (or
a bundle) into a type that can be constructed by an ObjectInserter,
repository implementations have a chance to inject their own logic
for storing object data received into the destination repository.

The API isn't completely generic yet, there are still quite a few
assumptions that the PackParser subclass is storing the data onto
the local filesystem as a single file.  But its about the simplest
split of IndexPack I can come up with without completely ripping
the code apart.

Change-Id: I5b167c9cc6d7a7c56d0197c62c0fd0036a83ec6c
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2011-01-15 03:14:23.000000000

Patch Set 1:

This is RFC-ish.  It seems fine, but the real reason I want to do this is to support storage on a non-filesystem.  Until I have a PackParser implementation that does that, I'm not convinced we should submit this refactoring.

-------------------------------------
author: Yoselin Hanna
date: 2011-01-15 03:14:24.000000000

Patch Set 1:

This is RFC-ish.  It seems fine, but the real reason I want to do this is to support storage on a non-filesystem.  Until I have a PackParser implementation that does that, I'm not convinced we should submit this refactoring.

-------------------------------------
