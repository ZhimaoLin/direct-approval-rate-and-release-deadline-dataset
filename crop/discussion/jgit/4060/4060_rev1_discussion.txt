DESCRIPTION

Implemented git describe command and plumbing

* Supports --abbrev
* should output the same as `git describe` with default args
* TODO: implement complete set of `git describe` functionality

Change-Id: I8d6849d43578e1dc65dc754f1bd1bc42e55699e3


COMMENTS

author: Brenden Conley
date: 2011-08-23 22:21:41.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/763/ 

-------------------------------------
author: Brenden Conley
date: 2011-08-23 22:25:02.000000000

Patch Set 1: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/763/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2011-08-23 22:59:04.000000000

Patch Set 1: I would prefer that you didn't submit this

(17 inline comments)



Line:278, org.eclipse.jgit/src/org/eclipse/jgit/api/Git.java -> Style-nit: Trailing whitespace.

Line:2, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> Please correct your copyright notice.

Line:80, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> s/seems//. It is the default.

Line:100, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> Don't we usually return the command type so its possible to chain calls?

Line:116, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> This walk should be released when you are done (use a try/finally).

Line:120, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> As the author of much of `git describe` in C... this isn't the most optimal algorithm. A better approach is to allocate a RevFlag from the RevWalk. Loop through each tag. Parse the tag reference to a commit... if it is a commit, add the RevFlag to it.

Now start from the starting point and walk backwards through history. When RevWalk.next() returns a commit that has your RevFlag, you have found a candidate. Mark the history behind that tag UNINTERESTING and keep going until the RevWalk stops.

If multiple candidates are found, I think you use the one with the largest distance (see below).

I may be forgetting some other isoteric rules related to not picking up the release tag on a maint branch when this is the master branch and there is an -rc tag a further number of commits back, but that is "version number wise" more recent. I think this is why you use the largest distance between a commit and the tag.

IIRC I managed to do the entire thing in just 1 reversion traversal in the C code, with a few commits extra being walked to finish up the counting.

Also as you mention on the commit message, there is a tendency to favor annotated tags over lightweight ones.

Line:153, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> Don't print stack traces. These should be wrapped and thrown to the caller.

Line:161, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> Don't print stack traces. These should be wrapped and thrown to the caller.

Line:171, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> The count should not appear if the tag is exactly found.

Line:179, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> s/REvCommit/RevCommit/

Line:187, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> I think you need a setRevSort(RevSort.TOPO) here to get the right count in all graphs.

Line:195, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> You created a RevWalk above in call. Why not reuse it here?

Also, FWIW, you should release a RevWalk when you are done with it.

Line:196, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> This reset is not necessary unless you were reusing a RevWalk

Line:197, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> This is the default.

Line:198, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> This is the default.

Line:202, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> Style-nit: We don't put curly braces around single line blocks.

Line:220, org.eclipse.jgit/src/org/eclipse/jgit/api/DescribeCommand.java -> Return this

-------------------------------------
author: Douglas Trujillo
date: 2011-08-23 23:27:31.000000000

Patch Set 1: (1 inline comment)



Line:4, org.eclipse.jgit.pgm/src/org/eclipse/jgit/pgm/Describe.java -> is this a copy&paste mistake or did they write parts of this class ?

-------------------------------------
