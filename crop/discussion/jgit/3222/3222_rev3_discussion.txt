DESCRIPTION

[RFC] Add command support for line history.

This command supports generating a comprehensive
collection of all the lines that have been present in any
revision of a file.  Each revision contains a collection of
lines in that revision and each line has a start revision,
end revision, and the line number it existed at in each
revision it was present in.

Change-Id: I84b8ea4838bb7d25f4fcdd540547884704661b8f
Signed-off-by: Jaidyn Nichols xxx@xxx.xxx


COMMENTS

author: Jaidyn Nichols
date: 2011-04-22 18:46:16.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2011-04-22 18:46:19.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/282/ 

-------------------------------------
author: Brenden Conley
date: 2011-04-22 18:49:32.000000000

Patch Set 3: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/282/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2011-04-22 22:34:49.000000000

Patch Set 3: I would prefer that you didn't submit this; Unclean IP, do not check in

(22 inline comments)



Line:6, org.eclipse.jgit/src/org/eclipse/jgit/lines/Line.java -> JGit uses the 3-clause BSD, aka the EDL. Not the EPL.

Line:16, org.eclipse.jgit/src/org/eclipse/jgit/lines/Line.java -> Style-nit: We don't xxx@xxx.xxx tags in our Javadoc.

Line:20, org.eclipse.jgit/src/org/eclipse/jgit/lines/Line.java -> Please don't store the line content as a String. It uses up a ton of memory. Applications only need the range, they can trade the range for the string data when using a RawText object for the file.

Line:184, org.eclipse.jgit/src/org/eclipse/jgit/lines/Line.java -> Style-nit: We don't put these @see javadoc tags in, but we do xxx@xxx.xxx on the method.

Line:11, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> FWIW, this is called "blame" in Git. We should call it blame in JGit too.

Line:47, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> Style-nit: We don't initialize to defaults, we rely on implicit initialization for fields.

Line:62, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> This construct is unnecessary, please remove it.

Line:85, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> Path needs to be coming from Revision, because it should be able to change over time due to rename/copy detection.

Line:90, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> You should hang onto an ObjectReader in this class, and make the caller release() you so you can release() your ObjectReader. Then that same ObjectReader can be used for all data access with TreeWalk or RevWalk instances.

Line:103, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> Style-nit: We prefer:

  BufferedReader reader = new BufferedReader(...);
  try {
  } finally {
    reader.close();
  }

That way there isn't a risk of reader staying initialized to null if something is wrong with the code.

Line:105, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> You can't assume platform encoding.

Line:107, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> Use RawText instead.

Line:127, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> If you had just used RawText earlier, you wouldn't need to do this conversion.

Line:129, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> The DiffAlgorithm should be configurable, but default to HistogramDiff.

Line:130, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> The RawTextComparator should be configurable, so users can run blame but ignore whitespace differences.

Line:161, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> Users should be able to configure which revision you start digging from.

Line:164, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> Because you have the FollowFilter enabled, the path can change on you during each commit walked. You need to be storing that path in each Revision.

Line:184, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionBuilder.java -> This can take a long time. As can the rest of the algorithm. Its better if you can make this incremental, so callers can ask you for some data, display it, then ask for more.

To see what I mean, run `git gui blame` and watch it fill in for a file. We want to be able to do the same thing in EGit, or other applications that are using blame. Sometimes users are happy to get recent row range results quickly, and they don't even need to wait for the whole file to finish.

Line:125, org.eclipse.jgit/src/org/eclipse/jgit/lines/RevisionContainer.java -> Is a Set<Line> really necessary here? An ArrayList<Line> that is sorted in-place would be much smaller.

Line:33, org.eclipse.jgit/src/org/eclipse/jgit/lines/Revision.java -> Aside from storing the ObjectId, we should have the path of this file. If a file gets renamed and we do move/copy detection we want to know where these lines are coming from.

Line:208, org.eclipse.jgit/src/org/eclipse/jgit/lines/Revision.java -> What do we need this for?

Line:212, org.eclipse.jgit/src/org/eclipse/jgit/lines/Revision.java -> Please don't use or rely on platform encoding.

-------------------------------------
