DESCRIPTION

Add blame command support.

CQ: 5110
Bug: 306161
Change-Id: I84b8ea4838bb7d25f4fcdd540547884704661b8f
Signed-off-by: Jaidyn Nichols xxx@xxx.xxx


COMMENTS

author: Jaidyn Nichols
date: 2011-05-27 22:27:38.000000000

Uploaded patch set 28.

-------------------------------------
author: Brenden Conley
date: 2011-05-27 22:28:46.000000000

Patch Set 28:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/526/ 

-------------------------------------
author: Brenden Conley
date: 2011-05-27 22:32:25.000000000

Patch Set 28: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/526/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2011-05-27 23:20:14.000000000

Patch Set 28: (10 inline comments)



Line:79, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> Don't declare these fields private. Leave them package access. That way we don't need synthetic accessor methods to use them. Since the Session class is private, the fields are already not-visible.

Line:104, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> What is the point of the Session object if its declared final? Why not inline these fields into the BlameGenerator and avoid an extra field lookup on each access?

Line:173, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> I'm now doubting the need for a Line class. Its overkill on memory usage.

I'm going to just upload a replacement proposal at this point.

Line:192, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> What does this actually mean?

Line:199, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> How can line be null? We created a Line object for every line in the "B" side earlier during createLines(). Here we have concluded that the line in question at bIndex is common to both files since it occurs before the first edit, or between two edits. Therefore the line *must* exist in "B" and cannot be null.

Line:245, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> Change this method to return true here instead of break, and return false if you fall out of the loop.

Then below in next() you can use the return value of updatePath to know if you should just stop and not even look up the path in the tree again.

Line:272, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> Why null? If the file we are blaming is empty, shouldn't we return an empty List? Or do you mean "empty list on empty file, null if file does not exist"?

Line:330, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> Move this into the block above:

  if (blob == null) {
    updatePath(commit);
    blob = getBlob(commit);
    if (blob == null) {
      markSessionBound();
      return false;
    }
  }

Line:113, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> s/current complete/current commit/

Line:142, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> !bound || commit.getParentCount() == 0

-------------------------------------
author: Jaidyn Nichols
date: 2011-05-27 23:27:38.000000000

Patch Set 28: (1 inline comment)



Line:173, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> Does that mean you won't want me to incorporate any of your comments and upload further patches?

-------------------------------------
author: Yoselin Hanna
date: 2011-05-27 23:50:49.000000000

Patch Set 28: (1 inline comment)



Line:173, org.eclipse.jgit/src/org/eclipse/jgit/blame/BlameGenerator.java -> No. I'm taking this patch set as a starting point and will upload something soon.

-------------------------------------
