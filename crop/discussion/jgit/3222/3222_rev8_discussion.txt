DESCRIPTION

Add command support for line history.

This command supports generating a comprehensive
collection of all the lines that have been present in any
revision of a file.  Each revision contains a collection of
lines in that revision and each line has a start revision,
end revision, and the line number it existed at in each
revision it was present in.

CQ: 5110
Bug: 306161
Change-Id: I84b8ea4838bb7d25f4fcdd540547884704661b8f
Signed-off-by: Jaidyn Nichols xxx@xxx.xxx
Signed-off-by: Malia Sampson xxx@xxx.xxx


COMMENTS

author: Malia Sampson
date: 2011-04-27 16:36:10.000000000

Uploaded patch set 8.

-------------------------------------
author: Brenden Conley
date: 2011-04-27 16:36:13.000000000

Patch Set 8:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/293/ 

-------------------------------------
author: Brenden Conley
date: 2011-04-27 16:36:14.000000000

Patch Set 8: Build Failed

Build Failed 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/293/ : FAILURE

-------------------------------------
author: Malia Sampson
date: 2011-04-27 16:36:27.000000000

Patch Set 8: Unclean IP, do not check in

waiting for IP review, created CQ 5110

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:22.000000000

Patch Set 8: (14 inline comments)

Mostly style nits... wait for the CQ to be approved before changing any code.

Will we now get two blame implementations, this annotate like, and then later more advanced version with detection of content move?

-------------------------------------
author: Brenden Conley
date: 2011-04-29 17:04:32.000000000

Patch Set 8: No score

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/327/ 

-------------------------------------
author: Brenden Conley
date: 2011-04-29 17:07:28.000000000

Patch Set 8: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/327/ : SUCCESS

-------------------------------------
author: Brenden Conley
date: 2011-04-29 17:07:29.000000000

Patch Set 8: No score

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/328/ 

-------------------------------------
author: Brenden Conley
date: 2011-04-29 17:10:53.000000000

Patch Set 8: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/328/ : SUCCESS

-------------------------------------
author: Yoselin Hanna
date: 2011-05-06 14:18:52.000000000

Patch Set 8: I would prefer that you didn't submit this

(9 inline comments)



Line:83, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> This should default to HistogramDiff.

Line:85, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> This should default to the default version.

Line:141, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> This crashes with ObjectTooLargeException if the object is more than the streaming threshold.

Line:144, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> This is really expensive to do in Java. Creating an object for each Line, for each revision of that Line?

There is no way this will scale to blame a 100,000 line source file. But you need to make the code support that use case in Java.

Line:175, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> This is still horrifically inadequate compared to what the C implementation of blame can do.

But its better than nothing.

Line:184, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> I hate this idea. We have to dig back to the very first version of a file in order to display *any* of its blame data. If the project is big enough, this can take several minutes just to compute buildRevisions(). Forget any of the other work you need to do.

That's why I wanted to do this incrementally.

Line:198, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> You don't need to do this. FollowFilter will always have the current path stored within it. Use getPath() to obtain the path it will use on the next commit.

Line:207, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> So at this point, we have a LinkedList of commits from oldest->newest? Which means you are digging through the blame data from the original file up to the current version.

Which ignores my point I made earlier. Most users of `git blame` are using it to look at recent history and don't need data going back to the root. Starting from the root and working forwards to HEAD means the user has to wait for you to compute a bunch of stuff they don't need right now.

Line:217, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> I would prefer to set these defaults in the constructor.

-------------------------------------
author: Jaidyn Nichols
date: 2011-05-06 16:33:12.000000000

Patch Set 8: (1 inline comment)



Line:198, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> How exactly do I get the new path? It looks like the PathFilter in FollowFilter is final and the path in PathFilter is final so where does it get updated?

It looks like RewriteTreeFilter creates a new FollowFilter but how can I access it to get the new path?

-------------------------------------
author: Yoselin Hanna
date: 2011-05-06 22:12:53.000000000

Patch Set 8: Do not submit

Given how many issues still exist with this code, why was this sent through the CQ process already?

-------------------------------------
author: Malia Sampson
date: 2011-05-07 14:35:41.000000000

Patch Set 8:

The change was given a CQ to try to get it through the IP process in time for indigo. We can upload a new commit as the change is still in queue to be reviewed.

-------------------------------------
author: Jaidyn Nichols
date: 2011-05-07 16:51:33.000000000

Patch Set 8: (15 inline comments)



Line:121, org.eclipse.jgit/src/org/eclipse/jgit/api/LineHistoryCommand.java -> Done

Line:83, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> Done

Line:85, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> Done

Line:217, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionBuilder.java -> Done

Line:83, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Done

Line:86, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Done

Line:90, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Done

Line:103, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Done

Line:226, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Done

Line:94, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionContainer.java -> Done

Line:144, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionContainer.java -> Done

Line:180, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> Done

Line:186, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> Done

Line:189, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> Done

Line:193, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> Done

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:121, org.eclipse.jgit/src/org/eclipse/jgit/api/LineHistoryCommand.java -> Drop overriding javadoc

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:83, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Drop overriding javadoc

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:86, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Very slow way of computing a hash code, but perhaps less important than for Line since we have fewer

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:90, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Drop overriding javadoc

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:103, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Drop overriding javadoc

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:226, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> Drop overriding javadoc

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:247, org.eclipse.jgit/src/org/eclipse/jgit/blame/Revision.java -> We should have a way to pass the encoding here

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:94, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionContainer.java -> Is there a good reason for abandoning the java convention of 0-based indices and having ranges that include the start index, but not the end index?

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:144, org.eclipse.jgit/src/org/eclipse/jgit/blame/RevisionContainer.java -> Drop overriding javadoc

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:146, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> The dominating convention in Java is that a range includes the start index, but not the end index. Is there a good reason not do it like this here?

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:180, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> Don't use javadoc this way. Drop the comment
completely and let Eclipse/Javadoc pick up the inherited comment directly. Applies here and all other places where methods are overridden or implemented.
Add xxx@xxx.xxx where superclass methods are ovverridden.

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:186, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> Drop overriding javadoc

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:189, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> This is quite slow since toString does a lot of work. It's much faster to combine the hashes of the components directly.

-------------------------------------
author: Juliet Cantu
date: 2011-04-27 21:40:21.000000000

MISMATCHED INLINE COMMENT
Line:193, org.eclipse.jgit/src/org/eclipse/jgit/blame/Line.java -> Drop overriding javadoc

-------------------------------------
