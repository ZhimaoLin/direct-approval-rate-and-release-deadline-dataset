DESCRIPTION

Record the estimated size of the pack files.

The Compacter and Garbage Collector will record the estimated size of
the newly going to be created compact, gc or garbage packs. This
information can be used by the clients to better make a call on how to
actually store the pack based on the approximated expected size.

Added a new protected method DfsObjDatabase.newPack(PackSource
packSource, long estimatedPackSize) with the default implementation
which is equivalent to
newPack(packSource).setEstimatedPackSize(estimatedPackSize). I didn't
make it abstract because that would force all the existing sub classes
of DfsObjDatabase to implement this method. Due to this default
implementation, the estimatedPackSize is added to DfsPackDescription
using a setter instead of a constructor parameter (even though
constructor parameter would be a better choice as this value is set only
during the object creation ).

Change-Id: Iade1122633ea774c2e842178a6a6cbb4a57b598b
Signed-off-by: Virginia Riley xxx@xxx.xxx


COMMENTS

author: Virginia Riley
date: 2017-01-23 23:52:57.000000000

Uploaded patch set 3.

-------------------------------------
author: Virginia Riley
date: 2017-01-24 00:04:32.000000000

Patch Set 3:

Thanks Terry and Shawn. PTAL ...

-------------------------------------
author: Yoselin Hanna
date: 2017-01-24 00:31:25.000000000

Patch Set 3:

(2 comments)

Line:72, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackDescription.java -> Crazy idea, what if we just stored the estimated size here with setFileSize(PackExt.PACK, size)?

That way we don't even need a new field here. We just fill in an estimate and allow the implementation get it (or 0 if not filled in), and replace it with the accurate number later.

Line:23, /COMMIT_MSG -> I don't think this justifies the method. My suggestion in my earlier comments was to just not have this method.

-------------------------------------
author: Virginia Riley
date: 2017-01-24 02:59:21.000000000

Patch Set 3:

(2 comments)

Line:72, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DfsPackDescription.java -> I thought about it, but I saw two problems with it.

* If we call setFileSize(PACK, size) from Dfs classes, it may override any pack file size already initialized with the real implementations of DsfObjDatabase.newPack(PackSource).

* It would be little difficult to write tests about verifying the estimated file size, as the real file size will override the estimated file size.

Line:23, /COMMIT_MSG -> The main purpose of this method is to give an option to the sub classes of DfsObjDatabase to make use of the estimated pack size while creating the PackDescription object. I see that the Google internal implementation of ObjDatabse would need to know about the estimated pack size while creating the pack description. If we remove this method, and directly call description.setEstimatedFileSize from compactor and garbage collector, the implementations of DfsObjDatabase.newPack(PackSource packSource) does not have any way to know estimated size of the new pack.

-------------------------------------
author: Gerrit Code Review
date: 2017-01-26 20:23:07.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
