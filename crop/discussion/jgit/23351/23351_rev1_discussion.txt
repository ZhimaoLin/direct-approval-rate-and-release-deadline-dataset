DESCRIPTION

Fix StackOverflowError in RevCommit.carryFlags on deep side graphs

Copying flags through a graph with deep side branches can cause
StackOverflowError. The recursive step to visit the 2nd parent of
a merge commit can overflow the stack if these are themselves very
deep histories with many branches.

Rewrite the loop to iterate up to 500 recursive steps deep before
unwinding the stack and running the remaining parts of the graph
using a dynamically allocated FIFORevQueue.

This approach still allows simple graphs that mostly merge short
lived topic branches into master to copy flags with no dynamic
memory allocation, relying only on temporary stack extensions.
Larger more complex graphs only pay the allocation penalities
if copying has to extend outwards "very far" in the graph, which
is unlikely for many coloring based algorithms.

Change-Id: I1882e6832c916e27dd5f6b7602d9caf66fb39c84


COMMENTS

author: Yoselin Hanna
date: 2014-03-13 19:50:43.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-03-13 19:50:49.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/jgit.gerrit/4850/

-------------------------------------
author: Yoselin Hanna
date: 2014-03-13 19:58:52.000000000

Patch Set 1: Code-Review-1

(1 comment)

Line:261, org.eclipse.jgit/src/org/eclipse/jgit/revwalk/RevCommit.java -> This could be the wrong commit. pList[i] may have been the top of a strand of pearls with a merge commit further back. Its the merge commit that the recursive invocation aborted on.

-------------------------------------
author: Brenden Conley
date: 2014-03-13 20:04:41.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/jgit.gerrit/4850/ : SUCCESS

-------------------------------------
