DESCRIPTION

Don't insert the same pack twice into a pack list

If a concurrent thread picks up a newly created PackFile and adds
it to the pack list before the IndexPack thread itself can insert
the item onto the front of the list, do nothing and use the item
that was picked up by that other concurrent scanning thread.

This avoids a potential condition where the same pack exists in
memory twice, which causes confusion later during a rescan of the
directory because we don't know exactly which PackFile instance
should be retained into the new list, and which should be discarded.

We can stop searching through the old pack list as soon as the
sort function declares that the item to insert should be before
the item already in the list.  Because the list is always sorted
by modification time (in seconds), we should never encounter a
case where the pack is positioned at the wrong spot in the list.
This early break out still permits an efficient implementation of
the common case, inserting a new pack at the head of the list.

Change-Id: Ice4459bbd4ee9487078aff5257893883d04f05fb
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2010-04-28 00:10:13.000000000

Patch Set 1: Looks good to me, but someone else must approve; IP review completed



-------------------------------------
author: Malia Sampson
date: 2010-05-03 07:40:03.000000000

Patch Set 1: Looks good to me, approved; IP review completed



-------------------------------------
author: Malia Sampson
date: 2010-05-03 07:40:06.000000000

Change has been successfully merged into the git repository.

-------------------------------------
