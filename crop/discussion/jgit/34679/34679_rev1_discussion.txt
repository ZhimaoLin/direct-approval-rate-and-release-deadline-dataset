DESCRIPTION

When marking commits as uninteresting don't care if the tree exists

When during an ObjectWalk commits are marked as uninteresting we should
be tolerant against the situation that the commit exists in the repo but
the referenced tree is not exisiting. Since commit
c4797fe98655b3d52d0a90ba44fce6e053db3b8b we are throwing
MissingObjectException in such a case. This semantic differs from native
git behaviour and may cause push operations to fail while they would
work in native git. See:
http://dev.eclipse.org/mhonarc/lists/egit-dev/msg03585.html

Bug: 445744
Change-Id: Ib7dec10fd2ef1adbb8adbabb9d3d5a64e554286a


COMMENTS

author: Zachary Orozco
date: 2014-10-09 22:12:53.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-10-09 22:12:59.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/5577/

-------------------------------------
author: Brenden Conley
date: 2014-10-09 22:20:44.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/5577/ : SUCCESS

-------------------------------------
author: Dillon Cross
date: 2014-10-10 07:44:47.000000000

Patch Set 1: Code-Review+1

(1 comment)

Line:252, org.eclipse.jgit/src/org/eclipse/jgit/revwalk/ObjectWalk.java -> Will the push succeed when the locally missing tree is also missing in Gerrit?

-------------------------------------
author: Zachary Orozco
date: 2014-10-10 09:35:15.000000000

Patch Set 1:

(1 comment)

Line:252, org.eclipse.jgit/src/org/eclipse/jgit/revwalk/ObjectWalk.java -> That would be a severe inconsistency in the server repo which exists even before the push. The server would have advertised a ref to commit where the tree is missing. The server should only have refs where he knows the object and all it's dependent objects.

Do you know about such cases?

Recently I explained how a commit without the tree can occur in the area of unreferenced objects. Those object which can be garbage collected. But I have no explanation for how such a situation can occur in a gerrit server repo in the area of referenced objects.

To answer your question: The client side can't detect that problem (because he doesn't know which trees exist on server side). But the server should have detected in one of the previous pushes that he is moving a ref to a commit where some dependent objects are missing. Is gerrit doing that even with this change beeing active?

-------------------------------------
author: Dillon Cross
date: 2014-10-10 10:31:34.000000000

Patch Set 1: Code-Review+2

(1 comment)

Line:252, org.eclipse.jgit/src/org/eclipse/jgit/revwalk/ObjectWalk.java -> > That would be a severe inconsistency 

Yes, I see... this must not happen. So this change looks good to me.

-------------------------------------
author: Douglas Trujillo
date: 2014-10-10 14:52:16.000000000

Patch Set 1:

push that to stable-3.5 since I will tag 3.5.1 next week

-------------------------------------
author: Douglas Trujillo
date: 2014-10-10 14:52:44.000000000

Patch Set 1: Cherry Picked

This patchset was cherry picked to branch stable-3.5 as commit 88b25a58f0164ab609061cb20cfb83c3bcb9a9ec

-------------------------------------
author: Douglas Trujillo
date: 2014-10-10 14:53:14.000000000

Patch Set 1: Code-Review-1

let's do this on stable-3.5 and merge back to master

-------------------------------------
author: Zachary Orozco
date: 2014-10-10 17:44:03.000000000

Abandoned

Will be cherry-picked to 3.5 in change 34727

-------------------------------------
