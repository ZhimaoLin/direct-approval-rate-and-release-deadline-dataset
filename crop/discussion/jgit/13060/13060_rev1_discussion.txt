DESCRIPTION

Allow PreUploadHook.onSendPack to send messages to the client

Before transmitting to the client a hook may want to send along
a text message ahead of the pack, such as a "message of the day".
Enable this usage by mirroring the message sending API from
ReceivePack on the UploadPack instance, using the side band.

Change-Id: I31cd254a4ddb816641397a3e9c2c20212471c37f


COMMENTS

author: Brenden Conley
date: 2013-05-22 19:22:16.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3566/ 

-------------------------------------
author: Brenden Conley
date: 2013-05-22 19:30:11.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3566/ : SUCCESS

-------------------------------------
author: Santos Moore
date: 2013-05-22 19:57:13.000000000

Patch Set 1: I would prefer that you didn't submit this

(3 inline comments)



Line:506, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> Um, so this was unused before? I guess this makes this a behavior change.

Line:1117, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> This overrides the msgOut that was passed to upload, is that intentional?

Line:11, /COMMIT_MSG -> It's not clear from this description how this usage wasn't enabled before. Was it just that any output during this particular hook was swallowed regardless of what the caller passed in to upload()?

-------------------------------------
author: Yoselin Hanna
date: 2013-05-22 21:51:50.000000000

Patch Set 1: (3 inline comments)



Line:506, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> Yea on upload-pack we mostly just used side-band.

Line:1117, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> Yes. The side-band channel should always be preferred.

Line:11, /COMMIT_MSG -> There was no way to get access to the stream, because we had no API for it, so we couldn't send any messages.

-------------------------------------
author: Santos Moore
date: 2013-05-22 22:10:51.000000000

Patch Set 1: Looks good to me, but someone else must approve

(1 inline comment)



Line:1117, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> Ok, so:
Before: don't send anything if OPTION_NO_PROGRESS set, regardless of messages stream passed to upload()
After: if OPTION_NO_PROGRESS set, use messages stream passed to upload(). If the caller happened to hook that messages stream up to the sideband or SSH's stderr, we will actually send messages over the wire that we wouldn't have sent previously. The client will (presumably) drop these on the floor.

Sound right?

-------------------------------------
author: Yoselin Hanna
date: 2013-05-22 22:36:37.000000000

Patch Set 1: (1 inline comment)



Line:1117, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> Yes, this looks right. If the user asks for no-progress the only messages they would get will be from the PreUploadHook. I think that is reasonable, the hook isn't sending progress its sending some other sort of important message(s).

-------------------------------------
author: Santos Moore
date: 2013-05-22 22:40:27.000000000

Patch Set 1: Looks good to me, approved

(1 inline comment)



Line:1117, org.eclipse.jgit/src/org/eclipse/jgit/transport/UploadPack.java -> Yes, we're on the same page here. This behavior seems reasonable.

(But note that the definition of no-progress is 'Basically the client just says "I do not wish to receive stream 2 on sideband, so do not send it to me, and if you did, I will drop it on the floor anyway".' So the hook may decide the message is important, and will send it, but the client will drop it and the user will never see it.)

-------------------------------------
author: Yoselin Hanna
date: 2013-05-22 22:57:49.000000000

Patch Set 1: IP review completed



-------------------------------------
author: Yoselin Hanna
date: 2013-05-22 22:57:51.000000000

Change has been successfully merged into the git repository.

-------------------------------------
