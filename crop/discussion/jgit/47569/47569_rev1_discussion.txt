DESCRIPTION

Fix memory leak in dfs.DeltaBaseCase

The LRU chain management code was broken leading to situations where
the chain was incomplete.  This prevented the cache from removing
items when it exceeded its memory target, causing a leak.

One case was repeated hit on the head of the chain. moveToHead(e)
was invoked linking the head back to itself in a cycle orphaning
the rest of the table.

Add some unit tests to cover this and a few other paths.

Change-Id: Ib27486eaa1b1d2bf1c745a56d0a5832bfb029322


COMMENTS

author: Yoselin Hanna
date: 2015-05-10 02:44:52.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-05-10 02:44:59.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6362/

-------------------------------------
author: Brenden Conley
date: 2015-05-10 02:52:13.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6362/ : SUCCESS

-------------------------------------
author: Santos Moore
date: 2015-05-11 18:25:36.000000000

Patch Set 1: Code-Review-1

(5 comments)

I just read the RHS and it looks good. The code certainly seems simpler.

Line:96, org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCacheTest.java -> Should we maybe also make these asserts immediately after put(5)?

Line:101, org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCacheTest.java -> "Size" or "MemoryUsed"?

Line:90, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCache.java -> Checking my understanding: this can only happen if the soft referent was GC'ed (obsolete after the next change). Since no other entry in the table will match, the early return is just an optimization to avoid unnecessary scanning of the rest of the bucket.

Line:134, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCache.java -> Worth throwing ISE or something if you exit this loop without finding the slot in the table? That would mean this method is called with a stale Slot, which is indeed an illegal state (considering the class is not threadsafe).

Line:148, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCache.java -> So braces here, I guess.

-------------------------------------
author: Yoselin Hanna
date: 2015-05-11 18:39:38.000000000

Patch Set 1:

(5 comments)

Line:96, org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCacheTest.java -> Done

Line:101, org.eclipse.jgit.test/tst/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCacheTest.java -> MemoryUsed. Done.

Line:90, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCache.java -> Correct.

Line:134, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCache.java -> Done

Line:148, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/dfs/DeltaBaseCache.java -> Done

-------------------------------------
