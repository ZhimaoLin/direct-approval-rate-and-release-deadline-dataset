DESCRIPTION

[draft] Extend DirCacheCheckout to skip conflicting files

A new property 'skipConflicts' allows to skip conflicting files during
checkout. Non-conflicting files will be checked out as usual and
getConflicts() lists those files not checked out.

Signed-off-by: Brian Lynch xxx@xxx.xxx
Change-Id: Ice23f2c8a48d81f939e5a536e8f51ecd41b858fe

COMMENTS

author: Brian Lynch
date: 2016-06-07 17:33:06.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-06-07 17:33:12.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8488/

-------------------------------------
author: Brenden Conley
date: 2016-06-07 17:44:31.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8488/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2016-06-08 07:18:29.000000000

Patch Set 1:

(1 comment)

Line:12, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheCheckoutTest.java -> We already have a class of that name with a lot of DirCacheCheckout tests. Please move this test into org.eclipse.jgit.lib.DirCacheCheckoutTest

-------------------------------------
author: Douglas Trujillo
date: 2016-06-08 07:33:49.000000000

Patch Set 1: Code-Review-1

(8 comments)

Line:1076, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> broken sentence

Line:1084, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> xxx@xxx.xxx 4.5 for new API method

File Comment: org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheCheckoutTest.java -> I guess we need more tests for this new option, e.g. what happens if the conflict is a file / folder conflict (file in repository, in working tree replaced by a folder containing other files or vice versa)

Line:1, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheCheckoutTest.java -> missing license header

did you notice that there is already a class DirCacheCheckoutTest in org.eclipse.jgit.lib ? I guess we could move that to org.eclipse.jgit.dircache

Line:28, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheCheckoutTest.java -> also assert that file content is correct

Line:7, /COMMIT_MSG -> Add option to DirCacheCheckout to allow skipping

Line:11, /COMMIT_MSG -> the files which were skipped during checkout due to to conflicts

Line:12, /COMMIT_MSG -> could you give an example when this option is useful ?

-------------------------------------
author: Brian Lynch
date: 2016-06-12 14:09:53.000000000

Patch Set 1:

(9 comments)

Line:1076, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> Done

Line:1084, org.eclipse.jgit/src/org/eclipse/jgit/dircache/DirCacheCheckout.java -> Done

File Comment: org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheCheckoutTest.java -> Sure, the 'happy path' was meant to demonstrate how to use the new option. I've added one test with a file/folder conflict, the opposite direction fails with an exception (see my post to the mailing list).

I am not familiar with the DirCacheCheckout. Please let me know if there are further uses that need to be tested.

Line:1, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheCheckoutTest.java -> I'd prefer to move the new tests to the existing class (in the wrong location) and fix the package name in a later step - assuming that this leads to a better readable patch.

Line:12, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheCheckoutTest.java -> Done

Line:28, org.eclipse.jgit.test/tst/org/eclipse/jgit/dircache/DirCacheCheckoutTest.java -> Done

Line:7, /COMMIT_MSG -> Done

Line:11, /COMMIT_MSG -> Done

Line:12, /COMMIT_MSG -> Done

-------------------------------------
