DESCRIPTION

Enable providing credentials for HTTP authentication

Bug: 296201
Change-Id: Ibe13e546b45eed3e193c09ecb414bbec2971d362
Signed-off-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2010-09-28 07:50:00.000000000

Patch Set 1: I would prefer that you didn't submit this; Unclean IP, do not check in

(5 inline comments)

- removed merge commit http://egit.eclipse.org/r/#change,1651 by cherry-picking http://egit.eclipse.org/r/#change,1652 onto retargeted http://egit.eclipse.org/r/#change,1670
- cleaned up commit message to follow project conventions
- I am not sure if this change goes in the right direction

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/transport/Credentials.java -> missing license header

Line:8, org.eclipse.jgit/src/org/eclipse/jgit/transport/Credentials.java -> I don't understand the purpose of this class, all the methods defined here are already defined on java.lang.Object

Line:113, org.eclipse.jgit/src/org/eclipse/jgit/transport/HttpAuthMethod.java -> this downcasting looks ugly

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/transport/UsernamePasswordCredentials.java -> missing license header

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/transport/CredentialsProvider.java -> missing license header

-------------------------------------
author: Yoselin Hanna
date: 2010-10-06 17:23:04.000000000

Patch Set 1: I would prefer that you didn't submit this

(3 inline comments)



Line:565, org.eclipse.jgit/src/org/eclipse/jgit/transport/Transport.java -> We would prefer this to be private and use the getter.

Line:109, org.eclipse.jgit/src/org/eclipse/jgit/transport/HttpAuthMethod.java -> Don't initialize to null.  Let the compiler require us to ensure the values are initialized in every branch below.

Line:113, org.eclipse.jgit/src/org/eclipse/jgit/transport/HttpAuthMethod.java -> I agree, the downcast here is ugly.

A more clean solution is to have the provider be a callback that we ask for data from:

  c = credentialsProvider.getCredentials(uri, "Username", "Password");
  username = c.get(0);
  passsword = c.get(1);

Or something like that.  The idea being that the protocol here provides prompts to the provider letting it know what it needs, and the provider returns that data in the credentials object.

To be safe we probably don't want to pass in username/password as strings, but instead have a prompt type object that is abstract, with two concrete instances for USERNAME and PASSWORD that are standard singletons.  LIkewise we could do a PASSPHRASE standard singleton to decrypt an SSH key.

-------------------------------------
author: Zachary Orozco
date: 2010-11-10 15:44:57.000000000

Patch Set 1: (6 inline comments)



Line:565, org.eclipse.jgit/src/org/eclipse/jgit/transport/Transport.java -> Done

Line:8, org.eclipse.jgit/src/org/eclipse/jgit/transport/Credentials.java -> This class has been removed

Line:109, org.eclipse.jgit/src/org/eclipse/jgit/transport/HttpAuthMethod.java -> Done

Line:113, org.eclipse.jgit/src/org/eclipse/jgit/transport/HttpAuthMethod.java -> This has been reworked and simplified completely.

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/transport/UsernamePasswordCredentials.java -> This class has been removed

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/transport/CredentialsProvider.java -> Done

-------------------------------------
