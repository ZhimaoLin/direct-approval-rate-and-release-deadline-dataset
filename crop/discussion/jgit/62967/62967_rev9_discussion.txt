DESCRIPTION

RefTree: Store references in a Git tree

Track the "refs/" directory as a root tree by storing references
that point directly at an object as a GITLINK entry in the tree.
For example "refs/heads/master" is written as "heads/master".

Annotated tags also store their peeled value with ^{} suffix, using
"tags/v1.0" and "tags/v1.0^{}" GITLINK entries.

Symbolic references are written as SYMLINK entries with the blob of
the symlink carrying the name of the symbolic reference target.

HEAD is outside of "refs/" namespace so it is stored as a special
"..HEAD" entry. This name is chosen because ".." is not valid in
a reference name and it almost looks like "../HEAD" which names
HEAD if the reader was inside of the "refs/" directory.

A group of updates can be applied by updating the tree in one step.
A new Command type is required to handle symbolic references and
peeled references.

Change-Id: Id47e5d4d32149a9e500854147edd7d93c1041a39


COMMENTS

author: Yoselin Hanna
date: 2016-01-07 04:27:51.000000000

Uploaded patch set 9.

-------------------------------------
author: Brenden Conley
date: 2016-01-07 04:36:25.000000000

Patch Set 9:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7798/

-------------------------------------
author: Brenden Conley
date: 2016-01-07 04:44:31.000000000

Patch Set 9: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7798/ : SUCCESS

-------------------------------------
author: Ariel Sawyer
date: 2016-01-07 16:45:42.000000000

Patch Set 9: Verified-1

(1 comment)

Line:107, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftree/RefTree.java -> Add a comment: Limit the depth of symbolic ref dereferencing to avoid cycles, but resolve at this depth to allow cleanup of bad symrefs.

Nit: Also, reorder the variables public/package private/private.

Why not define in terms of RefDatabase.MAX_SYMBOLIC_REF_DEPTH? In this context the constant should result in a valid reference, whereas that constant claims "If the reference is nested deeper than this depth, the implementation should either fail, or at least claim the reference does not exist." If that isn't actually true then that JavaDoc should get updated and the constant used directly.

-------------------------------------
author: Yoselin Hanna
date: 2016-01-07 17:52:09.000000000

Patch Set 9:

(1 comment)

Line:107, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftree/RefTree.java -> Made RefDatabase.MAX_SYMBOLIC_REF_DEPTH public and used that directly, dropping this declaration.

-------------------------------------
author: Gerrit Code Review
date: 2016-01-08 00:21:56.000000000

Change has been successfully merged into the git repository by Yoselin Hanna

-------------------------------------
