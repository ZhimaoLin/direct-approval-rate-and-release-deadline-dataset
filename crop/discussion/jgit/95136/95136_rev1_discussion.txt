DESCRIPTION

Process all "have"s even when MissingObjectException is encountered

Because objects described by the client using "have" lines do not need
to be reachable by any ref on the server, it is possible for them to
point to missing objects in the reachability graph.  When such an
object is encountered, f5368dc97f564cf5eac3e7e2742680bf2f95fc0b (Only
throw MissingObjectException when necessary, 2017-03-29) aborts the
"have" walk early to salvage the fetch.  The downside of that change
is that remaining "have"s are ignored unless they pointed directly to
an object with a bitmap.  In the worst case this can increase the
bandwidth cost of a fetch to the cost of a clone because most "have"s
are ignored.

Avoid this cost by bypassing the failed "have" completely and moving
on to the remaining "have"s.

Change-Id: Iac236b6d05f735078c9935abfa6e58d1eb47f388


COMMENTS

author: Eden Lin
date: 2017-04-17 18:20:26.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2017-04-17 18:20:32.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/10180/

-------------------------------------
author: Beau Terry
date: 2017-04-17 18:29:49.000000000

Patch Set 1:

(2 comments)

Line:117, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapWalker.java -> Why? Can you expand this comment? Oh wait, I missread the code above. The `result.contains(obj) -> continue` is a mere optimisation, and the actual functionality is in the result.or.

Line:13, /COMMIT_MSG -> This is git core style. In projects reviewed with Gerrit, better give the change id, which is linkified?

-------------------------------------
author: Brenden Conley
date: 2017-04-17 18:35:47.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/10180/ : SUCCESS

-------------------------------------
author: Paloma Kennedy
date: 2017-04-17 18:37:09.000000000

Patch Set 1:

(1 comment)

Line:113, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapWalker.java -> Is this optimization correct? The obj could be in some other "start"'s bitmap, I think we still want to include the bitmap from this obj.

-------------------------------------
author: Eden Lin
date: 2017-04-17 18:40:23.000000000

Patch Set 1:

(3 comments)

Line:113, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapWalker.java -> Good question. Yes, it's correct. Suppose object B is in object A's bitmap. Define reachable(A) to be the set of all objects directly or indirectly reachable from A. When object A's bitmap was "or"ed into the result, reachable(A) got included in the result set. Anything reachable from B is also reachable from A so we can skip the walk from A entirely.

Line:117, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/pack/PackWriterBitmapWalker.java -> Are you asking about the "okay" or about the "expected"?

I'll copy some of the text from the commit message here. Thanks for pointing it out.

Line:13, /COMMIT_MSG -> JGit seems to do a little of both. I'll switch to change id.

-------------------------------------
author: Gerrit Code Review
date: 2017-04-17 18:53:27.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
