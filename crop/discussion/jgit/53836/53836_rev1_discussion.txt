DESCRIPTION

Move createSymLink/readSymLink to FileUtils

Bug: 475070
Change-Id: I258f4bf291e02ef8e6f867b5d71c04ec902b6bcb
Signed-off-by: Jayvion Booth xxx@xxx.xxx


COMMENTS

author: Jayvion Booth
date: 2015-08-16 16:26:33.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-08-16 16:26:39.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7020/

-------------------------------------
author: Brenden Conley
date: 2015-08-16 16:33:25.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7020/ : SUCCESS

-------------------------------------
author: Zachary Orozco
date: 2015-08-17 08:17:48.000000000

Patch Set 1:

Andrey, do you know why we have FileUtil and FileUtils? I didn't know. From the javadoc it is said that FileUtil uses Java 7 NIO2. But you move methods using NIO2 from FileUtil to FileUtils. Shouldn't we combine this classes? (That would be an API change, i know - But we could already know deprecate the old API)

-------------------------------------
author: Jayvion Booth
date: 2015-08-17 08:54:25.000000000

Patch Set 1:

> Andrey, do you know why we have FileUtil and FileUtils? I didn't
 > know. From the javadoc it is said that FileUtil uses Java 7 NIO2.
 > But you move methods using NIO2 from FileUtil to FileUtils.
 > Shouldn't we combine this classes? (That would be an API change, i
 > know - But we could already know deprecate the old API)

The reason is that FileUtil was previously implemented in java7 fragment, and moved to the jgit project after we've switched to Java 7. This was just a "dumb" move without code cleanup, which I'm trying to do now.

I personally would like to merge both classes.

My fear was / is that this will change lot of code and will not be accepted.

So instead I'm just proposing to remove duplicated stuff first.

-------------------------------------
author: Zachary Orozco
date: 2015-08-17 11:16:12.000000000

Patch Set 1:

Ok, got it. But when you delete duplicate methods you have the choice tp delete from FileUtils or from FileUtil, based on what you expect which class will survive. You choosed to delete from FileUtils. But: in a eclipse workspace with egit and jgit opened I see >500 references to FileUtils and only 42 to FileUtil. Wouldn't it better to let FileUtil survive instead of FileUtils?

-------------------------------------
author: Jayvion Booth
date: 2015-08-17 11:38:42.000000000

Patch Set 1:

> Ok, got it. But when you delete duplicate methods you have the
 > choice tp delete from FileUtils or from FileUtil, based on what you
 > expect which class will survive. You choosed to delete from
 > FileUtils. But: in a eclipse workspace with egit and jgit opened I
 > see >500 references to FileUtils and only 42 to FileUtil. Wouldn't
 > it better to let FileUtil survive instead of FileUtils?

According to your numbers FileUtil has less references, FileUtils more, so why should FileUtil survive?

Again, main question is: do we want to merge those two classes? Then I would assume the one with "more references" should survive, and I don't care which one this will be.

I've started to move the methods because my assumption was that I will not get +1 to merge those classes together.

-------------------------------------
author: Zachary Orozco
date: 2015-08-17 12:10:22.000000000

Patch Set 1: Code-Review+1

Right. Let's combine the two classes (in a follow-up change) and let that one win which has most references. That's FileUtils - sorry for the confusion. FileUtil method should be deprecated. So, +1 for this change.

-------------------------------------
author: Gerrit Code Review
date: 2015-08-17 14:19:17.000000000

Change has been successfully merged into the git repository by Zachary Orozco

-------------------------------------
