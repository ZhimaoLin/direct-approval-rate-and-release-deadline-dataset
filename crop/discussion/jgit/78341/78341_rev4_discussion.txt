DESCRIPTION

Shallow fetch: avoid sending unneeded blobs

When doing an incremental fetch from JGit, "have" commits are marked
as "uninteresting". In a non-shallow fetch, when the RevWalk hits an
"uninteresting" commit it marks the commit's corresponding tree as
uninteresting. That has the effect of dropping those trees and all the
trees and blobs they reference out of the thin pack returned to the
client.

However, shallow fetches use a DepthWalk to limit the RevWalk, which
nearly always causes the RevWalk to terminate before encountering the
"have" commits. As a result the pack created for the incremental fetch
never encounters "uninteresting" tree objects and thus includes
duplicate objects that it knows the client already has.

Change-Id: I7b1f7c3b0d83e04d34cd2fa676f1ad4fec904c05
Signed-off-by: Ariel Sawyer xxx@xxx.xxx


COMMENTS

author: Ariel Sawyer
date: 2016-08-04 21:59:52.000000000

Uploaded patch set 4: Patch Set 3 was rebased.

-------------------------------------
author: Brenden Conley
date: 2016-08-04 21:59:59.000000000

Patch Set 4: -Verified

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/8869/

-------------------------------------
author: Brenden Conley
date: 2016-08-04 22:15:08.000000000

Patch Set 4: Verified-1

Build Failed 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/8869/ : FAILURE

-------------------------------------
author: Gerrit Code Review
date: 2016-08-05 00:26:53.000000000

Change has been successfully merged into the git repository by Eden Lin

-------------------------------------
