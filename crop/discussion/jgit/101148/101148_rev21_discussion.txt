DESCRIPTION

reftable: scan and lookup reftable files

ReftableReader provides sequential scanning support over all
references, a range of references within a subtree (such as
"refs/heads/"), and lookup of a single reference.  Reads can be
accelerated by an index block, if it was created by the writer.

The BlockSource interface provides an abstraction to read from the
reftable's backing storage, supporting a future commit to connect
to JGit DFS and the DfsBlockCache.

Change-Id: Ib0dc5fa937d0c735f2a9ff4439d55c457fea7aa8


COMMENTS

author: Yoselin Hanna
date: 2017-08-12 18:25:52.000000000

Uploaded patch set 21: Patch Set 20 was rebased.

-------------------------------------
author: Brenden Conley
date: 2017-08-12 18:26:05.000000000

Patch Set 21:

Build Started https://ci.eclipse.org/jgit/job/jgit.gerrit/10982/

-------------------------------------
author: Brenden Conley
date: 2017-08-12 18:46:11.000000000

Patch Set 21: Verified+1

Build Successful 

https://ci.eclipse.org/jgit/job/jgit.gerrit/10982/ : SUCCESS

-------------------------------------
author: Ariel Sawyer
date: 2017-08-15 06:23:33.000000000

Patch Set 21: Code-Review-1

(7 comments)

Line:170, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableReader.java -> s/seek/seekRef/ to be more consistent with seekLog and different from the BlockReader-returning seek().

Line:265, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/BlockReader.java -> identity is not being chained, so need to reset logCommitterPtr = ptr here

Line:273, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/BlockReader.java -> message is not being chained, so need to reset logMessagePtr = ptr here

Line:374, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/BlockReader.java -> Why is it ok for bufLen < blockLen in index blocks? Please add a comment.

Line:447, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/BlockReader.java -> Add Javadoc for these seekKey and scanToKey functions, since the return values are not immediately obvious.

Line:106, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/Reftable.java -> Is an empty cursor returned if a specifically searched for reference isn't present, or is an IOException thrown. Be more explicit.

-------------------------------------
author: Ariel Sawyer
date: 2017-08-15 15:13:52.000000000

Patch Set 21:

(5 comments)

Line:178, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableReader.java -> I don't see how this special char is used. It appears the "prefix" argument to RefCursorImpl causes the correct exact vs. prefix match to occur.

Line:231, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableReader.java -> This appears to be seeking pas the end of the index, which I don't understand.

Line:233, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableReader.java -> This method is not fully intuitive and could use some comments. The idea here is that if you have a multi-level index, you seek through each level of index until you get to actual reference/object blocks?

Line:179, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/io/BlockSource.java -> Most implementations are not thread safe, so what additional constraints does this method provide on a BlockSource? I don't see the justification for this in the API.

Line:50, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/EmptyLogCursor.java -> Add Javadoc

-------------------------------------
author: Yoselin Hanna
date: 2017-08-16 02:23:54.000000000

Patch Set 21:

(11 comments)

Line:170, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableReader.java -> Done

Line:178, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableReader.java -> Yea, its not needed. Removed.

Line:231, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableReader.java -> Fixed.

Line:233, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/ReftableReader.java -> Correct.

Line:265, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/BlockReader.java -> Fixed by removing the chained format per discussion on git-core list.

Line:273, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/BlockReader.java -> Fixed by removing the chained format per discussion on git-core list.

Line:374, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/BlockReader.java -> Done

Line:447, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/BlockReader.java -> Done

Line:179, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/io/BlockSource.java -> This lets me shim down to ReadableChannel's setReadAhead in the DFS glue and run an async read ahead when we are scanning a large region sequentially and have misses on the DfsBlockCache.

Line:50, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/EmptyLogCursor.java -> Done.

Sometimes Javadoc is overrated.

Line:106, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/reftable/Reftable.java -> Done

-------------------------------------
