DESCRIPTION

[RFC] Support for the commit-msg hook.

Refactored code to use a builder for obtaining hooks.
The hook execution code does not pollute the commands anymore.
Also added unit-tests.

Change-Id: I8e0d7c593abf8789ceb7f41f2cc0a3dd7380eae5
Also-by: Maleah Marks xxx@xxx.xxx
Also-by: Mackenzie Page xxx@xxx.xxx
Signed-off-by: Gustavo Green xxx@xxx.xxx
Signed-off-by: Mackenzie Page xxx@xxx.xxx
Signed-off-by: Maleah Marks xxx@xxx.xxx


COMMENTS

author: Maleah Marks
date: 2015-02-20 10:43:15.000000000

Uploaded patch set 11.

-------------------------------------
author: Brenden Conley
date: 2015-02-20 10:43:21.000000000

Patch Set 11:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6048/

-------------------------------------
author: Brenden Conley
date: 2015-02-20 10:43:21.000000000

Patch Set 11:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/6048/

-------------------------------------
author: Brenden Conley
date: 2015-02-20 10:51:02.000000000

Patch Set 11: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6048/ : SUCCESS

-------------------------------------
author: Brenden Conley
date: 2015-02-20 10:51:57.000000000

Patch Set 11:

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/6048/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2015-02-20 14:06:33.000000000

Patch Set 11: Code-Review-1

(27 comments)

Line:1115, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> this is already available in Repository.writeCommitMsg()

Line:1137, org.eclipse.jgit/src/org/eclipse/jgit/util/FS.java -> this is already available in Repository.readCommitMsg()

Line:1666, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> instead of this add two methods
readCommitEditMessage(), writeCommitEditMessage() similar to Repository.writeSquashCommitMsg() and readMergeCommitMsg()

Line:51, org.eclipse.jgit/src/org/eclipse/jgit/hooks/Hooks.java -> style nit: we don't xxx@xxx.xxx tags

Line:59, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> style nit: we don't xxx@xxx.xxx tags

Line:75, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> this is obvious

Line:93, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> style nit: we don't xxx@xxx.xxx tags for overridden methods

Line:101, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> style nit: we don't xxx@xxx.xxx tags for overridden methods

Line:118, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> s/is/it/

Line:119, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> I'd mention the default System.out if setOutputStream has not been called

Line:61, org.eclipse.jgit/src/org/eclipse/jgit/api/errors/HookFailureException.java -> this doesn't look like a name, it's rather the failed hook, right ?

Line:117, org.eclipse.jgit/src/org/eclipse/jgit/util/ProcessResult.java -> missing since tag

Line:53, org.eclipse.jgit/src/org/eclipse/jgit/hooks/IHook.java -> style nit: we don't xxx@xxx.xxx tags

Line:56, org.eclipse.jgit/src/org/eclipse/jgit/hooks/IHook.java -> In jgit we don't prefix interfaces with "I"

Line:230, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> I think we can move this code also into the hook's implementation

Line:234, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> I'd move this code into the Hook's implementation and let its run() method return the message

Line:321, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> style nit: unrelated formatting change

Line:342, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> style nit: unrelated formatting change

Line:358, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> style nit: unrelated formatting change

Line:552, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> style nit: unrelated formatting change

Line:573, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> style nit: unrelated formatting change

Line:140, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> style nit: unrelated formatting change

Line:145, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> style nit: unrelated formatting change

Line:157, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> this isn't related to the commit-msg hook

Line:174, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> unrelated change

Line:623, org.eclipse.jgit/src/org/eclipse/jgit/lib/Constants.java -> /store and read the message prepared for the upcoming commit/prepare the commit message/

Line:624, org.eclipse.jgit/src/org/eclipse/jgit/lib/Constants.java -> style nit: trailing whitespace

-------------------------------------
author: Mackenzie Page
date: 2015-02-20 15:10:20.000000000

Patch Set 11:

(10 comments)

Looks good to me, but I still have some comments ;)

Line:66, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> Confusing Terminology: A hook in the hook, maybe it should be named HookType? Maybe better in a new Review

Line:142, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> Should throw an exception for unkown hook types?

Line:165, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> use method isExecutedWithError method in ProcessResult

File Comment: org.eclipse.jgit/src/org/eclipse/jgit/api/errors/HookFailureException.java -> To me the name of this class sounds like a failed all to the hook and not like an intentional command abort. Also the name exposes the hooks to the command API. I would propose to rename to CommandAbortException

Line:51, org.eclipse.jgit/src/org/eclipse/jgit/hooks/IHook.java -> of a git command's execution

Line:77, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> I would rather xxx@xxx.xxx = CommandAbortException.class). I believe the exact message does not need to be asserted. Also it removes the necessity and possibility for setting the output stream on the command.

Line:92, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> Remove and replace by annotation, see above

Line:115, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> Check resulting message in revision rather than output stream

Line:129, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> output stream seems irrelevant for this test

Line:107, org.eclipse.jgit/resources/org/eclipse/jgit/internal/JGitText.properties -> nitpick: the dot should be at the end ;)

-------------------------------------
author: Maleah Marks
date: 2015-02-20 16:31:41.000000000

Patch Set 11:

(4 comments)

Thank you for all your comments!
I have a few questions on some of them, and taking all the others into account.

Line:1666, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Ah ok, I hadn't seen these! Thanks.

Nevertheless, I need to have a way of getting the path to this file because it must be passed as a parameter to the hook script.
What is the best way to obtain this path?

File Comment: org.eclipse.jgit/src/org/eclipse/jgit/api/errors/HookFailureException.java -> CommandAbortedByHookException?

or AbortedByHookException to have a reasonably short name?

Line:234, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> It will either force me to drop the interface IHook or to make it parametric because currently run() returns void, and I don't think it should return String for every hook.
That's why I let the code to write to and read from the commit message file here in the first place.

What do you think is best?

Line:92, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> I don't agree with that, because we want to make sure that when this exception happens, it contains the relevant information with the standard error stream.

-------------------------------------
author: Douglas Trujillo
date: 2015-02-23 08:56:23.000000000

Patch Set 11:

(4 comments)

Line:1666, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> if this is needed I think we should expose that on FileRepository, class Repository shouldn't expose File in signature since it's abstract and there are implementations based on DfsRepository which aren't using java.io.File to persist git objects. FileRepository is in an internal package which is accessible by other parts of jgit.

Line:129, org.eclipse.jgit/src/org/eclipse/jgit/hooks/GitHook.java -> I'd prefer true polymorphism instead, if you implement each hook in its own hook class it can both represent the hook type (currently an enum) and encapsulate the implementation of the hook.

File Comment: org.eclipse.jgit/src/org/eclipse/jgit/api/errors/HookFailureException.java -> AbortedByHookException sounds better to me

Line:234, org.eclipse.jgit/src/org/eclipse/jgit/api/CommitCommand.java -> You could do it like we do in GitCommand ?

-------------------------------------
author: Mackenzie Page
date: 2015-02-23 11:53:29.000000000

Patch Set 11:

(2 comments)

File Comment: org.eclipse.jgit/src/org/eclipse/jgit/api/errors/HookFailureException.java -> Agreed!

Line:92, org.eclipse.jgit.java7.test/src/org/eclipse/jgit/util/HookTest.java -> I have no hard opinion on this, but I find it strange that we have a method setHookOutputStream only for the tests and IMHO this outweighs the need to test the correct output of errors on the stream. You could still assert the exception carries the expected error message.
Feel free to override my opinion and not address this comment.

-------------------------------------
author: Maleah Marks
date: 2015-02-23 12:44:31.000000000

Patch Set 11:

Many thanks to all for your advices, I'm taking all that into account.
I've just pushed a change that refactors the pre-commit hook, and once this is validated I'll add the commit-msg hook, so that the scope of each change is limited and clear.

Please don't review anything for the moment, I'll let you know when it's ready by removing the [WIP] tag in the commit message.

Thanks again for your time!

-------------------------------------
author: Douglas Trujillo
date: 2015-03-03 09:09:35.000000000

Patch Set 11:

I think this can now be abandoned since https://git.eclipse.org/r/#/c/43004/ was merged

-------------------------------------
author: Gustavo Green
date: 2015-03-03 09:34:26.000000000

Abandoned

Yes it can. Abandonning now.

-------------------------------------
