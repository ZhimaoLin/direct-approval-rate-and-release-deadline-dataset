DESCRIPTION

[RFC] Provide native lstat() via JNI

To avoid building or running with the native code, use
-Djgit.native.skip=true to disable the code.

Currently only MacOS X is supported.  Linux, Solaris and many other
POSIX systems should be simple to support from the common code.  Win32
support is more difficult as an lstat(2) replacement must be supplied.

TODO:  -Djgit.native.skip=true doesn't skip native code tests.
TODO:  Support at least Linux x86_64.
TODO:  Better integration with PDE driven build?

Bug: 331072
Change-Id: Iffb12334b5440d49b6d2623ceb91f4d873f217a0
Signed-off-by: Douglas Trujillo xxx@xxx.xxx
Signed-off-by: Jaycee Hickman xxx@xxx.xxx


COMMENTS

author: Yoselin Hanna
date: 2010-12-14 08:44:44.000000000

Uploaded patch set 9.

-------------------------------------
author: Yoselin Hanna
date: 2010-12-14 08:48:51.000000000

Patch Set 9: I would prefer that you didn't submit this

This really still isn't ready.  I took Matthias' native work and hacked it apart, and put it back together a little.  In JNI land we now fill out the LStat object directly, rather than allocating an intermediate int[].  We also cache handles to the LStat object type, but we should also do this for the common error class types to make constructing the exception quicker.

Build works under Maven 2.2.1 on Mac OS X.  I'll have to test on Linux tomorrow.  Copying the generated libjgit_native.jnilib into the target plugin is a bit messy.  I really don't know how the JGit feature will work for a P2 build when we need to generate it on different platforms and merge the results, since some plugins aren't buildable on every platform.

The Mac OS X build now requires the Java SDK, which is part of Xcode and is in /Developer. But that shouldn't be a huge problem, you probably need Xcode to get gcc anyway.

-------------------------------------
