DESCRIPTION

Provide native lstat() via JNI

Before running the tests on a platform where the native library is not
available set the System property org.eclipse.jgit.fs.native to false
to skip the test of the native code.

For now only implemented on MacOSX until we decided on the platforms
to support.

Also integration of native make into build is not yet done.
Build jgitnative using CDT this will copy the resulting shared
library to the native bundle.

Bug: 331072
Change-Id: Iffb12334b5440d49b6d2623ceb91f4d873f217a0
Signed-off-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2010-11-25 23:43:30.000000000

Uploaded patch set 8.

-------------------------------------
author: Douglas Trujillo
date: 2010-11-25 23:47:18.000000000

Patch Set 8:

- pass relative path to native lstat() to avoid unnecessary traversal up to the file system root
- rebased to current master

-------------------------------------
author: Yoselin Hanna
date: 2010-11-27 01:37:58.000000000

Patch Set 8: I would prefer that you didn't submit this

I think this is ready to submit.  But we shouldn't store binary object files:

  $ file org.eclipse.jgit.macosx_x86_64/native/libjgitnative.jnilib
  org.eclipse.jgit.macosx_x86_64/native/libjgitnative.jnilib: Mach-O 64-bit dynamically linked shared library x86_64

The build should be integrated into the master Maven build, and we should also support Linux x86 and x86_64 builds, but we can address those with follow-up commits.

-------------------------------------
author: Juliet Cantu
date: 2010-11-27 17:05:35.000000000

Patch Set 8: I would prefer that you didn't submit this

Now, I didn't read the code because of Bug 331273 (from the patches in the thread "Avoiding stat calls (again)".

The main issue with performance  still is that we do a lot of unnecessary work which we should fix instead of making the unnecessary work faster.

Do we have numbers to support the need for this added complexity?

-------------------------------------
author: Juliet Cantu
date: 2010-11-27 20:38:19.000000000

Patch Set 8: No score

You do provide some new functionality, so its not just performance, and that contradicts my previous objections.

-------------------------------------
