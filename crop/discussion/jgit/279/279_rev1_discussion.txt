DESCRIPTION

Add ability to run a validation hook to ReceivePack

A user of ReceivePack may want to receive a list of the objects we
just sent it, so as to perform additional validation steps on them.
This can be useful to implement additional access controls, such as
validating that the user is not attempting to create an object that
references a branch that the user is not allowed to see.

This new ValidationHook interface allows that functionality, and is
disabled by default.


COMMENTS

author: Yoselin Hanna
date: 2010-02-08 22:16:11.000000000

Patch Set 1: Do not submit; No score



-------------------------------------
author: Maddison Bishop
date: 2010-02-08 23:10:48.000000000

Patch Set 1: Abandoned

Not useful

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:49, org.eclipse.jgit/src/org/eclipse/jgit/transport/ValidationHook.java -> Can you elaborate a bit more on the processing phase?  When is this hook invoked relative to PreReceiveHook?

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:62, org.eclipse.jgit/src/org/eclipse/jgit/transport/ValidationHook.java -> Style-nit: If you drop final keyword from the two arguments, you might be able to avoid breaking the line on this method declaration.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:71, org.eclipse.jgit/src/org/eclipse/jgit/transport/ValidationHook.java -> Its unclear if its OK for the hook to mark a ReceiveCommand's status in order to reject the operation.  If you compare this class's Javadoc with the Javadoc in PreReceiveHook, you'll see what I mean.  We're a bit more verbose there about how to use the interface.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:192, org.eclipse.jgit/src/org/eclipse/jgit/transport/ReceivePack.java -> Style-nit: Keep the order consistent.  You declared the field before the preReceive field is declared.  Initialize it before too.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:343, org.eclipse.jgit/src/org/eclipse/jgit/transport/ReceivePack.java -> Style-nit: You can get this all on one line:

  xxx@xxx.xxx the hook invoked before validation occurs. */

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:355, org.eclipse.jgit/src/org/eclipse/jgit/transport/ReceivePack.java -> Style-nit: I don't think we use tabs to indent in Javadoc blocks.

-------------------------------------
author: Yoselin Hanna
date: 2010-03-10 05:19:08.000000000

MISMATCHED INLINE COMMENT
Line:716, org.eclipse.jgit/src/org/eclipse/jgit/transport/ReceivePack.java -> I'm not sure I see the value in a hook being right here.  There isn't any harm to doing the following for loop, and then immediately jumping into the PreReceiveHook implementation in Gerrit Code Review.

Basically, I don't see what this hook gives us that we can't already do in PreReceiveHook.

Knowing our conversations about the particular feature you are trying to implement in Gerrit, what we really need is to be able to influence the Map<String,Ref> that is used inside of sendAdvertisedRefs.  Altering that collection needs to be different from PreReceiveHook, because its fired so much earlier than the PreReceiveHook.

We also need to expose the Set<ObjectId> that the IndexPack inside of receivePack generated.  That set needs to be visible to the PreReceiveHook.  Because then Gerrit can complain and reject everything flat out if that object set doesn't jive with what you can actually see.

-------------------------------------
