DESCRIPTION

Don't use java.nio channel for file size determination

Java NIO has some problems (like files closing unexpectedly because the
thread was interrupted). To avoid those problems, don't use a NIO
channel to determine the size of a file, but rather ask the File itself.

We have to be prepared to handle wrong/outdated information in this case
too, as the inode of the File may change between opening and determining
file size.

Change-Id: Ic7aa6c3337480879efcce4a3058b548cd0e2cef0


COMMENTS

author: Bryanna Douglas
date: 2012-03-12 08:54:06.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2012-03-12 08:54:13.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1564/ 

-------------------------------------
author: Brenden Conley
date: 2012-03-12 09:14:17.000000000

Patch Set 3: Fails

Build Failed 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1564/ : ABORTED

-------------------------------------
author: Brenden Conley
date: 2012-03-12 12:56:01.000000000

Patch Set 3: No score

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1567/ 

-------------------------------------
author: Brenden Conley
date: 2012-03-12 13:16:03.000000000

Patch Set 3: Fails

Build Failed 
 
https://hudson.eclipse.org/sandbox/job/jgit.gerrit/1567/ : ABORTED

-------------------------------------
author: Yoselin Hanna
date: 2012-03-12 14:11:59.000000000

Patch Set 3: I would prefer that you didn't submit this

(1 inline comment)



Line:143, org.eclipse.jgit/src/org/eclipse/jgit/util/IO.java -> We lost this error condition. I think you want to include it in two places:

  long sz = path.length();
  if (sz > max)
    throw ...
  byte[] buf = new byte[Math.min(sz, (int) max)];

and also when the array grows:

  if (buf.length == valid) {
    if (buf.length == max)
      throw ...
    byte[] nb = new byte[Math.min(buf.length * 2, max)];

-------------------------------------
author: Bryanna Douglas
date: 2012-03-12 14:49:21.000000000

Patch Set 3: (1 inline comment)



Line:143, org.eclipse.jgit/src/org/eclipse/jgit/util/IO.java -> can't we determine whether the file is too big in the "grow" case only after fully populating the buffer? i know this is not so good, bug with the buf.length == max check we only assure that we're not hitting the limit with what we already have. growing the buffer even by one byte may already hit the limit...

checking after the facts is not a good idea either, but how about growing the buffer only to Math.max(max, buf.length * 2)? i'll post a new patchset that does this...

-------------------------------------
