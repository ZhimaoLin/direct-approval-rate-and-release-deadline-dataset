DESCRIPTION

Fix repository cache never closing repository

Repository has a usage counter that is initialized to 1 at
instantiation and this counter is decremented when Repository.close
method is called. There is also a Repository.incrementOpen method that
RepositoryCache uses to increment the usage count when it's returning a
repository that is already opened.

The problem was that RepositoryCache was incrementing the usage count
for repositories that it just opened. The usage count was 2 when it
should have been 1.

Incrementing usage count is now only be done for repository that are
served from the cache.

This bug is causing slow memory increase of our Gerrit server until the
server become slow. Even if the RepositoryCache is using SoftReference,
it seems that the JVM is not garbage collecting the repositories because
it's not yet on the edge of being out of memory.

To test this change, I replicated all repositories(11k) from Gerrit
master to one slave. The Gerrit master used memory after this test was
10GB without this change and 3.5GB with.

Change-Id: I86c7b36174e384f106b51fe92f306018fd1dbdf0
Signed-off-by: Mitchell Griffith xxx@xxx.xxx


COMMENTS

author: Mitchell Griffith
date: 2015-09-09 21:04:33.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-09-09 21:04:39.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/7075/

-------------------------------------
author: Brenden Conley
date: 2015-09-09 21:13:25.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/7075/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2015-09-09 22:47:12.000000000

Patch Set 1: Code-Review-1

(1 comment)

I think this should go in 4.1 (currently on master) since it adds API (though the change is small), I will tag 4.0.2 beginning of next week and 4.1 end of September

Looks good otherwise

Line:111, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> xxx@xxx.xxx tag for new API

-------------------------------------
author: Mitchell Griffith
date: 2015-09-10 13:08:35.000000000

Patch Set 1:

> (1 comment)
 > 
 > I think this should go in 4.1 (currently on master) since it adds
 > API (though the change is small), I will tag 4.0.2 beginning of
 > next week and 4.1 end of September
 > 
 > Looks good otherwise

Ok, I will move the change to master.

The only reason why I changed the visibility of the variable is to be able to write a unit test. An alternate option to write the unit test without changing the visibility is to use a mocking library. I looked and I did not find any used in JGit, did I missed it?

-------------------------------------
author: Douglas Trujillo
date: 2015-09-10 14:16:16.000000000

Patch Set 1:

> > (1 comment)
 > >
 > > I think this should go in 4.1 (currently on master) since it adds
 > > API (though the change is small), I will tag 4.0.2 beginning of
 > > next week and 4.1 end of September
 > >
 > > Looks good otherwise
 > 
 > Ok, I will move the change to master.
 > 
 > The only reason why I changed the visibility of the variable is to
 > be able to write a unit test. An alternate option to write the unit
 > test without changing the visibility is to use a mocking library. I
 > looked and I did not find any used in JGit, did I missed it?

adding a test dependency already available in Orbit (latest release is here http://download.eclipse.org/tools/orbit/downloads/drops/R20150821153341/)
shouldn't take a long time, we have to file a CQ for that but if it's already approved for another Eclipse project and available in Orbit it shouldn't take a lot of time / effort.

-------------------------------------
author: Mitchell Griffith
date: 2015-09-14 15:11:34.000000000

Patch Set 1:

> adding a test dependency already available in Orbit (latest release
 > is here http://download.eclipse.org/tools/orbit/downloads/drops/R20150821153341/)
 > shouldn't take a long time, we have to file a CQ for that but if
 > it's already approved for another Eclipse project and available in
 > Orbit it shouldn't take a lot of time / effort.

I added mockito(which is already in Orbit) to org.eclipse.jgit.test/pom.xml but how do you modify the eclipse .project/.classpath files to to include this new dependency?

I tried maven but the amount of changes tells me this is definitely not the way to do it.

-------------------------------------
author: Mitchell Griffith
date: 2015-09-14 15:39:19.000000000

Patch Set 1:

> > adding a test dependency already available in Orbit (latest
 > release
 > > is here http://download.eclipse.org/tools/orbit/downloads/drops/R20150821153341/)
 > > shouldn't take a long time, we have to file a CQ for that but if
 > > it's already approved for another Eclipse project and available
 > in
 > > Orbit it shouldn't take a lot of time / effort.
 > 
 > I added mockito(which is already in Orbit) to org.eclipse.jgit.test/pom.xml
 > but how do you modify the eclipse .project/.classpath files to to
 > include this new dependency?
 > 
 > I tried maven but the amount of changes tells me this is definitely
 > not the way to do it.

Forget my question, I think I found out how. I need to modify org.eclipse.jgit.test manifest to import org.mockito.

-------------------------------------
author: Mitchell Griffith
date: 2015-09-14 17:30:21.000000000

Patch Set 1:

(1 comment)

Line:111, org.eclipse.jgit/src/org/eclipse/jgit/lib/Repository.java -> Done

-------------------------------------
author: Mitchell Griffith
date: 2015-09-14 17:30:59.000000000

Abandoned

moved to master branch

-------------------------------------
