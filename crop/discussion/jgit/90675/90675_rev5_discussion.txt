DESCRIPTION

FileRepository.autoGC: run in background

When running an automatic GC on a FileRepository, when the caller
passes a NullProgressMonitor, fork off a new thread (per repository)
to run the GC in.

In some cases, the auto GC limit is lower than the true number of
unreachable loose objects, so auto GC will run after every (e.g) fetch
operation.  This leads to the appearance of poor fetch performance.
Since these GCs will never make progress (until either the objects
become referenced, or the two week timeout expires), blocking on them
simply reduces throughput.

In the event that an auto GC would make progress, it's still OK if it
runs in the background.  The progress will still happen.

This matches the behavior of regular git.

If the user passes a ProgressMonitor that is not a
NullProgressMonitor, they might actually care about the progress of
the GC, and would get confused if that progress happened after the
autoGC call returns, so we run in the foreground in that case.

Git uses the lock file for gc.log to prevent simultaneous runs of
background gc.  Further, it writes errors to gc.log, and won't run
background gc if that file is present and recent.  If gc.log is too
old (according to the config gc.logexpiry), it will be ignored (or at
least, it will once the sequel to
https://marc.info/?l=git&m=148660590912186&w=2 gets in; I've mailed it
off but it doesn't appear to have made it to the archives yet).

Change-Id: I3870cadb4a0a6763feff252e6eaef99f4aa8d0df
Signed-off-by: Carissa Dunn xxx@xxx.xxx


COMMENTS

author: Carissa Dunn
date: 2017-02-10 22:26:39.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2017-02-10 22:26:47.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9797/

-------------------------------------
author: Brenden Conley
date: 2017-02-10 22:32:26.000000000

Patch Set 5: Verified-1

Build Failed 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9797/ : FAILURE

-------------------------------------
author: Carissa Dunn
date: 2017-02-10 22:37:23.000000000

Patch Set 5:

That test appears to be flaky; it passes just fine for me locally.

-------------------------------------
author: Brenden Conley
date: 2017-02-10 22:59:01.000000000

Patch Set 5: -Verified

Build Started https://hudson.eclipse.org/jgit/job/jgit.gerrit/9800/

-------------------------------------
author: Douglas Trujillo
date: 2017-02-10 22:59:52.000000000

Patch Set 5:

> That test appears to be flaky; it passes just fine for me locally.

yep, this test fails sporadically, it's not 100% reliable.
I triggered a rebuild

-------------------------------------
author: Brenden Conley
date: 2017-02-10 23:05:55.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/jgit/job/jgit.gerrit/9800/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2017-02-10 23:14:14.000000000

Patch Set 5: Code-Review-1

(4 comments)

Line:69, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/FileRepository.java -> remove unused imports

Line:1, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GcLog.java -> missing license header

Line:22, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GcLog.java -> This class could be kept package private or do you envision any reuse outside this package ? If you agree, then also its methods can be declared package private and remove xxx@xxx.xxx tag.

Line:96, org.eclipse.jgit/src/org/eclipse/jgit/internal/storage/file/GcLog.java -> remove duplicate semicolon

-------------------------------------
