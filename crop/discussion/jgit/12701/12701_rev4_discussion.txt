DESCRIPTION

Fix CommitCommand not to destroy repo

There was a severe bug in CommitCommand which could corrupt
repos. When merging an annotated tag the JGit MergeCommand writes
correctly the ID of the tag (and not the id of the commit the tag was
pointing to) into MERGE_HEAD. Native git does the same. But
CommitCommand was reading this file and trusting blindly that it will
contain only IDs of commits. Then the CommitCommand created a
commit which has as parent a non-commit object (the tag object). That's
so corrupt that even native git gives up when you call "git log" in
such a repo.

To reproduce that with EGit simply right-click on a tag in the
Repository View and select Merge. The result was a corrupt repo!

Bug: 336291
Change-Id: I24cd5de19ce6ca7b68b4052c9e73dcc6d207b57c


COMMENTS

author: Zachary Orozco
date: 2013-05-11 08:57:32.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2013-05-11 09:02:22.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3543/ 

-------------------------------------
author: Brenden Conley
date: 2013-05-11 09:07:57.000000000

Patch Set 4: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/jgit.gerrit/3543/ : SUCCESS

-------------------------------------
