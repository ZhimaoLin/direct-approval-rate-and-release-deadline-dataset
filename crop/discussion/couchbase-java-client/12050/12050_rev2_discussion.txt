DESCRIPTION

Potential Refactoring of Java Client to couchbase-client and spymemcached

Refactoring changes summary:

Membase has been refactored to Couchbase and associated changes.
This is not final(so no ant checkstyle yet :-)), but, if deemed
OK, we can make it final.

Deleted the old files and directories.

Change-Id: Idd6454bd6574a9337528281df912f51a9fda52ad


COMMENTS

author: Jeffrey Roth
date: 2012-01-04 21:45:42.382000000

Uploaded patch set 2.

-------------------------------------
author: Jeffrey Roth
date: 2012-01-04 21:51:47.408000000

Patch Set 2: Verified

Matt/Dustin/Mike:

I have refactored the couchbase-java-client from Membase to Couchbase. This also required some changes to spymemcached i.e. mainly modifying the access modifiers.

Please let me know if these changes are OK?

Rags

-------------------------------------
author: Kenny Maynard
date: 2012-01-04 22:01:33.920000000

Patch Set 2: I would prefer that you didn't submit this

I was under the impression that we weren't going to change the package names and just change the class names. This would allow us to keep the same level of protection for some of the functions in Spymemcached. Matt can you let me know if we decided to do something different?

-------------------------------------
author: Kenny Maynard
date: 2012-01-04 22:02:19.848000000

Patch Set 2:

You also need to fix the commit message so it doesn't say "This is not final"

-------------------------------------
author: Andreas Short
date: 2012-01-05 00:24:39.162000000

Patch Set 2:

I don't know that changing the package name is a decision, but I did ask Rags to look into the refactoring and start the discussion.  I also asked him to put it up here to have that discussion.

Argument for:
It's less confusing to have com.couchbase.client.CouchbaseClient than net.spy.memcached.CouchbaseClient.  We're not really hiding anything, and that's not the goal, it's just about what gets imported.

Argument against:
Making this change will require we make addOp(), getting a copy of the NodeLocator for this client and ... one other thing I don't remember public.  Oh, something related to shutdown status.  It's better to keep those private

Rebuttal to argument for:
Are you really so vain that you need com.couchbase on the thing that really is mostly using code in net.spymemcached?  Do you really want to grow the API with pointless stuff?

Rebuttal to argument against:
Making addOp() public isn't that bad, the node locator access is really a copy anyway, and is someone really going to hurt themselves by knowing if the client is shutting down.

----------

Okay, now that the arguments are out of the way, I just need opinions from you, Dustin, Rags on what the best way to go is.  

p.s.: this is a Banana Republic, your vote doesn't really count, but I'd hate to have to repress you with force.  :p

-------------------------------------
author: Kenny Maynard
date: 2012-01-05 18:45:06.860000000

Patch Set 2: No score

The only reason I brought it up was that in the past I mentioned doing this and Matt said that we should keep the package names the same. The concern that I have is that as time moves on things in CouchbaseClient become more intertwined with Spymemcached we may be forced to open up more of the API just so CouchbaseClient could use it (At the risk of memcached users having access to things they shouldn't, like addOp()).

At the end of the day this is up to Matt and Rags. I'm interested in seeing Dustin's thoughts here too. I'm going leave this scored as 0 and am okay with anyone else giving the +2.

-------------------------------------
author: Kenny Maynard
date: 2012-01-05 22:42:21.672000000

Patch Set 2: I would prefer that you didn't submit this

-1 because of the commit message.

-------------------------------------
author: Noah Dean
date: 2012-01-06 03:50:33.697000000

Patch Set 2:

I don't have a huge opinion on it, really.  My opinions don't usually have as much to do with names as they do with practices.  I'm a bit dissatisfied with a few of the things in the codebase (which I've complained about plenty), but I look at this mostly as a bottom-level of what we're building.  The names may be things people see in stack traces, but aren't necessarily couchbase API.

-------------------------------------
