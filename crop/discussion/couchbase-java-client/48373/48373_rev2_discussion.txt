DESCRIPTION

JCBC-554: Provide retry/backoff utility wrapper

WORK IN PROGRESS (still need test for the whole usage)

Motivation
----------
Exponential retry and backoff is an useful pattern and it makes sense
to provide an utility class to the SDK users to do that.

Modifications
-------------
Added a Retry utility class that allows to describe a retry pattern by
wrapping the source.
An alternative is to directly use Observable.retryWhen with the new
RetryWhenFunction.

Both approaches take a RetryWithDelayHandler, a class that allows to
describe the retry pattern (max attempts, retry delay and how it grows,
exceptions that can be retried or on the contrary cancel retry cycle).

Added CannotRetryException to denote when a retry attempt failed. It
should always have the Exception that triggered the latest retry as its
cause.

Added unit tests.
TODO: unit tests.

Result
------
Users can more easily apply a retry pattern to their Observables, either
by calling a wrapping function or passing a RetryWhenFunction to their
Observable's retryWhen operation.

Change-Id: I6d51d834d9f4e1ea101da98d2b1c8ea9369f6c0a


COMMENTS

author: Estrella Humphrey
date: 2015-03-17 16:19:55.580000000

Uploaded patch set 2.

-------------------------------------
author: Estrella Humphrey
date: 2015-03-17 18:37:23.810000000

Patch Set 2: Verified+1

-------------------------------------
author: Estrella Humphrey
date: 2015-03-17 18:38:01.138000000

Patch Set 2: -Verified

-------------------------------------
author: Estrella Humphrey
date: 2015-03-17 18:38:36.774000000

Patch Set 2:

oops, verified 0 since I still have to write a complete test that verifies the whole retry logic.

-------------------------------------
author: Tate Garrett
date: 2015-03-27 12:31:25.327000000

Change has been successfully cherry-picked as 86f4fed4d7d9cb38205c54bf1cf016801ea10b1d

-------------------------------------
