DESCRIPTION

JCBC-1144: RetryBuilder - last error should not be caught.

Motivation
----------
The RetryBuilder (and subsequently the RetryWhenFunction)
fails to propagate the source exception when its exactly
the last retry attempt.

Modifications
-------------
This changeset fixes this edge case by first checking if
the given exception is part of the list to accept and if
not it propagates it right away before first checking
if the number of attempts is over.

Result
------
If a different exception is raised at the last retry
attempt, it is now propagated directly and not turned
into a composite CannotRetryException.

Change-Id: I4956c6a5fa59e5a8f06088379656d54d3bdf26ab


COMMENTS

author: Natasha Sullivan
date: 2017-10-29 09:20:10.008000000

Uploaded patch set 2: Commit message was updated.

-------------------------------------
author: Hugo Blankenship
date: 2017-10-29 09:20:17.847000000

Patch Set 2:

Build Started http://sdkbuilds.sc.couchbase.com/job/couchbase-java-client-test/226/

-------------------------------------
author: Hugo Blankenship
date: 2017-10-29 09:21:10.727000000

Patch Set 2: Verified+1

Build Successful 

http://sdkbuilds.sc.couchbase.com/job/couchbase-java-client-test/226/ : SUCCESS

-------------------------------------
author: Carmen Buckley
date: 2017-10-30 06:14:32.637000000

Patch Set 2:

(1 comment)

Line:100, src/main/java/com/couchbase/client/java/util/retry/RetryWithDelayHandler.java -> There's room for error here if the predicate does something silly like `return new Boolean(true)`, which would slip past the identity comparison. The bulletproof check would be `Boolean.TRUE.equals(errorInterruptingPredicate.call(error))`.

-------------------------------------
