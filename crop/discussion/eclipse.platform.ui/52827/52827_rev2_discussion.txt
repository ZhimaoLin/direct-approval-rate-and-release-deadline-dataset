DESCRIPTION

Bug 473779 - [Model] Application model SWT menus don't support tooltips

Change-Id: Ieb80379274d3a2cb14cb88f2bde3ee8dbebebfe1
Signed-off-by: drgler xxx@xxx.xxx

COMMENTS

author: Makai Reid
date: 2015-08-29 11:58:35.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2015-08-29 11:58:41.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6473/

-------------------------------------
author: Makai Reid
date: 2015-08-29 12:09:32.000000000

Patch Set 2:

I needed to reapply to the most recent trunk. Please note that I changed my mind in regard to presenting keybinding information to menu item tooltips, please see Bug 473779 #20 for the rationale.

-------------------------------------
author: Brenden Conley
date: 2015-08-29 12:23:25.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6473/ : SUCCESS

-------------------------------------
author: Myah Faulkner
date: 2015-09-02 07:01:14.000000000

Patch Set 2:

(1 comment)

Line:305, bundles/org.eclipse.e4.ui.workLeon Ochoach.renderers.swt/src/org/eclipse/e4/ui/workbench/renderers/swt/HandledContributionItem.java -> I don't understand what command parameters have to do with key bindings. The way you implement it you will also skip the adding of parameter values to the tooltip of menu items. Also, why is it necessary to distinguish between menu item and tool item regarding the tooltip?

-------------------------------------
author: Makai Reid
date: 2015-09-02 20:30:19.000000000

Patch Set 2:

I agree that deciding to ignore command parameters is different from the rationale to ignore keybinding and will provide an updated patch set that respects the command parameters (albeit command parameter values in e4 currently are broken, but that is a different story and should be discussed elsewhere). Nonetheless the arguments provided in Bug 473779 comment #20 still holds: Menu items and tool items do already behave differently in regard to computing the text property: Menu items always attach key sequence information (if present) to menu texts, but tool item texts are not modified except that empty text (in the absence of icons or if FORCE_TEXT is set) gets replaced by the command name itself. If we would attach keybinding information to the tooltip of menu items, this would always duplicate already available information in the menu item text. In addition, even if we would ignore the aspect of that duplication, it would in my opinion not match existing practice of menu items that support tooltips. But for this last argument I cannot provide hard data, this is just my opinion as an employee of a company that produces software with GUI that also provides menu item tooltips via IDE frameworks different from Eclipse RCP applications.

-------------------------------------
author: Makai Reid
date: 2015-09-02 21:28:22.000000000

Abandoned

Duplicate request

-------------------------------------
author: Makai Reid
date: 2015-09-02 21:30:31.000000000

Restored

Abandening didn't help

-------------------------------------
author: Makai Reid
date: 2015-09-02 21:38:04.000000000

Patch Set 2:

What am I missing if any push attempt after a successful rebase operation fails with "duplicate request"??

-------------------------------------
author: Zaid Mosley
date: 2015-09-03 05:17:37.000000000

Patch Set 2:

Maybe you have two commits with the same change-ID? If yes, try to combine them with interactive rebase.

-------------------------------------
author: Myah Faulkner
date: 2015-09-03 06:42:02.000000000

Patch Set 2:

> albeit command parameter values in e4 currently are broken, but that is a
 > different story and should be discussed elsewhere

It is discussed here https://bugs.eclipse.org/bugs/show_bug.cgi?id=472806 and a possible fix can be found here https://git.eclipse.org/r/#/c/53180/

I'm fine with the explanation regarding the difference of tool item and menu item tooltips. If you push the update regarding the command parameter handling, I will have a look on windows.

Regarding your error on push, did you amend your latest change or did you create a new commit with the same change-id? Another way of working on a patch is to checkout the patch from Gerrit (in EGit this is quite comfortable using 'Fetch from Gerrit') and then simply work on the Gerrit branch.

-------------------------------------
author: Makai Reid
date: 2015-09-03 18:27:09.000000000

Patch Set 2:

@Lars: I tried to understand how "combine them with interactive rebase" should be performed, but failed to understand the process
@Dirk: "Fetch from Gerrit" works nicely, but when I commit, do I need to use the same change id then before or am I required to use a new one (thus accepting the default 0 value)? [In regard to your questions: Lars had twice suggested to always use the same change id, therefore I did use the same change id yesterday night when trying to commit my additional change in regard to the command parameters.]

-------------------------------------
author: Zaid Mosley
date: 2015-09-03 18:32:15.000000000

Patch Set 2:

See http://www.vogella.com/tutorials/EclipseGit/article.html#interactiverebase_egit for an introduction of the amazing interactive rebase functionality.

-------------------------------------
author: Myah Faulkner
date: 2015-09-03 18:35:09.000000000

Patch Set 2:

xxx@xxx.xxx I tried to understand how "combine them with interactive
 > rebase" should be performed, but failed to understand the process
 xxx@xxx.xxx "Fetch from Gerrit" works nicely, but when I commit, do I
 > need to use the same change id then before or am I required to use
 > a new one (thus accepting the default 0 value)? [In regard to your
 > questions: Lars had twice suggested to always use the same change
 > id, therefore I did use the same change id yesterday night when
 > trying to commit my additional change in regard to the command
 > parameters.]

It is correct to use the same change-id because Gerrit identifies the corresponding patches via the change-id. When checking out the patch branch via Fetch from Gerrit, I'm not sure. But I would typically use git amend, which automatically uses the same change-id as your previous commit gets modified.

-------------------------------------
author: Gerrit Code Review
date: 2015-09-08 08:35:14.000000000

Change has been successfully merged into the git repository by Myah Faulkner

-------------------------------------
