DESCRIPTION

Bug 476364 - Refactor EventObjectSupplier to use DS

The EventObjectSupplier can avoid using a service tracker and be
passed an EventAdmin instance instead. This needs to be applied to
the UIEventObjectSupplier as well, since this is a subclass and
instantiated separately from the EventObjectSupplier.

Change-Id: I879629c944b8abaefec0907c23ffe512f309c1e6
Signed-off-by: Blake Oneal xxx@xxx.xxx


COMMENTS

author: Zaid Mosley
date: 2015-09-21 17:23:37.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2015-09-21 17:23:43.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6681/

-------------------------------------
author: Brenden Conley
date: 2015-09-21 17:38:45.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/6681/ : SUCCESS

-------------------------------------
author: Blake Oneal
date: 2015-09-22 16:37:01.000000000

Patch Set 5:

No, I think that's the wrong thing to do. The point is that the change introduced here has a hard dependency on the change introduced in the related bug; and if it's not present, then the instantiation of this component will fail because DS won't be able to instantiate it. That's pretty much what happened the last time around (but in reverse). In fact, arguably the right change is to bump the other version (in the other change) to (say) 101, then update this change to require 101 as a minimum.

-------------------------------------
author: Zaid Mosley
date: 2015-09-22 16:54:36.000000000

Patch Set 5:

The other change does not require a version increase AFAICS as you are only changing internal API.

-------------------------------------
author: Blake Oneal
date: 2015-09-22 16:57:56.000000000

Patch Set 5:

It may not require a major (or minor) version change, but it does affect this plugin because EventObjectSupplier subclasses the internal class from that bundle:

import org.eclipse.e4.core.di.internal.extensions.EventObjectSupplier;
public class UIEventObjectSupplier extends EventObjectSupplier {

It's guaranteed that this version of the bundle needs to go along with the patched version of the other one - if you're earlier, you will fail. That's why it's important to have the exact base version here as well so as to avoid the bug.

-------------------------------------
author: Gerrit Code Review
date: 2015-09-22 17:58:59.000000000

Change has been successfully merged into the git repository by Zaid Mosley

-------------------------------------
