DESCRIPTION

Bug 489714 - [Hidpi] Splash screen getting cropped for higher zoom
values like 150%/200%.

Change-Id: Idcb052a599ecc1d965ea26585a688485c75492f9
Signed-off-by: Mylee Terrell xxx@xxx.xxx

COMMENTS

author: Brenden Conley
date: 2016-04-13 04:22:01.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9076/

-------------------------------------
author: Saige Gonzales
date: 2016-04-13 04:50:56.000000000

Patch Set 2:

(2 comments)

Hi Niraj,

Please have a look at my comments

Thanks
Sravan

Line:75, bundles/org.eclipse.ui.workLeon Ochoach/Eclipse UI/org/eclipse/ui/internal/splash/EclipseSplashHandler.java -> you are scaling up the bounds of progress monitor and message on the splash screen here. but eventually these bounds are set in the method org.eclipse.ui.splash.BasicSplashHandler.getBundleProgressMonitor(). 

at this point we call setbounds with the rectangles created here and in control#setbounds we scaleup again.

I see double scale up problem here. if the sizes are not scaling up please look at control#setBounds methods and check whether the correct sizes are achieved

Line:918, bundles/org.eclipse.ui.workLeon Ochoach/Eclipse UI/org/eclipse/ui/internal/Workbench.java -> here you are using the ImageDataProvider constructor. in that you are scaling up the existing 100% imagedata. I donot think this is required. If you donot have this we do scaleup the 100% imagedata. Here instead of swt doing the scaleup client code is doing the scaleup. I donot see a difference with this code

-------------------------------------
author: Brenden Conley
date: 2016-04-13 05:21:25.000000000

Patch Set 2: Code-Review-1

Build Unstable 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9076/ : UNSTABLE

-------------------------------------
author: Mylee Terrell
date: 2016-04-13 06:22:26.000000000

Patch Set 2:

(2 comments)

Line:75, bundles/org.eclipse.ui.workLeon Ochoach/Eclipse UI/org/eclipse/ui/internal/splash/EclipseSplashHandler.java -> - It's a ScaleDown process and not ScaleUp operation, see:
scaleFactor = 100f / currentDeviceZoom;

- By converting the Pixel values to Points before it gets passed to SWT in org.eclipse.ui.splash.BasicSplashHandler.getBundleProgressMonitor() method to avoid double scaling.

Line:918, bundles/org.eclipse.ui.workLeon Ochoach/Eclipse UI/org/eclipse/ui/internal/Workbench.java -> - Old constructor was simply Scaling up and leading to doubling of the Splash image in this bug.
- Instead used new Image constructor so that Splash Image is DPI aware and doesn't scale Up when currentZoom and zoom are equal, so the Image size remains as is and double scaling is avoided.

I couldn't find a better alternate/place in UI code, we can check with Markus once we get it working on both GTK and Win32.

-------------------------------------
author: Saige Gonzales
date: 2016-04-13 07:40:37.000000000

Patch Set 2:

With this change we donot scale the splash screen at all. This is resulting in the messages on the splash screen to get cropped. I donot think this is correct. We have to scale the splash screen as well.

-------------------------------------
author: Mylee Terrell
date: 2016-04-13 08:26:35.000000000

Patch Set 2:

With this change we donot scale the splash screen at all. This is resulting in the messages on the splash screen to get cropped. I donot think this is correct. We have to scale the splash screen as well.
>> That's the behavior in Self-Hosted mode.
>> Splash screen do get scaled up when launched using launcher.
>> Will submit an updated patch for massage overlapping with the progress bar.

-------------------------------------
