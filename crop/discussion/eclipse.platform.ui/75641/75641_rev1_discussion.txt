DESCRIPTION

Bug 496475 - [IDE] UI deadlock via IDE.getEditorAssociationOverrides()

Root cause for the deadlock: IDE.getEditorAssociationOverrides() calls
into contributed client code holding a class lock. Since it is allowed
to call IDE code from different threads, calling into the potentially
unsafe client code is very dangerous and should be avoided.

The fix avoids deadlock by entirely removing synchronization, and
changing the field access modifier to volatile.

The worst case before the patch: deadlock.
The worst case with the proposed change: multiple creation of
IEditorAssociationOverride instances, only in a very limited time. Since
the extension point and EditorAssociationOverrideDescriptor API have not
specified how many times the
EditorAssociationOverrideDescriptor.createOverride() can be called, it
is better to risk multiple instantiations, because the impact is not as
bad as deadlock.

Change-Id: I0dac96b9c87ad9708590bfc1f298253d93547333
Signed-off-by: Jayvion Booth xxx@xxx.xxx


COMMENTS

author: Jayvion Booth
date: 2016-06-21 14:49:21.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-06-21 14:49:27.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9627/

-------------------------------------
author: Zaid Mosley
date: 2016-06-21 15:00:07.000000000

Patch Set 1: Code-Review+2 Verified+1

Looks good + the best commit message I have seen in a while. I suggest to target 4.6.1 with that

-------------------------------------
author: Brenden Conley
date: 2016-06-21 15:12:10.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9627/ : SUCCESS

-------------------------------------
author: Jayvion Booth
date: 2016-06-21 16:43:36.000000000

Patch Set 2: Patch Set 1 was rebased

-------------------------------------
author: Gerrit Code Review
date: 2016-06-21 17:08:51.000000000

Change has been successfully merged into the git repository by Jayvion Booth

-------------------------------------
