DESCRIPTION

Bug 468293 - [DataBinding] Support Java 8 Date and Time API in Eclipse
Databinding 

Change-Id: I6644ee04b679bad07dbd0045aa9b2eb81c35329c
Signed-off-by: Zaid Mosley xxx@xxx.xxx
Signed-off-by: Krista Shepherd xxx@xxx.xxx

COMMENTS

author: Zaid Mosley
date: 2015-07-14 13:59:11.000000000

Patch Set 2:

Sergej, Stefan, can you review this one?

-------------------------------------
author: Brenden Conley
date: 2015-07-14 14:05:10.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/5990/

-------------------------------------
author: Brenden Conley
date: 2015-07-14 14:12:46.000000000

Patch Set 2: Verified-1

Build Failed 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/5990/ : FAILURE

-------------------------------------
author: Teagan Marsh
date: 2015-07-14 14:37:37.000000000

Patch Set 2:

(1 comment)

How does this work with existing code using the pre-Java8 java.util.Date?  Or will that be handled by a different transform in a different bug?

Line:36, bundles/org.eclipse.jface.databinding/src/org/eclipse/jface/internal/databinding/swt/DateTimeSelectionProperty.java -> This kind of variable obfuscates the issue (which I think is that JSR310 treats months relative to 1 vs SWT DateTime being relative to 0?).  Put comments in the code.

-------------------------------------
author: Kelly Potter
date: 2015-07-14 16:51:48.000000000

Patch Set 2: Code-Review-1

I don't really like this whole approach. This patch causes DateTimeSelectionProperty to become a mixed-type observable which accepts different types in its setter than it returns with its getter.

This is bad for type-safety, complicates the contract, and will cause problems with generifying this property (what would be the generic type for WidgetValueProperty?).

If we want to permit use of new types when getting and setting a DateTime's value, we should select the correct observable in the factory that instantiates it (WidgetProperties.selection() or the observe() method), and the returned observable should both get and set its value using the same type. If it accepts java.time.LocalDateTime, it should also return it.

If we don't want to mess with the factories, we could have a standard converter that converts an ObservableValue of type Date to an ObservableValue of LocalDateTime.

-------------------------------------
author: Brock Pruitt
date: 2015-07-14 23:06:19.000000000

Patch Set 2: Code-Review-1

I agree with Stefan and also think that adding new features into this package before generification is risky.

-------------------------------------
author: Zaid Mosley
date: 2016-09-20 09:25:07.000000000

Abandoned

Abondan, as there was disagreement about the approach and no update in a long time.

-------------------------------------
