DESCRIPTION

Bug 499791 - fix extremely bad performance in ProgressMonitorFocusJobDialog

Remove dialog's wrapper monitor and replace with an
AccumulatingProgressMonitor

Signed-off-by: Jagger Herman xxx@xxx.xxx
Change-Id: I8ed09a7607092863e1d1089e970bded9b644a80b


COMMENTS

author: Jagger Herman
date: 2016-09-09 15:52:04.000000000

Uploaded patch set 8.

-------------------------------------
author: Brenden Conley
date: 2016-09-09 15:52:11.000000000

Patch Set 8:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10372/

-------------------------------------
author: Brenden Conley
date: 2016-09-09 16:13:48.000000000

Patch Set 8: Code-Review-1

Build Unstable 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/10372/ : UNSTABLE

-------------------------------------
author: Kelly Potter
date: 2016-09-09 16:28:37.000000000

Patch Set 8:

(10 comments)

Line:186, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> state variable not necessary if you use two semaphores. See below.

Line:210, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Suggest using two Semaphores rather than a shared mutex + state. Then this synchronized block could be replaced by one line:

uiSemaphore.release();

Line:215, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Suggest using two Semaphores rather than a shared mutex + state variable. Then this synchronized block could be replaced by one line:

backgroundSemaphore.acquire();

Line:227, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Possible simplification: replace synchronized block with uiSemaphore.release();

Line:240, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Possible simplification: Suggest using two java.util.concurrent.Semaphores rather than a shared mutex + state. Then this block could read:

uiSemaphore.acquire();

Line:243, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Possible simplification: make the test method throw Exception so you don't need to catch anything here.

Line:251, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Possible simplification: replace synchronized block with backgroundSemaphore.release();

Line:255, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Possible simplification:

replace block with uiSemaphore.acquire();

Line:292, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Test looks good. Thanks!

Line:320, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Possible deadlock: remove this call to sleep(). It's possible that no events will ever arrive.

-------------------------------------
author: Kelly Potter
date: 2016-09-09 17:01:23.000000000

Patch Set 8:

(1 comment)

Line:310, tests/org.eclipse.ui.tests/Eclipse UI Tests/org/eclipse/ui/tests/progress/AccumulatingProgressMonitorTest.java -> Suggest adding an assert that the only task name in the list corresponds to the last invocation of setTaskName(...).

-------------------------------------
author: Gerrit Code Review
date: 2016-09-17 11:01:02.000000000

Change has been successfully merged into the git repository by Kelly Potter

-------------------------------------
