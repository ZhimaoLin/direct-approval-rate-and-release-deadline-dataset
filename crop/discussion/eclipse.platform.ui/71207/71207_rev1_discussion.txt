DESCRIPTION

Bug 206299 - switching tabs using CTRL+TAB is not possible

Now is possible to use M1+TAB and M1+M2+TAB to switch between visible
tabs.

Change-Id: Ia1ffd33e7efc1be68aaa9420aeb41c4d4c94f4f2
Signed-off-by: Ryker Bauer xxx@xxx.xxx

COMMENTS

author: Ryker Bauer
date: 2016-04-22 09:12:52.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2016-04-22 09:12:58.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9234/

-------------------------------------
author: Brenden Conley
date: 2016-04-22 09:37:01.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/9234/ : SUCCESS

-------------------------------------
author: Teagan Marsh
date: 2016-04-22 12:15:09.000000000

Patch Set 1: Code-Review+1

I wonder if the context shouldn't be broadened to dialogsAndWindows?  I've seen some RCP apps with TabFolders/CTabFolders within a dialog.  Can you look at the implementation of the nextTab/previousTab and see if it can handle a TabFolder/CTabFolder within a dialog?

-------------------------------------
author: Teagan Marsh
date: 2016-04-22 12:26:33.000000000

Patch Set 1: Code-Review-1

Oops, this isn't right for OS X: M1 = Command (aka ?), and ?-Tab and ?-Shift-Tab is reserved by the OS.  You'll need to use M4 on carbon and cocoa.  See further up the file at 'org.eclipse.ui.edit.redo' for how to handle this.

-------------------------------------
author: Ryker Bauer
date: 2016-04-22 14:43:02.000000000

Patch Set 1:

Thanks for the review! 

I checked the default implementation: It  can handle both windows and dialogs. (see http://i.imgur.com/FOjaaIa.png). Therefore, I'm changing bindings accordingly. 

Plus, for Mac, I'm going to use M4 instead of M1. Therefore, I'm splitting this into several bindings:
for win32, gtk: next: M1+TAB (prev: M1+M2+TAB)
for carbon, cocoa: next: M4+TAB (prev: M4+M2+TAB)

I will add one binding per platform, only for the four platforms mentioned above. As per one of the previous discussion with Lars, I assume motif and photon are not supported anymore. Please tell me if I'm wrong.

-------------------------------------
author: Teagan Marsh
date: 2016-04-22 15:51:33.000000000

Patch Set 1:

Follow the pattern used for bindings:
- define a binding for all platforms
- 'unbind' for cocoa and carbon (carbon is no longer supported, but until we go through and wipe them all, we may as well keep it)
- define carbon and cocoa bindings

So we opt-out platforms as necessary rather than opt-in (except for platform-specific bundles, of course)

-------------------------------------
author: Gerrit Code Review
date: 2016-04-22 17:26:50.000000000

Change has been successfully merged into the git repository by Teagan Marsh

-------------------------------------
