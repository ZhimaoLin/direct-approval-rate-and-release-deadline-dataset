DESCRIPTION

Bug 508819:Define proper API for hover/info color constants(platform.ui)

Part 2: (Now independent of part 1 and can be merged on it's own).
PatchSet 3:
- Implemented solution with backwards compatibility.
- Introduced INFORMATION_* colors.
- Made old HOVER_* colors not-visible to the user. (isEditable=false)

Note, I experimented with 'defaultsTo', but if I use that, then
the deprecated HOVER_color is shown as a child color of INFORMATION_
in user color preference.

I tested that JDT does not break with this change. Javadoc hovers are
present as before.

Change-Id: I76670ce5b1ec896d8f153ae0d9d161ae38c51ad2 
Task-Url: https://bugs.eclipse.org/bugs/show_bug.cgi?id=508819 
Signed-off-by: Natalia Golden xxx@xxx.xxx

COMMENTS

author: Natalia Golden
date: 2017-05-03 20:45:32.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2017-05-03 20:45:38.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/12639/

-------------------------------------
author: Natalia Golden
date: 2017-05-03 20:46:26.000000000

Patch Set 3: Code-Review+1

> Removing a color definition is a no go. You will have to provide a
 > backwards compatible solution.

Thank you for feedback. I implemented a solution with backwards compatibility.
Please review.

-------------------------------------
author: Brenden Conley
date: 2017-05-03 21:12:08.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/12639/ : SUCCESS

-------------------------------------
author: Sebastian Porter
date: 2017-05-05 15:15:19.000000000

Patch Set 3: Verified+1

(1 comment)

Quick test seems to look OK.

Line:330, bundles/org.eclipse.ui/plugin.properties -> How is that useful for a user? What can he do to fix this?

-------------------------------------
author: Natalia Golden
date: 2017-05-05 15:18:33.000000000

Patch Set 3:

(1 comment)

Line:330, bundles/org.eclipse.ui/plugin.properties -> Context: I've never deprecated a color and haven't seen an instance of a color having been deprecated that I could copy, so I'm not really sure about the best approach to this. 

My line of thought here: This color is never displayed to the end user in the user-preferences. (isEditable=false). So the user never sees this message. However, a developer might follow the label and see which correct ID to use. 
A label is neccessary part of a ColorDefinition, so I need to have some kind of label of sorts.
Should I have a regular label with regular text and instaed mention that this is deprecated or is the above ok?

-------------------------------------
author: Sebastian Porter
date: 2017-05-05 15:26:18.000000000

Patch Set 3:

The user sees the message when hovering over the Javadoc color options. Also, those options can be changed.

Sorry, I don't have time to investigate (which I would have to tell you how to fix this) what's the best way to make this work backwards compatible.

Maybe we just let this rest for 4.7.

-------------------------------------
