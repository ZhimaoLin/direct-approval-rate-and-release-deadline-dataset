DESCRIPTION

Bug 508819: Define proper API for hover/info color constants

Part 2:
PLEASE only merge once part 1 is merged:
https://git.eclipse.org/r/#/c/96117/

Changes:
- Renaming HOVER_* to INFORMATION_*
  I checked against all projects in Eclipse.jdt.* and eclipse.platform,
  such that none are using the HOVER_* at the moment.
  (Except in AbstractAnnotationHover in JDT, but that one is
non-problematic as it does a null-check and I will update this in 'part
3').
- Adding description to colorDefinition
- Adding constants into JFacePreference to avoid magic strings

Note, this is a sanitisation patch, no functional or changes in
apperance take place.

Test:
- Launch Child Eclipse
- Inspect Information colors in Color preferences
- Switch to dark theme, click OK & close dialogue.
- Open preferences again and inspect Information Colors
Results:
 - Information Colors switch in accordance to dark theme (black
background)
 - Information Colors provide a description

Change-Id: I76670ce5b1ec896d8f153ae0d9d161ae38c51ad2
Task-Url: https://bugs.eclipse.org/bugs/show_bug.cgi?id=508819
Signed-off-by: Natalia Golden xxx@xxx.xxx


COMMENTS

author: Natalia Golden
date: 2017-05-01 21:45:59.000000000

Uploaded patch set 2: Commit message was updated.

-------------------------------------
author: Brenden Conley
date: 2017-05-01 21:46:05.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/12598/

-------------------------------------
author: Brenden Conley
date: 2017-05-01 22:11:04.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/12598/ : SUCCESS

-------------------------------------
author: Sebastian Porter
date: 2017-05-03 11:33:04.000000000

Patch Set 2: Code-Review-2 Verified-1

Removing a color definition is a no go. You will have to provide a backwards compatible solution.

-------------------------------------
