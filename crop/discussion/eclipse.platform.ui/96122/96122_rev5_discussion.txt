DESCRIPTION

Bug 508819:Define proper API for hover/info color constants(platform.ui)

*As of Patch Set 3, this patch is independent of other patches*

Patch Set 1,2:
- Implementing INFORMATION_ color ID instead of "HOVER_", because
the colors are used in non-hover context.

Patch Set 3:
- Implemented solution with backwards compatibility.
- Introduced INFORMATION_* colors.
- Made old HOVER_* colors not-visible to the user (isEditable=false)

Patch Set 4:
- Moved deprecated note from label into description, and set labels to:
  "Hover * color".
  This way the javadoc colors don't mention deprecation in user
interface, but a developer who looks at the color in the code will
notice the description that links to the proper color. (See attached
screenshot 'javadoc default label').
  AFIK the user now never sees anything 'deprecated' related.

Note:
Once this patch is merged, I will update JDT not to reference HOVER_
anymore.

I can't think of a better solution to deprecating a color and haven't
found other examples to copy from. If someone has alternative
suggestions, please let me know.

Side note, I experimented with 'defaultsTo', but if I use that, then
the deprecated HOVER_color is shown as a child color of INFORMATION_
in user color preference.

I tested that JDT does not break with this change. Javadoc hovers are
present as before.

Change-Id: I76670ce5b1ec896d8f153ae0d9d161ae38c51ad2
Signed-off-by: Natalia Golden xxx@xxx.xxx

COMMENTS

author: Sebastian Porter
date: 2017-05-09 13:58:43.000000000

Patch Set 5: Patch Set 4 was rebased

-------------------------------------
author: Brenden Conley
date: 2017-05-09 13:58:50.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/12679/

-------------------------------------
author: Sebastian Porter
date: 2017-05-09 14:28:29.000000000

Patch Set 5: Verified-1

That doesn't work. It leaves the old hover color/id in the dead land. If the user changed the old hover/info color and then moves to a new build with this change, he's stuck with that color.

We're running out of time with this. Maybe we be better defer to 4.7.1.

NOTE: While testing I found that the annotation hover status line is still broken. I would rather prefer to get a fix for that.

public class Test {
	private String s;
}

Change the Information background color. Hover over 's' ==> status line has wrong color

-------------------------------------
author: Brenden Conley
date: 2017-05-09 14:33:36.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/12679/ : SUCCESS

-------------------------------------
author: Sebastian Porter
date: 2017-05-10 14:49:19.000000000

Patch Set 5:

> NOTE: While testing I found that the annotation hover status line
 > is still broken. I would rather prefer to get a fix for that.
 > 
 > public class Test {
 > private String s;
 > }
 > 
 > Change the Information background color. Hover over 's' ==> status
 > line has wrong color

==> https://bugs.eclipse.org/516420

-------------------------------------
author: Natalia Golden
date: 2017-05-11 20:58:14.000000000

Patch Set 5: Code-Review-1

> That doesn't work. It leaves the old hover color/id in the dead
 > land. If the user changed the old hover/info color and then moves
 > to a new build with this change, he's stuck with that color.
 > 
 > We're running out of time with this. Maybe we be better defer to
 > 4.7.1.

I've written a patch to address this in (1) Bug 516533. Awaiting review.

 > NOTE: While testing I found that the annotation hover status line
 > is still broken. I would rather prefer to get a fix for that.
 > 
 > public class Test {
 > private String s;
 > }
 > 
 > Change the Information background color. Hover over 's' ==> status
 > line has wrong color

Resolved in Bug 516420

Currently awaiting for (1) to be merged. Once merged, I will re-base and re-test this patch and +1 it when it's ready for next review.

-------------------------------------
