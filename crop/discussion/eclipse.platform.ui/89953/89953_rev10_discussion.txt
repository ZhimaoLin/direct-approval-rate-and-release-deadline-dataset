DESCRIPTION

Bug 8519 - keystroke macros recording and playing capability

Change-Id: I3f548fc00d82a847a2591c06ff6387fa23204a76
Signed-off-by: Sienna Tate xxx@xxx.xxx

COMMENTS

author: Sienna Tate
date: 2017-02-20 14:55:17.000000000

Uploaded patch set 10.

-------------------------------------
author: Brenden Conley
date: 2017-02-20 14:55:23.000000000

Patch Set 10:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/12092/

-------------------------------------
author: Sienna Tate
date: 2017-02-20 15:15:19.000000000

Patch Set 10:

Hi Brian,

I did some renames based on your suggestions:

EMacroContextService -> EMacroService

IMacroContextListener -> IMacroStateListener

IMacroCommand -> IMacroInstruction: this was actually the most controversial change for me, given that internally I think macroCommand is what makes more sense, but I understand the confusion with the eclipse commands... alternatives I thought about were macroAction, macroStep, macroInstruction. From those, I went with macroInstruction as the name action is also already taken (i.e.: http://wiki.eclipse.org/FAQ_What_is_the_difference_between_a_command_and_an_action%3F). It's not ideal (as I said, internally I think macroCommand makes more sense), but at least it's unique and I think it still gives the proper meaning (i.e.: a macro is composed of multiple macro instructions).

accepted command -> whitelisted command (recordActivation -> recordMacroInstruction)

Other changes:

Removed DIWrapper, bundled the EAcceptedCommands methods into EMacroService, changed the readme into a package-info.java, made it possible to create a macro instruction through the IMacroPlaybackContext (previously a separate map was kept for that and passed along in the same places).

I ended up leaving the macroStateListeners extension point (I did change here to have a version using the EventAdmin, but still liked more the version with the extension point).

On focus: Currently nothing is done when the user changes focus (so, if he does that on replay everything will be played in the same file). My idea is adding a macro instruction for this in the future (maybe matching through the file name or asking the user which file to map to if a match is not made), but still, this is all in the ideas world (right now, the important thing is that this is possible -- but still work for the future).

On making IMacro public: while I agree that in the future this may be an option (nicer when there's actually an UI to allow to play existing macros), I wouldn't like to make IMacro public just now (and in the future, adding an API such as you proposed will still be possible).

-------------------------------------
author: Brenden Conley
date: 2017-02-20 15:22:56.000000000

Patch Set 10: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/12092/ : SUCCESS

-------------------------------------
