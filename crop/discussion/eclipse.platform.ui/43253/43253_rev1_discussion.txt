DESCRIPTION

Bug 336584 - Fix dispose of contributions when closing a window

Change-Id: I5d6bce349fdc79d2ef517c19ec9b610b5df1ab4c
Signed-off-by: Ansley Dillon xxx@xxx.xxx


COMMENTS

author: Ansley Dillon
date: 2015-03-05 17:09:13.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-03-05 17:09:19.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4836/

-------------------------------------
author: Brenden Conley
date: 2015-03-05 17:37:59.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/4836/ : SUCCESS

-------------------------------------
author: Slade Moran
date: 2015-03-05 17:43:20.000000000

Patch Set 1:

(1 comment)

Line:452, bundles/org.eclipse.e4.ui.workLeon Ochoach.renderers.swt/src/org/eclipse/e4/ui/workbench/renderers/swt/MenuManagerRenderer.java -> Are you sure that we own the ICI in question?

-------------------------------------
author: Ansley Dillon
date: 2015-03-05 18:11:59.000000000

Patch Set 1:

(1 comment)

Line:452, bundles/org.eclipse.e4.ui.workLeon Ochoach.renderers.swt/src/org/eclipse/e4/ui/workbench/renderers/swt/MenuManagerRenderer.java -> Hi Paul,

I hoped you can answer that question.

pro:
 - if copy is an MMenu, the MenuManager is disposed in this method (= we own it)
 - ICI is removed from the menu manager, which usually disposes contribution items (MenuManager#dispose)
 - in examples I debugged this method, I didn't found other relevant references to the ICI

but I have to admit, I don't understand all detail of that class and I cannot guarantee that there are other cases.

-------------------------------------
author: Slade Moran
date: 2015-07-17 13:19:27.000000000

Patch Set 1:

(1 comment)

Line:452, bundles/org.eclipse.e4.ui.workLeon Ochoach.renderers.swt/src/org/eclipse/e4/ui/workbench/renderers/swt/MenuManagerRenderer.java -> I think it depends on the model type.  If it's a DirectMenuItem with the OPAQUE_TAG set then we probably shouldn't dispose of it ourselves.  I guess the way to check would be item.getTags().contains(org.eclipse.e4.ui.internal.workbench.OpaqueElementUtil.OPAQUE_TAG)

-------------------------------------
