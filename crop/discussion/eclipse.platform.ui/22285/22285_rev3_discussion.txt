DESCRIPTION

Bug 428355 - [New Contributors] Fix warnings in platform projects

Original code was performing unsafe explicit cast, causing an warning
due to the possibility of throwing ClassCastException. In addition,
@Override tags were added on methods implementing interface methods.

Change-Id: Ia805e0536fbcbfdd91529ca30d0f11707906d22f
Signed-off-by: Jessica Roy xxx@xxx.xxx

COMMENTS

author: Jessica Roy
date: 2014-02-21 17:04:57.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2014-02-21 17:13:38.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/982/

-------------------------------------
author: Brenden Conley
date: 2014-02-21 17:24:19.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/platform/job/eclipse.platform.ui-Gerrit/982/ : SUCCESS

-------------------------------------
author: Zaid Mosley
date: 2014-02-21 20:33:50.000000000

Patch Set 3:

For loop looks weird. Why the double check?

for (int i = 0; it.hasNext() && i < names.length; i++) {

-------------------------------------
author: Jessica Roy
date: 2014-02-21 22:23:47.000000000

Patch Set 3:

I did it just as a matter of defensive checking.

It would make more sense if someone that I don't know had implemented the Iterator but in this case you are right.

Because we are talking about methods from the Java API, I guess it is unlikely to have it.hasNext == false and i >= names.length == true (or in the opposite way).

I will send soon an update for this patch. Sorry for the inconvenience.

-------------------------------------
