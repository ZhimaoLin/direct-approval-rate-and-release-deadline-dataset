DESCRIPTION

use goxdcr stats

Change-Id: Icb3f0dea682215c99d72aedd8de8b5be36c7d63c


COMMENTS

author: Enzo Knox
date: 2015-02-19 01:35:34.293000000

Uploaded patch set 3.

-------------------------------------
author: Alicia Schmidt
date: 2015-02-19 02:48:40.120000000

Patch Set 3:

(1 comment)

Line:586, src/menelaus_stats.erl -> You forgot to add the description back?

-------------------------------------
author: Enzo Knox
date: 2015-02-19 05:18:45.943000000

Patch Set 3:

(1 comment)

Line:586, src/menelaus_stats.erl -> this is no need to add it back, since wtavg_meta_latency is provided by goxdcr directly. there is no need for additional computation.

On the other hand, goxdcr does not provide meta_latency_aggr or meta_latency_wt individually. Thus these two stats are not available through the following url:

replications/[UUID]/[source_bucket]/[destination_bucket]/meta_latency_aggr

The same applies to docs_latency_aggr and docs_latency_wt. If these are required, we will have to add them back.

-------------------------------------
author: Alicia Schmidt
date: 2015-02-19 05:29:17.390000000

Patch Set 3:

(1 comment)

Line:586, src/menelaus_stats.erl -> This might not be true. I think ns_server process it based on the time interval user picked. It is 1 minute or 1 hour.

-------------------------------------
author: Enzo Knox
date: 2015-02-19 05:45:58.552000000

Patch Set 3:

(1 comment)

Line:586, src/menelaus_stats.erl -> my understanding is that, the algorithm here pick existing stats provided by xdcr, and compute additional stats based on existing stats. If existing stats are collected once per minute, the computed stats would be available once per minute, no more, no less. Then the computed stats can subject to the same time based aggregation rules just as the existing stats. 

on the topic of time based aggregation, I was not able to find any code for that. I only saw raw stats listed as they are, one per node per timestamp:

replications/[UUID]/[source_bucket]/[destination_bucket]/docs_written

{...,"timestamp":[1371685048753,1371685049754,..],
"nodeStats":{"127.0.0.1:8091":[1000000,1000000,...]}}    

Do you know where they are performed?

-------------------------------------
author: Philip Lara
date: 2015-02-21 02:58:00.985000000

Patch Set 3: Code-Review-2

Sorry this is absolutely no go. We need to preserve our ability to display old style xdcr stats

-------------------------------------
author: Philip Lara
date: 2015-02-23 19:20:13.563000000

Patch Set 3:

I'll work on on it today and see what can be done

-------------------------------------
author: Enzo Knox
date: 2015-02-24 18:39:26.918000000

Patch Set 3:

We would like to preserve the old xdcr stats, but it is not always possible to do so. goxdcr no longer has vb replicators. As a result, all vb replicator related stats, e.g., maxVbReps, utitlization, wakeups_rate, etc, are simply no longer applicable. 

Some other differences may be accomodated. For example, old xdcr provides docs_latency_aggr and docs_latency_wt, and ns_server computes wtavg_docs_latency based on these two. New xdcr provides wtavg_docs_latency directly, and ns_server has no way to infer docs_latency_wt from it. If it is critical that we preserve docs_latency_wt, we can have new xdcr provide docs_larency_wt as well. The same applies to meta_latency_wt.

-------------------------------------
author: Philip Lara
date: 2015-02-24 18:45:36.574000000

Patch Set 3:

Yu, that's not what I meant. With this commit you are killing the descriptions of stats for the old xdcr in mixed clusters.

-------------------------------------
author: Enzo Knox
date: 2015-02-24 23:46:44.717000000

Patch Set 3:

See your point now. Sorry.

-------------------------------------
author: Meghan Vazquez
date: 2015-03-03 02:34:04.752000000

Abandoned

-------------------------------------
