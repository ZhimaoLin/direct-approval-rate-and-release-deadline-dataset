DESCRIPTION

mechanism to stop old xdcr replications after upgrade

- upgrade should set {node, node(), stop_xdcr} = true
- when this key is set to true the goxdcr replication is not allowed
- xdc_rep_manager will stop all reps and delete this key, when it
  will detect that this key is set to true
- this way goxdcr will be started only after xdcr reps are properly
  shut down

Change-Id: I4fdcd4b5e6cce9cefc3431b636719620425aee47


COMMENTS

author: Philip Lara
date: 2015-03-13 10:17:57.618000000

Uploaded patch set 2.

-------------------------------------
author: Philip Lara
date: 2015-03-13 10:18:59.626000000

Patch Set 2: Verified+1

-------------------------------------
author: Meghan Vazquez
date: 2015-03-13 18:18:45.857000000

Patch Set 2:

(1 comment)

see a comment inline. Meanwhile I continue looking at the code.

Line:90, src/cluster_compat_mode.erl -> There's still a little chance of race here.

It's not possible to atomically update several keys in ets table. So even though stop_xdcr and cluster_compat_version are updated in a single transaction, they it's possible to see the state where one is uptaded but not the other one.

-------------------------------------
author: Meghan Vazquez
date: 2015-03-13 21:21:20.807000000

Patch Set 2:

I think the easiest way to approach the race condition is by having a per-node flag specifying which implementation to use. Then is_goxdcr_enabled would just look at this flag. Then each node when it sees that compat mode is 4.0 will shutdown erlang xdcr and change the value of the flag to goxdcr.

-------------------------------------
author: Roselyn Villegas Code Review
date: 2015-03-14 00:50:19.993000000

Change has been successfully cherry-picked as 95ff5f7b6ee349ba2f006e77ce530d205666ef26

-------------------------------------
