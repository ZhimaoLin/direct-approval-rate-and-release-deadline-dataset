DESCRIPTION

MB-12222: improved mnPoll

This change contains:

1. Added stopTimestamp instead of isCanceled. Timestamp is more reliable
during reload of async operations.
2. Removed unused properties stateChangeStartBind and cache.
3. Separation of doÐ¡all from calculation of interval.
4. Added ability to show spinner with specific name.

Change-Id: Ib6380b6b6bdd58a3ebc52e86e600535d4fee11fc


COMMENTS

author: Shaniya Barton
date: 2016-01-06 13:44:09.359000000

Uploaded patch set 5: Patch Set 4 was rebased.

-------------------------------------
author: Kian Santos
date: 2016-01-07 02:16:02.400000000

Patch Set 5: Code-Review-2

(1 comment)

You say: "timestamp is more reliable during reload of async operations".

Since javascript is single threaded this sounds weird. Can you provide specific examples of when using a simple isCanceled boolean would not work. 

In addition I think there's a logic bug in the timestamp comparison.

Line:29, priv/public/ui/app/components/mn_poll.js -> This logic looks wrong. 

We continue to cycle again if:
1) stopTimestamp is undefined (correct) or
2) timestamp >= self.stopTimestamp 

(2) looks to be a problem. If stopTimestamp is defined and timestamp >= stopTimestamp then we will continue. This seems wrong.

-------------------------------------
author: Shaniya Barton
date: 2016-01-07 09:48:21.698000000

Patch Set 5:

(1 comment)

Line:29, priv/public/ui/app/components/mn_poll.js -> (2) looks correct for me. 

If stopTimestamp has been set after self.doCall() then we should ignore result of doCall, so 

  
!(timestamp >= self.stopTimestamp) //true e.g. !(2 >= 3)

-------------------------------------
author: Roselyn Villegas Code Review
date: 2016-01-15 05:20:10.832000000

Change has been successfully cherry-picked as d92ccf56981238e398d36d91dd40c860384d0370

-------------------------------------
