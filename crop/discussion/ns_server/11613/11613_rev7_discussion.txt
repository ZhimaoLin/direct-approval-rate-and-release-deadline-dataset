DESCRIPTION

Add (Adrianna Holmesal) spatial compaction to CAPI

Add support for compaction of spatial indexes to
the CAPI. It makes compaction across the cluster
possible.

Change-Id: Ibf4ca153bbfc7b8f89f63f15d8dd50a7d86f0887


COMMENTS

author: Ayla Reynolds
date: 2012-01-23 18:59:25.273000000

Uploaded patch set 7.

-------------------------------------
author: Nathalie Landry
date: 2012-01-25 18:19:46.418000000

Patch Set 7: I would prefer that you didn't submit this

a) live_bucket_nodes will return only nodes that are _currently_ up. There's no point in failing entire request if some of initially live nodes could not perform request.

b) you need to compact (and cleanup) replica vbuckets as well

c) get_local_vbuckets is very inefficient. Not just because it does extra job of building dict for all nodes, but also because it's doing it very inefficiently. But later can/will be fixed later.

-------------------------------------
author: Ayla Reynolds
date: 2012-01-25 22:59:09.568000000

Patch Set 7:

>> a) live_bucket_nodes will return only nodes that are _currently_ up. There's no point in failing entire request if some of initially live nodes could not perform request.

Your comment isn't 100% clear to me. You say that live_bucket_nodes only returns the nodes that are currently up, so how could it fail on notes that were initially up, but not any longer?
 
I would expect that the request only returns success if all nodes of the cluster performed the compaction successfully. Of course we can change it, so that it returns something like: {"ok": "partial"} or so. Though I would say it can be implemented on top of the current implementation.


>> b) you need to compact (and cleanup) replica vbuckets as well

Do replica buckets also create a spatial index?

-------------------------------------
author: Nathalie Landry
date: 2012-01-25 23:03:42.179000000

Patch Set 7:

>> I would expect that the request only returns success if all nodes of the cluster performed the compaction successfully. Of course we can change it, so that it returns something like: {"ok": "partial"} or so. Though I would say it can be implemented on top of the current implementation.

If you need all nodes to return ok then you need to ask all nodes. Not just in [node()|nodes()].

>> Do replica buckets also create a spatial index?

They don't, but vbucket states change. So something that in past was active can become replica or dead and can actually be removed.

-------------------------------------
author: Ayla Reynolds
date: 2012-01-25 23:18:01.582000000

Patch Set 7:

>> If you need all nodes to return ok then you need to ask all nodes. Not just in [node()|nodes()].

How to get all nodes then?

>> Do replica buckets also create a spatial index?
They don't, but vbucket states change. So something that in past was active can become replica or dead and can actually be removed.

Good point. I'm not good with ns_server. Is there already a function to get all vbuckets and replicas from a local node?  If you've any pointers it would be great.

-------------------------------------
author: Nathalie Landry
date: 2012-01-25 23:30:08.589000000

Patch Set 7:

all bucket nodes can be retrieved via ns_bucket:bucket_nodes.

For cleanup purposes it makes sense to always kill all unknown indexes and indexes of unknown vbuckets.

list of vbuckets code should be extracted from autocompaction daemon. see compact_loop in there. It's not ok for cleanup purposes (it only consults vbucket map), but ok for compaction purposes. Be extra careful though that not all vbuckets will have spatial indexes (e.g. replicas).

-------------------------------------
author: Ayla Reynolds
date: 2012-01-25 23:42:32.152000000

Patch Set 7:

>> For cleanup purposes it makes sense to always kill all unknown indexes and indexes of unknown vbuckets.

So you propose that I just scan through directory and delete all *.spatial that are currently not in use?

-------------------------------------
author: Nathalie Landry
date: 2012-01-26 00:17:50.032000000

Patch Set 7:

>> So you propose that I just scan through directory and delete all *.spatial that are currently not in use?

that seems reasonable to me

-------------------------------------
author: Roselyn Villegas Code Review
date: 2012-02-15 22:01:41.682000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
author: Roselyn Villegas Code Review
date: 2012-02-15 22:01:49.411000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
