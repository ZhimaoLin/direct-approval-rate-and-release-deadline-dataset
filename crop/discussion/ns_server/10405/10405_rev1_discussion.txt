DESCRIPTION

create _replicator view for replication status aggregation

Change-Id: I80a7710a9d9278eae2c3ac97c7144cacc059a4fc


COMMENTS

author: Nathalie Landry
date: 2011-10-27 00:27:33.172000000

Patch Set 1: Verified



-------------------------------------
author: Marcus Petersen
date: 2011-10-27 14:43:01.783000000

Patch Set 1: Looks good to me, but someone else must approve



-------------------------------------
author: Meghan Vazquez
date: 2011-10-27 18:31:58.770000000

Patch Set 1: Looks good to me, approved



-------------------------------------
author: Porter Oconnor
date: 2011-10-27 18:59:31.500000000

Patch Set 1: (1 inline comment)

Noticed an error, comment inline.

Line:94, include/replication_infos_ddoc.hrl -> replication_fields can be "undefined", which is not valid JSON
(same applies for result_state)
This will crash the JSON decoder at least.

-------------------------------------
author: Meghan Vazquez
date: 2011-10-27 19:24:12.277000000

Patch Set 1: No score

(1 inline comment)



Line:94, include/replication_infos_ddoc.hrl -> The final result is not supposed to have undefined-s. But yes this probably should be handled.

-------------------------------------
author: Nathalie Landry
date: 2011-10-27 21:12:49.592000000

Patch Set 1:

then either spidermonkey or our js query server do that as extension. I've noticed that undefined fields will be silently removed from resulting JSON.

-------------------------------------
author: Nathalie Landry
date: 2011-10-27 21:13:05.368000000

Patch Set 1:

anyway will re-code

-------------------------------------
author: Nathalie Landry
date: 2011-10-28 09:55:41.299000000

Patch Set 1:

Filipe, I've just verified that all JSON.stringify implementations explicitly ignore fields with value 'undefined'. Even IE8-builtin. So there's no need to change this perfectly working code.

-------------------------------------
author: Porter Oconnor
date: 2011-10-28 10:05:18.231000000

Patch Set 1:

Right, that might change one day.
Why in the first place do explicit assignment of undefined? Couldn't null be used, or simply delete those properties from the object to be returned?
Possibly returning undefined fields in map/reduce functions encourages newcomers to do mistakes

-------------------------------------
author: Nathalie Landry
date: 2011-10-28 10:07:00.310000000

Patch Set 1:

The very fact that if works this way across _all_ JSON.stringify implementations encourages that.

I see no problem with changing code when undefined will be forbidden. But I don't think this will ever happen.

-------------------------------------
author: Marcus Petersen
date: 2011-10-31 17:21:45.127000000

Patch Set 1: I would prefer that you didn't submit this

I agree with Filipe on this one. We should be more obvious in our code and not depend on "implementation details" like JSON.stringify stripping out undefined. It's not obvious, and could easily cause confusion for new developers--something we need to make an effort to avoid.

Please handle the "undefined" cases in the MapReduce.

-------------------------------------
author: Tatiana Sheppard
date: 2011-10-31 17:34:47.574000000

Patch Set 1: Looks good to me, approved

The xdc_rep_manager.erl changes look good. Someone else must approve the other changes.

-------------------------------------
author: Nathalie Landry
date: 2011-10-31 21:03:49.283000000

Patch Set 1:

found this: http://es5.github.com/#x15.12 it is the only JSON.stringify spec our there.

So I did my homework correctly.

-------------------------------------
author: Nathalie Landry
date: 2011-10-31 23:16:46.057000000

Patch Set 1: I would prefer that you didn't submit this

dont merge. This relies on promised _replication_state fix

-------------------------------------
