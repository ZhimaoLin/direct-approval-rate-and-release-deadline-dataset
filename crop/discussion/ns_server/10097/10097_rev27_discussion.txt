DESCRIPTION

new spinner system using JS-driven CSS sliding doors

Transparent PNG sprite sheets are used to avoid the
overhead of creating animated GIFs and the ability
to apply spinners on any background color.

Change-Id: I6014a50b2db209ad573b65c12f866227b1eb66bd


COMMENTS

author: Marcus Petersen
date: 2011-12-09 22:14:09.672000000

Uploaded patch set 27.

-------------------------------------
author: Nathalie Landry
date: 2011-12-09 22:14:20.536000000

Patch Set 27:

Automatically re-added by Roselyn Villegas trivial rebase detection script.

-------------------------------------
author: Marcus Petersen
date: 2012-01-09 15:53:31.370000000

Patch Set 27: Abandoned

Going back to the antique approach of animated GIF's.

Below are some findings from tests:

jQuery DOM searching for .spinner .spinner_icon:visible inside a setTimeout(spin, 125) has best CPU usage at ~0.9% when nothing's displayed and ~2% when one is displayed.

Canvas based approach stayed ~10% when item displayed. No research was done to test/try visibility checking.

CSSOM approaches were the worst performance-wise with 15-19% CPU usage all the time (regardless of displayed spinners).

I'm guessing CSS3 transform-based approaches would be as worse than the CSS Sprites based, DOM-checking approach.

NOTE: These tests were done in Chrome. Firefox's numbers were worse from a total CPU usage perspective for the most part, but would range widely during rendering and rarely "level out."

Options Not Tried:
SVG rotation - IE 7/8 support is the blocker here.

-------------------------------------
