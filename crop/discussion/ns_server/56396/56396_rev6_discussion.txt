DESCRIPTION

MB-12222: implement etag based poll

As turned out we have to use etag based poll
in order to correctly display tasks progress bar.
This change contains:

1. reworking of mn_poll. In order to be able to inherit
mnPollClass.
2. subscribers are able to receive previous result of
mnPoll in callback function
3. we use mnPoolDefault.getFresh instead of cached
since etag based poll logic differs from plain poll.
We can optimize it later.

Change-Id: Ia92b5fde40d584282c773eea056a9788d18ad796


COMMENTS

author: Shaniya Barton
date: 2015-11-06 12:05:30.021000000

Uploaded patch set 6.

-------------------------------------
author: Kian Santos
date: 2015-11-08 01:18:56.965000000

Patch Set 6: Code-Review-1

(2 comments)

I synced this change and noticed some stuff:

I noticed that non etag polling with 0 wait time is happening constantly on the Overview tab which seems to invalidate the use of etag based polling with a 10s timeout.
I also noticed that the etag polling stops if you click away from the Overview tab and then click back (i.e. it never restarts.)

Line:4, priv/public/angular/app/mn_admin/mn_admin_controller.js -> with this change, $q is no longer used in this controller

Line:14, priv/public/angular/app/components/mn_poll_classes.js -> I know this is correct but it's pretty damn confusing. "call" here is the Function.prototype.call not the Poll.prototype.call. Probably ok, but would be clearer if Poll.prototype.call had a different name, like doCall() or something.

-------------------------------------
author: Shaniya Barton
date: 2015-11-09 08:04:26.502000000

Patch Set 6:

right now etag based poll is intended only for two things - broadcast of taskUriChanged and sync of clusterName. Later we can add some other events like indexStatusUriChanged or serverGroupsUriChanged. 

On overview page you are able to see two polls first one for tasks and second one for overview. In Angular every controller with poll has it own set of calls to the server, because data for the controllers should be prepared in services.

In general there are two ways to share data from AdminController to OverviewController first one - via scope, but it's not the recommended way. The recommended way is to use Service (in other words - Cache).  We could reduce amount of calls via cache but Overview and Tasks have different refresh period, so it may be the case that Overview get old data of poolDefault. Let's leave it for now, I think we can optimize poolDefault in some places later. 

I'm agree with all your other comments

-------------------------------------
author: Roselyn Villegas Code Review
date: 2015-11-11 16:14:31.084000000

Change has been successfully cherry-picked as d43de0362bf63398d5831175e64afc733ca93c25

-------------------------------------
