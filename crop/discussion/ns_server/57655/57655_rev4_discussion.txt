DESCRIPTION

MB-16452 setting node certificate chain and pkey

- Cluster CA has to be set prior
- Chain is validated against cluster CA
- Chain and PKey are stored in the config directory on the node
- The key in ns_config is updated with information that will be
  used for displaying warnings if the chain expires or gets out of
  sync with cluster CA
- This commit does not apply the certificate chain to the mochi web
  and other components

Change-Id: I14c350b2ca5e0ef19ec19a508ad4c82ea0b09161


COMMENTS

author: Philip Lara
date: 2015-12-11 22:46:53.623000000

Uploaded patch set 4: Patch Set 3 was rebased.

-------------------------------------
author: Hugo Blankenship
date: 2015-12-11 22:47:04.205000000

Patch Set 4:

Build Successful 

http://cv.jenkins.couchbase.com/job/restricted-branch-check/425/ : SUCCESS

-------------------------------------
author: Philip Lara
date: 2015-12-11 23:04:16.794000000

Patch Set 4: Verified+1

-------------------------------------
author: Meghan Vazquez
date: 2015-12-12 00:12:51.657000000

Patch Set 4:

I'm really not comfortable about reading arbitrary files at the server: you miss something and you get a vulnerability allowing an adversary to read random files that are accessible by couchbase user. I would much rather prefer an alternative where we read at a predefined fixed location.

-------------------------------------
author: Philip Lara
date: 2015-12-12 02:57:23.834000000

Patch Set 4:

I hear you. Need to think about it. I also found another problem today: we need to be able to set node certificate before node joins cluster, otherwise there can be https downtime if the client gets rerouted to newly added node before the certificate is set.

-------------------------------------
author: Meghan Vazquez
date: 2015-12-12 04:54:53.409000000

Patch Set 4:

I'm sure it's described in the design doc (which I have to admit I haven't read :), but what is the motivation for the custom node certificates? I thought that we'd just allow uploading customly signed cluster certificate (signed by some 3rd-party CA). Then the clients would have to be configured to know about that 3rd-party CA. Is there something I'm missing?

-------------------------------------
author: Philip Lara
date: 2015-12-13 02:13:57.028000000

Patch Set 4:

Certificate have to verify particular domain name. That means that we can use the same certificate on all nodes only if they could be covered by the same wildcard definition, which is I guess too much to ask.

Another option could be to have cluster cert with certificate issuing authority, and generate node certificates automatically, but obtaining such certificate from established CA also could be problematic.

Plus we do exactly what Mongo does.

-------------------------------------
author: Meghan Vazquez
date: 2015-12-13 03:53:21.751000000

Patch Set 4:

I'm not saying that we wouldn't have a per-node certificate. But we could continue using auto-generated one, signed by the cluster certificate (that is potentially signed by custom CA).

What mongo does is not an argument at least for me :) At least I would like to understand why they are doing it this way.

-------------------------------------
author: Meghan Vazquez
date: 2015-12-13 03:55:41.270000000

Patch Set 4:

Missed the second paragraph in your message. That answers my question.

-------------------------------------
author: Philip Lara
date: 2015-12-13 09:32:29.956000000

Patch Set 4:

And one more thing. I really try to avoid passing customers private keys over the network. Let them do it using whatever method they deem secure.

-------------------------------------
author: Roselyn Villegas Code Review
date: 2016-01-05 19:31:24.472000000

Change has been successfully cherry-picked as be4f64470c6a87fab86d20b6c02fa13e9947b9ab

-------------------------------------
