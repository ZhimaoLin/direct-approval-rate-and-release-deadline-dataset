DESCRIPTION

MB-11401: Monitor the caller that issues memcached ctrl commands.

The following are the changes added:
[1] Added a wrapper funtion in mc_client_binary module that gets
    the token and passes it as a parameter to the fun that is
    passed in to the wrapper function. The wrapper later releases
    the token.

[2] Made all the control commands defined in mc_client_binary
    module that need session token to accept the Token as a
    parameter.

[3] Removed the cmd_ctrl helper function that was defined to handle
    token server interactions. This is now being taken care of
    by the wrapper function.

[4] The ns_memcached module has been modified to utilize the above
    mentioned wrapper function in the context of all the exposed
    APIs that need session tokens. This would make sure thar the
    caller process gets monitored by the token server and the current
    token gets reset whenever the caller process dies.

[5] Have renamed the dictionary in ns_memcached_token module to
    signfiy what it's being used for.

Change-Id: Ia7a48096a50e8bbdcf6467db7e1bc53094971a93


COMMENTS

author: Noe Perry
date: 2016-09-15 20:50:46.535000000

Uploaded patch set 5.

-------------------------------------
author: Noe Perry
date: 2016-09-16 18:56:14.661000000

Patch Set 5: Verified+1

-------------------------------------
author: Meghan Vazquez
date: 2016-09-28 04:41:24.217000000

Patch Set 5:

(2 comments)

Line:287, src/ebucketmigrator_srv.erl -> No need to do this. Just pass 0 as token. Same applies to two other changes in ebucketmigrator_srv.

Line:150, src/ns_memcached_token.erl -> Do we actually need "recursive" get_token anywhere?

Also seems that if a process that called get_token twice dies, caller count will never get dropped to zero.

-------------------------------------
author: Noe Perry
date: 2016-10-03 18:58:45.037000000

Patch Set 5:

(2 comments)

Line:287, src/ebucketmigrator_srv.erl -> Sure!

Line:150, src/ns_memcached_token.erl -> Can you elaborate what you meant here?

Will address the get_token getting called twice problem in the next commit.

-------------------------------------
author: Meghan Vazquez
date: 2016-10-03 19:12:35.067000000

Patch Set 5:

(1 comment)

Line:150, src/ns_memcached_token.erl -> Well, I'm saying that there's probably no need to allow the same process to call get_token twice without releasing the token first.

-------------------------------------
author: Noe Perry
date: 2016-10-03 20:29:37.737000000

Patch Set 5:

(1 comment)

Line:150, src/ns_memcached_token.erl -> It should be ok to error out the second get_token call right? Currently all the consumers of get_token/release_token APIs are themselves synchronous so we should not hit this scenario. But in an unlikely case if they become asynchronous then the errors will be seen.

-------------------------------------
author: Meghan Vazquez
date: 2016-10-04 19:08:09.090000000

Patch Set 5:

(1 comment)

Line:150, src/ns_memcached_token.erl -> Don't see this addressed.

-------------------------------------
author: Noe Perry
date: 2016-10-05 09:34:00.547000000

Patch Set 5:

(1 comment)

Line:150, src/ns_memcached_token.erl -> Done

-------------------------------------
