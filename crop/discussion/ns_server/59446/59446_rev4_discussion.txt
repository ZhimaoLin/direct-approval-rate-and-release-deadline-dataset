DESCRIPTION

MB-17295: allow pluggable tabs to specify preceding OOTB tab

Prior to this fix, pluggable tabs could only plug in at the end of the
row of tabs. This changes now treats all tabs on the tab bar (whether
out of the box or pluggable) uniformly and additionally allows
pluggable tabs to specify which tab they are after (their preceding tab.)

This will allow the query UI tab to specify an after value of
'admin.data_buckets' and get placed in the desired position on the
tab bar.

Change-Id: I12dd99251070a50e6fd73a8974d2653d4648cd85


COMMENTS

author: Kian Santos
date: 2016-02-04 06:13:09.256000000

Uploaded patch set 4.

-------------------------------------
author: Kian Santos
date: 2016-02-04 06:13:50.399000000

Patch Set 4: Verified+1

-------------------------------------
author: Shaniya Barton
date: 2016-02-04 07:12:14.522000000

Patch Set 4:

See my comment here http://review.couchbase.org/#/c/59457/ otherwise it's ok

-------------------------------------
author: Shaniya Barton
date: 2016-02-04 08:02:12.534000000

Patch Set 4:

(4 comments)

Line:26, priv/public/ui/app/components/mn_pluggable_ui_registry.js -> you don't need this function

Line:50, priv/public/ui/app/components/mn_pluggable_ui_registry.js -> you don't need this

Line:51, priv/public/ui/app/components/mn_pluggable_ui_registry.js -> This line can silently override some other config, so better to give it more uniq name

Line:54, priv/public/ui/app/components/mn_pluggable_ui_registry.js -> var compiled = $compile(mnPluggableTabUtil.getTabTemplate($attrs.tabBarName))($scope);
if (config.after) {      angular.element(document.querySelector(config.after)).after(compiled)
} else {
$element.append(compiled)
}

-------------------------------------
author: Shaniya Barton
date: 2016-02-04 08:03:32.683000000

Patch Set 4:

(1 comment)

Line:54, priv/public/ui/app/components/mn_pluggable_ui_registry.js -> or document.querySelector("#" + config.after)

-------------------------------------
author: Kian Santos
date: 2016-02-04 17:59:21.459000000

Patch Set 4:

(1 comment)

Line:54, priv/public/ui/app/components/mn_pluggable_ui_registry.js -> The thing was, I didn't want to do a full document search - that seems too expensive. Plus, perhaps through some bug some other element has a conflicting ID. Shouldn't happen, but who knows. So I was figuring I'd just want to search the children and test for ID. Old fashioned - sure, but maximally efficient and robust under bugs where someone accidentally introduces a conflicting ID somewhere. 

What do you think?

-------------------------------------
author: Shaniya Barton
date: 2016-02-05 06:56:18.310000000

Patch Set 4:

(1 comment)

Line:54, priv/public/ui/app/components/mn_pluggable_ui_registry.js -> Id must be one per page. That's why we should try to give really uniq id for the tabs. Search by id is not expensive.

-------------------------------------
author: Shaniya Barton
date: 2016-02-05 07:00:08.751000000

Patch Set 4:

From specs:

If the selector matches an ID and this ID is erroneously used several times in the document, it returns the first matching element.

-------------------------------------
author: Shaniya Barton
date: 2016-02-05 07:04:06.349000000

Patch Set 4:

There is $element[0].querySelector()

-------------------------------------
author: Roselyn Villegas Code Review
date: 2016-02-05 20:08:52.542000000

Change has been successfully cherry-picked as 9e7eb75ac986e3e43fbd61995216314d44be65b7

-------------------------------------
