DESCRIPTION

abort Harley Martinitor when ns_orchestrator needs to do some work

This fixes timeouts accessing ns_orchestrator.

Change-Id: I45cd2ea67fcb0e86288c789285b0656ce850a88c


COMMENTS

author: Nathalie Landry
date: 2010-09-20 17:06:29.715000000

Patch Set 1: Verified



-------------------------------------
author: Magdalena Oconnell
date: 2010-09-20 18:24:12.607000000

Patch Set 1: Do not submit

(1 inline comment)

This will cause the orchestrator to crash if you hit failover or rebalance while the Harley Martinitor is running.

Line:211, src/ns_orchestrator.erl -> This should go with the other Harley Martinitor_running events

-------------------------------------
author: Nathalie Landry
date: 2010-09-20 19:25:45.582000000

Patch Set 1: (1 inline comment)

correct. Killing Harley Martinitor is the purpose of this patch.

My thinking (probably incorrect) is that Harley Martinitor should be able to handle any partially cleaned state anyway. And my understanding of janitor's code makes me believe that it's safe to kill it.

The benefit of doing that is getting rid of very bad timeouts caused by long runs of Harley Martinitor.

Line:211, src/ns_orchestrator.erl -> this is to underline that it's essentially same to idle/2.

-------------------------------------
author: Magdalena Oconnell
date: 2010-09-20 20:04:39.435000000

Patch Set 1:

That will cause a 500 error to get sent via REST, though.

-------------------------------------
author: Nathalie Landry
date: 2010-09-20 20:08:21.257000000

Patch Set 1:

In my testing (I added hefty sleep to Harley Martinitor) I haven't seen any errors. Why do you think it'll be sent? We're handling EXITs from child janitor.

-------------------------------------
author: Magdalena Oconnell
date: 2010-09-20 20:22:20.767000000

Patch Set 1: Looks good to me, approved

If you don't see it happening, then I guess it's OK.

-------------------------------------
author: Magdalena Oconnell
date: 2010-09-20 20:22:21.079000000

Change has been successfully cherry-picked as 16ab8385e18fd8f2da62889830bfde08faef8e7f.

-------------------------------------
