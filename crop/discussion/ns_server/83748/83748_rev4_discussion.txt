DESCRIPTION

MB-10409: Alter 'is_good_address' API to handle...

...an IPv6 address as a parameter.

The current implementation looks for the presence of "." to
determine if 'Address' passed in is a hostname. If an IPv6 address
if passed to this function it would fail with a wrong message. The
fix is to take IPv6 address into account and error out appropriately.

Also, if the Couchbase server is configured to run in IPv6 mode
and the user passes in an IPv4 address an approrpiate error message
will be returned.

Change-Id: I4914e0a1ae857676e2d227c3304097d011fbd336


COMMENTS

author: Noe Perry
date: 2017-10-06 23:30:59.530000000

Uploaded patch set 4.

-------------------------------------
author: Hugo Blankenship
date: 2017-10-06 23:31:10.080000000

Patch Set 4:

Build Started http://cv.jenkins.couchbase.com/job/ns-server-test/404/

-------------------------------------
author: Noe Perry
date: 2017-10-06 23:32:30.541000000

Patch Set 4: Verified+1

-------------------------------------
author: Hugo Blankenship
date: 2017-10-06 23:37:55.852000000

Patch Set 4: Well-Formed+1

Permission granted to commit to restricted branch

-------------------------------------
author: Philip Lara
date: 2017-10-09 18:59:12.103000000

Patch Set 4:

(1 comment)

Line:1413, src/misc.erl -> why do we look for ':' if we are in ipv4 mode? This code is unnecessarily strange and difficult to read. I suggest to rewrite it in more strait-forward way.

-------------------------------------
author: Philip Lara
date: 2017-10-09 22:24:34.090000000

Patch Set 4:

(1 comment)

Line:1408, src/misc.erl -> and also in ipv6 mode given Address = "ipv6.com" this function will return {address_not_allowed, "IPv4 address is not allowed...

-------------------------------------
author: Noe Perry
date: 2017-10-10 01:38:26.488000000

Patch Set 4:

(2 comments)

Line:1408, src/misc.erl -> The idea here was to not allow an IPv4 address and even an FQDN which resolves to an IPv4 address when the server has been configured in IPv6 mode. I have missed out to add that in the error message.

I was able to reproduce the problem with ipv6.com that you have mentioned. It seems that ipv6.com resolves to some publicly available server with an IPv4 address and hence the failure. The traceroute output on ipv6.com is the following:

ajit.yagaty @ ~/work/couchbase/vulcan/ns_server (ipv6_changes) $ traceroute ipv6.com
traceroute to ipv6.com (173.198.234.109), 64 hops max, 52 byte packets
 1  terminus (192.168.1.1)  2.383 ms  0.777 ms  0.706 ms
 2  96.120.89.185 (96.120.89.185)  9.210 ms  9.770 ms  8.954 ms
 3  be-20007-sur04.sanjose.ca.sfba.comcast.net (162.151.1.249)  9.274 ms  9.784 ms  10.642 ms
 4  be-331-ar01.hayward.ca.sfba.comcast.net (162.151.79.153)  10.384 ms  12.662 ms  10.656 ms
 5  be-3651-cr01.9greatoaks.ca.ibone.comcast.net (68.86.91.65)  12.710 ms  13.400 ms  14.014 ms
 6  be-11025-cr02.sunnyvale.ca.ibone.comcast.net (68.86.87.157)  13.695 ms  12.934 ms  12.455 ms
...

Line:1413, src/misc.erl -> Will fix this.

-------------------------------------
author: Noe Perry
date: 2017-10-10 18:59:10.921000000

Patch Set 4: -Verified

-------------------------------------
author: Philip Lara
date: 2017-10-10 19:09:35.855000000

Patch Set 4:

(1 comment)

Line:1408, src/misc.erl -> We definitely need better error message for this situation.

-------------------------------------
