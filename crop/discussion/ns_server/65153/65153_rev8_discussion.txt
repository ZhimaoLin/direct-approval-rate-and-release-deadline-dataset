DESCRIPTION

move all .js files under base folder

Change-Id: I9e120dba60705affc2f3db79e655634808f076fc


COMMENTS

author: Shaniya Barton
date: 2016-06-29 08:58:44.756000000

Uploaded patch set 8: Patch Set 7 was rebased.

-------------------------------------
author: Shaniya Barton
date: 2016-06-29 18:12:13.999000000

Patch Set 8: Verified+1

-------------------------------------
author: Kian Santos
date: 2016-06-30 02:07:46.941000000

Patch Set 8:

Yes, I know that initially the template URLs won't change.

I'm arguing (pretty much again) for the idea that base contains only non-UI javascript. These are javascripts without HTML templates. In effect it's our library code. These are: services, filters, constants and template-free directives. 

Then we clone the UI javascripts. Each JS file goes hand in hand with its template HTML file. They sit next to each other in the source tree. It's easy to figure out which template goes with which JS file. 

Main reason: this is really simple.

I'm worried about the strategy of moving all the javascripts out and making it hard for developers to figure out which template goes with the javascript. And -- of course it could be 2 templates that go with the javascript (because spock UI and classic UI may share the same JS but have different HTML.) Now every time we change the JS file we have to test 2 UIs. 

I think it's better to be simpler, which is my point.

-------------------------------------
author: Shaniya Barton
date: 2016-06-30 10:10:22.246000000

Patch Set 8:

I got you point and I agree with you because $scope object could be considered the ViewModel (in MVVM) that is being decorated by a function that we call a Controller and that's why physically Controller should be near template and finally (after first step iteration) we will come to this, only business logic (probably some part) will be common for both UI versions.

Here is why I prefer my option for first step UI iteration in spock:
- fixing bugs in spock, better to fix them in one file
- easy to track specific js files for each of UI versions, I think could be very useful during development
- no duplicates in global search result

"Now every time we change the JS file we have to test 2 UIs."
 - if we are going to change JS file then we make two duplicates for each UI version
 - if we are going to delete JS file then we move it into app-classic folder
 - if we are going to add JS file then we add it into app folder
for app-classic JS always will be the same, so it's not neccesarry to test 2 UIs

"it hard for developers to figure out which template goes with the javascript"
- I would say it hard to figure out which files belongs to the module. This is fee for UI folders separation because physically module's files will be in different folders, so we have to open both of them in order to see whole picture and your words applicable not only to controller <-> template but to service <-> controller as well, so it's double-edged sword.

-------------------------------------
author: Roselyn Villegas Code Review
date: 2016-07-12 04:11:29.482000000

Change has been successfully cherry-picked as e92f6ad0f6d7e37b269fa8b65d46181a1df04bf4 by Kian Santos

-------------------------------------
