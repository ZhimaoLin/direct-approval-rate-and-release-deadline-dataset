DESCRIPTION

Stage 1 of moving towards cmake

This patch moves building of the dependencies from hardcoded
makefiles over to a recursive set of cmakefiles

Change-Id: I2abde640ee9ddc4e91d31a0f45a6af9ef7380cb5


COMMENTS

author: Asher Vang
date: 2014-01-16 14:20:20.484000000

Patch Set 1:

I've built the deps folder on windows by running: 

cmake -G "NMake Makefiles" . 
nmake

And it was building everything successfully (in the deps folder).

On Mac I ran a full build of the entire tree, cluster_run, and played around in the UI

-------------------------------------
author: Asher Vang
date: 2014-01-16 14:21:39.487000000

Patch Set 1:

(oh and the annoying part that the files needs to be specified in the file lists is in order to have make clean work properly... We could drop those and just run git clean -dfx _OR_ define another target that duns rebar clean.. what do you folks prefer?

-------------------------------------
author: Nathalie Landry
date: 2014-01-16 18:25:26.812000000

Patch Set 1: Code-Review-2

I'll need to see final state of this exercise in order to approve this.

And I don't expect any "regressions" in usability. There should be no need to list all .erl files and clean needs to just work.

-------------------------------------
author: Asher Vang
date: 2014-01-16 19:53:40.469000000

Patch Set 1:

As I said in one of the comments is that the only reason for listing the files is in order to make make clean work. I'm not married with cmake, but as long as we have a business decision to support windows we need something that works on windows. cmake is capable of generating makefiles that works for both gnu make and nmake. I guess we could be using hand written makefiles that follows a syntax that both gnu make and nmake supports and invoke rebar from there. From a quick glance the topmost Makefile clearly won't work under nmake. If you like to keep it just using a handwritten makefile I'm more than happy with that as long as it is rewritten to use a syntax that also works under nmake.

-------------------------------------
author: Nathalie Landry
date: 2014-01-16 20:04:53.893000000

Patch Set 1:

Trond I'm not sure I understood what you tried to say in last comment.

But let me note that I'm not aware of any business decision that requires us to use nmake.

-------------------------------------
author: Justice Schneider
date: 2014-01-16 20:18:33.399000000

Patch Set 1:

I think the "business" decision is that Windows needs to be supported well for both developers and customers.

The objective is to use a toolchain that works well on Windows. This excludes automake, autoconf, mingw and cygwin as they work quite badly on Windows. CMake, NMake is fine, and there may be others tools.

As you've rejected Trond's change, it is not clear who will take the responsibility of making this module build properly on Windows now. Is it on your plate now Alk?

One thing is clear - it would be a very unacceptable outcome to require Cygwin or other Unix emulation layers on Windows to build the product in 3.0 which would negate a lot of Trond's efforts.

-------------------------------------
author: Asher Vang
date: 2014-01-16 20:23:15.916000000

Patch Set 1:

I tried to say that we need to have something that allows us to build ns_server on windows. The current situation with using mingw/cygwin is not very pleasant to use on windows. 

We chose cmake since it is able to generate a makefile or project files to use within various IDE's, AND that it works on all our supported platforms. Part of all the work we are doing with these makefile experiences is to make it as simple as possible to build on all our platforms, and to try to use the same build instructions on all platforms. 

When we're done we're supposed to be able to build the system by running the following commands on all platforms:

cmake -G "<NMake/GNU> Makefiles" .
[ng]make

I am not going to force any choice of technology on your module, my only requirement is that I can build it without having to install cygwin on windows (but use nmake instead).

-------------------------------------
author: Asher Vang
date: 2014-02-10 07:14:25.437000000

Abandoned

From what I understand this module will be built by using python in the future

-------------------------------------
