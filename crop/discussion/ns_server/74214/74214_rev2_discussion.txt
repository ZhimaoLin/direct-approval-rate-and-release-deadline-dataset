DESCRIPTION

Enable XATTRs in spock clusters

The idea is that XATTRs are enabled by default in spock clusters, just
like subdoc or other memcached commands that get introduced from time to
time.

The patch is simple: if the cluster is at compat version spock we enable
XATTRs in the memcached config and add it to the bucket capabilities.
XATTRs are also supported on ephemeral buckets as I don't see why they
shouldn't be.

Merging this patch will cause MB-22163 to get reopened and a discussion
will commence on how we can mitigate the impact to write performance
in all use cases. This discussion may lead us to a place where XATTRs
are not enabled by default on all buckets and thus a change to this
patch. However, the best thing at this time is to merge the patch,
reopen the performance ticket and debate how we're going to tackle
it.

Change-Id: I5be8916dfae16c1c9d9781e8bea2499792d089bd


COMMENTS

author: Kian Santos
date: 2017-02-24 19:39:57.284000000

Uploaded patch set 2.

-------------------------------------
author: Kian Santos
date: 2017-02-24 20:45:50.114000000

Patch Set 2: Verified+1

Verified as before.

-------------------------------------
author: Kian Santos
date: 2017-02-24 20:48:15.064000000

Patch Set 2: Code-Review-2 -Verified

Forgot about the config upgrade.

-------------------------------------
author: Kian Santos
date: 2017-02-24 20:52:33.607000000

Patch Set 2: -Code-Review

Oh, of course, I see that it should work. But I'll verify it and run the unit tests.

-------------------------------------
author: Meghan Vazquez
date: 2017-02-24 21:45:35.132000000

Patch Set 2:

(1 comment)

Line:335, src/ns_config_default.erl -> Sorry for nitpicking, but I don't see any value in this synonym to cluster_compat_mode's function with the same name. You should just probably use cluster_compat_mode:is_cluster_spock.

-------------------------------------
author: Kian Santos
date: 2017-02-24 22:28:26.695000000

Patch Set 2:

(1 comment)

Line:335, src/ns_config_default.erl -> I don't consider it nitpicking. :-) I have to create a function of arity 2 - which is_cluster_spock is not. So I decided to follow the example of what was done for ssl_minimum_protocol.

-------------------------------------
author: Meghan Vazquez
date: 2017-02-24 23:10:02.112000000

Patch Set 2:

(1 comment)

Line:335, src/ns_config_default.erl -> I don't understand why you need the function of arity 2. Your function is actually of arity 1.

-------------------------------------
author: Meghan Vazquez
date: 2017-02-24 23:11:46.344000000

Patch Set 2:

(1 comment)

Line:335, src/ns_config_default.erl -> Ok, I see what you mean now. I'd change the argument expansion, but this is also fine.

-------------------------------------
author: Meghan Vazquez
date: 2017-02-24 23:12:31.549000000

Patch Set 2: Code-Review+2

-------------------------------------
author: Kian Santos
date: 2017-02-24 23:13:02.733000000

Patch Set 2:

(1 comment)

Line:335, src/ns_config_default.erl -> expand_memcached_config requires F to be a function of arity 2. If I just use {cluster_compat_mode, is_cluster_spock, []} the memcached_cfg_mgr crashes while building the memcached config ...

line 294
expand_memcached_config({M, F, A}, Params) ->
    M:F(A, Params);

-------------------------------------
author: Kian Santos
date: 2017-02-24 23:14:07.189000000

Patch Set 2:

Thanks for the +2. I just tested offline upgrade and it didn't update the memcached config. Not sure why so investigating which is why I haven't marked it as verified.

-------------------------------------
author: Kian Santos
date: 2017-02-24 23:15:19.924000000

Patch Set 2:

(1 comment)

Line:335, src/ns_config_default.erl -> How would you change the argument expansion? Just to satisfy my curiosity ...

-------------------------------------
author: Kian Santos
date: 2017-02-24 23:59:07.107000000

Patch Set 2: Verified+1

False alarm - I looked at the wrong memcached.json file after the offline upgrade. It works fine. Verifying.

-------------------------------------
