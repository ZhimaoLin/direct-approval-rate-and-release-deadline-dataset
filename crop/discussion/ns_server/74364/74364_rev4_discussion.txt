DESCRIPTION

Invalidate dead lock holders.

We don't expect that to happen, but it's possible if a process get
killed in an unfortunate moment.

Otherwise, if such thing happens, the tables end up in unknown but
consistent state.

A note on testing. It proved to be harder than I expected to write an
automated test for this without deliberately introducing delays in the
code. For that reason there are no automated tests as of now, but I
did test it locally with those delays. I might revisit this later.

Change-Id: I66633fae57717707b6646cc6e755b975af0d36c0


COMMENTS

author: Meghan Vazquez
date: 2017-03-04 03:50:32.410000000

Uploaded patch set 4: Patch Set 3 was rebased.

-------------------------------------
author: Meghan Vazquez
date: 2017-03-04 03:50:37.165000000

Patch Set 4: Verified+1

-------------------------------------
author: Philip Lara
date: 2017-03-04 05:08:03.457000000

Patch Set 4:

(1 comment)

Line:260, src/mru_cache.erl -> Why don't you call erlang:yield() here as well?

-------------------------------------
author: Meghan Vazquez
date: 2017-03-04 05:16:20.286000000

Patch Set 4:

(1 comment)

Line:260, src/mru_cache.erl -> In fact, erlang:yield() doesn't make a lot difference on smp enabled erlang, because there are multiple schedulers running different processes at the same time. 

But the idea here was as follows. If there's not much contention, there's a good chance that we can take the lock almost immediately, after couple of attempts. Calling yield would slow down the caller in such case. And only if we fail in this fast loop do we start to yield.

It's a certain amount of speculation involved here. It's still in my plans to at least micro-benchmark all of this once I'm done with other stuff.

-------------------------------------
author: Philip Lara
date: 2017-03-04 05:22:04.953000000

Patch Set 4: Code-Review+2

-------------------------------------
