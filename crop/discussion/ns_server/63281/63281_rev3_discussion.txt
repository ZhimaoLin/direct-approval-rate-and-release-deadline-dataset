DESCRIPTION

MB-16821: support enabling of password autocomplete in UI

Disabling autocomplete is controversial. Some folks feel that
requiring users to enter passwords is actually an anti-security practice.
Others feel that the password managers that ship with browsers by default
are not very secure and folks should copy-and-paste from standalone
password protected password managers. Where I think Couchbase should
be is enabling autocomplete is a reasonable configuration option
but that it should be off by default. In the future we can always
change this default.

This change introduces a new config key: ui_disable_autocomplete
which defaults to an application env var of the same name, and
if that's not set defaults to true.

This allows standard configuration via the static_config and
also via an application env var passed during ns_server start.
cluster_run uses the latter, which means that engineers using this
mechanism to start their clusters get autocomplete by default.

The way that this env var is communicated to the browser is via
a new internal REST API _uiEnv.

Change-Id: Id7a27a193570c685a3755c65f48cb596de887381


COMMENTS

author: Kian Santos
date: 2016-04-29 21:29:40.622000000

Uploaded patch set 3: Patch Set 2 was rebased.

-------------------------------------
author: Kian Santos
date: 2016-04-29 21:30:24.605000000

Patch Set 3: Verified+1

-------------------------------------
author: Shaniya Barton
date: 2016-05-02 17:58:24.992000000

Patch Set 3:

(3 comments)

Line:31, priv/public/ui/app/components/mn_env.js -> you can use angular built in $http({cache: true})

Line:20, priv/public/ui/app/components/directives/mn_autocomplete_off.js -> We previously had same discussion. I mean Services vs Scope in directive. I think that directives shouldn't depends on services it making directive less re-usable. This code looks fine for this particular case but in future I want to revise all directives in order to move all dependencies from services in scope.

For example you can expose mnEnv in app.run function like

$rootScope.ENV = mnEnv.export;

and then use it anywhere in scope

Line:49, priv/public/ui/app/app_config.js -> A better place for this could be .state('app', {resolve.... all mn-auto.

All mnAutocompleteOff will be initialised after resolve of app state so you don't need this entire onBefore

-------------------------------------
author: Shaniya Barton
date: 2016-05-02 18:14:38.154000000

Patch Set 3:

(1 comment)

Line:20, priv/public/ui/app/components/directives/mn_autocomplete_off.js -> Actually don't bother with this, it's just another way to do the same.

-------------------------------------
author: Shaniya Barton
date: 2016-05-02 18:16:20.873000000

Patch Set 3:

(1 comment)

Line:20, priv/public/ui/app/components/directives/mn_autocomplete_off.js -> although $rootScope.ENV could be use full for Pluggable guys

-------------------------------------
author: Kian Santos
date: 2016-05-02 18:17:12.691000000

Patch Set 3:

(2 comments)

Line:20, priv/public/ui/app/components/directives/mn_autocomplete_off.js -> That too.

Line:20, priv/public/ui/app/components/directives/mn_autocomplete_off.js -> Well I think you are correct. The advantage of depending on global scope state is that we can make it be the case that this code doesn't fail if the environment service isn't available - which is better for reuse. I'm ok with making the change.

-------------------------------------
author: Kian Santos
date: 2016-05-02 18:18:36.635000000

Patch Set 3:

(1 comment)

Line:49, priv/public/ui/app/app_config.js -> Yes, great suggestion. Will do.

-------------------------------------
author: Roselyn Villegas Code Review
date: 2016-05-24 22:13:13.002000000

Change has been successfully cherry-picked as 485dcb13f49080e5e84dcad76433b256c488ccd7 by Meghan Vazquez

-------------------------------------
