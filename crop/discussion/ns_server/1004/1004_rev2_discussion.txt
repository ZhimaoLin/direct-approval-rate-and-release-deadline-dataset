DESCRIPTION

Bug 1658: Eliminate the global singleton supervisor

Previously, whenever a netsplit healed, the global singleton
supervisor's children would be killed at random, as would the global
singleton supervisor itself. This could occasionally result in a
condition where the global singleton supervisor was not registered but
some of its children were, which would put the whole cluster in a
really bad state.

The previous fix for this problem was to have a watchdog that would
kill the global singleton supervisor if it was found to be
unregistered, but a more robust fix is to eliminate the global
singleton supervisor altogether, making each process that wants to be
in only one place in the cluster deal with that itself. Since the code
required to do that is tiny, this works well.

Like the global singleton supervisor, each bucket's orchestrator and
the doctor will each attempt to start and register globally, and if
the already_started error is returned, it will spawn a process that
just monitors the existing process and exits when that process exits,
causing the supervisor to restart it.

Since there is nothing globally registered that needs to run on the
same node as anything else that's globally registered, this works out
well.

Change-Id: Id8a9229454a7e2abae919a0c44a16c3f186c841e


COMMENTS

author: Magdalena Oconnell
date: 2010-07-07 00:10:17.849000000

Uploaded patch set 2.

-------------------------------------
author: Nathalie Landry
date: 2010-07-08 17:24:53.189000000

Patch Set 2: Verified; Looks good to me, approved



-------------------------------------
author: Nathalie Landry
date: 2010-07-08 17:24:53.399000000

Change has been successfully cherry-picked as f146aea4f582addc8d5f2a47546e7d523156a62f.

-------------------------------------
