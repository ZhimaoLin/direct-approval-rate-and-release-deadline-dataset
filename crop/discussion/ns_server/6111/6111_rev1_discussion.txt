DESCRIPTION

optimized config replication

Most significant change is in ns_node_disco_rep_events to queue config
replication instead of waiting for it's completion. This makes sure
that ns_config_events is not stuck on replication, so it's subscribers
are notified in time.

This leads to queueing of changes in ns_config_rep mailbox. Which we
also optimize a bit by squashing all available changes.

Change-Id: If1646d7e3c48e9b650e3085c18215fb2ad36b8e7


COMMENTS

author: Nathalie Landry
date: 2011-05-10 00:14:31.447000000

Patch Set 1: Verified



-------------------------------------
author: Nora Conway
date: 2011-05-10 00:57:41.726000000

Patch Set 1: (2 inline comments)



Line:36, src/ns_node_disco_rep_events.erl -> Not sure this is right -- well, not sure the old code was right, either.  But, the old code definitely pessimistically pulled and pushed a lot, seemingly on any event.

The new code reverses this (push then pull) and optimistically does it a lot less.

One imagined effect: the old code would pessmistically heal remote nodes that had a short hiccup (where short < some erlang timeout).

Line:185, src/ns_config_rep.erl -> This seems more than a (local) optimization in making this asynchronous instead of the previous synchronous call.

-------------------------------------
