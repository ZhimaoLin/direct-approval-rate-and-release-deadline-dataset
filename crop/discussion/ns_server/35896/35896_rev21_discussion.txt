DESCRIPTION

MB-10086: cbcollect_info upload support.

Created some new options that allows a user to upload the log directly:

--upload
--upload-host
--customer
--ticket

Using the requests library to do the upload.

Created --script to allow erlang to drive cbcollect.

Change-Id: Ie2dcd0be2c45ac031e949be0f4c8564ef8fe9668


COMMENTS

author: Darian Blanchard
date: 2014-05-13 18:36:38.270000000

Uploaded patch set 21.

-------------------------------------
author: Alex Mcmahon
date: 2014-05-14 02:44:44.028000000

Patch Set 21:

(9 comments)

200 lines of code in main routine is probably overkill. It's hard to navigate through the source code now.

Also it makes sense to unify stdout/stderr/logging. All these repeating "if QUIET", "script_output", "log_progress" are a little bit messy. Generic helpers rock.

Line:200, cbcollect_info -> What if it fails?

You don't handle that and most importantly will never close f/mm.

Line:204, cbcollect_info -> do you need res?

Line:215, cbcollect_info -> In case of unlikely `f = open()` failure you will try to close something that doesn't exist.

Line:561, cbcollect_info -> I'd recommend provide some explanation for this option.

It's not obvious that script == quiet.

Line:587, cbcollect_info -> unnecessary initialization.

Line:588, cbcollect_info -> redundant brackets.

Line:598, cbcollect_info -> Kind of confusing:

details: Missing option(s): --upload-host value. --customer value.

Line:607, cbcollect_info -> This is weak validation. I honestly speaking I'm not sure that it's required.

Also think about [\w./:].

Line:619, cbcollect_info -> What about

    if scheme != "https"

?

-------------------------------------
author: Ashlee Kent
date: 2014-05-14 10:46:22.188000000

Patch Set 21:

(7 comments)

@Artem - Thanks for the review - I've addressed most of them (see inline).

Regarding logging - Patrick was trying to minimise changes to cbcollect_info - there's a bunch of general structure / existing code which isn't necessarily in the most modern Python style and changing it would require some more widespread changes. Given there doesn't appear to have any regression tests for cbcollect_info we thought it was prudent to minimise changes to the core functionality, and keep the uploading code separate.

Line:200, cbcollect_info -> Done. Note this isn't as clean as it would be in python 2.6+ due to lack of "with open XXX as f:".

Line:204, cbcollect_info -> Done

Line:215, cbcollect_info -> Done

Line:561, cbcollect_info -> This is deliberately not documented as it is meant to be an internal-only option.

Line:598, cbcollect_info -> Could you elaborate? This seems pretty self-explanatory to me. Could you suggest what you would prefer?

Line:607, cbcollect_info -> This is really just the first-level check to ensure we are giving something to url parse.urlsplit() which it can handle - i.e. something with a dot in it. For more complex strings (such as your example) they are expected to be caught by url parse.

Line:619, cbcollect_info -> Done

-------------------------------------
author: Ashlee Kent
date: 2014-05-14 10:54:18.593000000

Patch Set 21:

Sorry - previous comment was directed at Pavel!

-------------------------------------
