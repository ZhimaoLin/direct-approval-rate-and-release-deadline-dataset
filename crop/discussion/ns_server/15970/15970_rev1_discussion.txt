DESCRIPTION

Add test suite for UI document editing and memcached consistency. Also remove rev handling from UI CRUD document handling.

Change-Id: I2aae208ef7f51cb0713bd7364947f4a2f24de600


COMMENTS

author: Jordan Ballard
date: 2012-05-14 17:05:11.887000000

Patch Set 1: Abandoned

gonna split this into two commits

-------------------------------------
author: Nathalie Landry
date: 2012-05-14 18:37:47.691000000

Patch Set 1:

BTW I think nodejs testsuite is ok, but I'm note sure TAP-based tests make any sense at all.

If we're going with our own integration tests we need them to be flexible. Particularly here's my list of requirements for any test framework:

* I need to be able to run one specific test for case when I'm debugging something

* I need to be able to run tests in parallel

* I don't care about BDD-style matchers by I need reasonable battery of assertXXX things or anything else that allows tests to fail in "meaningful" way. E.g. if something doesn't equal it's expected value I need to this thing to print out both expected and actual value and state where things failed.

If this particular tap-based framework can give me this I'm with tap.

Also I really don't want node-modules in top level directory. Either we should not "vendor" it at all or we need to hide them perhaps below node-tests directory.

-------------------------------------
author: Jordan Ballard
date: 2012-05-14 19:01:23.812000000

Patch Set 1:

It'll be easy to clean up the node test dependencies.

If you want detailed output, you can run

node test/memcacheMenalausConsistency.js 

and

node test/uiDocumentEditing.js

Or you can run it with tap --tap.

I've named all my assertions, so the tests are pretty easy to work with.

-------------------------------------
