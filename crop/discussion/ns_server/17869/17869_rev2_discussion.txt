DESCRIPTION

CBD-120: stats collection within XDCR manager and replicator

WIP, do not review

Change-Id: I17ca544c1d599a40487b3d5ca82454bdf401db97


COMMENTS

author: Macie Morton
date: 2012-07-04 22:49:21.699000000

Uploaded patch set 2.

-------------------------------------
author: Macie Morton
date: 2012-07-04 23:24:16.497000000

Patch Set 2:

Filipe, thanks for early review. Your comments addressed in PS2

-------------------------------------
author: Porter Oconnor
date: 2012-07-05 14:25:14.698000000

Patch Set 2: (7 inline comments)

Brief look seems correct.
Only some code parts that can be greatly simplified and reduced.

Line:117, src/xdc_replicator.hrl -> Did you forget to remove it?

Line:201, src/xdc_rep_manager.erl -> Useless comment, given name of function called below is very explicit.

Line:455, src/xdc_rep_manager.erl -> You can avoid these lines getting stuff from CRep0:

CRep = CRep0#rep{
    doc_id = XDocId,
    (.....)
}

It's safer as well in case you forget to copy any field or later new fields are added to the #rep record, etc.

Line:474, src/xdc_rep_manager.erl -> you can just do #rep_stats{}
Default value for all fields is 0.

Line:639, src/xdc_rep_manager.erl -> #rep_stats{} can be used. Default value for all fields is 0.

Line:648, src/xdc_rep_manager.erl -> This sum code is done by xdc_rep_utils:sum_stats/2.
Can be reused, so this chunk code would be come a single line:

AggStats = lists:foldl(fun xdc_rep_utils:sum_stats/2, #rep_stats{}, StatList)

Line:141, src/xdc_replicator.erl -> You don't need it.
Can always get it from the state:

(State#state.rep_details)#rep.stat_table

It it's too long to type, you can use a module-local macro:

-define(STATS_TABLE(State), ((State#state.rep_details)#rep.stat_table)).

-------------------------------------
author: Macie Morton
date: 2012-07-05 21:54:49.710000000

Patch Set 2:

Thanks a lot Filipe. Did learn something from your comment. Addressed your comment in ps3.

-------------------------------------
