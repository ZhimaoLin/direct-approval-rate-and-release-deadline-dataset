DESCRIPTION

reduce amount of requests: mnPoller superseded by mnPoolDefault events

Taking into consideration the fact that the mnPoolDefault
and mnTasksDetails are always relevant we can use cached
value of those services throughout the application. All we need
to know when the change is happened and then recalculate new value,
that is why we use broadcast in mnAdminController.

It reminds how Cell based application works but instead of reactive
values we use angular events. I would like to mention that we could use
scope.$watch instead of scope.broadcast/scope.on like
scope.$watch("poolDefault.serverGroupsUri", function () {
   //do something when serverGroupsUri changed
});
but I don't think that we should because:
1) it dependents on data in scope
2) we already use promiseHelper.broadcast in some places

benefits:
1) reduced amount of requests to the server
2) we know exactly when to fetch new data form the server instead of dumb periodic polling
3) now all tabs are sync, because mnPoolDefault is sync.

There is new guy called debounceAndSubscribeOnRootScopeEvents. It's using
lodash debounce because events can be triggered almost at the same time
in case when subscriber subscribed on couple of events, so debounce
allows only one event during some period, e.g. 1 sec in our case.

Change-Id: I2a79ed7799cc34885e12d5e775a4adfd86542950


COMMENTS

author: Shaniya Barton
date: 2016-03-18 13:07:27.537000000

Uploaded patch set 11.

-------------------------------------
author: Roselyn Villegas Code Review
date: 2016-03-22 04:59:49.360000000

Change has been successfully cherry-picked as c885120e24d3ada968475f9508210c3aae16dab3

-------------------------------------
