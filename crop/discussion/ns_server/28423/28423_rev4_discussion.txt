DESCRIPTION

MB-8460 kill leftover _replicator database

- we assume that if the cluster is not provisioned
  and _replicator database exists and contains more
  than 0 records, then this database is a leftover
  from some previous installation that had the same
  directory setup for its data files.
- to prevent crashes in xdcr and orphan replication
  to be displayed in the UI we need to delete such
  database
- this code is executed from xdc_rep_manager:init
  since xdc_rep_manager preceeds xdc_rdoc_replication_srv
  in the supervisor spec
- xdc_rdoc_replication_srv now assumes that correct _replicator
  database is created by xdc_rep_manager and will
  not try to create it itself

Change-Id: I7dd8c7b7fa70c0a74a0bdc8d8c2128595ef7e0be


COMMENTS

author: Philip Lara
date: 2013-08-21 21:41:26.069000000

Uploaded patch set 4.

-------------------------------------
author: Philip Lara
date: 2013-08-21 21:41:55.056000000

Patch Set 4: Verified+1

-------------------------------------
author: Meghan Vazquez
date: 2013-08-21 21:45:59.997000000

Patch Set 4: Code-Review+2

-------------------------------------
author: Macie Morton
date: 2013-08-21 21:50:09.940000000

Patch Set 4:

(1 comment)

Sorry, I missed inline comment in previous patchset. Now it should be OK.

Line:225, src/xdc_rep_manager.erl -> what is the consequence that the deletion failed? I saw you throw an error in previous patchset 1, but it is removed

false ->
            throw({could_not_delete_replicator_db, RV})

-------------------------------------
author: Philip Lara
date: 2013-08-21 21:58:57.978000000

Patch Set 4:

(1 comment)

Line:225, src/xdc_rep_manager.erl -> if the delete will fail the code will crash in the following line:
ok = maybe_cleanup_replicator_db(DbName)

-------------------------------------
author: Macie Morton
date: 2013-08-21 22:00:42.204000000

Patch Set 4: Code-Review+2

-------------------------------------
