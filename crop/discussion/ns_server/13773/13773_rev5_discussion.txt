DESCRIPTION

Connection pooling of ns_memcached instances

Currently there's only one ns_memcached data process per bucket.
However, with xdcr, there will likely be many concurrent replication
streams coming into a given node, where they'll end up getting
serialized due to only one ns_memcached process serving their
requests. This change set makes it so that there can be multiple
processes for serving data requests. Their number is configurable by
means of an environment variable.

Change-Id: Ie81fb223324f3ca789f54568d09853fffcb9eb2e


COMMENTS

author: Tatiana Sheppard
date: 2012-04-10 19:00:30.117000000

Uploaded patch set 5.

-------------------------------------
author: Nathalie Landry
date: 2012-04-10 21:57:38.913000000

Patch Set 5: I would prefer that you didn't submit this

(1 inline comment)

I disagree with 'generic' handling of multiple stats instances.

It looks ugly and we don't want somebody to try stats instances count to be set to 2 and have problem because bucket will be deleted in both.

How about something radically simpler? Just have some number of instances and direct stats to 0 and direct data to 1..N.

Terminate of 0-th instance will then delete bucket. Terminate of other instances will do nothing and I'd like something closer to brutal_kill from supervisor when shutting down them.

Line:397, src/ns_memcached.erl -> this will not work. Take a look is_data definition

-------------------------------------
author: Roselyn Villegas Code Review
date: 2012-04-20 23:51:42.640000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
