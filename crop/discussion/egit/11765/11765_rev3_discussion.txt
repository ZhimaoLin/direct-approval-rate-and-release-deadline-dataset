DESCRIPTION

Ambiguous parameter naming

What GitFileRevision really expects is a path, not a file name. Most
usages of the constructors already passed in a file path... but the
parameter naming led to a number of clients to use a file name, which
creates FileRevisions with no resolvable path. This fixes all
ambiguous parameter names and usages.

Change-Id: Id597d427555f71a6b4f422acb06a1faf26c796bd


COMMENTS

author: Gustavo Green
date: 2013-04-15 12:42:49.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2013-04-15 12:47:37.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/egit.gerrit/4376/ 

-------------------------------------
author: Brenden Conley
date: 2013-04-15 13:11:17.000000000

Patch Set 3: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/egit.gerrit/4376/ : SUCCESS

-------------------------------------
author: Juliet Cantu
date: 2013-04-15 14:56:18.000000000

Patch Set 3:

It would be wise to add test for the following cases

workspace-dir/subdir/project/path
workspace-dir/subdir/project1/project2/path
non-workspace-dir/project/path
non-workspace-dir/project/project/path

-------------------------------------
author: Gustavo Green
date: 2013-04-16 07:32:28.000000000

Patch Set 3:

Robin,

I don't really understand what you mean by "add test for these cases"?

The only code within EGit itself that depends on the URI returned by the file revisions is the editor input, and it is only used as a displayed String.

I realized the inconsistency from my end as I use this path to determine where the file is and resolve "other" URIs that are relative to it. Whether I get a file system absolute path or a workspace relative path does not really cause any issue... as long as the path is resolveable (which is not the case for git repository relative paths for example).

The javadoc of that method tells us the expected result is "the URI of the file to which this state is associated or <code>null</code> if the file does not have a URI." ... I believe that a file system absolute path is indeed the best we can use to answer that.

-------------------------------------
author: Juliet Cantu
date: 2013-04-23 08:04:34.000000000

Patch Set 3: Verified

Test cases clarify how APIs are supposed to be called, and of course the expected result. This is apparently needed 

It's not just display, e.g. CommitFileRevision will not work if it does not get right path.

-------------------------------------
author: Danika Greer
date: 2013-07-09 22:51:37.000000000

Patch Set 4: Patch Set 3 was rebased

-------------------------------------
