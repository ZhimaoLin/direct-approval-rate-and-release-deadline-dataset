DESCRIPTION

Improve abysmal performance of commit info update in history view

When the number of branches is large, the large amounts of
RevWalk.isMerge translates a gross a amount calls to
MergeBaseGenerator.carryOntoOne with deep stacks. For 8200 branches,
e.g. if you fetch refs/changes/* from Gerrit, this translates
to 50 million calls to carryOntoOne.

In real that is ~3.3 seconds for a repo with the large number
of refs and .06 for a normal clone.

Take a simpler approach and scan every branch until we find the
selected commit or one of it's parents. After this fix info update
with the large refs set is about .5 seconds. For normal clones
there is no difference.

Furthe improvve by using the heuristic that says commit times should
be increasing for each new commit and therefore do not examine branches
whose tip commit is older than the commit we are lookig at. Allow for
a clock skew of 24 hours. After this getBranches() is down to 0.35
seconds.

Change-Id: I6de60760f1644b4e968c7b0caeffcc0007b2da33


COMMENTS

author: Juliet Cantu
date: 2011-12-30 06:42:52.000000000

Patch Set 1:

Moved from http://egit.eclipse.org/r/#change,4738

-------------------------------------
