DESCRIPTION

[syncView] Simplify operations on change actions

Simplify operations when repository changed and resource changed events
occurs.

Bug: 358898
Change-Id: I8ace9413981f38435ce34cf540933aaddc654d6b
Signed-off-by: Leslie Stephenson xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2011-10-24 21:14:51.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/egit.gerrit/1805/ 

-------------------------------------
author: Brenden Conley
date: 2011-10-24 21:29:46.000000000

Patch Set 1: Build Successful

Build Successful 
 
https://hudson.eclipse.org/sandbox/job/egit.gerrit/1805/ : SUCCESS

-------------------------------------
author: Jaylon Avila
date: 2011-10-25 12:35:21.000000000

Patch Set 1: I would prefer that you didn't submit this

Marker changes are still causing slowdowns. Or is this patch meant to address a different symptom of bug 358898?

-------------------------------------
author: Leslie Stephenson
date: 2011-10-25 12:48:47.000000000

Patch Set 1:

What do you mean by "marker changes"?

-------------------------------------
author: Jaylon Avila
date: 2011-10-25 13:07:52.000000000

Patch Set 1:

> What do you mean by "marker changes"?

The breakpoint addition/removal problem described by the first comment on bug 358898.

-------------------------------------
author: Jaylon Avila
date: 2011-10-25 13:32:53.000000000

Patch Set 1:

I'm also seeing a new NPE that's caused by this change due to resource change events coming from projects that aren't known to EGit.

java.lang.NullPointerException
	at org.eclipse.team.core.subscribers.Subscriber.refresh(Subscriber.java:463)
	at org.eclipse.egit.core.synchronize.GitSubscriberMergeContext.handleResourceChange(GitSubscriberMergeContext.java:153)
	at org.eclipse.egit.core.synchronize.GitSubscriberMergeContext.access$1(GitSubscriberMergeContext.java:141)
	at org.eclipse.egit.core.synchronize.GitSubscriberMergeContext$2.resourceChanged(GitSubscriberMergeContext.java:77)
	at org.eclipse.core.internal.events.NotificationManager$1.run(NotificationManager.java:291)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.core.internal.events.NotificationManager.notify(NotificationManager.java:285)
	at org.eclipse.core.internal.events.NotificationManager.broadcastChanges(NotificationManager.java:149)
	at org.eclipse.core.internal.resources.Workspace.broadcastPostChange(Workspace.java:395)
	at org.eclipse.core.internal.resources.Workspace.endOperation(Workspace.java:1530)
	at org.eclipse.core.internal.resources.Workspace.buildInternal(Workspace.java:531)
	at org.eclipse.core.internal.resources.Workspace.build(Workspace.java:422)
	at org.eclipse.jdt.internal.ui.util.CoreUtility$BuildJob.run(CoreUtility.java:165)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:54)

-------------------------------------
author: Jaylon Avila
date: 2011-10-25 13:49:13.000000000

Patch Set 1: (3 inline comments)



Line:69, org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSubscriberMergeContext.java -> IResourceDelta.CONTENT is not a kind constant, as illustrated by the value of ALL_WITH_PHANTOMS.

Line:74, org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSubscriberMergeContext.java -> This assumption is invalid, resource change events can come from multiple projects spread across multiple repositories and also projects that aren't even under version control.

Line:75, org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSubscriberMergeContext.java -> This means that the first repository of a valid resource that is encountered will be reused for all other resources iterated over afterwards even if the resource being iterated over is a) versioned under a different Git repository or b) not even under version control.

-------------------------------------
author: Leslie Stephenson
date: 2011-10-25 14:33:57.000000000

Patch Set 1: (3 inline comments)

I've done a quick test with adding brake points in java editor, and it turns out that resource changed event isn't propagated at that point (I've just put a brake point in GitSubscriberMergeContext:65 and jvm didn't stop).

Line:69, org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSubscriberMergeContext.java -> Done

Line:74, org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSubscriberMergeContext.java -> Done

Line:75, org.eclipse.egit.core/src/org/eclipse/egit/core/synchronize/GitSubscriberMergeContext.java -> Done

-------------------------------------
