DESCRIPTION

Pull with rebase: show dialog if there are uncommitted changes

This is already implemented for rebase.

In case of a pull from multiple repositories there are now several
dialogs in case of uncommitted changes. This could be improved.

Bug: 425169
Change-Id: Ibcac373f942b22f6b4ed1ac2fcd7c0a2054d5224
Also-by: Carlie Harper xxx@xxx.xxx
Signed-off-by: Kaden Henson xxx@xxx.xxx

COMMENTS

author: Kaden Henson
date: 2014-01-22 18:22:43.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2014-01-22 18:22:49.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/egit/job/egit.gerrit/5488/

-------------------------------------
author: Kaden Henson
date: 2014-01-22 18:32:02.000000000

Patch Set 2:

This change is based on patch set 1 and tries to improve handling multiple repositories.

When there are multiple repositories that need a clean working copy before a successful pull can be performed, the dialog to stash/reset/etc. for the repositories are now opened one after another, instead of all at the same time.

The pull result dialog now waits for all pulls to finish (including those that were retried with a cleaned working copy), to present the results for all repositories in one dialog.

-------------------------------------
author: Brenden Conley
date: 2014-01-22 18:38:02.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/egit.gerrit/5488/ : SUCCESS

-------------------------------------
author: Danika Greer
date: 2014-04-06 14:01:51.000000000

Patch Set 2:

(4 comments)

Line:147, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java -> Could you extract the body of this into its own method? It's not very readable here.

Line:162, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java -> Hm, could we increment inside handleUncommittedChanges, preferably before calling start() on the nested pullOperationUI?

Line:193, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java -> How about instead of overriding done here, adding a variant of the start method where you can pass a custom IJobChangeListener? That way, it doesn't need to be overriden and is clearly separate.

Line:197, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java -> Isn't it possible that results is concurrently modified? (Not sure by which thread done() is invoked.)

-------------------------------------
author: Kaden Henson
date: 2014-04-07 17:01:28.000000000

Patch Set 2:

(4 comments)

Line:147, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java -> Done

Line:162, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java -> Done

Line:193, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java -> Done. Indeed that's much clearer.

Line:197, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/pull/PullOperationUI.java -> Done. Switched to a thread-safe map implementation.

-------------------------------------
