DESCRIPTION

Exploit command framework in EGit

Bug: 313589
Bug: 306459
Bug: 314096

We should not use the (internal anyway) class TeamAction in order to
implement our actions. We still have to contribute Actions as
Object contributions in the action framework so that they
appear in the Team context menu, but we should
put the implementing code into command handlers
which can then be re-used, for example between the team context
menu actions and the command contributions used in the 
Git Repository view. The actions are just lightweight objects that
delegate their run() method to the command.

In addition, this is a prerequisite for adding key bindings (it
is possible to add a command id to the contributed actions using the 
"definition id" feature of the corresponding extension point; the
key binding (if found) defined for that command will then automaticall
be displayed in the context menu).

This only the first step which splits the current actions contributed
to the team menu into a lightweight action part and a command handler part
which is doing the actual work. The next step would be to weed out
the double implementations in the Git Repositories view and either use
the handler defined here or use a second set of handlers and make use
of the "enabledWhen" feature of the "handler" extension point to enable
the correct handler depending on the workbench selection.

In a future step, key bindings could be added to the commands.

Change-Id: I910f234e8880bc2e2fbfbd495ac97b63967a38b9
Signed-off-by: Willow Cantrell xxx@xxx.xxx

COMMENTS

author: Willow Cantrell
date: 2010-06-29 11:37:12.000000000

Uploaded patch set 2.

-------------------------------------
author: Jaylon Avila
date: 2010-06-29 12:27:10.000000000

Patch Set 2: (4 inline comments)

I just clicked a few random files. I will try to do a more thorough review later this week.

Line:1, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/ActionCommands.java -> Please add a license header.

Line:156, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RepositoryActionHandler.java -> If you have an ExecutionEvent, you can do...

HandlerUtil.getCurrentSelection(executionEvent);

Line:238, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RepositoryActionHandler.java -> Matthias, you can use HandlerUtil.getActiveShell(event); instead. Note that null may be returned or you can swap it with getActiveShellChecked(ExecutionEvent) instead.

Line:248, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/actions/RepositoryActionHandler.java -> Matthias, you can use HandlerUtil.getActivePart(event); instead. Note that null may be returned or you can swap it with getActivePartChecked(ExecutionEvent) instead.

-------------------------------------
author: Jaylon Avila
date: 2010-06-29 12:32:43.000000000

Patch Set 2:

HandlerUtil's "checked" methods throws an ExecutionException though that is "valid" because an IHandler's execute(ExecutionEvent) method does declare that it can throw an ExecutionException so you can propagate the exception upwards if you wish.

So feel free to use the "checked" method if a 'null' return value will cause problems.

-------------------------------------
