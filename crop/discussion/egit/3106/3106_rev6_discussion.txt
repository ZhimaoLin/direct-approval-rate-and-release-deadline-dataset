DESCRIPTION

[RFC] Add a 'Staging' view

Git's staging area is one of its most powerful features. This view
provides users with the ability to drag-and-drop files between
nodes to place modified or untracked files into the staging area.
Such an operation would be synonymous to adding the modified files
to the index and tracking the untracked files. Other operations
like committing is also possible from the view's context menu.

Requires jgit change I43c13eb72a44f80135c93525fce0c0280b0e64a2 for
conflict support in IndexDiff

Change-Id: I7d78aff4db32d864ac0410a178bad149c45b6440
CQ: 5115
Bug: 313263
Also-by: Jaylon Avila xxx@xxx.xxx
Also-by: Douglas Trujillo xxx@xxx.xxx


COMMENTS

author: Imani Waller
date: 2011-05-04 13:52:38.000000000

Uploaded patch set 6.

-------------------------------------
author: Imani Waller
date: 2011-05-04 13:57:47.000000000

Patch Set 6: I would prefer that you didn't submit this

This patchset removes the original implementation from Remy and just leaves the new gitx style code.

Also adds sorting for filename entries, displays the selected repository and its state and add support for git repository view selections.

There is also the beginnings of drag and drop support between working tree and index.

-------------------------------------
author: Brenden Conley
date: 2011-05-04 13:58:02.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/sandbox/job/egit.gerrit/618/ 

-------------------------------------
author: Brenden Conley
date: 2011-05-04 14:05:13.000000000

Patch Set 6: I would prefer that you didn't submit this

Build Unstable 
 
https://hudson.eclipse.org/sandbox/job/egit.gerrit/618/ : UNSTABLE

-------------------------------------
author: Douglas Trujillo
date: 2011-05-04 15:46:41.000000000

Patch Set 6: (4 inline comments)

I uploaded another iteration for the mockup in bug 313263

Line:23, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagedNode.java -> maybe better "StagedEntry" ? "Node" sounds like tree-ish to me (though I am not a native English speaker).

Line:132, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingView.java -> I don't like these type prefixes, modern IDEs easily show the type without polluting the source code. Also don't use underscores in variable names. Instead we prefer readable names (or very short names for variables only used locally within the next few lines).

Line:346, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingView.java -> do we need proper exception handling here ?

Line:354, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingView.java -> yes

-------------------------------------
author: Imani Waller
date: 2011-05-05 03:54:53.000000000

Patch Set 6: (1 inline comment)

That screen shot looks good.  Do you think its preferable or we should just have both accessible by a menu option?

Line:346, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/staging/StagingView.java -> What is correct here?  Sorry this is my first attempt with an eclipse plugin.

-------------------------------------
author: Douglas Trujillo
date: 2011-05-05 08:59:23.000000000

Patch Set 6:

I think this is the preferred layout. So let's start with this and only add options when this seems to be necessary after the new view has been used in the wild for a while. 

In a later step we should add another gitx-ish diff view enabling staging and unstaging of individual hunks (equivalent to git add -i). This could probably reuse the diff view implementation of Kevin's new commit viewer which has been integrated into the History View context menu yesterday. 

The width of the commit message pane when resizing the view should be limited to the width signaled by the vertical line showing where the automatic wrapper will start wrapping the lines and the file path panes should grab all remaining horizontal space. This way we gain maximum width for the typically lengthy file paths.

-------------------------------------
