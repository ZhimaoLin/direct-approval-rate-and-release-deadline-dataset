DESCRIPTION

[historyView] Hide additional Refs by default

The normal user is not interested in Refs like FETCH_HEAD, ORIG_HEAD
etc. when using the HistoryView. However, these Refs can pollute the
view as they can not be hidden independently if "Show All Branches" is
active.

The additional Refs are now hidden by default and the user can have
them displayed by checking the Show->Additional Refs menu item toggle
button. The HEAD Ref is always shown independent from this switch.

The toggle was also added to the History Preference page (along with
the "Show all Branches and Tags" toggle).

When the user does an import from Gerrit and selects either "Update
FETCH_HEAD only" or "Checkout FETCH_HEAD" and the toggle is off,
a checkbox will be shown informing the user about this fact and adding
the possibility to change this toggle during the course of the fetch.

Change-Id: I2b5df21e88ab7015012ef670de33819bd65de037
Signed-off-by: Willow Cantrell xxx@xxx.xxx


COMMENTS

author: Willow Cantrell
date: 2012-02-07 08:09:06.000000000

Uploaded patch set 6.

-------------------------------------
author: Zachary Orozco
date: 2012-02-07 09:24:07.000000000

Patch Set 6: I would prefer that you didn't submit this

I have problems with this. I agree that the display of ORIG_HEAD, FETCH_HEAD and MERGE_HEAD should be avoided for the 99% of the cases. But I would say that they are nearly always important to be displayed when the point to objects which are otherwise unreferenced. My suggestion: By default always show them when they point to something which is not referenced by any other ref. And add a preference which allows me to show them always & never.

Here is my argument: Even middle-experienced EGit users start doing rebases quite soon. If I am in the middle of a rebase I sometimes want to compare the state before I started the rebase operation to the current state. Without ORIG_HEAD the state where I startet rebase is lost.

Another argument: Even the gerrit Web-UI suggest the usage of FETCH_HEAD. If I just want to look at a specific proposal I want to be able to inspect it locally without having to create and afterwards delete a temporary ref. FETCH_HEAD is perfect for that.

You may say: that's your use-case but 99% of the normal users don't work like that and are beeing disturbed by these technical refs. My argument: Fine, if they don't work like that then they will never have ORIG_HEAD,MERGE_HEAD and FETCH_HEAD pointing to something which is otherwise unreferenced. Means: they will not see these refs with the default setting I propose.

-------------------------------------
author: Willow Cantrell
date: 2012-02-07 10:28:16.000000000

Patch Set 6:

In reply to Christians remarks:

I can see the point with respect to the Refs that are not otherwise referenced (users may want to use them during a Rebase, for example). However, this whole thing started out by some colleague (and me) being irritated by exactly such References. You do a Rebase, it finishes, and suddenly you have that ORIG_HEAD thing popping into your face from the HistoryView. Instead of the nice linear history you wanted to achieve by the Rebase, you suddenly have something looking very much like two branches....

I think that turning the toggle into some Always/Unreferenced/Never switch would confuse the poor user too much. They would have some branch on a commit and no white label, but once the branch moves to the next commit, the white label would magically appear?

So perhaps the solution to this could be to make the Additional Refs visible by default and put a button close to the "Show All Branches" button so that users can more easily suppress the Refs? In other words, invert the flag to mean "Suppress Additional Refs"?

-------------------------------------
