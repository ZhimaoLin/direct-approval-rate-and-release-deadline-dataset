DESCRIPTION

Introduce a method to find projects containing paths

This is required by multiple changes, thus i split it out of
If43a04410492ee6976f00d18d99c7b0a935c0689

Change-Id: I9c85247d6e0410bc0caefd6a4594373514e16562


COMMENTS

author: Bryanna Douglas
date: 2012-06-11 05:31:25.000000000

Uploaded patch set 9.

-------------------------------------
author: Brenden Conley
date: 2012-06-11 05:31:34.000000000

Patch Set 9:

Build Started https://hudson.eclipse.org/sandbox/job/egit.gerrit/3131/ 

-------------------------------------
author: Brenden Conley
date: 2012-06-11 05:38:36.000000000

Patch Set 9: Fails

Build Failed 
 
https://hudson.eclipse.org/sandbox/job/egit.gerrit/3131/ : FAILURE

-------------------------------------
author: Bryanna Douglas
date: 2012-06-11 05:41:15.000000000

Patch Set 9:

rebased only - i'm _very_ sure that the build failure is not related to the change :)

-------------------------------------
author: Juliet Cantu
date: 2012-06-19 21:44:02.000000000

Patch Set 9: (1 inline comment)



Line:286, org.eclipse.egit.core/src/org/eclipse/egit/core/internal/util/ProjectUtil.java -> Isn't the path absolute already?

-------------------------------------
author: Bryanna Douglas
date: 2012-07-02 06:56:43.000000000

Patch Set 9: (1 inline comment)



Line:286, org.eclipse.egit.core/src/org/eclipse/egit/core/internal/util/ProjectUtil.java -> right, but i find the code clearer as is, and it does not harm, as according to the javadoc "If this abstract pathname is already absolute, then the pathname string is simply returned as if by the getPath() method."

but i found another bug in this method regarding removed paths (which this should be able to handle too...). thus a new patchset, fixing the branch operation unit test, which seemed to fail previously (i must have missed that...)

-------------------------------------
