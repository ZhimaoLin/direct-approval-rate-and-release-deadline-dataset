DESCRIPTION

Fixed 'Finishing a release is tagging develop branch instead of master'

Bug: 473646
Signed-off-by: Jamarion Hunt xxx@xxx.xxx
Change-Id: I776d07e90b114335776f243e46b917c31fbeb7eb


COMMENTS

author: Jamarion Hunt
date: 2015-09-04 01:42:38.000000000

Uploaded patch set 7.

-------------------------------------
author: Brenden Conley
date: 2015-09-04 01:42:44.000000000

Patch Set 7:

Build Started https://hudson.eclipse.org/egit/job/egit.gerrit/7538/

-------------------------------------
author: Brenden Conley
date: 2015-09-04 02:05:31.000000000

Patch Set 7: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/egit.gerrit/7538/ : SUCCESS

-------------------------------------
author: Jamarion Hunt
date: 2015-09-04 13:58:08.000000000

Patch Set 7:

I cherry-picked it.
As soon as this is merged I'll take care of the 52634.
(Unfortunately this and 52634 touch mostly the same lines of code.)

-------------------------------------
author: Douglas Trujillo
date: 2015-09-07 08:54:47.000000000

Patch Set 7: Code-Review-1

this is confusing me (though I am not using git-flow so I lack experience):

- after creating a release always master and develop point at the same commit, so how can you distinguish if the tag is tagging develop or master ?
- I can only start a hotfix branch if develop is checked out, but not if I check out master or a release tag. This contradicts my understanding of http://nvie.com/posts/a-successful-git-branching-model/#finishing-a-release-branch which says hotfixes are meant to quickly fix a production problem , so I'd expect that hotfix branches are created from master and not from develop
- the GitFlow menu in the history view doesn't show the same actions enabled compared to the GitFlow menu on the same repository in the repositories view, so I don't know which one is right

-------------------------------------
author: Jamarion Hunt
date: 2015-09-07 10:16:34.000000000

Patch Set 7:

> this is confusing me (though I am not using git-flow so I lack
 > experience):
 > 
 > - after creating a release always master and develop point at the
 > same commit, so how can you distinguish if the tag is tagging
 > develop or master ?

This will change as soon as the other change-set (NO_FF) is merged. Then every "release finish" creates two merge commits. One on develop, one on master. The one on master should be tagged.
Probably it would have been a good idea in this one case, to fix both issues at once.

 > - I can only start a hotfix branch if develop is checked out, but
 > not if I check out master or a release tag. This contradicts my
 > understanding of http://nvie.com/posts/a-successful-git-branching-model/#finishing-a-release-branch

Yes, they should be enabled (see also 473647), but this is a minor issue at the moment, I would say. Because when working with Gitflow, you are usually on a feature branch, or on develop (unless you are the release manager).

 > which says hotfixes are meant to quickly fix a production problem ,
 > so I'd expect that hotfix branches are created from master and not
 > from develop

Yes, hotfix branches must be created from master (or possibly from a past release). If they are not, that would be a bug.

 > - the GitFlow menu in the history view doesn't show the same
 > actions enabled compared to the GitFlow menu on the same repository
 > in the repositories view, so I don't know which one is right

Someone, mentioned this in a bug report as well. Apparently it is not intuitive. I would argue that the only meaningful thing you can do in context of a commit, is creating a release, but I have no strong opinion on that.

-------------------------------------
author: Douglas Trujillo
date: 2015-09-07 12:04:36.000000000

Patch Set 7: Code-Review+1

> > this is confusing me (though I am not using git-flow so I lack
 > > experience):
 > >
 > > - after creating a release always master and develop point at the
 > > same commit, so how can you distinguish if the tag is tagging
 > > develop or master ?
 > 
 > This will change as soon as the other change-set (NO_FF) is merged.
 > Then every "release finish" creates two merge commits. One on
 > develop, one on master. The one on master should be tagged.
 > Probably it would have been a good idea in this one case, to fix
 > both issues at once.
 
ok, then I'll retry after this fix is submitted and the other one rebased

 > > - I can only start a hotfix branch if develop is checked out, but
 > > not if I check out master or a release tag. This contradicts my
 > > understanding of http://nvie.com/posts/a-successful-git-branching-model/#finishing-a-release-branch
 > 
 > Yes, they should be enabled (see also 473647), but this is a minor
 > issue at the moment, I would say. Because when working with
 > Gitflow, you are usually on a feature branch, or on develop (unless
 > you are the release manager).
 > 
 > > which says hotfixes are meant to quickly fix a production problem
 > ,
 > > so I'd expect that hotfix branches are created from master and
 > not
 > > from develop
 > 
 > Yes, hotfix branches must be created from master (or possibly from
 > a past release). If they are not, that would be a bug.
 
I retried and found you are right, the hotfix branch is created on master
just the action "Start Hotfix" is only enabled when "develop" is checked
out but disabled when "master" is checked out, this is tracked in bug 473647

 > > - the GitFlow menu in the history view doesn't show the same
 > > actions enabled compared to the GitFlow menu on the same
 > repository
 > > in the repositories view, so I don't know which one is right
 > 
 > Someone, mentioned this in a bug report as well. Apparently it is
 > not intuitive. I would argue that the only meaningful thing you can
 > do in context of a commit, is creating a release, but I have no
 > strong opinion on that.

I understand that if a commit is selected, but when a branch is referring
to the selected commit I expected to see the same actions as when
this branch would be checked out (though maybe I am wrong and just
lack practical experience using gitflow)

To make progress with your other patches I'll rebase this change and then accept it
then we can sort out the remaining problems when the NO-FF change is in

-------------------------------------
author: Gerrit Johnathan Pham
date: 2015-09-07 12:15:57.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
