DESCRIPTION

[gitflow] explicitly notify the user about merge/rebase conflicts

Bug: 467535
Change-Id: I1283e4d5a8d625e9dddbad29256a4363dd8202e9
Signed-off-by: Jamarion Hunt xxx@xxx.xxx

COMMENTS

author: Brenden Conley
date: 2015-05-25 20:26:29.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/egit/job/egit.gerrit/7066/

-------------------------------------
author: Brenden Conley
date: 2015-05-25 20:43:36.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/egit.gerrit/7066/ : SUCCESS

-------------------------------------
author: Douglas Trujillo
date: 2015-05-26 08:28:21.000000000

Patch Set 3: Code-Review-1

(3 comments)

Line:57, org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java -> this looks wrong since not all GitFlowOperations involve a merge operation, so I would expect this default to be null here and set by the subclasses involving a merge operation

Line:135, org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java -> I think this is wrong, we should return MergeResult since it also contains the information which merge failed which would be useful to make the displayed dialogs more useful, e.g. if merge fails due to a conflict we should show the 2 branches we tried to merge since this is important information. The code receiving this MergeResult can still extract the merge status and take decisions based on that.

Line:51, org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureFinishHandler.java -> I think we should also display the involved branches/commits which the user tried to merge (in the same way we do that for a plain merge operation failing due to merge conflicts)

-------------------------------------
author: Jamarion Hunt
date: 2015-05-26 09:16:31.000000000

Patch Set 3:

(3 comments)

Line:57, org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java -> I did this to avoid NPEs, but you are right that not all GitFlowOperations involve a merge operation. I wanted to refactor this in a later commit to remove Merge-related code from GitFlowOperation entirely. What do you think? Can simply add a TODO, or open a new bug?

Line:135, org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java -> I changed it from MergeResult because so far only the status was used, making the code unnecessarily complex.
As soon as we need the MergeResult I will change it back.

Line:51, org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureFinishHandler.java -> I think this information is somewhat redundant, and too technical for git flow.
"Feature finish" always is a merge of the HEAD of feature/x to develop. The only interesting part IMO is "x", which the user should know at this point.
However, for those who are git experts but git flow novices, we could show a dialog with a detail area (i.e. a ErrorDialog with a MultiStatus), providing that information.
Would that work?

-------------------------------------
author: Douglas Trujillo
date: 2015-05-26 09:34:48.000000000

Patch Set 3:

(3 comments)

Line:57, org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java -> simply add a TODO

Line:135, org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java -> fine with me, but GitFlowOperation is API so this would involve a breaking change for potential extenders (which we can do in a minor release following OSGi semantic versioning rules)

Line:51, org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureFinishHandler.java -> yes, this sounds good

-------------------------------------
author: Jamarion Hunt
date: 2015-05-30 09:07:58.000000000

Patch Set 3:

(3 comments)

Line:57, org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java -> Done

Line:135, org.eclipse.egit.gitflow/src/org/eclipse/egit/gitflow/op/GitFlowOperation.java -> Done

Line:51, org.eclipse.egit.gitflow.ui/src/org/eclipse/egit/gitflow/ui/internal/actions/FeatureFinishHandler.java -> Done

-------------------------------------
