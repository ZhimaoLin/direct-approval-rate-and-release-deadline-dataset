DESCRIPTION

Fix releasing RevWalks in GitHistoryPage

When a new History rendering was triggered a RevWalk is created. This
RevWalk was released when the next history rendering was triggered. 
However, at this point in time the RevWalk may still have been used by
the previous GenerateHistoryJob in another thread. This leads to NPEs.

Now we release the RevWalk when the GenerateHistoryJob is done.

Bug: 374675
Change-Id: I3685bd6994952b1378bbd14f39245d2edf64ee15
Signed-off-by: Zachary Orozco xxx@xxx.xxx
Signed-off-by: Carlie Harper xxx@xxx.xxx

COMMENTS

author: Zachary Orozco
date: 2012-04-26 12:06:08.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2012-04-26 12:06:12.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/egit.gerrit/2882/ 

-------------------------------------
author: Brenden Conley
date: 2012-04-26 12:24:21.000000000

Patch Set 2: I would prefer that you didn't submit this

Build Unstable 
 
https://hudson.eclipse.org/sandbox/job/egit.gerrit/2882/ : UNSTABLE

-------------------------------------
author: Danika Greer
date: 2012-04-26 20:54:04.000000000

Patch Set 2: Verified; Looks good to me, approved

(1 inline comment)

Looks good! Tried to reproduce the bug but couldn't get the NPE with this change.

Line:1657, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitHistoryPage.java -> Now that this is gone, is there a reason that currentWalk is stored as a field in GitHistoryPage aside from not having to pass it as an argument to the methods? Turns out it's a dangerous thing, and if there'd be no reference to it, there'd be no chance to accidentally misuse it.

In other words, we could return it from createNewWalk and pass it as an argument to the following methods.

-------------------------------------
author: Carlie Harper
date: 2012-04-27 07:01:22.000000000

Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)



Line:1657, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitHistoryPage.java -> That's sounds very reasonable. In fact, Chris and me discussed exactly about that yesterday.

GitHistoryPage should be refactored in general, but the change you mention would be a good first step. I thinks we could do it with this change or a follow-up change.

-------------------------------------
author: Danika Greer
date: 2012-04-27 10:52:51.000000000

Patch Set 2: (1 inline comment)

Should I submit it? Would be a first for me :).

Line:1657, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/history/GitHistoryPage.java -> Ok, let's submit this and do it in a follow-up change.

-------------------------------------
author: Zachary Orozco
date: 2012-04-27 11:36:52.000000000

Patch Set 2: Verified; Looks good to me, approved; IP review completed



-------------------------------------
author: Zachary Orozco
date: 2012-04-27 11:36:54.000000000

Change has been successfully merged into the git repository.

-------------------------------------
