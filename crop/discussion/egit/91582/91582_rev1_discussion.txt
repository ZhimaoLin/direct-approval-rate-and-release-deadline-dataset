DESCRIPTION

Fetch from Gerrit: checkout branch after resolving checkout conflicts

Ensure that new change branch is checked out after using Reset, Commit,
Stash or OK to cleanup uncommitted changes.

Bug: 507494
Change-Id: I8e085cad3c79a866cd8d1770854b24e8bad5d9b7
Signed-off-by: Douglas Trujillo xxx@xxx.xxx

COMMENTS

author: Douglas Trujillo
date: 2017-02-21 23:51:33.000000000

Uploaded patch set 1.

-------------------------------------
author: Douglas Trujillo
date: 2017-02-21 23:54:14.000000000

Patch Set 1: Code-Review-1

there is some race condition in this change, when using reset or stash to remove uncommitted changes the checkout works correctly if I run this with breakpoints in the debugger, but it doesn't work if run without debugger, so the second checkout doesn't seem to work

-------------------------------------
author: Brenden Conley
date: 2017-02-21 23:54:49.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/egit/job/egit.gerrit/9600/

-------------------------------------
author: Brenden Conley
date: 2017-02-22 00:18:23.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/egit.gerrit/9600/ : SUCCESS

-------------------------------------
author: Alayna Houston
date: 2017-02-22 12:10:07.000000000

Patch Set 1: Code-Review-1

(1 comment)

Line:823, org.eclipse.egit.ui/src/org/eclipse/egit/ui/internal/fetch/FetchGerritChangePage.java -> Obviously there's a race condition here. CleanupUncommittedChangesDialog creates, depending on the user's choice, a CommitJob, or a JobFamilies.RESET or JobFamilies.STASH job.

Which means after that dialog, we cannot do operations on the repo synchronously. They need to be in their own job so they get queued (if they all use an appropriate scheduling rule, which they should). Or in the worst case we'd have to join on COMMIT, RESET, and STASH, but I'd hate that.

Seems to me that this needs a larger refactoring of this FetchGerritChangePage. I always found that internalDoFetch(...) method above with all its boolean flags (some of which [or even all?] are mutually exclusive) and that "sequence" of steps highly confusing.

-------------------------------------
author: Douglas Trujillo
date: 2017-02-22 12:56:27.000000000

Patch Set 1:

> (1 comment)

yes, it seems we need a larger refactoring to clean this up

-------------------------------------
author: Gerrit Johnathan Pham
date: 2017-02-28 19:37:10.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
