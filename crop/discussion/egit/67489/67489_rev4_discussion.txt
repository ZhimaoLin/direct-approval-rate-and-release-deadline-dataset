DESCRIPTION

Decorate IFolders that are submodule working directory roots

Introduce a new configurable submodule text decoration used for folders
that are submodule working directory roots. The default is identical to
the project text decoration except that it doesn't contain the
repository name, as that is always the same as the folder name.

Change-Id: I75460fd59f2e6c9bd06e82a1966e3d06f97ab709
Signed-off-by: Alayna Houston xxx@xxx.xxx


COMMENTS

author: Douglas Trujillo
date: 2016-02-28 23:59:29.000000000

Uploaded patch set 4: Patch Set 3 was rebased.

-------------------------------------
author: Brenden Conley
date: 2016-02-28 23:59:35.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/egit/job/egit.gerrit/8222/

-------------------------------------
author: Douglas Trujillo
date: 2016-02-29 00:00:58.000000000

Patch Set 4: Code-Review+2

we could use the same decoration for nested repositories which are not submodules, currently nested repositories only show the branch name in their decoration

-------------------------------------
author: Brenden Conley
date: 2016-02-29 00:25:17.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/egit/job/egit.gerrit/8222/ : SUCCESS

-------------------------------------
author: Alayna Houston
date: 2016-02-29 06:00:17.000000000

Patch Set 4:

> we could use the same decoration for nested repositories which are
 > not submodules, currently nested repositories only show the branch
 > name in their decoration

So, use the project decoration if it's a nested repo? So far all this submodule code didn't really care whether a folder contained a true submodule or a nested repo. Any idea how to cleanly and efficiently make the distinction? I see two ways:

1. (Hacky) Check the git directory path: if it contains "/.git/modules/", it's a submodule, otherwise a nested repo.
2. (Cleaner, but less efficient) Find a git repo starting from the parent of the IFolder. If any found, do a submodule walk and try to find the repo associated with the IFolder. If found, it's a submodule, otherwise a nested repo.

Do you see anything better?

And I just noticed that I somehow had completely overlooked your suggestion to use [<ref> <commitId>] <commit msg header>. Looks like that'll need a couple more "variables" for the format...

-------------------------------------
author: Gerrit Johnathan Pham
date: 2016-03-01 00:06:45.000000000

Change has been successfully merged into the git repository by Douglas Trujillo

-------------------------------------
