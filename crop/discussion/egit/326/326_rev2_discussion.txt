DESCRIPTION

Parse .gitignore to find file's ignore status

Used class IgnoredResources.

Method from this class is called in IgnoredAction, replacing the check
to Team.isIgnoredHint.

Currently:
- Calls Team.isIgnoredHint
- Checks .gitignore, using the special rules and cases for git

From what I can see, there are two places in the code that check
Team.isIgnoredHint, IgnoredAction and DecoratableResourceAdapter. The
latter has a TODO that says it should check for .gitignored and
.git/info/exclude. I've only added a call to the new isIgnored
to the IgnoredAction for now.

Also I really hope this git push works :( I wasn't sure how to amend
the previous patch, and my tree was a bit dirty so I did a fresh
clean and copied the files over. Sorry if it causes another mess!

Change-Id: I5c40e237275f2d9031b2b56591ba98c5ce166008


COMMENTS

author: Reese Nunez
date: 2010-03-05 16:34:22.000000000

Uploaded patch set 2.

-------------------------------------
author: Reese Nunez
date: 2010-03-05 16:38:12.000000000

Patch Set 2: No score

Question: How does EGit want to handle the following scenario:

Say I have the following tree structure:

project -> src -> resource.c

.gitignore:
/*/*.c

src/.gitignore:
<empty>

And I attempt to ignore src/resource.c -- according to .gitignore rules this file is already ignored since it matches one of the patterns in a parent directory. What next?

Should EGit add '/resource.c' to the src/.gitignore? Should it do nothing? Should it do nothing, but indicate that the resource was already ignored higher up in the parent directory? I would prefer the third option, though it's up to you whether having a dialogue box would be too disruptive. Currently the code does nothing in this scenario.

I've attached my current list of compatibility tests to the Eclipse bug.

Cheers :)
-Charley

-------------------------------------
author: Reese Nunez
date: 2010-03-05 17:11:28.000000000

Patch Set 2:

I should also note that the current patch still has the test reporting framework embedded. I've done a bunch of compatibility stuff, but there's probably stuff I've missed so I left the System.out.println's in the code -- I'll update with a non-spammy version after finishing compatibility tests :)

-------------------------------------
