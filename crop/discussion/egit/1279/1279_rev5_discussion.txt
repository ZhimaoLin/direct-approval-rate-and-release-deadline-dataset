DESCRIPTION

Trigger repository refresh independently of workspace refresh setting

Initially we always refreshed when the repository changed, but users
we not happy, so we tied it to the workspace refresh option. This ment
Eclipse performed unnecessary by scanning resources twice. Both
an infrequent periodical scan and a triggered scan.

Now we only scane for index changes since a ref change by itself does
not hint that a resource has changed. In addition the default is to
only scan for repository changes and refresh resources when Eclipse
has an active workbench window, which means that you can perform Git
operations outside of Eclipse with no (or at least less) interaction
between Eclipse and C Git. This used to be a big problem for Windows
users performing rebase operations, because Eclipse locked files for
brief periods preventing C Git from updating them.

Change-Id: Id3fef6b884509e1a1a0bbf62fd1ae40ee0f1211e
Signed-off-by: Juliet Cantu xxx@xxx.xxx


COMMENTS

author: Juliet Cantu
date: 2010-08-25 23:13:09.000000000

Uploaded patch set 5.

-------------------------------------
author: Juliet Cantu
date: 2010-08-25 23:14:48.000000000

Patch Set 5:

Removed deps to deferred JGit patches

-------------------------------------
author: Juliet Cantu
date: 2010-08-25 23:14:56.000000000

Patch Set 5: IP review completed



-------------------------------------
author: Jaylon Avila
date: 2010-08-28 12:44:40.000000000

Patch Set 5: I would prefer that you didn't submit this

(5 inline comments)

Please also update the corresponding copyright headers of any files you have touched. I noticed Activator was updated but it seems not all of them were.

Line:202, org.eclipse.egit.ui/src/org/eclipse/egit/ui/Activator.java -> This listener should be removed when the bundle has been stopped.

Line:313, org.eclipse.egit.ui/src/org/eclipse/egit/ui/Activator.java -> It seems to me that you may end up adding a repository multiple times if its index changes more than once before the list is processed. Though I suppose this might not technically matter since the projects that will be queued up to be refreshed is stored in a set.

Line:10, /COMMIT_MSG -> "were not happy"

"This meant Eclipse"

Line:11, /COMMIT_MSG -> "unnecessary [what?]"

Line:14, /COMMIT_MSG -> scane -> scan

-------------------------------------
