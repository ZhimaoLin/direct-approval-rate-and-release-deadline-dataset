DESCRIPTION

JVMCBC-351: Don't limit SSL to SunX509 algorithm

Motivation:
-----------
Current Java Core SSL implementation relies on Oracle's SunX509
algorithm. This prevents use of smart client in certain application
deployment servers (i.e. IBM WAS uses IBM JRE). I propose using provider
agnostic algorithm; since all JREs must support standard PKIX algorithm,
smart client could safely utilize underlying PKIX algorithm.

Modifications:
--------------
The algorithm is now determined by using the KeyManagerFactory's
getDefaultAlgorithm method. The default algorithm should be SunX509
on Oracle JVMs, and X509 in alternative JVMs. Should it be something
else, it can always be changed at runtime via the
"ssl.KeyManagerFactory.algorithm" security property (set in the Java
security properties file or by calling Security.setProperty(...)).

Results:
--------
SSL in the client is not constrained to SunX509 algorithm availability.
Thus a wider range of platforms are supported.

Change-Id: I9eb02b1a2155ad2ef2dcde01bc608880d1351941
Reviewed-on: http://review.couchbase.org/66249
Reviewed-by: Estrella Humphrey xxx@xxx.xxx
Reviewed-by: Natasha Sullivan xxx@xxx.xxx
Tested-by: Natasha Sullivan xxx@xxx.xxx
Reviewed-by: Andreas Short xxx@xxx.xxx


COMMENTS

author: Gerrit Code Review
date: 2016-07-28 15:18:24.102000000

Change has been successfully cherry-picked as 492bd819437a79895aeef34e56e71483a7d2e716 by Andreas Short

-------------------------------------
