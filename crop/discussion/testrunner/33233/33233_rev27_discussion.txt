DESCRIPTION

CBQE-1739: added test to verify fix for MB-9693

Change-Id: I590466f985ed2850243775baa077d26a9687c534



COMMENTS

author: Fisher Vargas
date: 2014-02-18 09:18:45.342000000

Uploaded patch set 27.

-------------------------------------
author: Hugo Blankenship
date: 2014-02-18 13:30:10.181000000

Patch Set 27:

Build Started http://factory.couchbase.com/job/testrunner-Jasmin Rangel-master/527/

-------------------------------------
author: Hugo Blankenship
date: 2014-02-18 13:55:15.136000000

Patch Set 27: Verified+1

Build Successful 

http://factory.couchbase.com/job/testrunner-Jasmin Rangel-master/527/ : SUCCESS

-------------------------------------
author: Macie Morton
date: 2014-02-18 16:09:01.305000000

Patch Set 27:

(1 comment)

Aruna and Andrei, please review.

Line:134, pytests/xdcr/xdcrMiscTests.py -> Is this else indented correctly?  Seems it should be paired with if stat_value < 55.

Also, I am not sure what you try to do here. If resident ratio is < 55%, why break the loop?

-------------------------------------
author: Angelina Mayer
date: 2014-02-18 20:23:03.775000000

Patch Set 27: Code-Review-1

(5 comments)

Line:121, pytests/xdcr/xdcrMiscTests.py -> I'm afraid we're again generating the same set of 10000 keys in which case it becomes an update. Has this code loaded more than 10000 keys in your testing?

Line:135, pytests/xdcr/xdcrMiscTests.py -> What case was this else meant for? Is the 'continue' for the while loop? I understand you have paired it against for but a more elegant construction would be -

load all buckets with 1M items
for every bucket
{
while stat_value>55 :
 { 
  load more items into current bucket
 }
} // just move to next bucket

Line:140, pytests/xdcr/xdcrMiscTests.py -> This wait is not needed. Persistence can happen in parallel. In DGM, there's anyway a lot of data to replicate. So just directly jump to setting up replication after loading.

Line:151, pytests/xdcr/xdcrMiscTests.py -> Why are we adding a sleep here?

Line:157, pytests/xdcr/xdcrMiscTests.py -> Maybe we want to pull up the enoent log check before we call self.verify_results()? The reason being- verifying results can be time consuming for >1M items and any exception raised in this method can be attributed to the enoent that we checked for before verification.

-------------------------------------
