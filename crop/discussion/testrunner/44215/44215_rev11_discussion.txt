DESCRIPTION

CBQE-2515: Automation Framework for 2i integration tests and basic tests for recovery and index ops

- Basic API for automation of 2i tests
- Basic tests for scan, recovery, index-create, index-drop
- Tests defined for employee dataset
- Place holder classes for Bootstrap and cluster ops tests

Implementation Notes

Base_2i and Tuq: We have reused QueryTests defined by N1QL team since they have an infrastructure that works.
Base_2i is our base class for testing which extends from QueryTests.

QueryDefinitions: Define a query template, index used, groups for defining a query.
Once defined, we can define queries for index create/drop and related queries.

Advantages:
1) Groups help us tag the query definitions such as (using simple/composite indexes, range scan in indexes, type of data set used
i.e. whether we have group by/order by etc within the query.
This helps grouping a set of query definitions when running via test case.
2) We do not need to write explicit tests per query type - leading to code reduction, plus giving structure to our testing.
3) Query definitions are designed to work against any particular bucket, depends on their usability.
4) Can define query definitions for different data sets (employee as an example for this review)

Example: See basicindexops and recovery tests

Before, In_between, After: We have defined a set of query-based-events such as {Create index, Run Query based on index, Drop Index}
and subsets of these can be occur before, in_between and after a target-event.
This target-event can be an recovery operation in 2i, rebalance in cluster, bucket operation such as upserts.
By giving the ability to alter these basic operations of querying during our target events,
we can define different scenarios for testing per event.
This helps in code reduction and giving more structure to our tests where events occur during same time-interval.

Example: See Recovery tests

Change-Id: I3ca2e7d42f99dcf61781f49661e0184076f4dbf4


COMMENTS

author: Trevor Santana
date: 2014-12-12 05:37:37.500000000

Patch Set 11:

(9 comments)

Line:34, pytests/2i/base_2i.py -> still valid comment, why we iterate definitions and then pass definitions and not definition to the function?

Line:38, pytests/2i/base_2i.py -> same as above

Line:55, pytests/2i/base_2i.py -> actually implementation still is not working so may be keys also will be changed, i would keep an eye on this

Line:105, pytests/2i/base_2i.py -> this one is almost a copy of previous method, we can just pass a list of one bucket to this one

Line:116, pytests/2i/base_2i.py -> same comment, just call run_multi_operations with self.buckets

Line:19, pytests/2i/indexscans_2i.py -> does it mean we expect empty results?

Line:23, pytests/2i/indexscans_2i.py -> is there any difference in both tests? we do same operations for all buckets

Line:26, pytests/2i/indexscans_2i.py -> does it mean we expect empty results?

Line:1, pytests/2i/cluster_ops_2i.py -> still valid: I think we need an import

-------------------------------------
author: Quentin Ali
date: 2014-12-12 06:11:10.164000000

Patch Set 11:

(3 comments)

Line:19, pytests/2i/indexscans_2i.py -> it means use tuq_generator to calculate the expected result.

Line:23, pytests/2i/indexscans_2i.py -> the previous does create index for all query definitions, then goes to querying, and then drops the index. Meanwhile the second one iterates through the possible query definitions. Maybe we don't really want it.

Line:26, pytests/2i/indexscans_2i.py -> it means use tuq_generator to calculate the expected result.

-------------------------------------
