DESCRIPTION

Terminate wating for warmup loop when warmup is complete

Change-Id: I42b7fcd0c3e072e1af2e29b34ee1254de8925294
Reviewed-on: http://review.couchbase.org/40573
Tested-by: Hugo Blankenship xxx@xxx.xxx
Reviewed-by: Titus Ho <Titus xxx@xxx.xxx


COMMENTS

author: Asher Vang
date: 2014-08-14 06:31:01.725000000

Change has been successfully cherry-picked as cecf2e7a28af379b1abb3eafeb3c0ccbec000248

-------------------------------------
author: Emerson Nolan
date: 2014-08-15 20:26:49.103000000

Patch Set 3:

(1 comment)

Line:1113, pytests/memcapable.py -> This could cause a problem, as ep_warmup_thread may not be complete when we exit this loop, causing ep_warmup_time key error, down below.
http://review.couchbase.org/#/c/40661/

-------------------------------------
author: Asher Vang
date: 2014-08-17 20:02:10.519000000

Patch Set 3:

(1 comment)

Line:1113, pytests/memcapable.py -> Guess a better check would be to just loop while it's not complete and then check the count afterwards... the way the code is here is that'll loop forever if warmup thread is complete and present count is less than curr items..

-------------------------------------
author: Emerson Nolan
date: 2014-08-17 21:46:34.604000000

Patch Set 3:

(1 comment)

Line:1113, pytests/memcapable.py -> I agree that we checking the count afterwards and just loop while the thread complete status is not met would be a better way of doing things.

However, the code will not loop forever, as a time out would cause the test to fail, if both conditions aren't met in the specified time. I guess this should be fine as whether we load all values during warmup or not (based on memory usage), the curr_items count should and will need to match its value from before.

-------------------------------------
author: Asher Vang
date: 2014-08-18 04:27:27.186000000

Patch Set 3:

(1 comment)

Line:1113, pytests/memcapable.py -> Time out is basically "forever" in this case ;-) We want the test suite to run as fast as possible to be able to run as many tests as possible to allow us to test as much as possible of the server. This is an "error situation" which hopefully shouldn't be a  problem very often, but the "pattern" applies here as well. Fail as fast as we know something is wrong.

-------------------------------------
author: Emerson Nolan
date: 2014-08-18 05:50:37.469000000

Patch Set 3:

(1 comment)

Line:1113, pytests/memcapable.py -> Fair enough : )

-------------------------------------
