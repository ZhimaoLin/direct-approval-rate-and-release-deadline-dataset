DESCRIPTION

CBQE-294:cancel all tasks when one of them is failed

Change-Id: I7f55e996ef599ab478937af63cd15b467b53bf25


COMMENTS

author: Hugo Blankenship
date: 2012-07-02 07:08:09.689000000

Patch Set 1:

Build Started http://qa.hq.northscale.net/job/testrunner-Jasmin Rangel-master/1319/ 

-------------------------------------
author: Hugo Blankenship
date: 2012-07-02 07:22:18.888000000

Patch Set 1: Verified

Build Successful 

http://qa.hq.northscale.net/job/testrunner-Jasmin Rangel-master/1319/ : SUCCESS

-------------------------------------
author: Trevor Santana
date: 2012-07-02 16:38:52.076000000

Patch Set 1: (1 inline comment)



Line:192, pytests/basetestcase.py -> May be you should create your own TimeoutError exception?

-------------------------------------
author: Reid Stokes
date: 2012-07-02 17:57:23.541000000

Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)



Line:192, pytests/basetestcase.py -> You can add it here. 
lib/membase/api/exception.py.

Infact its imp to raise exceptions when using tasks.

-------------------------------------
author: Maliyah Fischer
date: 2012-07-03 20:46:26.186000000

Patch Set 1: I would prefer that you didn't submit this

I think this is already being done in taskmanager shutdown. We can change the call in BaseTestCase.tearDown to self.cluster.shutdown(true).

   def shutdown(self, force = False):
        self.running = False
        if force:
            while not self.sleepq.empty():
                task = self.sleepq.pop()['task']
                task.cancel()
                self.readyq.put(task['task'])
            while not self.readyq.empty():
                task = self.readyq.pop()
                task.cancel()

-------------------------------------
author: Esperanza Cherry
date: 2012-07-23 22:25:55.714000000

Patch Set 1: Abandoned

-------------------------------------
