DESCRIPTION

Shutdown the cluster properly on Windows

Windows differs from Unix/linux with respect to how processes
and their relationship works. By using .kill() resulted in
a lot of the processes erl starts to be running (and a
callstack being printed from Python that signal.SIGKILL
isn't supported..

Change-Id: I7d3f13faa4ab722ecde7335ac178b7a911f6f7c7


COMMENTS

author: Asher Vang
date: 2014-08-13 11:13:49.694000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2014-08-13 11:13:54.220000000

Patch Set 1:

Build Started http://factory.couchbase.com/job/testrunner-Jasmin Rangel-master/2345/

-------------------------------------
author: Hugo Blankenship
date: 2014-08-13 11:30:24.113000000

Patch Set 1: Verified+1

Build Successful 

http://factory.couchbase.com/job/testrunner-Jasmin Rangel-master/2345/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2014-08-13 12:30:56.022000000

Patch Set 1: Code-Review+1

-------------------------------------
author: Ayla Reynolds
date: 2014-08-13 13:18:31.435000000

Patch Set 1: Code-Review-1

(3 comments)

See inline comments. Nothing major, just minor things.

Line:216, lib/cluster_run_manager.py -> Non related whitespace change.

Line:219, lib/cluster_run_manager.py -> Nitpick: there shouldn't be a space before "taskkill".

Line:220, lib/cluster_run_manager.py -> Python style would be:

    if not subprocess.call(args):

Though I would change it completely to:

    if subprocess.call(args):
        log.error("taskkill returned with non-null value")
    else:
        self.instance.wait()

    return True

-------------------------------------
author: Asher Vang
date: 2014-08-13 13:28:00.268000000

Patch Set 1:

(2 comments)

Line:219, lib/cluster_run_manager.py -> Done

Line:220, lib/cluster_run_manager.py -> Done

-------------------------------------
