DESCRIPTION

CBQE-175:Test Case for CreateView

Change-Id: I893bc8c5d46d35577fc7ef73aa4f2f7344615b92


COMMENTS

author: Hugo Blankenship
date: 2012-06-12 12:05:39.940000000

Patch Set 1:

Build Started http://qa.hq.northscale.net/job/testrunner-Jasmin Rangel-master/810/ 

-------------------------------------
author: Hugo Blankenship
date: 2012-06-12 12:16:02.799000000

Patch Set 1: Verified

Build Successful 

http://qa.hq.northscale.net/job/testrunner-Jasmin Rangel-master/810/ : SUCCESS

-------------------------------------
author: Esperanza Cherry
date: 2012-06-12 16:15:18.214000000

Patch Set 1: I would prefer that you didn't submit this

(5 inline comments)

I don't see config file for the test methods

Line:56, pytests/view/createdeleteview.py -> what does it mean without dd?

Line:59, pytests/view/createdeleteview.py -> funcs with the same body, but with diff parameters. can we take test_create_view_with_name as a base test func and use data driven approach?

Line:74, pytests/view/createdeleteview.py -> where self.default_red_func is defined?

Line:99, pytests/view/createdeleteview.py -> "d"*257 ?

Line:103, pytests/view/createdeleteview.py -> empty string between funcs

-------------------------------------
author: Titus Ho
date: 2012-06-14 21:48:31.661000000

Patch Set 1: I would prefer that you didn't submit this

(10 inline comments)

Thanks Isabell Valencia.  Some comments, plus general feedback to leverage more of view_base or add methods for repeated sections of code.

Also, having special map functions here isn't important as no queries are going on.

Line:17, pytests/view/createdeleteview.py -> seen this function in create ddoc tests by Deep, maybe move to view_base.py

Line:56, pytests/view/createdeleteview.py -> guessing, "without existing ddoc"

Line:76, pytests/view/createdeleteview.py -> also check that result contains a DesignDocCreationException - see task.py

Line:78, pytests/view/createdeleteview.py -> this is a ddoc test, no?

Line:92, pytests/view/createdeleteview.py -> looks like a common enough view to be added to view_base.  having a function like:

def get_age_name_view(self view_name):
   ...

Line:114, pytests/view/createdeleteview.py -> can use self.make_default_views("View",2)

Line:131, pytests/view/createdeleteview.py -> should get an exception here to catch

Line:138, pytests/view/createdeleteview.py -> I could be wrong, but I believe this will perform the same as the previous test.  taskmanager is a thread and will immediately schedule async tasks, so I'm not sure if this threading is necessary.

Line:158, pytests/view/createdeleteview.py -> self.make_default_views("View", num_views)

map function isn't important since no queries are going on here.

Line:164, pytests/view/createdeleteview.py -> to asynchronously create N views:

self.async_create_views(server, doc, views)

-------------------------------------
author: Trey Garner
date: 2012-06-20 18:32:42.225000000

Patch Set 1: Abandoned

Created new review for createview test cases

-------------------------------------
