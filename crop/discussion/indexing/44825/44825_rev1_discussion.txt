DESCRIPTION

cluster_info: Add Lock() and Unlock() helper methods

If there are multiple concurrent users for the same cluster_info
instance, access should be serialized using a lock.
Added helper methods to lock and unlock cluster_info for concurrent
access.

Eg.
    ci.Lock()
    ci.Fetch()
    nodes := ci.GetNodesByServiceType("srv")
    addr := ci.GetServiceAddress(nodes[0])
    ci.Unlock()

nodeId returned by cluster_info APIs will become invalid with subsequent
Fetch() call. Hence, API calls followed by a Fetch() should be protected
using a lock.

Change-Id: I1c68821b89b4ea9fa303740bfe76b34cc67866c4


COMMENTS

author: Kinsley Fox
date: 2015-01-01 07:01:56.834000000

Uploaded patch set 1.

-------------------------------------
author: Leonel Abbott
date: 2015-01-01 07:44:56.125000000

Patch Set 1: Code-Review+1

-------------------------------------
author: Maliyah Fischer
date: 2015-01-05 07:30:58.554000000

Patch Set 1:

Are the Lock and Unlock methods in some other patchset?

-------------------------------------
author: Kinsley Fox
date: 2015-01-06 04:44:03.143000000

Patch Set 1:

Its anonymous object in Go. Lock and Unlock is available with current struct since its sync.Mutex is an anonymous data member.

-------------------------------------
