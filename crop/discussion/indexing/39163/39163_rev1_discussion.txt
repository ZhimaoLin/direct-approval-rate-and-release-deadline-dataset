DESCRIPTION

Slice Writer Changes for ForestDB requirements

ForestDB doesn't allow sharing a database handle across threads.
Slice writer now has locks to serialize access to forestdb.
Back-index has 1 extra read-only handle to make the read requests
in parallel.

Other option is to have multiple database connections. But as forestdb
is also going to serialize all write access across threads, it doesn't
make a difference for our use case.

Change-Id: Ib3829f6e03c2a4826e09d6eeb38adc60156513d7


COMMENTS

author: Maliyah Fischer
date: 2014-07-07 17:11:40.889000000

Uploaded patch set 1.

-------------------------------------
author: Dominique Stanton
date: 2014-07-08 02:59:24.451000000

Patch Set 1:

1) ForestDB allows multiple readers concurrent with a single writer.  So what is the ROLock is for? 
2) Isn't that there is a single flusher thread? If so, why do you need the the lock?

-------------------------------------
author: Maliyah Fischer
date: 2014-07-08 06:28:57.249000000

Patch Set 1:

1) Yes, the lock is to satisfy the requirement that each thread needs to have its own db connection. ROLock serializes the requests from multiple reader goroutines(threads) as there is only one shared read connection. 

2) Flusher opens 1 goroutine per vbucket. So we have 1024 goroutines per flush. I am putting a patch to make it configurable with default at 16, as I don't see any performance benefit from so many goroutines.

-------------------------------------
author: Maliyah Fischer
date: 2014-07-11 11:03:59.958000000

Abandoned

This is superseded by new patchset which doesn't have any locks.

-------------------------------------
