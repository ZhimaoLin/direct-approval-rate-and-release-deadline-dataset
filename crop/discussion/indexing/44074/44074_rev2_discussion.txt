DESCRIPTION

indexer: Introduce index_snapshot abstraction

Added a new index level snapshot abstraction that be used
for implementing point-in-time scannable index snapshot.
IndexSnapshot supports Clone() and Destory() APIs. Under the
covers this APIs implement reference counting of shared resources
to avoid unnecessary copying.

IndexSnapshot can be generated whenever we decide to create an
scannable snapshot for index from a stability timestamp. It can
be used in scan coordinator to implement independent operation
without holding any mutable index data structures.

Change-Id: Ib261305ef75fd80f8df096588f5ed11b06946be7


COMMENTS

author: Kinsley Fox
date: 2014-12-09 05:04:10.112000000

Uploaded patch set 2.

-------------------------------------
author: Maliyah Fischer
date: 2014-12-09 18:48:43.112000000

Patch Set 2:

(1 comment)

Line:98, secondary/indexer/index_snapshot.go -> Isn't there a need to create a new indexSnapshot object here? ss.Snapshot() will return the existing Snapshot and Open may get called on an already open snapshot.

-------------------------------------
author: Kinsley Fox
date: 2014-12-10 05:29:09.854000000

Patch Set 2:

(1 comment)

Line:98, secondary/indexer/index_snapshot.go -> This is an optimization to avoid unnecessary copy.
The ss.Snapshot() will be already open (See the next commit).
ss.Snapshot().Open() here will just increment the refcount.
Consumer can just call CloneIndexSnapshot() and operator on it.
But consumer should not modify any structure. This is an immutable object.

-------------------------------------
author: Maliyah Fischer
date: 2014-12-10 05:51:58.709000000

Patch Set 2:

(1 comment)

Line:98, secondary/indexer/index_snapshot.go -> As every consumer of forestdb snapshot needs to have its own snapshot handle, I think we'll need to have an actual copy.

-------------------------------------
author: Kinsley Fox
date: 2014-12-10 06:04:54.822000000

Patch Set 2:

(1 comment)

Line:98, secondary/indexer/index_snapshot.go -> Clone of this forestdb snapshot handle is created when an iterator is created in scan_coordinator. This CloneIndexSnapshot() makes minimal overhead.

-------------------------------------
author: Maliyah Fischer
date: 2014-12-11 11:43:10.574000000

Patch Set 2: Code-Review+1

-------------------------------------
author: Kinsley Fox
date: 2014-12-11 14:41:49.406000000

Patch Set 2: Verified+1 Code-Review+2

-------------------------------------
