DESCRIPTION

Design documentation.

- index_manager overview document.
- index_manager design document.
- projector overview document.
- projector design document.
- router overview document.

worked on John's comment

Worked on Deep's, John's feedback

- Drill down index topology design
- STREAM_BEGIN and STREAM_END solution for kv-rebalance

Change-Id: I8d7b67c2419df63e36cb6e053fc67595db5b2c31
Reviewed-on: http://review.couchbase.org/34688
Reviewed-by: Maliyah Fischer <Maliyah xxx@xxx.xxx
Reviewed-by: Deangelo Blevins <Leonel xxx@xxx.xxx
Tested-by: Deangelo Blevins <Leonel xxx@xxx.xxx


COMMENTS

author: Leonel Abbott
date: 2014-03-26 09:49:44.230000000

Change has been successfully cherry-picked as 46fd3eff20ca33c4a39f256f9bee1acb29c85c13

-------------------------------------
author: Dominique Stanton
date: 2014-03-26 18:35:11.128000000

Patch Set 10:

(8 comments)

Line:22, secondary/docs/design/markdown/router.md -> This should be opague to the router.  When indexer or coordinator makes a conneciton, it has either pass in a topology which will encode the endpoint.   The router can then create subscriber with that endpoint.

Line:170, secondary/docs/design/markdown/index_manager_design.md -> What does that mean?  I thought it is ns_server that accepts the registration.   The projector is just a "slave" that provides connection management, transformation/map and routing services.  It would be nice if it can be a independent module that does not always tied to indexer.

Line:241, secondary/docs/design/markdown/index_manager_design.md -> If the indexer is slow and there is no other replica, then the system as a whole will not be able to service "up-to-date" consistent query.  But this is a general problem when using stability timestamp to provide stability.   It has nothing to do with how the stability timestamp is calculated.   I think your statement here refers to a single indexer node that is not being able to serve consistent query -- it is not clear to me when I read it for the first time that you may mean a single indexer.

Line:93, secondary/docs/design/markdown/projector_design.md -> Just to be clear. The projector does not dictate the port number of the end point.  During handshake, the indexer or coordinator tells the projector the endpoint.

Line:105, secondary/docs/design/markdown/projector_design.md -> How about the topology?

Line:109, secondary/docs/design/markdown/projector_design.md -> Even though we have 3 different types of streams from the indexer side. It would be nice if the projector interface is generic, such that you don't call them "backfill", "maintenance", "catchup" etc.   It would be really nice if you can think of projector/router as generic component that can be reused for many purposes.   So the actual interface should be more generic than the indexer use cases being served.

Line:132, secondary/docs/design/markdown/projector_design.md -> Is this for bootstrap?  If so, there is no HW timestmap. When bootstrap, the index coordinator can use any timestamp to restart the incremental update stream (e.g. latest UPR seqNo).  Each indexer will use the snapshot timestamp to create catchup.

Line:180, secondary/docs/design/markdown/projector_design.md -> As mentioned before, I want you guys to think about building projector/router as generic component.   So beware of mapping topcId to some fix number.  It is not a generic nor flexible design.

-------------------------------------
author: Leonel Abbott
date: 2014-03-27 06:32:36.430000000

Patch Set 10:

(8 comments)

Line:22, secondary/docs/design/markdown/router.md -> Done

Line:170, secondary/docs/design/markdown/index_manager_design.md -> Removed it.

Line:241, secondary/docs/design/markdown/index_manager_design.md -> Thats correct. Will remove it. When we implement the alternative will add more about its behaviour, based on what we observe.

Line:93, secondary/docs/design/markdown/projector_design.md -> Done

Line:105, secondary/docs/design/markdown/projector_design.md -> Done

Line:109, secondary/docs/design/markdown/projector_design.md -> Done

Line:132, secondary/docs/design/markdown/projector_design.md -> This is a new understanding to me. Will update it like this,

* downstream component computes a failover-timestamp using failover log and
  latest UPR sequence-no. In case of bootstrapping from "maintenance stream", local indexer nodes shall use "catchup stream" to come up to speed with "maintenance stream".

Line:180, secondary/docs/design/markdown/projector_design.md -> Done

-------------------------------------
