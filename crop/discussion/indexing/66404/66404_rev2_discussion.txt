DESCRIPTION

MB-19705 - Handle panic related to setting max_array_seckey_size

When large arrays are indexed and the above setting is decreased,
if old arrays receive mutation, it leads to panic in forestdb indexes.
Handling previous large arrays during update and delete path.

Change-Id: Ifa66b3bca849562fb1888df985695dbde2851f16


COMMENTS

author: Alden Ashley
date: 2016-08-02 10:38:30.683000000

Uploaded patch set 2.

-------------------------------------
author: Kinsley Fox
date: 2016-08-02 11:57:02.828000000

Patch Set 2:

(2 comments)

Line:74, secondary/indexer/array.go -> This flag looks like a little hackup code. Ideally we do not need this flag.
Instead, the caller should make sure that this doesn't happen.

Line:504, secondary/indexer/forestdb_slice_writer.go -> This block of code is redundant in the below section. 
This can be cleaned up by defining a function:

tmpBuf := getArrayBuf(oldKey)

Based on the condition, it can allocate the buffer. Also, ArrayIndexItems() does not require a checkSize flag as this function makes sure that bufsize is properly set.

-------------------------------------
author: Alden Ashley
date: 2016-08-02 12:00:26.915000000

Patch Set 2:

(1 comment)

Line:504, secondary/indexer/forestdb_slice_writer.go -> In case of composite index, it is hard to predict how much buffer is needed. 2x the size of old key could be more or less. We depend on dynamic array size allocation of append in ArrayIndexItems()

-------------------------------------
author: Kinsley Fox
date: 2016-08-02 12:08:23.426000000

Patch Set 2: Code-Review+1

-------------------------------------
author: Tate Garrett
date: 2016-08-03 12:49:32.606000000

Change has been successfully merged into the git repository by Alden Ashley

-------------------------------------
