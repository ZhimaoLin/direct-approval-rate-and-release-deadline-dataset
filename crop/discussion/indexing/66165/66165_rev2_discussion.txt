DESCRIPTION

MB-20178 Account for HeapIdle in memory usage computation

HeapIdle was not being accounted in memory usage computation as
that memory was thought to be always available to Indexer for use.
But with jemalloc integration that is not the case. Memory occupied
by golang HeapIdle cannot be used by jemalloc. This can result in
jemalloc keep asking for memory from OS while Indexer has sufficient
memory leading to OOM.

This change accounts for HeapIdle while calculating memoryUsed and
once this exceeds the thresholds specified, Indexer will release
the memory back to OS so it can be used by jemalloc. Note that
FreeOSMemory calls GC internally, so it will be effectively GC+freeOSMemory.

Also, added the same steps to bootstrap. Indexer will call freeOSMemory
after bootstrap to make sure HeapIdle gets freed up and it does not
enter Paused state prematurely.

Change-Id: I8fc58c9c0921727fe99a8b347a1ec9170524d95d


COMMENTS

author: Maliyah Fischer
date: 2016-07-29 07:30:37.621000000

Uploaded patch set 2.

-------------------------------------
author: Maliyah Fischer
date: 2016-07-29 07:34:59.759000000

Patch Set 2: Code-Review+2 Verified+1

-------------------------------------
author: Tate Garrett
date: 2016-07-29 07:35:02.676000000

Change has been successfully merged into the git repository by Maliyah Fischer

-------------------------------------
