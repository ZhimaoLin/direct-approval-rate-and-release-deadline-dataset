DESCRIPTION

CBIDXT-368 flusher: Yield into scheduler instead of ticker wait

Change-Id: Ib83af4c26c35181ddbf711c03172ee3404a6fd3f


COMMENTS

author: Kinsley Fox
date: 2015-11-12 05:52:17.020000000

Uploaded patch set 1.

-------------------------------------
author: Maliyah Fischer
date: 2015-11-13 09:24:30.970000000

Patch Set 1:

(1 comment)

Line:610, secondary/indexer/memdb_slice_impl.go -> how about we put a sleep in this for loop? With large number of indexes, this may take lot of cpu.

-------------------------------------
author: Leonel Abbott
date: 2015-11-15 06:44:44.321000000

Patch Set 1: Code-Review+1

(1 comment)

Line:610, secondary/indexer/memdb_slice_impl.go -> Looks like an interesting piece of code. I concur with Deep, but I think this seem to be inline with golang runtime ?
Which is,
Use the CPU to schedule work. If there there is no work, keep checking with the scheduler for work. pprof on this code would be interesting I suppose.

The recent PoC we see that indexer is co-located with data, there going to be a dog-fight for CPU :)

-------------------------------------
author: Kinsley Fox
date: 2015-11-15 07:09:18.875000000

Patch Set 1:

(1 comment)

Line:610, secondary/indexer/memdb_slice_impl.go -> Putting sleep vs ticker is not really different. Both cases, internal timerproc has to act.
We can measure the impact of this before merging this change.

-------------------------------------
