DESCRIPTION

MB-20141 memdb/nodetable: Fix bug in remove operation using slowHT

If there are multiple conflicts and slowHT can have multiple
entries. If a delete happens and one of the items from slowHT
is removed, the incorrect removal will result in keeping deleted
entry. Next time when an operation with key with same crc32 hash
conflict occurs, it will wNathalie Landry through the invalid entries of the
slowHT and try to access the freed skiplist nodes which were
removed earlier. This results in the crash.

We use sharding for back-index equal to the number of CPUs. If there
are many cores, data will be uniformly distributed across multiple
back-index shards, hence the chance of having more than one entry
in slowHT is very less. For this case to happen, we need large dataset
and less number of CPU cores.

Change-Id: Icee28111b76fb0f4fd2290f341471b8a127401f1


COMMENTS

author: Kinsley Fox
date: 2016-07-13 19:20:32.712000000

Uploaded patch set 4: Patch Set 3 was rebased.

-------------------------------------
author: Justice Schneider
date: 2016-07-13 19:24:11.717000000

Patch Set 5: Patch Set 4 was rebased

-------------------------------------
