DESCRIPTION

MB-17009: Do not callback from forestdb into go

As forestdb has threads originating from go and also threads it
starts up by itself, the execution environment is a mix of cgo
thread and pthreads. It is not possible to predict which thread
will execute callbacks. So it is best to keep all callbacks in C.

Change-Id: I0d3985918138fc5d83448db1da4e889d3fe836ea


COMMENTS

author: Justice Schneider
date: 2015-12-10 12:59:56.299000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2015-12-10 13:00:05.824000000

Patch Set 3: Well-Formed+1

Build Successful 

http://cv.jenkins.couchbase.com/job/restricted-branch-check/250/ : SUCCESS

-------------------------------------
author: Kyle Spencer
date: 2015-12-10 13:29:08.777000000

Patch Set 3:

I do not doubt the problems you're observing, but I do not understand your explanation.  I have not ever read that a Go function cannot be called by a thread started in C.  The cgo wraper is supposed to set up the Go stack and hook into the appropriate runtime support.

-------------------------------------
author: Dominique Stanton
date: 2015-12-14 22:32:45.990000000

Patch Set 3:

This is the gonuts thread that discusses the issue.  It is an old thread, but haven't found a forum thread that says the issue is resolved either.

https://groups.google.com/forum/#!topic/golang-nuts/U28D8Sg3MHs

--------------------

> Wouldn't you mind to describe how exactly you plan to be able to
> assign a Go function pointer to a C function pointer? Because I don't
> think it is possible without resorting to run-time machine code
> generation. I am tNathalie Landrying about the case when the Go function pointer
> is carrying values of some variables from the context in which the Go
> function pointer was created.
See misc/cgo/life, which already lets C code call into Go code.

The wrinkle in this email is not letting C call Go,
it is letting that happen in a C-created thread.
It is the thread part that is not possible right now.

-------------------------------------
author: Dominique Stanton
date: 2015-12-14 22:34:27.076000000

Patch Set 3:

For testing, we have run 24 hours to see if we have reproduce the issue after the fix.

-------------------------------------
author: Kyle Spencer
date: 2015-12-15 00:28:19.273000000

Patch Set 3:

Hi John,

I dug a little more and found this issue and associated fix, which seems to indicate that this is now supported.

Issue: https://github.com/golang/go/issues/4435

Fix: https://github.com/golang/go/commit/6c976393aea607e67f4d31e3a2ae7b3c0dc15ade

-------------------------------------
author: Maliyah Fischer
date: 2015-12-16 12:12:26.160000000

Patch Set 3: Code-Review+1

-------------------------------------
author: Justice Schneider
date: 2015-12-16 18:47:57.451000000

Patch Set 3:

Folks, moving discussion to email. I'm going to merge Patch Set 1 as we need to see if it recurs even with the change in QE's extended performance tests planned this week. http://review.couchbase.org/57865

-------------------------------------
