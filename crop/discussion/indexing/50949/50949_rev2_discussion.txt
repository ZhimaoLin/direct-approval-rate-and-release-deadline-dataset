DESCRIPTION

MB-100: optimization to improve project data-path.

Scenario:
- kvdata folds control path and datapath together.
- to avoid select{} blocks on timer-tick for 1024 vbuckets,
  sync-pulse is now generated by kvdata.
- it may so happen that due to downstream throttling,
  kvdata will not be able to post the sync-pulse to all 1024
  vbuckets immediately
- until it is posted downstream, the upstream might be blocked.
- to avoid this sync-pulse is posted in a separate go-routine.

Change-Id: I076ccc837ed777879f070d30574e3a898f99bc0b


COMMENTS

author: Leonel Abbott
date: 2015-05-13 11:37:16.990000000

Uploaded patch set 2: Patch Set 1 was rebased.

-------------------------------------
author: Kinsley Fox
date: 2015-05-13 11:43:07.189000000

Patch Set 2: Code-Review+1

(1 comment)

Line:185, secondary/projector/kvdata.go -> Can we use a time.Ticker and use Reset() to reuse it ? I have seen this time.After() is filling heap with garbage and causing performance impact.

-------------------------------------
author: Leonel Abbott
date: 2015-05-13 12:20:47.966000000

Patch Set 2:

(1 comment)

Line:185, secondary/projector/kvdata.go -> Good question, but timer.Tick channel, if I am not wrong capacity of 1, which means if it takes more than 2s. to push the sync pulse downstream, go-routines will get called several times. Hence the logic of re-loading.

-------------------------------------
author: Kinsley Fox
date: 2015-05-13 17:53:07.173000000

Patch Set 2:

(1 comment)

Line:185, secondary/projector/kvdata.go -> time.After uses same ticker i guess. it calls time.NewTimer() and throws away the channel after use. Instead you can reuse it by .Reset(). I guess the behavior will be the same. You don't have to do anything now. Probably  if you see any perf problem, you can do this.

-------------------------------------
author: Tate Garrett
date: 2015-05-25 06:19:07.180000000

Change has been successfully merged into the git repository.

-------------------------------------
