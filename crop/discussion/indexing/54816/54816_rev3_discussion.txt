DESCRIPTION

MB-16154: Create Breakpad Minidump file upon fatal forestdb error

Make use of the new SetFatalErrorCallback() forestdb API to trigger
the creation of a Breakpad minidump when forestdb encounters a fatal
error.

Implemented by adding a simple Golang interface to Breakpad (C++)
which allows Golang to setup Breakpad and manually trigger the
creation of Minidumps. This interface is then wired up with the new
forestdb SetFatalErrorCallback() API such that we register Breakpads'
WriteMinidump() function as the fatal error callback.

Minidump files will be written to the path specified by the
'minidumpDir' argument, or the storageDir if minidumpDir is not
specified.

Note: We /cannot/ use Breakpad's handling of fatal errors as Golang
      gets very upset if other code attempts to change the signal
      handlers for SEGV, SIGBUS or SIGFPE - which is exactly what
      Breakpad will do if configured to handle fatal signals.

Change-Id: I5408b597e4d1073ab78153ccb4f3d2091bb8160e


COMMENTS

author: Ashlee Kent
date: 2015-08-25 16:02:36.970000000

Uploaded patch set 3.

-------------------------------------
author: Ashlee Kent
date: 2015-08-25 16:10:14.477000000

Patch Set 3:

Note: My first ever(!!) Golang code, please be gentle ;)

-------------------------------------
author: Justice Schneider
date: 2015-08-25 16:53:53.872000000

Patch Set 3:

(2 comments)

Line:39, secondary/cmd/indexer/main.go -> Dave, this setting may better belong in common/config.go

In general, we try to store settings in there so they can be manipulated via our /settings REST endpoint uniformly.

Line:57, secondary/cmd/indexer/main.go -> It may be better to not put dumps in storagedir, as storagedir is intended for data. Perhaps current working dir is a better place?

-------------------------------------
author: Ashlee Kent
date: 2015-08-25 17:27:22.454000000

Patch Set 3:

(2 comments)

Line:39, secondary/cmd/indexer/main.go -> Sure, I can put it anywhere you like (I'm not particularly familiar with the 2i code).

Note however that Breakpad probably only makes sense at present for processes which use external C libraries (or are willing to manually trigger minidump creation) - does that affect where the setting should live?

Line:57, secondary/cmd/indexer/main.go -> Possibly, but there's no guarantee the cwd is writable.

Note that the "desired" location is an explicit minidumpDir, which ns_server isn't yet setting, hence the fallback to storageDir here so it can work in a transitional mode (without the ns_server changes).

Once we have ns_server setting minidumpDir, then we can remove this fallback if you wish.

-------------------------------------
author: Justice Schneider
date: 2015-08-25 17:29:54.336000000

Patch Set 3:

(2 comments)

Line:39, secondary/cmd/indexer/main.go -> It seems okay to have it in config.go as that's a superset of all parameters we have.

Line:57, secondary/cmd/indexer/main.go -> Maybe we can have ns_server send log directory. We may need it for other purposes in the future, and it seems like a good default location.

-------------------------------------
author: Ashlee Kent
date: 2015-08-25 17:41:16.102000000

Patch Set 3:

(1 comment)

Line:57, secondary/cmd/indexer/main.go -> In the case of memcached, ns_server sends an explicit "crash" directory location separate from the logs (actually a sibling directory). This adds a bit more flexibility for users to manage storage for the slightly different use-cases.

-------------------------------------
