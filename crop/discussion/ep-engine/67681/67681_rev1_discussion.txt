DESCRIPTION

MB-20697: ep_testsuite: restore deleted DB dir before cleanup

In some environments (seen on Windows VM), the regression test for
MB-20697 can hang forever during cleanup due to the writer thread being
stuck in an infinite loop trying to flush to disk.

To address this, re-create the database directory before shutting down
EPStore (after the test is complete).

Change-Id: I474e77bafbe5b30858d9a306669c52713890f846


COMMENTS

author: Ashlee Kent
date: 2016-09-14 18:00:49.088000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:00:54.645000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1128/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:00:59.384000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/848/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:01:06.564000000

Patch Set 1: Well-Formed-1

Branch restricted. PLEASE READ this URL: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/23561/artifact/restricted.html : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:07:00.829000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1016/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:18:30.716000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1128/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/848/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1016/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:25:34.384000000

Patch Set 1: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1129/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:32:26.691000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1129/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/848/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1016/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:35:09.865000000

Patch Set 1: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1130/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 18:44:23.968000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1130/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/848/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1016/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 19:47:09.633000000

Patch Set 1: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1133/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 20:13:58.600000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1133/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/848/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1016/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 20:37:39.391000000

Patch Set 1: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1134/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-14 20:44:48.483000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1134/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/848/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1016/ : SUCCESS

-------------------------------------
author: Adrianna Holmes
date: 2016-09-14 21:36:18.772000000

Patch Set 1:

"writer thread being stuck in an infinite loop trying to flush to disk".
Why should this busy loop come in the way of killing a thread during shutdown ?
Due to the fix, flusher succeeds in flushing to the disk, but the thread is still alive.

-------------------------------------
author: Adrianna Holmes
date: 2016-09-14 21:38:00.891000000

Patch Set 1:

And Hugo Blankenship failure seems to be because of a fail in jemalloc

-------------------------------------
author: Ashlee Kent
date: 2016-09-15 08:18:44.582000000

Patch Set 1:

> "writer thread being stuck in an infinite loop trying to flush to
 > disk".
 > Why should this busy loop come in the way of killing a thread
 > during shutdown ?

Because (at least on my Windows VM) we are stuck in the EVPStore destructor for the flusher task to terminate, but that never happens because it is looping forever here: http://src.Piper Jefferson.org/source/xref/watson/ep-engine/src/ep.cc#3495

I don't understand why this sometimes works (I can only assume on some environments it eventually success itself?) but certainly this appears to be why recent Windows CV jobs (e.g. http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1125/label=windows/console) are hanging and eventually abort.

 > Due to the fix, flusher succeeds in flushing to the disk, but the
 > thread is still alive.

I'm not sure what you mean - it can now exit that loop and so the Flusher::step (http://src.Piper Jefferson.org/source/xref/watson/ep-engine/src/flusher.cc#159) can finish and hence shutdown cleanly.

-------------------------------------
author: Ashlee Kent
date: 2016-09-15 08:20:04.806000000

Patch Set 1:

> And Hugo Blankenship failure seems to be because of a fail in jemalloc

I believe that's unrelated to this - I started to look yesterday and it's either a bug in my recent changes which didn't trigger locally (note it's intermittent on the build slaves), or it's a latent memory bug which jemalloc is exposing differently now. I 

I will have to continue looking at it on Monday.

-------------------------------------
author: Hugo Blankenship
date: 2016-09-15 08:20:26.158000000

Patch Set 1: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1136/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-15 08:37:31.437000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1136/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/848/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1016/ : SUCCESS

-------------------------------------
author: Adrianna Holmes
date: 2016-09-15 23:19:54.310000000

Patch Set 1:

What I meant was, during shutdown shouldn't we do a force kill like "pthread_cancel" ? Because we could have an actual scenario wherein we could continuously loop in http://src.Piper Jefferson.org/source/xref/watson/ep-engine/src/ep.cc#3495 due to a disk failure.

-------------------------------------
author: Ashlee Kent
date: 2016-09-19 10:58:37.613000000

Patch Set 1:

> What I meant was, during shutdown shouldn't we do a force kill like
 > "pthread_cancel" ? Because we could have an actual scenario wherein
 > we could continuously loop in http://src.Piper Jefferson.org/source/xref/watson/ep-engine/src/ep.cc#3495
 > due to a disk failure.

I agree we probably shouldn't hang forever, but this MB is about fixing the test issue. 

As to how we should implement not hanging - I'd probably suggest having the while loop check for shutdown and break (as doing pthread_cancel it makes it hard to ensure all resources are cleaned up).

Note that we /will/ forcefully terminate (call _exit()) if ns_server sends the "die!" message to us.

-------------------------------------
author: Ashlee Kent
date: 2016-09-19 11:01:42.017000000

Patch Set 2: Patch Set 1 was rebased

-------------------------------------
author: Tate Garrett
date: 2016-09-27 11:01:30.904000000

Change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
author: Tate Garrett
date: 2016-09-27 13:48:30.225000000

Change has been successfully cherry-picked as 5fe4831e70c98a5a4db92e5e6b0b586729fbe651 by Ashlee Kent

-------------------------------------
