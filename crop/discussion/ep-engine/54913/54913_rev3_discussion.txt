DESCRIPTION

MB-16182: Setting a desired compression ratio for DCP

Set desired_compression_ratio to a default of 0.85.
Upon attempting to compress a document at the producer,
if this much compression isn't achieved, the producer
will ship the document as is.

Change-Id: Icdee922ed6ad8d215ee53e288f091dc993e9d2a2


COMMENTS

author: Emerson Nolan
date: 2015-09-01 00:53:46.658000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2015-09-01 00:53:51.429000000

Patch Set 3:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/895/

-------------------------------------
author: Hugo Blankenship
date: 2015-09-01 01:01:46.435000000

Patch Set 3: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/895/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2015-09-01 08:15:34.164000000

Patch Set 3: Code-Review-1

(5 comments)

My main concern is the compression ration being fixed for the duration of a DCP producer, which will make testing / tuning difficult.

Where possible, we should aim for late binding.

Line:174, src/dcp/producer.h -> Can you document this variable please?

Line:83, src/dcp/producer.cc -> Given that DCP streams are often long-lived and it may be desirable to change the min compression ratio without tearing everything down (not least during test / tuning), I suggest you create config listener for this setting to allow the calculated value to be changed on the fly and be picked up in existing DCP producers.

Line:566, configuration.json -> Maybe rename to "dcp_minimum_compression_ratio"? I think that better described the intent.

Line:416, src/item.h -> Same here - I think "minimum" is a better term.

Line:14839, tests/ep_testsuite.cc -> 1.5 feels a bit arbitrary - for very small documents (say 1 byte) the various compression headers will likely make the ratio larger than 1.5.

"Go big or go home" - set it to std::limits<float>::max() ?

-------------------------------------
author: Asher Vang
date: 2015-09-01 10:36:12.597000000

Patch Set 3:

Should we have a minimum size before even try to deflate?

-------------------------------------
author: Emerson Nolan
date: 2015-09-01 20:59:13.116000000

Patch Set 3:

@DaveR, I could change this to support late binding.

But like Trond suggested I think it would do good to have a minimum size even before deflating. Also it would do us even more good if we can get an accurate estimate of what the compressed length will be upon compression without actually attempting it, this would save a lot of CPU cycles as seen in my micro-benchmarks.

-------------------------------------
author: Emerson Nolan
date: 2015-09-01 21:00:27.894000000

Patch Set 3:

However, I'm not sure if we can get an accurate estimate for compressed length before attempting compression.

-------------------------------------
author: Tate Garrett
date: 2015-09-02 22:31:58.112000000

Change has been successfully cherry-picked as ef83a7d826bfd6eba9a05d13c7873e9d3bcbb7af

-------------------------------------
