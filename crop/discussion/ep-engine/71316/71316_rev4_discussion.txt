DESCRIPTION

CheckpointTest: Add a ThreadGate class

Add a ThreadGate class - an object which is used to synchronise the
execution of a number of threads.  Each thread calls thread_up(), and
until all thread have called this they are all blocked.

Note: This functionality already existed in the test but used static
variables and hence only allowed it to be used once per program
execution. A forthcoming change will want to run this test twice (with
different parameters), hence this refactoring.

Change-Id: Ic9d2da2369aa553f22d4a336e5c341a7f502687e


COMMENTS

author: Ashlee Kent
date: 2017-01-06 14:19:21.439000000

Patch Set 4: Published edit on patch set 3

-------------------------------------
author: Hugo Blankenship
date: 2017-01-06 14:19:31.003000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/2706/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-06 14:49:28.687000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2208/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-06 14:52:23.372000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2565/ (3/4)

-------------------------------------
author: Jim WNathalie Landryer
date: 2017-01-06 14:53:22.934000000

Patch Set 4:

(1 comment)

Line:111, tests/module_tests/checkpoint_test.cc -> still not sure why there's a recent desire to use the list style initializer? is there really a benefit this brings over (0) or ()?

-------------------------------------
author: Hugo Blankenship
date: 2017-01-06 14:53:53.105000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1389/ (4/4)

-------------------------------------
author: Jim WNathalie Landryer
date: 2017-01-06 14:54:39.847000000

Patch Set 4:

(1 comment)

Line:243, tests/module_tests/checkpoint_test.cc -> as above

-------------------------------------
author: Ashlee Kent
date: 2017-01-06 15:35:31.441000000

Patch Set 4:

(1 comment)

Line:111, tests/module_tests/checkpoint_test.cc -> So you can use {} for initialising everything (hence "uniform initialisation), solving the ambiguity over something being a function call or an initialisation (see https://en.wikipedia.org/wiki/Most_vexing_parse).

I'm ok to stick with () for this file on a consistency argument, but going forward I certainly want us to use the more "Modern" uniform initialisation where possible.

-------------------------------------
author: Keira Washington
date: 2017-01-06 15:40:59.089000000

Patch Set 4:

(1 comment)

Line:111, tests/module_tests/checkpoint_test.cc -> nit: Prefer in-class initializers to member initializers in constructors for constant initializers

http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#a-namerc-in-class-initializerac48-prefer-in-class-initializers-to-member-initializers-in-constructors-for-constant-initializers

-------------------------------------
author: Jim WNathalie Landryer
date: 2017-01-06 15:43:56.613000000

Patch Set 4: Code-Review+2

(1 comment)

Line:111, tests/module_tests/checkpoint_test.cc -> Got it :) leave as is

-------------------------------------
author: Tate Garrett
date: 2017-01-11 09:50:34.182000000

Change has been successfully cherry-picked as dc203416de2ca1403a1c2dfef34587ecbf9c883d by Ashlee Kent

-------------------------------------
