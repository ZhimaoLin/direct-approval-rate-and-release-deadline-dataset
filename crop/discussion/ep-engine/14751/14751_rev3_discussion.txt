DESCRIPTION

Add stats that tracks various performance stats of CouchKVStore

Add new stats to track CouvhKVStore operations such as  get/set
flush/commit operations. The new stats can be use by "cbstats host:
port" with option "kvstore".

Change-Id: I5dc04a421b10689ad24c1d4bdc570f7fd44dc770


COMMENTS

author: Macie Morton
date: 2012-04-11 01:38:57.470000000

Uploaded patch set 3.

-------------------------------------
author: Jasmin Rangel
date: 2012-04-11 01:38:59.451000000

Patch Set 3:

New patchset patch-id matches previous patchset, but commit message has changed.

-------------------------------------
author: Macie Morton
date: 2012-04-11 01:39:27.489000000

Patch Set 3:

Change commit msg.

-------------------------------------
author: Noah Dean
date: 2012-04-11 02:15:21.079000000

Patch Set 3:

I don't think you need to document a way to access stats -- it's a standardized protocol.

Documentation for stats is in docs/stats.org.  There's a kvstore section already.

The most confusing part about this is that you're combining multiple stats into a single stat output requiring all clients to support parsing and splitting (and coming up with subvalue naming conventions) instead of just having one value per result as the rest do.  It's not clear why that's necessary.

There's also a lot of code added to support having this not just be a struct of atomics (and as such, there are no atomicity guarantees in cases where there are multiple concurrent actions being performed).  I'd expect this to be slower than just using a struct (though not meaningfully), but it's certainly more code and more complication.

-------------------------------------
author: Abby Duran
date: 2012-04-11 02:38:58.978000000

Patch Set 3: I would prefer that you didn't submit this

(4 inline comments)

I'm not sure if I fully understand this change, but there are some confusing parts, which Dustin mentioned too. If you look at the sqlite stats implementation, you can easily see how we provide various stats including timings. I don't think we need to provide the same set of stats as sqlite, but you would have a better idea on which stats would be needed and useful for couchkvstore.

Let's tNathalie Landry more tomorrow.

Line:15, couch-kvstore/couch-kvstore.hh -> Let's not define macros here if possible. I looked through the code, but don't think we need these wrappers.

Line:30, couch-kvstore/couch-kvstore.hh -> I expect that the list of stats for couchkvstore would be predefined and additional stats can be added later if necessary. It would be better to define a separate stat class "CouchKVStoreStats" that contains the list of stats for this new kvstore.

Line:259, couch-kvstore/couch-kvstore.hh -> These "currentCommand" and "lastCommand" things are from mc-engine. I don't think we need to maintain them for couchkvstore.

Line:265, couch-kvstore/couch-kvstore.hh -> As mentioned above, let's define "CouchKVStoreStats" class and have its instance as the couchKVStore's member variable.

-------------------------------------
author: Asher Vang
date: 2012-04-11 03:22:06.986000000

Patch Set 3: I would prefer that you didn't submit this

(5 inline comments)



Line:346, couch-kvstore/couch-kvstore.cc -> this isn't needed...

Line:358, couch-kvstore/couch-kvstore.cc -> Wouln't the code be easier to read if we drop the ! and use an else part?

Line:468, couch-kvstore/couch-kvstore.cc -> does nothing

Line:695, couch-kvstore/couch-kvstore.cc -> not needed

Line:1432, couch-kvstore/couch-kvstore.cc -> Why not use standard javadocs format just like we do in other parts of the code?

-------------------------------------
