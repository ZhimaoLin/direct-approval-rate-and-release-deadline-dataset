DESCRIPTION

CBD-1034 Evict all of metadata fields upon an item's eviction.

When an item is evicted from the cache, its value is only
evicted from memory. To further reduce the memory overhead,
this change supports the option to evict both an item's metadata
fields and value from the cache. By default, we still only
evict an item's value from the cache, but can choose the above
option when a bucket is instantiated.

For this, we change the memory layout of resident and
non-resident items as follows:

1) For a resident item,
|StoredValue*|pointer_to_value|meta_data|key_len|key|
where meta data format:
|cas|revSeqno|bySeqno|lock_expiry|exptime|flags|

2) For a non-resident item,
|StoredValue*|NULL|meta_data|key_len|key|
or |StoredValue*|key_len|key|

If the new eviction option is chosen, this results in affecting
lots of engine APIs and also causes more disk IO overhead.
For example, SET for a non-resident item, which only has a key
and its length in memory, will require a backgroud fetch for the
metadata fields because it should know the current revision
sequence number to increment it.

Change-Id: I2edbe2b12527ef1c1fb31992cb04afbb7c078dac


COMMENTS

author: Abby Duran
date: 2013-10-01 22:34:17.989000000

Uploaded patch set 7.

-------------------------------------
