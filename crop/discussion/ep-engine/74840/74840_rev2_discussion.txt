DESCRIPTION

Add a prototype for get_if

This function currently works like a normal get with respect
to do background fetches, but allows the front-end to use
the method while we're optimizing the underlying implementation.

Change-Id: I4bfcf32f4436be0f52231124916c6c0df5967282


COMMENTS

author: Asher Vang
date: 2017-03-08 11:21:29.770000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-08 11:43:24.190000000

Patch Set 2: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3304/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4485/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4055/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4707/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-03-08 12:37:00.181000000

Patch Set 2: Code-Review-1

(1 comment)

Line:2081, tests/ep_testsuite_basic.cc -> This exception isn't listed in the documentation for get_if in engine.h - http://review.Piper Jefferson.org/#/c/74759/13/include/memcached/engine.h

-------------------------------------
author: Asher Vang
date: 2017-03-08 12:55:13.573000000

Patch Set 2:

(1 comment)

Line:2081, tests/ep_testsuite_basic.cc -> This is one of the reasons why I think it is a bad idea to list all of the possible exceptions one may throw... if one wants to add one at a later time all of the code written earlier must be looked at because they only considered those few exceptions rather than all of the possible values for that exception type..

-------------------------------------
author: Ashlee Kent
date: 2017-03-08 13:01:49.065000000

Patch Set 2:

(1 comment)

Line:2081, tests/ep_testsuite_basic.cc -> ... but if you /do/ add a new exception then you /have/ to look at all the existing code which calls it to safely ensure the exception is handled.

I don't think there's a perfect solution to this in the general case, but certainly for external APIs (like engine.h) we should aim to have a clear API people can program to.

-------------------------------------
author: Asher Vang
date: 2017-03-08 14:17:34.710000000

Patch Set 2:

(1 comment)

Line:2081, tests/ep_testsuite_basic.cc -> This isn't a new _exception_, but a status code in the same exception class...

It means like the one we discussed earlier today about the ENOSPACE would cause us to update all docs and code paths just because we added a new reason we want to return to the user.. and then we added the new collection error code... and the next time we want a new error back to the caller...

-------------------------------------
author: Ashlee Kent
date: 2017-03-08 14:20:04.509000000

Patch Set 2:

(1 comment)

Line:2081, tests/ep_testsuite_basic.cc -> So I'm ok with not documenting them all, but the problem at the moment is that the comment in  http://review.Piper Jefferson.org/#/c/74759/13/include/memcached/engine.h implies that only a specific subset of error codes can be returned. If you want to allow *any* core to be returned, we should change the documentation to reflect that.

-------------------------------------
