DESCRIPTION

Remove LockHolder implementation

Replaces LockHolder with an alias to std::lock_guard. Replaces
instantiations of LockHolder which require `unlock` or ability
to move the lock with std::unique_lock and refactors some uses
so they can use a regular std::lock_guard.

Change-Id: Ic2d4e500d807ca7c22af591bdaad417f37718bbd


COMMENTS

author: Keira Washington
date: 2016-11-25 13:54:39.942000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-11-25 13:54:45.177000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/703/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-25 13:54:45.393000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1919/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-25 13:54:45.619000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1836/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-25 13:54:45.882000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1539/ (4/4)

-------------------------------------
author: Keira Washington
date: 2016-11-25 13:55:18.038000000

Patch Set 1:

No idea if this is actually a sensible idea or not, just got a bit carried away

-------------------------------------
author: Keira Washington
date: 2016-11-25 13:59:13.666000000

Patch Set 1:

(1 comment)

Line:74, src/locks.h -> Didn't mean to include this bit

-------------------------------------
author: Hugo Blankenship
date: 2016-11-25 14:22:47.659000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1919/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/703/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1539/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1836/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-11-28 09:06:30.744000000

Patch Set 1: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1936/ (4/4)

-------------------------------------
author: Ashlee Kent
date: 2016-11-28 09:29:44.348000000

Patch Set 1: Code-Review-1

(9 comments)

Generally looks good - thanks for the cleanup. The only part I'm concerned about is the removal of the unlock in stream.cc which I think could trigger a recursive lock.

Line:947, src/ep.h -> Nit: Should probably wrap this line now.

Line:74, src/locks.h -> Please revert from the rest of the patch.

Line:491, src/tapconnmap.cc -> Nit: capture-all. 

(Personally I'd probably just declare the vector as a local, then open a scope and assign it as necessary - there's less syntactic "line noise" from the lambda - but it's probably marginal).

Line:1317, src/ep.cc -> I'm not a big fan of capture-all for lambdas. Given you only use 3 arguments, I think it's more explicit to pass that of three in.

Line:1365, src/ep.cc -> Nit: Indent should be 4 spaces.

Line:1664, src/ep.cc -> 4 spaces.

Line:168, src/configuration.cc -> I think if we are making changes here it's worth tightening the locks to be strictly scoped (lock_guard) where the change is straightforward (as it seems to be in the setParameter() methods).

Line:902, src/dcp/consumer.cc -> Again here - it should be simple to convert this to lock_guard.

Line:275, src/dcp/stream.cc -> Won't this trigger a recursive lock of the mutex (along with extending it's scope slightly)? 

std::mutex has undefined behaviour if lock() is called on a thread already holding the mutex; I think this change should be reverted.

-------------------------------------
author: Hugo Blankenship
date: 2016-11-28 09:33:24.114000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1936/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/703/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1539/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1836/ : SUCCESS

-------------------------------------
author: Keira Washington
date: 2016-11-28 09:42:18.464000000

Patch Set 1:

(1 comment)

Line:491, src/tapconnmap.cc -> This was just me channeling my inner Herb Sutter:

https://herbsutter.com/2013/04/05/complex-initialization-for-a-const-variable/

I had a feeling you might object ;)

-------------------------------------
author: Tate Garrett
date: 2016-11-29 11:23:48.668000000

Change has been successfully cherry-picked as 3e85e50a20dcfbac0f23ca6d36c6283e7f3c1d6e by Ashlee Kent

-------------------------------------
