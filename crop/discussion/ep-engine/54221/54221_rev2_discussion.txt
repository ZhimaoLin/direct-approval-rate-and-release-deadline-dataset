DESCRIPTION

ringbuffer:wrapped of type bool is being set to 0.

Setting wrapped to false, instead of 0.
Also copying wrapped to a temporary variable lwrapped
or type size_t.  Changing lwrapped to type bool.

Change-Id: Ic46d23f4b37b20f1670bcd70d38ff3fdfc215181


COMMENTS

author: Kymani Ramirez
date: 2015-08-07 15:21:17.386000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2015-08-07 15:21:22.221000000

Patch Set 2:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/711/

-------------------------------------
author: Ashlee Kent
date: 2015-08-07 15:23:53.488000000

Patch Set 2: Code-Review-1

(1 comment)

Line:78, src/ringbuffer.h -> Just delete this temporary - we don't change it, simpler to just use `wrapped` directly.

-------------------------------------
author: Hugo Blankenship
date: 2015-08-07 15:28:46.299000000

Patch Set 2: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/711/ : SUCCESS

-------------------------------------
author: Kymani Ramirez
date: 2015-08-07 15:33:02.105000000

Patch Set 2:

(1 comment)

Line:78, src/ringbuffer.h -> The original author tNathalie Landrys about creating a "snapshot" of the position and wrapped for consistency.  I don't see any kind of locks so don't see how its safe.  But did not want to change the workings.

For example if we get rid of lwrapped why don't we get rid of lpos?

-------------------------------------
author: Ashlee Kent
date: 2015-08-07 15:40:08.399000000

Patch Set 2:

(1 comment)

Line:78, src/ringbuffer.h -> Certainly - you can probably get rid of that also - but you didn't change that line :)

One can certainly debate the scope that a patch should go to when fixing an issue with existing code, but my general rule of thumb is if I'm going to change some lines of code I should ensure that the fix is as "good" as it can be - i.e. correct and appropriatly concise.

(To follow my thought process here, I saw your change to the type of `lwrapperd` and thought "ok, what is lwrapped used for"? I then scanned down and saw it was never modified and only tested in two other places, so I thought "well, we can just delete line 78, and replace the two uses of `lwrapped` with `wrapped` - bug fixed, smaller change, and code simpler than when I arrived).

-------------------------------------
author: Kymani Ramirez
date: 2015-08-07 15:44:31.272000000

Patch Set 2:

(1 comment)

Line:78, src/ringbuffer.h -> I agree with your logic - and I was going to remove the lwrapped, but the comment // snapshot the position, wrapped for consistency frightened me off.  I will revert the change back to the original patch.  And create a separate patch for the unnecessary lpos and lwrapped temporary variables.

-------------------------------------
author: Tate Garrett
date: 2015-08-08 04:44:48.339000000

Change has been successfully cherry-picked as 33dc9b183de593d80b602807560d9f85ecb5be2b

-------------------------------------
