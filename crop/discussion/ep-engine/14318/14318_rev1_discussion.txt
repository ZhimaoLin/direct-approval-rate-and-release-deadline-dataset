DESCRIPTION

don't assume ETIMEDOUT is 110

There's a problem in windows headers and/or pthreads for windows with
different values of ETIMEDOUT. Previous solution was a bit naive and
broken. It just defined 110 as CB_ETIMEDOUT and added extra case.

My compiler (quite correctly) have warning there so I was forced to
fix.

New fix hides this sad fact of two ETIMEDOUT values inside inline
wrapper for pthread_cond_timedwait. Without making assumption that 110
is ETIMEDOUT on all platforms.

Change-Id: I8dd456a92960d8247d2757c01c0d5684d4c79d89


COMMENTS

author: Nathalie Landry
date: 2012-03-26 23:53:19.545000000

Patch Set 1:

builds fine on GNU/Linux.

-------------------------------------
author: Asher Vang
date: 2012-03-27 10:29:59.251000000

Patch Set 1: I would prefer that you didn't submit this

(1 inline comment)



Line:79, common.hh -> Why not put all of this into the #ifdef win32 ?? that's the only platform affected by this function (and please drop the __ that scope is normally used by the compilers)...

The code should also be untabified...

-------------------------------------
author: Nathalie Landry
date: 2012-03-27 14:48:20.103000000

Patch Set 1:

I haven't put entire thing into ifdef so that we have less chance of breaking only one platform.

With my approach we have most of stuff checked by compiler all the time. But because it's essentially same call and nothing else and it's all inline, we have 0 overhead on anything but windows.

-------------------------------------
author: Asher Vang
date: 2012-03-27 14:56:39.883000000

Patch Set 1:

I don't understand your justification for not making it a pure win32 thing.. why is it better to just have #ifdef win32 inside the function body than around the complete thing?? I would have understood your explanation if it wasn't for the #ifdef in there...

-------------------------------------
author: Nathalie Landry
date: 2012-03-27 14:58:37.844000000

Patch Set 1:

there is bug in fact with === instead of ==. (that js thing, sorry)

My point is I want as much as possible of my change to be used all the time, because we don't test much on win32 when doing development. And thus also as tiniest as possible win32-only part.

-------------------------------------
author: Asher Vang
date: 2012-03-27 15:12:03.251000000

Patch Set 1:

The solution to the problem would be to increase our testing on our supported platforms ;-)

And as you just pointed out, the bug in this code was in the code you had in #ifdef already, so it doesn't help at all to compile the extra wrapper on all platforms...

-------------------------------------
author: Nathalie Landry
date: 2012-03-27 15:14:58.098000000

Patch Set 1:

I disagree with your disagree :) May I ask you to take over this ? There are multiple ways to address this. Particularly you can just ifdef win32 in the only place we had this CB_ETIMEDOUT thing.

I'm not sure how but it currently doesn't build otherwise with gcc 4.4 and gcc 4.5 I have.

My guess is that recent gcc point releases changed something that give this warning in this case.

-------------------------------------
