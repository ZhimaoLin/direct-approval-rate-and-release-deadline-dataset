DESCRIPTION

MB-18580: Fix failing CV testcase "tap_filter_stream"

Testcase fails with segv with the following error message:
"CouchKVStore::getDbFileInfo: Failed to open database file
for vBucket = 1 rev = 1 with error:no such file"
The reason of this failure is race condition between thread
which creates couch-db and thread which opens this file for
read operation (to get DbFileInfo).
Fix for the failure:
1. prevents core dump if couch-db has not been created
 at the time when it is being opened for read;
2. reschedules VBucket backfill task requesting to open
couch-db if task to create couch-db has been scheduled already;
3. issues proper error message that couch-db does not exist
and cancels VBucket backfill task requesting to open couch-db
if task to create couch-db has not been scheduled already.

Change-Id: I1bc83c7c9e335d0729e273d5f37e383dc17aa46d


COMMENTS

author: Cora Mccarty
date: 2016-03-12 01:03:22.207000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-03-12 01:03:28.621000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/244/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-03-12 01:03:33.617000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/197/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-03-12 01:03:33.969000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/209/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-03-12 01:21:07.204000000

Patch Set 1: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/197/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/209/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/244/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-03-14 08:57:18.865000000

Patch Set 1: Code-Review-1

(1 comment)

General approach looks good, but we don't want a copy of getDbfileInfo which is virtually the same (one which does error-checking, one which doesn't). Just enhance the error handling in the existing function sufficient so you only need one.

Line:390, src/couch-kvstore/couch-kvstore.h -> This new function is unnecessary - the existing `getDbFileInfo` already handles (some) error cases using exceptions - just enhance the existing one to throw different exceptions for invalid arguments vs. file didn't exist.

-------------------------------------
author: Cora Mccarty
date: 2016-03-14 19:42:00.627000000

Patch Set 1:

Couple things I had to clarify regarding implementation of the fix.
Yes, I do agree with Dave's comment that it's not a good practice to have two similar functions (getDbFileInfo in this case). There are few reasons why I have decided to follow with this approach though:
a) The goal was not only to fix the error message, and instead of one exception throw different more appropriate one, but to return the error code to the calling application and let it decide how to proceed (for example reschedule vBucket backfill task, etc.). This required getDbFileInfo api change - it has different return value now. But because this api is being used in other applications in kv-engine as well, I temporarily (see b)) created new getDbFileInfo proc just for the purpose of fixing this bug for now. 
b) In the long run (spoke time frame), as part of kvstore error/warning message improvement project, this code will change. Instead of run time error currently issued in getDbFileInfo or openDB apis,  we will be issuing "throw" with corresponding error code, which will be "catch"-ed at the calling application level, - this will allow calling application to continue processing as needed.  So, when this project will be completed, we will have only one copy of getDbFileInfo proc, i.e. there will be only one prototype of this function.

-------------------------------------
author: Ashlee Kent
date: 2016-03-15 08:57:03.781000000

Patch Set 1: Code-Review-2

> Couple things I had to clarify regarding implementation of the fix.
 > Yes, I do agree with Dave's comment that it's not a good practice
 > to have two similar functions (getDbFileInfo in this case). There
 > are few reasons why I have decided to follow with this approach
 > though:
 > a) The goal was not only to fix the error message, and instead of
 > one exception throw different more appropriate one, but to return
 > the error code to the calling application and let it decide how to
 > proceed (for example reschedule vBucket backfill task, etc.). This
 > required getDbFileInfo api change - it has different return value
 > now. But because this api is being used in other applications in
 > kv-engine as well, I temporarily (see b)) created new getDbFileInfo
 > proc just for the purpose of fixing this bug for now.

Temporary often stay that way. I only count two users of getDbFileInfo() :

* BackfillDiskLoad::run()
* Warmup::estimateDatabaseItemCount()

It should be trivial to update them - in fact given you're not changing the prototype at all (just throwing a new exception) there's very little work to do.

 > b) In the long run (spoke time frame), as part of kvstore
 > error/warning message improvement project, this code will change.
 > Instead of run time error currently issued in getDbFileInfo or
 > openDB apis,  we will be issuing "throw" with corresponding error
 > code, which will be "catch"-ed at the calling application level, -
 > this will allow calling application to continue processing as
 > needed.  So, when this project will be completed, we will have only
 > one copy of getDbFileInfo proc, i.e. there will be only one
 > prototype of this function.

-------------------------------------
