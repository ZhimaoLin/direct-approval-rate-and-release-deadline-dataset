DESCRIPTION

MB-18580: Fix failing CV testcase "tap_filter_stream"

Testcase fails with segv with the following error message:
"CouchKVStore::getDbFileInfo: Failed to open database file
for vBucket = 1 rev = 1 with error:no such file"
The reason of this failure is race condition between thread
which creates couch-db and thread which opens this file for
read operation (to get DbFileInfo).
Fix for the failure:
1. prevents core dump if couch-db has not been created
 at the time when it is being opened for read;
2. reschedules VBucket backfill task requesting to open
couch-db if task to create couch-db has been scheduled already;
3. issues proper error message that couch-db does not exist
and cancels VBucket backfill task requesting to open couch-db
if task to create couch-db has not been scheduled already.
Change-Id: I1bc83c7c9e335d0729e273d5f37e383dc17aa46d


COMMENTS

author: Cora Mccarty
date: 2016-03-16 00:12:41.901000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2016-03-16 00:13:54.640000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/282/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-03-16 00:49:08.828000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/233/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-03-16 00:53:26.470000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/258/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-03-16 01:12:17.746000000

Patch Set 3: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/258/ : FAILURE

Failure of a CTest test  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/258/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/233/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/282/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-03-16 01:18:23.592000000

Patch Set 3: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/263/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-03-16 01:33:04.767000000

Patch Set 3: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/233/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/282/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/263/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-03-16 09:39:15.719000000

Patch Set 3:

(2 comments)

Line:2226, src/couch-kvstore/couch-kvstore.cc -> I think the mix of exceptions and error codes for returning errors from this function is confusing - please pick one or the other. I'd suggest exceptions as any errors should be rare (exceptional) here, and they give more control on propagating errors.

If necessary create a new exception type for this if there isn't a suitable one under std::exception - say 

 class KVStore::IOError : public std::exception;

Line:2235, src/couch-kvstore/couch-kvstore.cc -> You'll get this error checking "for free" if you replace the array index ([]) with the .at() method on the vector:

 uint64_t rev = dbFileRevMap.at(vbid);

That will throw a `std::out_of_range` exception - which you can either just let get propagated to the caller, or catch and re-throw as a std::invalid_argument.

-------------------------------------
author: Cora Mccarty
date: 2016-03-16 19:26:05.633000000

Patch Set 3:

(2 comments)

Line:2226, src/couch-kvstore/couch-kvstore.cc -> Yes I agree, it would be better to have only exceptions in this proc. And that's what I have in mind for a long run, few days ago already started on KV store error handling improvement project (including "class KVStoreException : public std::exception" and many others derived from it based on couch-db and forest-db exception types). But as we have too many CV test cases failing right now, I think it makes sense to fix them asap, and only after that improve error handling all over KV store and not just for this specific failure. This way we will have general approach to handling exceptions in KV store, as well as hopefully will have failing CV test cases back on track much sooner.

Line:2235, src/couch-kvstore/couch-kvstore.cc -> Yes, good idea, this will save few lines of code. After catching an exception, I'd still rather return err_code back to caller at this time, and revise this later with throwing an exception as part of KV store error handling improvement project.

-------------------------------------
