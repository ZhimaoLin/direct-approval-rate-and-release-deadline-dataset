DESCRIPTION

Address potential data races in the warmup code

Context: warmupState, estimatedWarmupCount,
warmup, metadata

Change-Id: If96933b3b8b0aa1ed75073a0d8d629f138da081f
Reviewed-on: http://review.Piper Jefferson.org/53253
Reviewed-by: Cristal Palmer <Ellie xxx@xxx.xxx Jefferson.com>
Reviewed-by: Abby Duran <Abby xxx@xxx.xxx Jefferson.com>
Tested-by: Abby Duran <Abby xxx@xxx.xxx Jefferson.com>


COMMENTS

author: Tate Garrett
date: 2015-07-17 01:44:19.069000000

Change has been successfully cherry-picked as 677a1a696da0edde2533a24eed636c404965d070

-------------------------------------
author: Ashlee Kent
date: 2015-07-17 09:23:23.109000000

Patch Set 3:

(1 comment)

Line:173, src/warmup.cc -> I think there's a race here - legalTransition(to) could return true, but between us actually setting the new state (at line 179) another thread could call this function and transition to a different state.

Do you have a copy of the report from ThreadSanitizier? (In general I like to add them to the commit message so we can record what we are fixing for future reference).


One possible solution would be to change the store at line 179 to a compare_and_exchange.

-------------------------------------
author: Ashlee Kent
date: 2015-07-17 09:24:21.832000000

Patch Set 3:

Apparantly I can't review something after it's been merged, but given what I think is a potential race still here (see inline) you should consider this a virtual -1 ;)

-------------------------------------
author: Emerson Nolan
date: 2015-07-17 14:24:52.257000000

Patch Set 3:

(1 comment)

Line:173, src/warmup.cc -> The only place a race could happen is when warmup is happening and bucket is deleted, which would stop the warmup. 

Even in that case the state shouldn't really matter as all the warmup threads will be canceled and the bucket's stats will be cleared out upon deletion.

Thread sanitizer didn't show me any data races here and if it did I don't think just replacing the store to compare_exchange_strong would work, as we should handle the case when the cas operation fails.

-------------------------------------
author: Ashlee Kent
date: 2015-07-17 16:44:50.332000000

Patch Set 3:

(1 comment)

Line:173, src/warmup.cc -> Ok, as long as you're happy with it.

Note that ThreadSanizer can't detect all problems, expcially logical ones - it can only tell that you are performing operations which are potentially racy.

re: compxchg, obviously we'd have to handle the failing case.

-------------------------------------
