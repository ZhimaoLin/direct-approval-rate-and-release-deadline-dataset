DESCRIPTION

MB-24246: Use SequenceList::highSeqnosLock in rangeRead()

This commit serializes the BasicLinkedList::rangeRead() on the updation
of highSeqno/highestDedupedSeqno of the latest added/updated item
in the linked list. This is necessary because 'end seqno' of the
rangeRead() is got from the highSeqno/highestDedupedSeqno and is
important for marking a consistent snapshot.

This commit also adds some documentation on how to use the 4 locks
that we have now in the BasicLinkedList class.

Change-Id: I10a80f55a763d1496adec24fa12bc75d83ea1573


COMMENTS

author: Adrianna Holmes
date: 2017-05-10 20:50:31.630000000

Uploaded patch set 1.

-------------------------------------
author: Adrianna Holmes
date: 2017-05-10 21:16:48.325000000

Topic set to Ephemeral

-------------------------------------
author: Hugo Blankenship
date: 2017-05-10 21:21:02.844000000

Patch Set 1: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5623/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/6433/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4929/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/174/ : SUCCESS

-------------------------------------
author: Jace Townsend
date: 2017-05-11 08:53:17.715000000

Patch Set 1: Code-Review+1

-------------------------------------
author: Jace Townsend
date: 2017-05-11 10:09:40.038000000

Patch Set 1:

(1 comment)

Line:142, src/linked_list.h -> We do now take rangeReadLock, highSeqnosLock and the rangeLock at the same time in rangeRead too? Might be fine but thought it was worth a mention

-------------------------------------
author: Ashlee Kent
date: 2017-05-11 10:53:38.133000000

Patch Set 1: Code-Review-1

(3 comments)

Line:394, src/ephemeral_vb.cc -> We could reduce the lock scope (how long it's held) by performing the toOrderedStoredValue() cast before we acquire the highSeqno lock.

Line:407, src/ephemeral_vb.cc -> Not totally clear to me from the commit message exactly why we need the HighSeqnosLock when calling queueDirty - could you elaborate?

Line:228, src/linked_list.h -> I thought that writeLock was used to serialise changes to the content of the sequenceLIst (i.e. adding / removing / rearranging items). 

If so, how does it now differ from highSeqnosLock - does acquiring one imply requiring the other? i.e. should we just combine this locks?

-------------------------------------
author: Ashlee Kent
date: 2017-05-11 16:21:35.719000000

Patch Set 1:

(1 comment)

Line:14, /COMMIT_MSG -> Could you add an example of the scenario you're trying to avoid (say with similar notation to what James has been using) - it's not clear to me exactly why we can't do a "dirty read" on highSeqno/highestDeduped in rangeRead (at worst we miss off one element from the end of the seqlist?)

-------------------------------------
author: Jace Townsend
date: 2017-05-11 17:41:26.098000000

Patch Set 1: -Code-Review

Hmmm yeah, after pondering I agree with Dave - the highseqnolock can be folded into the write lock. IIRC (which I may not) I originally split it out in to another lock to avoid taking the rangeLock, but with this fix it is clearer that this could just be the write lock - sorry for the rabbit hole...

As to a dirty read, my guess is the issue then would be a writer holding the lock, moving an OSV to the end of the seqList, a read sneaking in and seeing the highSeqnos, and the writer then updating them, leaving the reader without the moved item.

-------------------------------------
author: Jace Townsend
date: 2017-05-11 17:55:39.997000000

Patch Set 1:

Actually, retracting the write lock opinion until I've looked more tomorrow

-------------------------------------
author: Adrianna Holmes
date: 2017-05-12 16:27:19.405000000

MISMATCHED INLINE COMMENT
Line:394, src/ephemeral_vb.cc -> Done

-------------------------------------
author: Adrianna Holmes
date: 2017-05-12 00:06:22.090000000

MISMATCHED INLINE COMMENT
Line:394, src/ephemeral_vb.cc -> Explained in the commit

-------------------------------------
author: Ashlee Kent
date: 2017-05-12 08:07:26.817000000

MISMATCHED INLINE COMMENT
Line:394, src/ephemeral_vb.cc -> I meant the `toOrderedStoredValue` call - which is basically just a dynamic cast. I belive you can do the following and simplify the code:

 // Attempt to get an osv. this doesn't change any state
 // (it's just a pointer cast).
 try {
    auto* osv = v->toOrderedStoredValue());
 } catch (bad_cast) {
     ....
 }

 // Now take the lock and so the operations we need the lock for:
 {
     std::lock_guard listWriteLg(...);
     seqList->appendToList(...);
     if (queueItemCtx) {
        ...;
     }
     updateHIghSeqno().
 }

-------------------------------------
author: Adrianna Holmes
date: 2017-05-12 00:06:22.090000000

MISMATCHED INLINE COMMENT
Line:407, src/ephemeral_vb.cc -> Explained in the commit

-------------------------------------
author: Adrianna Holmes
date: 2017-05-12 00:06:22.090000000

MISMATCHED INLINE COMMENT
Line:14, /COMMIT_MSG -> Done

-------------------------------------
author: Adrianna Holmes
date: 2017-05-12 00:06:22.090000000

MISMATCHED INLINE COMMENT
Line:142, src/linked_list.h -> Different now

-------------------------------------
author: Adrianna Holmes
date: 2017-05-12 00:06:22.090000000

MISMATCHED INLINE COMMENT
Line:228, src/linked_list.h -> Yup combined the 2 locks

-------------------------------------
