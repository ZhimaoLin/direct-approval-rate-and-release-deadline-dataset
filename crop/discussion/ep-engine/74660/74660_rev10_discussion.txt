DESCRIPTION

[Ephemeral Bucket]: Allow updates on sequential storage (linkedlist)

When an item in hashtable (in an Ephemeral vbucket) is updated, the
updated item must be placed in the right position (at the end) in
the sequential storage data structure, linkedlist.

If there are no range reads (backfills) during an update we just
update the hash table element and move the item to the end of the
list. This is somewhat similar (hashtable part) to what happens in
current ep vbuckets.

However, in case of range reads (backfills), the behavior is
different w.r.t existing ep vbuckets. The range reads are
basically point-in-time snapshots and hence require the older
(non updated) item to be there in the range of the read. But the
hashtable wants to store only the most recent (updated) item.
Hence, we mark the item as stale and transfer the ownership of the
item to the linkedlist from hashtable and add a new item with the
value of update in the hashtable and at the end of the list.

We have the module tests at the linkedlist level. Module tests at
the ephemeral vbucket level will follow soon in a future commit.

Change-Id: Ibb710a23410a44109512232ddd1aca342347b1b0


COMMENTS

author: Adrianna Holmes
date: 2017-03-08 22:11:50.798000000

Uploaded patch set 10.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-08 22:41:22.181000000

Patch Set 10: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4529/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4751/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3348/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4098/ : SUCCESS

-------------------------------------
