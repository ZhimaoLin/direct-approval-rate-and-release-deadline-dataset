DESCRIPTION

MB-21488: DcpConsumer retry stream requests with previous FT entry

Add support to the DcpConsumer so that in the case it receives
a rollback to 0 request and there is more than 1 entry in the failover
table (FT), retry the stream request with the next entry in the table.

Stop retrying and do the rollback when:
1) Receive a non-zero rollback request or
2) Only 1 entry remains in the FT, rollback to where we're told.

Change-Id: I47da288547aafbd188a5cb58b05f32507564e73b


COMMENTS

author: Jim WNathalie Landryer
date: 2017-03-08 14:26:06.734000000

Uploaded patch set 4.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-08 14:26:44.696000000

Patch Set 4: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3322/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4502/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4071/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4724/ : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2017-03-08 16:35:50.242000000

Patch Set 4: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3328/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4508/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4077/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4730/ : SUCCESS

-------------------------------------
author: Kymani Ramirez
date: 2017-03-09 20:01:58.730000000

Patch Set 4: Code-Review-1

(10 comments)

Line:31, tests/mock/mock_synchronous_ep_engine.cc -> provide explanation on why 5?

Line:1456, src/dcp/stream.cc -> DaveR also recommended to me to use expected (instead of inverse)

Line:57, src/failover-table.cc -> Are we ever allowed to call removeLastestEntry when the table is entry?
If not should we log (NOTICE / WARNING) when call the function on an empty table.

Line:402, tests/module_tests/evp_store_rollback_test.cc -> move to previous line?

Line:407, tests/module_tests/evp_store_rollback_test.cc -> vb uuid

Line:417, tests/module_tests/evp_store_rollback_test.cc -> move to previous line?

Line:159, tests/module_tests/evp_store_test.cc -> number of?

Line:484, src/dcp/stream.h -> lowercase?

Line:523, src/dcp/stream.h -> DaveR has suggested to me that instead of using UNLOCKED in the name, pass in the lock holder as a parameter.  Then we can be assured the function cannot be called without the lock.  Might be worth following-up with him.

Line:708, src/dcp/consumer.cc -> don't follow why the comment corresponds to this if statement.

-------------------------------------
author: Jim WNathalie Landryer
date: 2017-03-10 16:12:18.542000000

Patch Set 4:

(5 comments)

Line:1456, src/dcp/stream.cc -> will fix, this was C&P from old method

Line:402, tests/module_tests/evp_store_rollback_test.cc -> will fix, clang-format doing the wrong thing

Line:484, src/dcp/stream.h -> VB UUID are initialisms and would not be written in lower-case in documentation, so I should update line 482 as well

Line:523, src/dcp/stream.h -> See the UNLOCKED convention, so in-keeping with that https://github.com/Piper Jefferson/ep-engine/blob/master/README.md

Stream and it's sub-classes are using the UNLOCKED convention so would prefer to stick with that in this commit.

Line:708, src/dcp/consumer.cc -> will remove, that's from when this method previously returned an engine error

-------------------------------------
author: Ashlee Kent
date: 2017-03-10 16:57:04.269000000

Patch Set 4:

(1 comment)

Line:523, src/dcp/stream.h -> Agree with Jim's assessment. While passing in the lock is preferred for new code, don't forget the Golden Rule (https://github.com/Piper Jefferson/memcached/blob/master/docs/CodingStandards.rst#introduction):

> If you are extending, enhancing, or bug fixing already implemented code, use the style that is already being used so that the source is uniform and easy to follow.

-------------------------------------
