DESCRIPTION

Track max seqno of deleted items per vbucket

In order to guarantee monotonically increasing seqno values even for
recreated items i.e., items that are deleted and reintroduced using
an add or a set command, we track the max seqno of all deleted items
seen so far. Then, when an item is reintroduced, we pick this max
seqno value, increment it by 1 and assign it to the "new" item.
Although conservative, this guarantees that if an item is thus
reintroduced, it gets a seqno that's higher than its previous value.

Change-Id: Ibb30fc5a90db21e05bf1043bfcb1c1050f3913ce


COMMENTS

author: Tatiana Sheppard
date: 2011-12-28 03:40:15.339000000

Uploaded patch set 2.

-------------------------------------
author: Noah Dean
date: 2011-12-28 04:09:22.550000000

Patch Set 2: I would prefer that you didn't submit this

(3 inline comments)



Line:1304, stored-value.hh -> This is copied and pasted from above.  Is there a common piece of code here?

Is it OK for two items to get the same sequence number at the same time?

Line:1619, stored-value.hh -> This doesn't look threadsafe.

Line:1648, stored-value.hh -> This should be aligned properly within the instance variables.  It doesn't make a huge difference size-wise, but it shouldn't be after the statics.

-------------------------------------
author: Tatiana Sheppard
date: 2011-12-29 07:33:11.215000000

Patch Set 2: (3 inline comments)



Line:1304, stored-value.hh -> Other code around this piece of code also has some amount of duplication. IMHO, it would make more sense to refactor all of it (including the 3 lines of code here) into a separate method but I'd rather do that as a separate task.

Let me know if you still feel strongly about this, though.

Line:1619, stored-value.hh -> Didn't realize our Hashtable is further partitioned which could cause the race you've identified.

Will make maxDeletedSeqno an atomic variable and use the setIfBigger() method to achieve what's going on in updateMaxDeletedSeqno().

Line:1648, stored-value.hh -> Good point. Will fix it.

-------------------------------------
