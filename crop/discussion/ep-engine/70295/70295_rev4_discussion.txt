DESCRIPTION

Return stats if dcpDcpVbTakeoverStats returns ENGINE_SUCCESS

If we could not find a stream or the stream type was not STREAM_ACTIVE
or the stream pointer could not be cast as an ActiveStream pointer or
the stream status is STREAM_DEAD the function returns ENGINE_SUCCESS
but no stats are obtained.

This patch ensures that in these cases ENGINE_KEY_ENOENT is returned.
In addition the STREAM_DEAD check is removed from
DcpProducer::addTakeoverStats as there is one in
ActiveStream::addTakeoverStats, which returns stats.

The patch also ensure that we only call getVBucket once,
(in doDcpVbTakeoverStats) and then pass through to the sub-functions.

Change-Id: I6d355ee211383b3543e9522afdc8e46994a6ccd8


COMMENTS

author: Kymani Ramirez
date: 2016-11-24 10:44:32.661000000

Uploaded patch set 4: Patch Set 3 was rebased.

-------------------------------------
author: Hugo Blankenship
date: 2016-11-24 10:44:40.288000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1898/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-24 10:44:40.423000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1520/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-24 10:44:40.674000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1812/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-24 10:44:40.866000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/682/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-24 11:00:22.606000000

Patch Set 4: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1898/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/682/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1520/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1812/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-11-24 11:20:58.963000000

Patch Set 4: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1899/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-24 11:31:18.819000000

Patch Set 4: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/682/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1520/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1812/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1899/ : SUCCESS

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-11-25 11:03:06.378000000

Patch Set 4: Code-Review+2

-------------------------------------
author: Keira Washington
date: 2016-11-25 12:02:05.410000000

Patch Set 4:

(1 comment)

Line:781, src/dcp/producer.cc -> Not related to this patch, but as this is a static_cast it can't fail so checking if it's suddenly become null in the if block below doesn't make any sense. You could use a dynamic_cast instead although that would render the above checks pointless instead.

-------------------------------------
author: Ashlee Kent
date: 2016-11-28 09:04:58.832000000

Patch Set 4: Code-Review-1

(1 comment)

Line:972, src/checkpoint.h -> This seems an odd use of `mutable` - why are we allowing the connection map object to be changed on const objects??

-------------------------------------
author: Kymani Ramirez
date: 2016-11-28 11:32:08.569000000

Patch Set 4:

(2 comments)

Line:781, src/dcp/producer.cc -> I read-up and agree that once we are happy stream is not NULL then checking to see if "as" is null does not make sense - so will remove.

Line:972, src/checkpoint.h -> The problem was
cursor_index::iterator it = connCursors.find(name);
in getNumItemsForCursor_UNLOCKED.

Found better / correct solution was to use const_iterator i.e.
cursor_index::const_iterator it = connCursors.find(name);

-------------------------------------
