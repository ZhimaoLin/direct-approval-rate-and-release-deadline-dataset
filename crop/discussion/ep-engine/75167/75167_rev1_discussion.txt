DESCRIPTION

Use unique_ptr to manage backfills created in backfill manager

Using std::unique_ptr is a more elegant C++ way than using raw ptrs
and Adrianna Holmesally managing them.

Change-Id: Ic97df108adf50219f6785c172ac97ae9fa361a30


COMMENTS

author: Adrianna Holmes
date: 2017-03-14 18:49:29.799000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-14 19:20:31.036000000

Patch Set 1: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3562/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4748/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4309/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4976/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-03-15 09:39:14.989000000

Patch Set 1: Code-Review-1

(7 comments)

Concept is good, few suggestions on how to improve the coding.

Line:125, src/dcp/backfill-manager.cc -> Style: You don't strictly speaking need this anymore, as when `backfill` goes out of scope it'll delete what ti owns.

If you need the delete to happen at this line (i.e. before decrementing the number of snoozing backfills) then feel free to keep it here, but otherwise I'd recommend removing it as it's just adding unnecessary complexity.

Line:134, src/dcp/backfill-manager.cc -> Same

Line:246, src/dcp/backfill-manager.cc -> If you're changing this, it would be cleaner with auto and a `for` loop:

 for (auto a_itr = activeBackfills.begin(); ; a_itr != activeBackfills.end() {
     ..
 }

Line:282, src/dcp/backfill-manager.cc -> Similary here - I'd probably just remove this. We know that when `backfill` goes out of scope it'll get cleaned up, therefore there's no need to Adrianna Holmesally worry about  deleting the object (unless we *must* delete at a specific point in the code, which I don't believe is the case here).

Line:296, src/dcp/backfill-manager.cc -> Ditto

Line:311, src/dcp/backfill-manager.cc -> Cleaner (and potentially more efficient) to use splice() when moving elements between lists:

 activeBackfills.splice(activeBackfills.end(), pendingBackfills,
                        pendingBackfills.front());

Line:325, src/dcp/backfill-manager.cc -> I think you should be able to std::move() the whole existing `snoozer` pair instead of having to create a new one.

-------------------------------------
author: Liliana Harmon
date: 2017-03-15 09:55:17.342000000

Patch Set 1: Code-Review+1

-------------------------------------
author: Adrianna Holmes
date: 2017-03-15 16:49:20.705000000

Patch Set 1:

(7 comments)

Line:125, src/dcp/backfill-manager.cc -> Yeah had kept it to do the way it was before, that is, delete and then update stats. But, it shouldn't matter as we are deleting the backfill anyways.

Line:134, src/dcp/backfill-manager.cc -> Done

Line:246, src/dcp/backfill-manager.cc -> Done

Line:282, src/dcp/backfill-manager.cc -> Done

Line:296, src/dcp/backfill-manager.cc -> Done

Line:311, src/dcp/backfill-manager.cc -> Done

Line:325, src/dcp/backfill-manager.cc -> Done

-------------------------------------
