DESCRIPTION

Use 'const' for the member 'Item* value' in class 'GetValue'

Class GetValue contains a pointer to an item which is only used to
transfer out the item contained from one layer to another. It does not/
should not change the item it contains.

Hence it would be best to explicitly use const so that the item
contained is not modified by mistake in the future.

Further, it could be a future task to use std::unique_ptr<Item> in
GetValue to explicitly transfer the ownership of the item that
gets handed over from one layer to another.

Change-Id: Ic0a880f3070e299e8ff1628f3ac329aaa1a1b0cb


COMMENTS

author: Adrianna Holmes
date: 2017-05-11 21:38:03.946000000

Uploaded patch set 2: Patch Set 1 was rebased.

-------------------------------------
author: Hugo Blankenship
date: 2017-05-11 22:41:22.366000000

Patch Set 2: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5648/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/6462/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4954/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/200/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-05-12 07:39:09.397000000

Patch Set 2: Code-Review-1

(2 comments)

Line:65, src/callbacks.h -> Shouldn't we be returning this as `const`?

Otherwise you're defeating the point of making the member variable const.

Line:18, /COMMIT_MSG -> I think there's an MB for that somewhere :)

-------------------------------------
author: Adrianna Holmes
date: 2017-05-12 16:02:51.541000000

Patch Set 2:

(2 comments)

Line:65, src/callbacks.h -> No, the item is actually transferred out to the caller by the getValue() call. The caller then takes the ownership of Item*.
While in the class, that is until the ownership is not transferred out, Item* should not be altered and should only be used as read-only.

Line:18, /COMMIT_MSG -> Created now :) MB-24362

-------------------------------------
author: Ashlee Kent
date: 2017-05-12 16:47:12.116000000

Patch Set 2:

(1 comment)

Line:65, src/callbacks.h -> Then I don't really see what this change give us - value isn't used for anything in this class; other than this accessor and a simple mutator which changes it.

-------------------------------------
author: Adrianna Holmes
date: 2017-05-12 16:55:42.932000000

Patch Set 2:

(1 comment)

Line:65, src/callbacks.h -> Yeah there is nothing else that modifies 'item' for now. But class will not prevent someone from accidentally adding a function/logic that modifies the 'item'.
If you don't think it is necessary we can skip it.

-------------------------------------
author: Ashlee Kent
date: 2017-05-12 16:58:20.097000000

Patch Set 2: Code-Review+2

(1 comment)

Line:65, src/callbacks.h -> Well, If think if we are going to spend time in here we should move to unique_ptr - but given you're already implemented this now it might as well go in :)

-------------------------------------
