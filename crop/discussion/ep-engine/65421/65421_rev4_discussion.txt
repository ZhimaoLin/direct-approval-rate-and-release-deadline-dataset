DESCRIPTION

MB-20022: In DCP consumer, while adding new str on a vb, erase dead str if any

In a DCP consumer we store streams in a map with vbid as the key. Before
adding a new steam, we must erase any existing dead on that vb. Otherwise the
new stream created will not be stored in the map and hence would be deleted
immediately.

Change-Id: Ie154133464db86364a9b6a17074f93485ffc1b7a


COMMENTS

author: Adrianna Holmes
date: 2016-07-05 21:43:21.919000000

Uploaded patch set 4.

-------------------------------------
author: Hugo Blankenship
date: 2016-07-05 21:43:31.119000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/965/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-07-05 21:53:52.596000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/744/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-07-05 21:55:24.169000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/891/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-07-05 22:05:49.020000000

Patch Set 4: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/744/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/891/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/965/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-07-06 00:19:13.661000000

Patch Set 4: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/745/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-07-06 00:24:10.741000000

Patch Set 4: Code-Review-1 Verified-1

Build Unstable 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/745/ : UNSTABLE

Clang Analyser identified one or more potential bugs - see <a href="clangScanBuildBugs">clangScanBuildBugs</a> ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-clang_analyzer-master/745/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/891/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/965/ : SUCCESS

-------------------------------------
author: Adrianna Holmes
date: 2016-07-06 07:02:35.777000000

Patch Set 4:

This should not be flagged as a failure because: in all our testcases we assert on certain conditions and when there is a failure we abort the test case immediately and end the process. We do not care about free all the memory before we exit (we dont have to).
In this particular case, making MockDcpConsumer smart ptr is not possible because MockDcpConsumer obj must be deleted in mock_destroy_cookie, not explicitly.

So shall I override the Hugo Blankenship failure ?

-------------------------------------
author: Keira Washington
date: 2016-07-06 09:25:42.584000000

Patch Set 4:

Couldn't you just use a smart pointer and just release it into destroy_mock_cookie (Or set destroy_mock_cookie as the unique_ptr deleter?)

-------------------------------------
author: Ashlee Kent
date: 2016-07-06 09:35:06.613000000

Patch Set 4:

> This should not be flagged as a failure because: in all our
 > testcases we assert on certain conditions and when there is a
 > failure we abort the test case immediately and end the process. We
 > do not care about free all the memory before we exit (we dont have
 > to).

Well, if we don't have the test code clean, then it makes it hard to identify when production code leaks. As such we /should/ ensure that all memory is freed in test code.

 > In this particular case, making MockDcpConsumer smart ptr is not
 > possible because MockDcpConsumer obj must be deleted in
 > mock_destroy_cookie, not explicitly.
 > 
 > So shall I override the Hugo Blankenship failure ?

No. Just fix so you use an owning pointer / don't new or similar.

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-07-06 14:18:08.483000000

Patch Set 4:

(1 comment)

This fix looks like it applies to 3.x, 4.1.x and 4.5.x?

Line:627, tests/module_tests/dcp_test.cc -> is this leaking? can't see the delete.

-------------------------------------
author: Adrianna Holmes
date: 2016-07-06 17:35:31.619000000

Patch Set 4:

This fix does not apply to 3.1.x, 4.1.x and 4.5.x.

The bug was introduced with converting streams map to AtomicUnorderedMap

-------------------------------------
author: Ashlee Kent
date: 2016-07-06 17:37:10.148000000

Patch Set 4:

(1 comment)

Line:487, src/dcp/stream.h -> Just make all the methods protected (i.e. replace this with 'protected') - we're bound to want access from test code for the rest at some point.

-------------------------------------
author: Adrianna Holmes
date: 2016-07-06 17:38:31.573000000

Patch Set 4:

(1 comment)

Line:487, src/dcp/stream.h -> Done

-------------------------------------
author: Tate Garrett
date: 2016-07-07 23:23:21.583000000

Change has been successfully cherry-picked as 2cdc371cb86629a6b09b34ad4d04481cfb6e9aaf by Adrianna Holmes

-------------------------------------
