DESCRIPTION

MB-8606: Parallelizing warmup as a READER task

Increase the efficiency of warmup, by having multiple
threads catering to it, rather than a single thread.
Taking into considering GIO, the warmup task will now
be made a READER_QUEUE task rather than an AUX_QUEUE
task.

The advantage will be with spliting up the keyDump,
LoadingKVPairs and LoadingData state_tasks during
the warmup process into shard level tasks, and have
multiple reader threads cater to each of the sub-
scheduled tasks.

This shouldnt affect any other READER_QUEUE pertinent
task, as traffic is disabled during warmup anyway.

Change-Id: I74fbe3fd97ed34e5af9a1df121ec1988b88be651


COMMENTS

author: Emerson Nolan
date: 2013-10-05 17:56:42.210000000

Uploaded patch set 11.

-------------------------------------
author: Abby Duran
date: 2013-10-07 18:07:56.152000000

Patch Set 11: Code-Review-1

(5 comments)

Line:31, src/warmup.h -> Please remove it.

Line:150, src/warmup.h -> Please avoid putting member variables into "public" section if possible. It will make it us difficult to maintain a good modularity.

Line:159, src/warmup.h -> Please put those functions into the private section if they are only invoked by other member functions in the same class.

Line:174, src/warmup.h -> Please put the functions into the public section iff they are invoked out side of the class.

Line:388, src/warmup.h -> Why do we need this class? Can we simply invoke transition(...) directly within a sub task.

-------------------------------------
