DESCRIPTION

MB-8606: Parallelizing warmup as a READER task

Increase the efficiency of warmup, by having multiple
threads catering to it, rather than a single thread.

Taking into considering GIO, the warmup task will now
be made a READER_QUEUE task rather than an AUX_QUEUE
task.

The advantage will be with spliting up the keyDump,
LoadingKVPairs and LoadingData state_tasks during
the warmup process into shard level tasks, and have
multiple reader threads cater to each of the sub-
scheduled tasks.

This shouldnt affect any other READER_QUEUE pertinent
task, as traffic is disabled during warmup anyway.

Change-Id: I74fbe3fd97ed34e5af9a1df121ec1988b88be651


COMMENTS

author: Emerson Nolan
date: 2013-10-07 18:55:08.404000000

Uploaded patch set 14.

-------------------------------------
author: Abby Duran
date: 2013-10-08 01:05:58.199000000

Patch Set 14: Code-Review-1

(10 comments)

Abhinva,

All the comments are minor ones.

Thanks,

Line:464, src/warmup.cc -> Please remove these three lines.

Line:466, src/warmup.cc -> if (++threadtask_count == store->vbMap.numShards) {...}

Line:629, src/warmup.cc -> Please remove these three lines.

Line:631, src/warmup.cc -> if (++threadtask_count == store->vbMap.numShards) {...}

Line:658, src/warmup.cc -> Please remove these three lines.

Line:660, src/warmup.cc -> if (++threadtask_count == store->vbMap.numShards) {...}

Line:155, src/warmup.h -> Please rename it to scheduleKeyDump();

Line:158, src/warmup.h -> Please rename it to scheduleLoadingKVPairs();

Line:159, src/warmup.h -> Please rename it to scheduleLoadingData();

Line:174, src/warmup.h -> I don't think we need this mutex anymore. Please simply use Atomic<size_t> threadtask_count;

-------------------------------------
