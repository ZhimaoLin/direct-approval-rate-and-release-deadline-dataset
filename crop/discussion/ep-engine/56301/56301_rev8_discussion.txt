DESCRIPTION

MB-16632: As part of queueDirty schedule a DCP connections notifier task

This is how things are done for TAP.
This pretty much removed the notifications' lock overhead on
store/delete/(front-end) OP latencies.

Change-Id: I32c3c26daf6ea8cebeecc2a81fb1f0e957ba3e3d


COMMENTS

author: Emerson Nolan
date: 2015-10-26 19:01:19.987000000

Uploaded patch set 8.

-------------------------------------
author: Hugo Blankenship
date: 2015-10-26 19:01:24.895000000

Patch Set 8:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/184/

-------------------------------------
author: Hugo Blankenship
date: 2015-10-26 19:17:32.298000000

Patch Set 8: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/184/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2015-10-26 19:17:33.421000000

Patch Set 8:

(5 comments)

General structure looks better - thanks. Just a couple more suggestions:

Line:1219, src/connmap.cc -> Personally I think "snooze is a bit of a misnomer, as it actually implies that the current thread will go so sleep - when in fact we just immediately return to the caller. I'd drop or change the comment.

Line:1227, src/connmap.cc -> Note there probably will be contention for this lock in large clusters.

Let's put this back to a normal lock holder - it shouldn't be necessary to use a spinlock (and it's actually less efficient if there's contention - proper pthread_mutex support allows the OS to wake the thread holding the lock if necessary).

Line:1231, src/connmap.cc -> Same comment as above.

Line:436, src/connmap.h -> Any idea what the unit of time is here? Ideally we wouldn't poll at all and just wait for an event to wake us up.

Line:511, src/connmap.h -> Nit: While functionally the same, it's probably more self-documenting if you create a simple wrapper struct for these two elements instead of an anonymous std::pair - i.e.

 struct Producer_Notification {
     uint16_t vbid;
     uint64_t seqno;
 }

-------------------------------------
author: Emerson Nolan
date: 2015-10-26 19:56:05.833000000

Patch Set 8:

(3 comments)

Line:1227, src/connmap.cc -> I'll push that in a separate change, as it would mean changing other code as well.

Line:436, src/connmap.h -> This is the snooze time and is in seconds. 

You're right we shouldn't need to poll, but if we don't set a sleep time here, the scheduler will set it to 0 by default - Which means that it should be set to something large.

I set this to 1 sec just to make sure that if in case of any race in the scheduler, this task wouldn't just sleep forever.

Line:511, src/connmap.h -> Done

-------------------------------------
author: Tate Garrett
date: 2015-12-02 00:34:38.823000000

Change has been successfully cherry-picked as fa17728e7ca0c637c84a2208b5decfe7ba7e54f1

-------------------------------------
