DESCRIPTION

MB-10164: Set numShards based on disk access speed

In configuration.json, numShards is initialized to zero.
If this value is greater than zero, this will be used
as numShards, otherwise using sigar we determine the
disk access, based on which numShards gets set to either
4 or 2. If sigar also fails, set numShards to 4 by
default.

Change-Id: Ie79348816fbd4bc11648c825014e6670b451bd99


COMMENTS

author: Emerson Nolan
date: 2014-03-20 22:25:27.911000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2014-03-20 22:52:08.446000000

Patch Set 3:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-300/339/

-------------------------------------
author: Hugo Blankenship
date: 2014-03-20 22:52:29.322000000

Patch Set 3: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-300/339/ : FAILURE

-------------------------------------
author: Ellie Kidd
date: 2014-03-20 23:03:22.861000000

Patch Set 3: Code-Review+2

Thanks Abhinav

-------------------------------------
author: Abby Duran
date: 2014-03-21 19:21:19.682000000

Patch Set 3: Code-Review-1

(6 comments)

Please add the unit test for this feature.

Line:38, src/workload.cc -> Can you put some comments on what this for loop tries to do?

Line:48, src/workload.cc -> I don't see where we use "fsi" in this function.

Line:57, src/workload.cc -> I'm not sure what this logic means. Can you put some comments on it?

Line:25, src/workload.h -> Move this to .cc file and use const size_t variable instead of macro.

Line:38, src/workload.h -> const std::string &pathSample

Line:39, src/workload.h -> Please move the body of this constructor to .cc file.

-------------------------------------
author: Ellie Kidd
date: 2014-03-21 20:06:58.877000000

Patch Set 3: -Code-Review

(3 comments)

Line:38, src/workload.cc -> Hi Chiyoung, Just a quick update - this loop searches for the correct filesystem corresponding to a given path from a list of filesystems present. This is needed for the sigar_file_system_usage_get() call since that is where it records the read and write times of the underlying media.

Line:48, src/workload.cc -> Sorry about this, it was left over from debugging.

Line:57, src/workload.cc -> Only SSD devices have differential write and read times, whereas spinning disks do not. This logic is basically using this property to distinguish SSD from a spinning disk.
Perhaps we can change this to have absolute values too?
thanks

-------------------------------------
author: Tate Garrett
date: 2014-03-24 19:14:44.430000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
