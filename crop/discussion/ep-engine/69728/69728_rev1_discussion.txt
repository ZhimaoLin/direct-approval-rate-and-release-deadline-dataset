DESCRIPTION

LockPhosphor: Providing the ability to event trace locks

Introduce a new LockHolder wrapper that creates Phosphor events when
attempting to acquire a lock and when the lock is released.

Change-Id: I69c12e3ff3ab6b1881188c75bf34271691230a18


COMMENTS

author: Kymani Ramirez
date: 2016-11-09 14:10:47.465000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-11-09 14:10:56.961000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1646/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-09 14:10:57.106000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1754/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-09 14:10:57.260000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/548/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-09 14:10:57.406000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1401/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-09 14:11:59.365000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/548/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1401/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1646/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1754/ : ABORTED

-------------------------------------
author: Keira Washington
date: 2016-11-09 14:20:09.758000000

Patch Set 1:

(2 comments)

Line:66, src/locks.h -> Generally this sort of thing doesn't need to be determined at runtime so this just seems to be working around the fact that c++ doesn't have named constructors.

I would recommend doing this using tagged constructors like std::lock_guard (See: http://en.cppreference.com/w/cpp/thread/lock_tag). These work by creating one or more distinct types that select different constructor overloads. This way you avoid the additional runtime cost.

Line:395, src/locks.h -> This will generate garbage events if the lock has already been unlocked

-------------------------------------
author: Kymani Ramirez
date: 2016-11-09 16:09:58.274000000

Patch Set 1:

(2 comments)

Line:66, src/locks.h -> Fixed.
(I was not aware of tagging - thanks)

Line:395, src/locks.h -> good spot - fixed.

-------------------------------------
