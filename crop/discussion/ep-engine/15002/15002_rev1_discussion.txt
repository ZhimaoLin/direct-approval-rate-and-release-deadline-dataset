DESCRIPTION

MB-5025 disable flushall by default

Flushall operation is disabled and return as noop by default. In the cases
flushall is necessary, this change-set introduces an engine parameter to
enable the operation..

Change-Id: If6312be63b6d18a0d0b5f7923f6abc5d88237e5e


COMMENTS

author: Macie Morton
date: 2012-04-19 01:05:53.015000000

Patch Set 1: Verified



-------------------------------------
author: Macie Morton
date: 2012-04-19 01:08:22.636000000

Patch Set 1:

Fashid,

Please grab the change set and test it.  I am not sure how to create FLUSHALL command in test suite (looks like there is no flushall operation defined, like OPERATION_SET, OPERATION_REPLACE, etc). Thanks.

-------------------------------------
author: Andreas Short
date: 2012-04-19 01:24:03.384000000

Patch Set 1: Do not submit

(2 inline comments)

Since it's returning failure forever, this change really needs to send back an error with additional information to the client-- not just generic failure.  It may not save much confusion for the user, but since this is planned to be here pretty much "forever", we should send back the additional info.

In the test suite, I believe we just Adrianna Holmesfacture packets and send them in.  Chiyoung should be able to point you to appropriate information on building the right test.

Line:1802, ep.cc -> What will this negative return actually return to a client?  I think it'd be a SERVER_ERROR without a message.  For this, we should really have a message.  Look at some other examples, like those that return TMPFAIL.

Line:832, ep_engine.h -> comment seems superfluous

-------------------------------------
author: Noah Dean
date: 2012-04-19 03:27:30.048000000

Patch Set 1: (2 inline comments)

I don't understand the confusion around testing.  Something like six or so of the unit tests involve flush.  Any of the functions that start with "test_flush" implement these.

-------------------------------------
author: Asher Vang
date: 2012-04-19 04:28:07.099000000

Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)



Line:1800, ep.cc -> Why not bypass it in ep_engine.cc where we handle the flush command?

Line:833, ep_engine.h -> c++ normally use camelCase for variables, and we should try to make sure our new code look like C++ to move us to a more consistent world...

-------------------------------------
author: Noah Dean
date: 2012-04-19 05:43:25.387000000

Patch Set 1: Fails

If this disables flush by default, shouldn't all the existing flush tests fail?  Six of them pass and two of them fail.

-------------------------------------
author: Noah Dean
date: 2012-04-19 03:27:29.993000000

MISMATCHED INLINE COMMENT
Line:1448, ep_engine.cc -> You don't need these two variables.

-------------------------------------
author: Noah Dean
date: 2012-04-19 03:27:29.993000000

MISMATCHED INLINE COMMENT
Line:1528, ep_engine.cc -> I don't think you need any of this.  If you actually needed the temporary variable, you could just say

    flushall_enabled = items[flushall_mode_idx].found && flushall_mode;

However, that's not how the rest of the code works.

-------------------------------------
