DESCRIPTION

MB-18452: Force DcpConsumer processor task to yield

Introduce a config tunable that limits how many iterations
a core loop of the Processor task can perform. This
prevents the task from sitting an running for as long
as there's data without allowing another task to run.

Change-Id: Ifce5a18fc807285471b08e9737cedb5db2b7923f


COMMENTS

author: Jim WNathalie Landryer
date: 2016-06-01 14:16:05.976000000

Uploaded patch set 6.

-------------------------------------
author: Hugo Blankenship
date: 2016-06-01 14:16:15.100000000

Patch Set 6:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/769/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-06-01 14:16:15.384000000

Patch Set 6:

Branch restricted. PLEASE READ this URL: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/15887/artifact/restricted.html : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2016-06-01 15:23:17.416000000

Patch Set 6:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/528/ (2/3)

-------------------------------------
author: Ashlee Kent
date: 2016-06-01 15:36:09.603000000

Patch Set 6:

(12 comments)

halfway through, will complete later.

Line:2137, src/ep_engine.cc -> This code is actually incorrect / unnecessary (and it was broken beforehand) - new() will throw a `std::bad_alloc` exception on failure, not return null.

Line:1471, src/dcp/stream.cc -> Nit/Style: I've been trying to give any exceptions a standard format where possible - function name followed by the message; to make it easier to scan / look them up. For example:

 throw std::invalid_argument("NotifierStream::transitionState:"
                " newState (which is " + std::to_string(newState) +
                ") is not valid for current state (which is " +
                std::to_string(state_) + ")");
    }

Line:1537, src/dcp/stream.cc -> As above.

Line:212, src/dcp/consumer.h -> Could you add a comment describing what this variable is for (the name admittedly is pretty good; but would be useful to at least point to the main function which makes use of it).

Line:33, src/fakes/fake_executorpool.h -> Nit: Please keep the blank line between "our" headers and the <system> ones.

Line:138, src/fakes/fake_executorpool.h -> Would it be clearer to just have the arity-0 version directly call `checker(run())`; and the artiy-1 version unconditionally do the EXPECT_EQ() and then checker(run())?

I think the (slight) code duplication is worth it to have each function more clear what it does.

Line:161, src/fakes/fake_executorpool.h -> I /think/ the expected/actual arguments are backwards here (expected is first).

Line:184, src/fakes/fake_executorpool.h -> I think this member variable probably wants a brief comment.

Line:140, src/dcp/consumer.cc -> Strictly speaking you don't even need this now; the destructor of std::vector will delete all its elements.

Line:785, src/dcp/consumer.cc -> Would it be slightly more idiomatic to make this function return a passive_stream_t; and then the caller can just check if its non-NULL?

Line:818, src/dcp/consumer.cc -> Would be more defensive to check for `eval == all_processed`; that way if we ever change that function to return a third result (more_to_process or similar) we'll break out of the loop.

Line:819, src/dcp/consumer.cc -> Nit: alignment of second and third clauses is off by one space (should align under `bytesProcessed`

-------------------------------------
author: Hugo Blankenship
date: 2016-06-01 15:39:46.770000000

Patch Set 6:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/684/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-06-01 15:47:05.788000000

Patch Set 6: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/528/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/684/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/769/ : SUCCESS

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-06-02 10:05:49.454000000

Patch Set 6:

(7 comments)

Line:2137, src/ep_engine.cc -> Done

Line:1537, src/dcp/stream.cc -> Done

Line:212, src/dcp/consumer.h -> Done

Line:161, src/fakes/fake_executorpool.h -> Done

Line:785, src/dcp/consumer.cc -> The issue was that even a passive_stream_t containing null, costs "spinlock cycles" to assign, so returning a passive_stream_t and getting the caller to check will invoke the copy-cons and spinlocks which i'm trying to avoid

Line:818, src/dcp/consumer.cc -> Done

Line:819, src/dcp/consumer.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2016-06-16 15:01:31.551000000

Change has been successfully merged into the git repository by Ashlee Kent

-------------------------------------
