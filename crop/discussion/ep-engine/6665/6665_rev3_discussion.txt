DESCRIPTION

keep cookie refcount for backfill thread life duration.

When new tap connection replaces old with same name we release cookie,
which will likely free it and allow memcached to reuse same cookie for
later connections. Which will make validity check in backfill thread
to succeed when backfill thread is in fact stale. This was observed in
'real-world' by Abby Duran.

In order to prevent that we just increment refcount before starting
backfill thread and decrement it when backfill thread is dying.

Because memcached refcount ops implementation is not synchronized and
refcount decrementing from tap thread and backfill thread may race
each other, we have to use some own lock. TapConnMap#notifyLock was
choosen.

Change-Id: If640823152e1d0912f5f038b2a0e0ac4cd3e04b3


COMMENTS

author: Abby Duran
date: 2011-05-31 11:52:42.871000000

Uploaded patch set 3.

-------------------------------------
author: Asher Vang
date: 2011-05-31 11:52:46.731000000

Patch Set 3: Looks good to me, approved

Automatically re-added by Roselyn Villegas trivial rebase detection script.

-------------------------------------
author: Abby Duran
date: 2011-05-31 11:52:48.048000000

Patch Set 3: Looks good to me, approved

Automatically re-added by Roselyn Villegas trivial rebase detection script.

-------------------------------------
author: Abby Duran
date: 2011-05-31 19:51:27.613000000

Patch Set 3: Verified



-------------------------------------
author: Abby Duran
date: 2011-05-31 19:51:27.772000000

Change has been successfully cherry-picked as ff68a577c2d91411c8c3ae6a2b26f2e373d88d54.

-------------------------------------
