DESCRIPTION

[Slow test] Account for slowness of test case

Context: test_expiration_on_warmup

Change-Id: I7ff1c9cf79e98125686e2a09bba3a3788f728854


COMMENTS

author: Emerson Nolan
date: 2016-01-14 21:33:55.684000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-01-14 21:59:38.041000000

Patch Set 1:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1276/ (2/2)

-------------------------------------
author: Ashlee Kent
date: 2016-01-14 22:06:59.309000000

Patch Set 1: Code-Review-1

(1 comment)

Line:986, tests/ep_testsuite.cc -> It's highly desirable for unit tests to be deterministic - to always test the same "thing" every time they run. Having a test which sometimes does one thing and sometimes does something else (vis this if() statement) is not very good. 

Imagine trying to debug an issue with this - sometimes you'll get the timeTravel and engine reload, other times you won't...

Can you solve the underlying problem in a way which keeps the test's behaviour deterministic?

-------------------------------------
author: Hugo Blankenship
date: 2016-01-14 22:13:01.074000000

Patch Set 1: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2038/ : SUCCESS

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1276/ : SUCCESS

-------------------------------------
author: Emerson Nolan
date: 2016-01-14 22:15:31.959000000

Patch Set 1:

(1 comment)

Line:986, tests/ep_testsuite.cc -> I think that can be achieved by perhaps getting rid of the previously used wait_for_flusher_to_settle.

My best bet at the moment on why this test failed before, was probably because it took too long owing to a slow disk.

-------------------------------------
author: Emerson Nolan
date: 2016-01-14 22:18:43.816000000

Patch Set 1:

(1 comment)

Line:986, tests/ep_testsuite.cc -> But that could cause a problem, if the item doesn't even persist by the time we restart, so what I'll do is set the expiration time to a higher value like we do for the expiration_on_compaction test.

-------------------------------------
author: Tate Garrett
date: 2016-01-15 01:24:22.412000000

Change has been successfully cherry-picked as 0ec06eb953bcb4efcb6ddb75377b0db19967321b

-------------------------------------
