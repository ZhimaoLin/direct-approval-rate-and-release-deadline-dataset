DESCRIPTION

Add Notifiable class

We need to be able to notify the UprConsumer as well as the
UprProducer and this is different than the requirements for tap. I'm
usually not a fan of multiple inheritance, but I think in this case
it works pretty well. The idea is to have the notification state in
the Notifiable class. Then any class that wants to be notifiable in
the ConnMap just needs to extend this class. In the future when we
remove tap we can refactor this multiple inheritance out.

Change-Id: I1c8a9c19084e6d72b9710d048886f2d2243bac78


COMMENTS

author: Kenny Maynard
date: 2014-03-06 01:18:24.496000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2014-03-06 03:59:16.773000000

Patch Set 3: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-300/229/ : SUCCESS

-------------------------------------
author: Abby Duran
date: 2014-03-06 22:29:18.021000000

Patch Set 3: Code-Review-1

(5 comments)

Line:225, src/tapconnmap.cc -> connection_t &conn

Line:504, src/tapconnmap.cc -> We should release it for consumer as well. That's why it is invoked above.

Line:722, src/tapconnmap.cc -> Same comment as above.

Line:197, src/tapconnmap.h -> minor one, connection_t &conn

Line:230, src/tapconnection.h -> I think you need this function for consumer as well.

-------------------------------------
author: Kenny Maynard
date: 2014-03-07 22:03:32.431000000

Patch Set 3:

(5 comments)

Line:225, src/tapconnmap.cc -> I can make this change if you want, but this would mean I would have to create a connection_t object before passing thins into this function. If I don't do this then I can pass in a Producer pointer and this gets created automatically. Let me know what you would prefer.

Line:504, src/tapconnmap.cc -> Done

Line:722, src/tapconnmap.cc -> Done

Line:197, src/tapconnmap.h -> See my other comment.

Line:230, src/tapconnection.h -> Done

-------------------------------------
