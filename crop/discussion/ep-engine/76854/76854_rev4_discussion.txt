DESCRIPTION

MB-23936: Use Threadlocal variables to accumulate stats

Currently when we allocate/deallocate memory, we update the per bucket
variable `totalMemory`. Mutiple threads contend on this variable heavily
as mem allocation/deallocation happen often. The primary idea of
this commit is to maintain threadlocal mem counters for each bucket and
merge it to the `totalMemory` once the local counter reaches a threshold
either based on size or no.of times the local counter has been updated.
This does show a notable increase in overall performance.

Limitations:
-----------
- We create one thread local variable per bucket. Different OS'es seem
  to enforce different limits on the no.of tlv. Although we have a hard
  limit of 10 buckets, I'm noting this here for future reference.
  -> [NetBSD:256 Linux:1024 OSX:512 Windows:1088]

- Windows does not seem to provide an api for releasing the mem
  allocated for a thread-local on thread exit in a way like pthreads do.
  So there will be a small leak of about (3*long) on every bucket
  unload.

- Valgrind might say that the unit tests have leaks on the
  threadlocals. This is because, in the tests, bucket init happens on
  the main thread & when main thread exits the program it does not
  call pthread_exit, so the dtors are not called.

Change-Id: Id14ced2776a29afae18831b372140dd028136b32


COMMENTS

author: Trace Williamson
date: 2017-04-20 19:26:48.626000000

Uploaded patch set 4.

-------------------------------------
author: Hugo Blankenship
date: 2017-04-20 19:54:46.504000000

Patch Set 4: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4687/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/5907/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5390/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/6155/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-04-20 20:03:12.161000000

Patch Set 4:

> (13 comments)
 > 
 > We might  have to investigate boost stuff in more detail as the
 > page says:
 > Note: on some platforms, cleanup of thread-specific data is not
 > performed for threads created with the platform's native API. On
 > those platforms such cleanup is only done for threads that are
 > started with boost::thread unless boost::on_thread_exit() is called
 > Adrianna Holmesally from that thread.

Sure, but at least we can just call boost::on_thread_exit() in our main thread and have it handle it for us - i.e. it already provides a solid abstraction for us.

-------------------------------------
author: Ashlee Kent
date: 2017-04-20 20:11:43.271000000

Patch Set 4: Code-Review+1

(1 comment)

I think this is good to go; but I want to merge it somewhat carefully so it goes in in a build by itself to make it easier to measure it's contribution - which I'll hopefully do tomorrow.

Line:6628, tests/ep_testsuite.cc -> these also need re-ordering ;)

-------------------------------------
