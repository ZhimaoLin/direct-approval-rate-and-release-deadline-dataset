DESCRIPTION

Initial version of the SYNC command

This is still a work in progress.
Missing:

- well defined request and response messages (flags, response information);
- sync for replication;
- check keys' dirtiness before blocking client;
- more tests

Added static qualifier to avoid compiler error

On some g++ versions, this caused a compilation error

Change-Id: I6c08f9f409441c8e3975ba8e1aecae122e56102a


COMMENTS

author: Porter Oconnor
date: 2011-02-22 20:03:34.854000000

Uploaded patch set 6.

-------------------------------------
author: Asher Vang
date: 2011-02-22 20:36:03.188000000

Patch Set 6: (6 inline comments)

Just did a quick pass through the code and got some small comments...

Line:3, sync_registry.hh -> new year and name

Line:19, sync_registry.hh -> Please include config.h first so that we might redefine stuff in there..

Line:385, ep.hh -> Why not SyncRegistry &syncRegistry ?

Line:3, sync_registry.cc -> New year and company name ;)

Line:41, sync_registry.cc -> Shouldn't you grab the lock before calling begin()?

Line:467, ep_engine.cc -> Thats basically the same as (request + 1). You could save that as a pointer to the body of the message (Please note that this happens to work perfectly for this kind of struct beacause it's 64-bit-aligned in size ;))

-------------------------------------
author: Porter Oconnor
date: 2011-02-22 20:48:59.689000000

Patch Set 6: (2 inline comments)

Thanks Trond.

I left a comment about the lock.
I will apply the other changes by tomorrow.

Line:3, sync_registry.hh -> Right, copy-pasted :)

Line:41, sync_registry.cc -> Why should I? I don't think there will be multiple threads manipulating it.
Basically I wanted to keep the critical section as short as possible :)

-------------------------------------
author: Asher Vang
date: 2011-02-22 21:11:20.357000000

Patch Set 6: (1 inline comment)



Line:41, sync_registry.cc -> Well, we've had troubles (read crash) from calling some of the members on the stl containers one would think should be "safe", but it turned out that it accessed internal pointers and then another thread changed it... THat being said I don't think increasing the section with that call will make your code much slower ;)

-------------------------------------
author: Porter Oconnor
date: 2011-02-22 21:21:23.255000000

Patch Set 6: (1 inline comment)



Line:41, sync_registry.cc -> Right it will not cause any significant slowdown.
But if some other thread changes it, it's certainly not locking the internal mutex of SyncRegistry before modifying the container, or is it? If it isn't, than it's pointless to lock before.

Nevertheless, I have no objection to lock before getting the iterator.

-------------------------------------
author: Abby Duran
date: 2011-02-25 03:38:01.862000000

Patch Set 6: Verified; Looks good to me, approved

(2 inline comments)



Line:385, ep.hh -> As Trond suggested, I think it is simpler to use SyncRegistry &syncRegistry and initialize it through syncRegistry(syncReg) in the constructor.

Line:490, ep_engine.cc -> I think vbucketid = ntohs(vbucketid) should be placed here.

-------------------------------------
author: Tate Garrett
date: 2011-02-25 03:38:01.988000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
