DESCRIPTION

MB-5231: XDCR code cleanning

This change set addreses earlier code review comment from Chiyoung.

Change-Id: I627507f3364c1cc58daa50f57e5a6e0b2eff1624


COMMENTS

author: Macie Morton
date: 2012-05-07 21:41:38.878000000

Uploaded patch set 2.

-------------------------------------
author: Noah Dean
date: 2012-05-07 21:46:45.630000000

Patch Set 2: (2 inline comments)

This really looks like it should be at least three commits.

Line:1242, ep.cc -> This means something *way* different.  It shouldn't go into a glob of changes called "code cleaning".  It's here to solve a specific issue and should be handled specifically (and if it's wrong, it should be backed out without affecting other code and vice versa).

Line:484, stored-value.cc -> This is also not code cleaning, but a semantic change.

-------------------------------------
author: Haiden Reyes
date: 2012-05-07 21:47:03.925000000

Patch Set 2:

In PS2:

1) convert structure item_metadata to class to enable constructor and delete individual initialization
2) push setNonResident() into HashTable::unlocked_add() to eliminate unnecessary lookup in ep_engine.
3) fix some comment

-------------------------------------
author: Haiden Reyes
date: 2012-05-07 21:59:58.898000000

Patch Set 2: (1 inline comment)



Line:1242, ep.cc -> Dustin, My understanding why Chiyoung wants to remove isDirty()) check here is that it is already contained in isResident(). Whenever user created/set a item w/ the same key before BG fetch comes back, it marked the item resident&dirty.  Can you name example of any of two cases?

1) a temp del item is marked dirty but not resident
2) a temp del item is marked resident but clean

If any case happens, it will break the code change. 

Chiyoung, please explain and correct me if I miss anything.

-------------------------------------
author: Noah Dean
date: 2012-05-07 23:04:32.893000000

Patch Set 2: (1 inline comment)



Line:1242, ep.cc -> Changing something from running when it's not dirty to running when it's not resident usually deserves a better description than "code cleaning."

These types of things get really confusing when you're looking back to why you changed the behavior of something and you find the answer to be "cleaning."  (many memcached bugs were arbitrary changes introduced as "merge performance branch" with no further explanation (and no merge)).

-------------------------------------
author: Macie Morton
date: 2012-05-07 23:38:55.427000000

Patch Set 2: (1 inline comment)



Line:1242, ep.cc -> I would change the commit msg in next patch set since you think it is more than a code cleaning.  At the meantime, do you have any concern that we can use isResident() instead of isDirty()?

-------------------------------------
author: Noah Dean
date: 2012-05-07 23:42:36.868000000

Patch Set 2: (1 inline comment)



Line:1242, ep.cc -> I don't think you should change the commit message.  I think this should be (at least) three different commits.  This is a semantic change.  There's another, different, semantic change in a different file.

You don't generally want the commit messages to grow to the scope of all of the things you've done, but each commit to be small enough that it's independent and can be reverted or studied separately at the future point where there's a problem and you want to understand why something was changed.

Whether or not this changing from dirty to resident is a problem, I don't know.  But if there's ever a point where you want to find out why it changed, you'd want that in a commit about changing from !isDirty() to !isResident() instead of "code cleaning and other stuff"

-------------------------------------
author: Macie Morton
date: 2012-05-07 23:50:48.026000000

Patch Set 2:

Chiyoung, let's take Dustin's comment. 

Dustin, if ok with you,  I will split this commit into 3 commits.

1) code cleaning of ep_testsuite.cc, fix some line wrap us issues

2) convert item_metadata from structure to class

3) check if temp del item is dirty or resident. 


1) and 2) will be new commits which I would send shortly
This commit will be shrunk to commit 3) only.

-------------------------------------
author: Noah Dean
date: 2012-05-08 00:03:57.428000000

Patch Set 2:

It's all OK with me.  I'm just making suggestions.  :)  I've dealt with enough problems tracking things down that I'd hope nobody else would have to.  In many cases, it's really simple things like this that lead to a better overall understanding of the changes that lead up to things.  Not always problems, but sometimes one wants to change something, but needs to understand why it is the way it is better.  Commit histories tell wonderful stories of the evolution of code.

-------------------------------------
