DESCRIPTION

MB-8552: Support for datatype field

- As part of extended flexible metadata
In memory::
 __________________________________________________
| key |  MetaData  (cas,exp,flags)  |   VALUE BLOB |
|_____|_____________________________|______________|

VALUE BLOB:
 __________________________________________________
| FLEX_META_CODE (1B) | DATATYPE (1B) | VALUE BLOB |
|_____________________|_______________|____________|

FLEX_META_CODE = 0x01, indicating one field in the extended
metadata section

In couchstore::

METADATA BUFFER:
 _______________________________________________________________________
| cas (8B) | exp (4B) | flags (4B) | FLEX_META_CODE (1B) | datatype(1B) |
|__________|__________|____________|_____________________|______________|

Change-Id: Ifb3bc59892130f2fddf02f2188773ba3a67f2ce1


COMMENTS

author: Emerson Nolan
date: 2014-01-10 23:38:53.333000000

Uploaded patch set 11.

-------------------------------------
author: Abby Duran
date: 2014-01-14 00:34:24.393000000

Patch Set 11: Code-Review-1

(14 comments)

Line:1756, src/tapconnection.cc -> Use NULL instead of 0x00

Line:1786, src/tapconnection.cc -> Same as above.

Line:1519, src/ep_engine.cc -> Let's define "getDataType()" and "getExtMeta()" separately in Item class as "datatype" is already part of a default header.

Line:254, src/couch-kvstore/couch-kvstore.cc -> Get it through it.getDataType()

Line:1344, src/couch-kvstore/couch-kvstore.cc -> This is buggy and not generic. Please init it as uint8_t *ext_meta = NULL and allocate the memory based on ext_len below, and free it before returning from this function.

Line:1359, src/couch-kvstore/couch-kvstore.cc -> Please replace "16" with DEFAULT_META_LEN

Line:1421, src/couch-kvstore/couch-kvstore.cc -> Same comment as above.

Line:36, src/item.cc -> Simplify this stmt to i.getValue()->vlength()

Line:56, src/item.cc -> Simplify this stmt to value->getValue()->vlength()

Line:62, src/item.h -> This constructor will cause a seg fault in the functions that you adapted or added below because "FLEX_DATA_OFFSET" and "ext_len" are not treated correctly in this constructor.

Line:88, src/item.h -> Shouldn't we add "FLEX_DATA_OFFSET + ext_len"?

Line:59, src/item.h -> Please adapt the comment according to the parameters that are newly added.

Line:152, src/item.h -> We should check the length of extMetaLen and return NULL if the length is zero.

Line:189, src/item.h -> Simplify "size - exMetaLen - FLEX_DATA_OFFSET" to vlength()

-------------------------------------
author: Tate Garrett
date: 2014-01-14 07:08:15.970000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
