DESCRIPTION

Refactor the RWLock to allow locking through a std::lock_guard

This patch alters the RWLock to refactor control of its reader
/ writer locking / unlocking through the use of `reader()` and
`writer()` member functions which return references to a
`ReaderLock` and `WriterLock` object respectively. These objects
both implement `BasicLockable` around their respective aspect
of the RWLock.

This allows the RWLock to be RAII managed by a std::lock_guard
instead of an application specific lock holder:

    RWLock rw;

    void my_func() {
        std::lock_guard<ReaderLock> rlh(rw.reader());
        // reader lock is held

        ...
    } // reader lock is released

This also moves exception based error control into the RWLock
class.

Change-Id: I6cd5a6147ff23fddd3039d98e1dc1a9af41efcb3


COMMENTS

author: Keira Washington
date: 2016-11-29 12:34:25.031000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2016-11-29 12:34:34.550000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1566/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-29 12:34:34.683000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1870/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-29 12:34:35.102000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/731/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-29 12:34:35.248000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1955/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-29 12:41:58.240000000

Patch Set 3: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/731/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1870/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1955/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1566/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-11-29 12:42:47.801000000

Patch Set 3:

(1 comment)

Line:47, src/rwlock.h -> Can these be made explicit? (Not sure it'll make much difference in practice, but generally good form).

-------------------------------------
author: Keira Washington
date: 2016-11-29 16:35:56.847000000

Patch Set 3:

(1 comment)

Line:47, src/rwlock.h -> The whole point is for it to be an implicit conversion and it doesn't work otherwise. In this instance I don't think it is currently bad form as the following:

    RWLock rwLock;
    ReaderLock& r = rwLock;

does not have surprising behaviour in the same way that:

    auto ptr{std::make_unique<int>(3)};
    bool exists = ptr;

would if unique_ptr's bool conversion was implicit.

-------------------------------------
author: Tate Garrett
date: 2016-11-29 18:29:28.750000000

Change has been successfully cherry-picked as c399183b3bdee011681b6dcaba1f6b1f88968718 by Ashlee Kent

-------------------------------------
