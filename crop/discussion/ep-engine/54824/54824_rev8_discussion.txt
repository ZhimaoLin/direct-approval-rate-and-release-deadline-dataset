DESCRIPTION

MB-16182: Adding micro benchmarks for DCP compression

- JSON_PADDED
- JSON_RANDOM
- BINARY_RANDOM

Sample (JSON_PADDED):

=== DCP In-memory (JSON-PADDED) [As_is vs. Compress] Latency - 10000 items (µs) =====

                                Percentile
                  Median     95th     99th  Std Dev  Histogram of samples

As_is              3.232   31.197   36.623   10.337  ▁█▄▅▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
Compress          15.427   39.599   60.457   12.235  ▁▃▂▄▆▄▆▆▆▇▇█▆▆▇▇▇▆▅▄▃▃▂▃▂▂▂▂▂▂▂▂
                                              0              µs              39

=== DCP In-memory (JSON-PADDED) [As_is vs. Compress] KB Rcvd. - 10000 items (KB) =====

                                Percentile
                  Median     95th     99th  Std Dev  Histogram of samples

As_is             50.069   95.069   99.069   28.869  ▁▇██████████████████████████████
Compress           2.409    4.520    4.706    1.355  ▁█▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
                                              0              KB              95

======================================================================================

Change-Id: I4741628a3dad3b43f03ba96a170355affe5e8a72


COMMENTS

author: Emerson Nolan
date: 2015-08-29 00:37:49.871000000

Uploaded patch set 8.

-------------------------------------
author: Hugo Blankenship
date: 2015-08-29 00:37:56.986000000

Patch Set 8:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/891/

-------------------------------------
author: Hugo Blankenship
date: 2015-08-29 00:45:31.090000000

Patch Set 8: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/891/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2015-09-01 07:43:41.534000000

Patch Set 8: Code-Review-1

(9 comments)

My main concern is what looks like incorrect ranges in the randomness tests. Also we should ensure the graph labels / axis are correct.

Line:93, tests/ep_perfsuite.cc -> Nit: Update the comment, change "timing set" to something like "value set"

I also spotted an error in the original comment - it says 9th - 95th, should be 5th - 95th. Could you correct that while you're here? - thanks.

Line:113, tests/ep_perfsuite.cc -> Should this read "x 1e6" now you've changed the denominator?

Line:142, tests/ep_perfsuite.cc -> Do these 1e3 denominators need updating given your change above?

Line:235, tests/ep_perfsuite.cc -> Nit: Given we have this separator line drawn in a bunch of places, might be worth pulling out as a helper function

Line:395, tests/ep_perfsuite.cc -> "Type_data_t" is a pretty vague name. How about "doc_format" or similar?

also - might as well use an enum class.

Line:452, tests/ep_perfsuite.cc -> Nit: You can do this in the constructor; you don't need a separate statement 

http://en.cppreference.com/w/cpp/string/basic_string/basic_string - see constructor (2).

Line:469, tests/ep_perfsuite.cc -> Are you only using the first 10 characters from the alphabet here? Looks like uid() is initialised to a uniform distribution over the 0...10.

Line:492, tests/ep_perfsuite.cc -> Not really random binary here :) You'd want to randomly select from all 256 possible char values.

Line:649, tests/ep_perfsuite.cc -> As this now tests both latency and size, maybe rename this function?

-------------------------------------
author: Emerson Nolan
date: 2015-09-01 17:00:19.693000000

Patch Set 8:

(8 comments)

Line:93, tests/ep_perfsuite.cc -> Done

Line:113, tests/ep_perfsuite.cc -> No, it should remain as "x 1e3". My reasoning is: For size we pass in Bytes, but divide by 1e3 and report as KB, and for timings we pass in ns and divide by 1e3 and report it as µs.

There fore if we are still reporting the values as KB and µs, if val where divided by 1e6, then it would mean (val x 1e3) KB or µs.

Line:142, tests/ep_perfsuite.cc -> No, not required again, as the above change is just for the view format.

Line:395, tests/ep_perfsuite.cc -> All right.

Line:452, tests/ep_perfsuite.cc -> Done

Line:469, tests/ep_perfsuite.cc -> I'll correct this.

Line:492, tests/ep_perfsuite.cc -> For now, I'll correct the uniform distribution's initialization.

Line:649, tests/ep_perfsuite.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2015-09-02 18:22:52.618000000

Change has been successfully cherry-picked as 37dfc37198cdfdc1388e0e8ff1003f9b6e9d8b9d

-------------------------------------
