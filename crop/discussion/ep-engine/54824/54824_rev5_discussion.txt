DESCRIPTION

Adding micro benchmarks for DCP compression during in-memory streaming

=== DCP In-memory Stream Latency [As_is vs. Compress] - 10000 items (µs) =====

                         Percentile
           Median     95th     99th  Std Dev  Histogram of samples

As_is       5.904   42.418   60.961   16.031  ▁█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁
Compress   14.187   54.877   77.659   18.296  ▁▇▆█▇▄▂▂▃▃▂▃▂▂▂▂▂▂▂▃▄▃▂▁▁▁▁▁▁▁▁▁
                                              0              µs             54

Change-Id: I4741628a3dad3b43f03ba96a170355affe5e8a72


COMMENTS

author: Emerson Nolan
date: 2015-08-26 21:58:54.693000000

Uploaded patch set 5.

-------------------------------------
author: Hugo Blankenship
date: 2015-08-26 21:59:02.375000000

Patch Set 5:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/879/

-------------------------------------
author: Hugo Blankenship
date: 2015-08-26 22:27:51.446000000

Patch Set 5: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/879/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2015-08-27 07:27:17.943000000

Patch Set 5: Code-Review-1

(11 comments)

Line:397, tests/ep_perfsuite.cc -> Prefer checkeq()

Line:423, tests/ep_perfsuite.cc -> Prefer checkeq()

Line:428, tests/ep_perfsuite.cc -> Prefer checkeq()

Line:434, tests/ep_perfsuite.cc -> Prefer checkeq()

Line:441, tests/ep_perfsuite.cc -> Prefer checkeq()

Line:493, tests/ep_perfsuite.cc -> Prefer checkeq()

Line:530, tests/ep_perfsuite.cc -> Given that perf_dcp_client uses *all* members of the Handle_args struct, why not just pass a reference to the whole struct?

Line:535, tests/ep_perfsuite.cc -> The latency test is interesting, but what's probably more useful is to measure the actual size of data transmitted, as that is ultimately what we are attempting to optimise for.

If it was me, I would create a couple of different variants of document (say 100Byte, 1kB and 10kB JSON, and then random binary of say 10kB) and measure what the actual transmitted byte count is.

Line:552, tests/ep_perfsuite.cc -> Suggest you create a constructor for Handle_args which takes all these arguments

Line:575, tests/ep_perfsuite.cc -> I don't quite understand what this code is doing here - why should ha2 timings be less or equal to ha1? This paragraph probably warrants a comment or two :)

Line:604, tests/ep_perfsuite.cc -> There's a lot of repetition here - in fact this second code part of the function looks very similar to the first. Can you refactor our as a common sub-function please?

-------------------------------------
author: Emerson Nolan
date: 2015-08-27 22:54:18.433000000

Patch Set 5:

(6 comments)

@DaveR, I'm going to add another patch with varying doc sizes, and histograms that will show the sizes of received documents. Let me know what you think.

Line:397, tests/ep_perfsuite.cc -> checkeq wasn't in ep_testsuite_common.h, reason why I didn't use it. It was my first option though : )

I'll move its definition to the common area.

Line:530, tests/ep_perfsuite.cc -> Done

Line:535, tests/ep_perfsuite.cc -> That makes sense to me.

Line:552, tests/ep_perfsuite.cc -> Done

Line:575, tests/ep_perfsuite.cc -> i'll put in a comment that explains why : )

Line:604, tests/ep_perfsuite.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2015-09-02 18:22:52.618000000

Change has been successfully cherry-picked as 37dfc37198cdfdc1388e0e8ff1003f9b6e9d8b9d

-------------------------------------
