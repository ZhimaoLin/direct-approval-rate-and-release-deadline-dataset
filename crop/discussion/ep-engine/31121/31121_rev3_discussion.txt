DESCRIPTION

MB-9715: Fixup UPR step

Check the result value from the message producers and
propagate errors back to the core, and return
the correct return value to avoid spinning and
eating up the CPU.

Change-Id: I360d014884425a62e8e8ec1ae60614ceaf8a6ccb


COMMENTS

author: Asher Vang
date: 2013-12-16 13:01:53.149000000

Uploaded patch set 3.

-------------------------------------
author: Asher Vang
date: 2013-12-18 21:23:22.878000000

Patch Set 3: Verified+1

-------------------------------------
author: Miley Adams
date: 2013-12-19 23:27:18.730000000

Patch Set 3: Code-Review-1

(1 comment)

no need to create a separate UprConnection class. we can just add "step" to ConnHanlder class.

Line:1587, src/tapconnection.h -> can we put "step" into ConnHandler class? so to avoid multiple inheritance. Also step function more naturally falls in a handler class.

-------------------------------------
author: Asher Vang
date: 2013-12-20 11:10:02.933000000

Patch Set 3:

I sort of disagree because this is a operation is directly tied to UPR and is not valid for TAP. I'd actually rather move all of the message callbacks defined for the UPR stuff into this class as virtual methods, and then overload whatever goes in the producer in the producer class, and whatever that goes for the consumer there.. and the callbacks from memcached should just pick out the upr-object from the enginespecific and call directly into the virtual functions (without going through the "ep-engine" and not doing any checks if it is a producer/consumer etc. I think it would simplify the code a bit..

-------------------------------------
author: Miley Adams
date: 2013-12-20 19:54:08.396000000

Patch Set 3:

I agree "step" is not relevant to Tap. But avoiding multiple inheritance by adding to ConnHandler is big plus as class hierarchy is a lot simpler. 
We will phase out Tap code eventually so I prefer this way. If you still prefer to multiple inheritance, I suggest we change it back when we retire Tap code.

-------------------------------------
