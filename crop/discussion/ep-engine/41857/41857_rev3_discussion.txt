DESCRIPTION

MB-10789: [1] BloomFilter + MurmurHash

- Implementation of the filter and hash functions

Change-Id: I42f7fb9e4c54fe7dae18b953aa6962eb9abfd08f


COMMENTS

author: Emerson Nolan
date: 2014-10-08 18:32:04.920000000

Uploaded patch set 3.

-------------------------------------
author: Ashlee Kent
date: 2014-10-10 00:44:37.235000000

Patch Set 3:

(9 comments)

Hope you don't mind me jumping in and reviewing this, but spotted this series when I was searching for some other reviews :)

Line:64, src/bloomfilter.h -> Style: Again, I'd pick either camelCase or underscores for naming.

Line:28, src/bloomfilter.cc -> Nit: I'd stick with either camelCase or underscores for variable names, not a mix of both.

Line:54, src/bloomfilter.cc -> To ensure that initialise is idepmotent would suggest either clearing the bitArray first, or just assigning it to the required size - i.e.

   bitArray.assign(filterSize, false);

Line:58, src/bloomfilter.cc -> This looks very much like the constructor - any reason we can't share the code common to both in a helper function?

Line:61, src/bloomfilter.cc -> If you make the above change to initialise() you can remove this call to clear().

Line:81, src/bloomfilter.cc -> You may want to consider making status be an atomic<> in which case you can drop the lock from this method.

Line:95, src/bloomfilter.cc -> Style: Using arithmetic operators for enumerations is fragile - I would suggest explicitly checking for the values which are valid for adding a key.

Line:105, src/bloomfilter.cc -> As the bloom filter cannot definitively answer in the positive, I would suggest renaming this method to something like:

  maybeKeyExists()

Line:35, src/murmurhash3.h -> If these are changes we have made, then I would be tempted to check in the original code first, *then* make whatever modifications we did in a separate patch. This will assist in maintaining / updating the upstream code if it changes in future.

-------------------------------------
