DESCRIPTION

Shut down all tap connections during shutdown of the engine

Change-Id: I666aab84372c70e532effafb13f92d2be6b8fb40


COMMENTS

author: Asher Vang
date: 2011-04-22 19:57:45.466000000

Uploaded patch set 4.

-------------------------------------
author: Rubi Walsh
date: 2011-04-22 21:22:40.180000000

Patch Set 4: (2 inline comments)



Line:144, tapconnmap.cc -> Is it better to structure code as:
if (tc->isReserved()) {
  if (!tc->isConnected() {
  }
} else {
  if (tc->getExpiryTime() <= now && !mapped(tc)) {
  }
}

Line:327, tapconnmap.cc -> It is not referenced anywhere in the function

-------------------------------------
author: Abby Duran
date: 2011-04-22 21:28:10.854000000

Patch Set 4: (1 inline comment)



Line:227, tapconnection.hh -> Shouldn't we use Atomic for this? Looks like both TAP IO notification thread and tap worker thread calling newProducer are accessing this to set or reset it.

-------------------------------------
author: Asher Vang
date: 2011-04-23 06:06:32.619000000

Patch Set 4: (3 inline comments)



Line:144, tapconnmap.cc -> I added 
if (tc->isConnected()) {
  continue;
}

since all of the logic in there applies for disconnected streams..

Line:327, tapconnmap.cc -> Done

Line:227, tapconnection.hh -> The access pattern is that they should also hold the notifySync mutex when accessing it, so it should be fine. 

I guess it is safer to make it an atomic to prevent future changes to the source who starts using it differently from giving undefined behavior...

-------------------------------------
author: Tate Garrett
date: 2011-04-26 16:21:44.295000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
author: Tate Garrett
date: 2011-04-26 17:56:49.867000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
