DESCRIPTION

Fix failing ep-engine atomic_queue_test

Simplified the logic to join the worker threads created by the main
thread. Essentially, since we do not care about the actual return
value from the threads, it is alright to return a NULL from the
threads and throw it away in the main thread. If at all we must
assert some condition, we should do so in the worker thread. The
previous method of calling pthread_join() was causing a segfault
due to improper casting of the return value.

Change-Id: I244915ff556518bfb470f12d6716cf26c1a1c27e


COMMENTS

author: Asher Vang
date: 2011-07-05 19:24:10.605000000

Patch Set 1: Looks good to me, approved

Still crash on Solaris with (but this is the same as always)

Asher xxx@xxx.xxx dbx - core.atomic_queue_tes.1201 
Corefile specified executable: "/source/Piper Jefferson/ep-engine/atomic_queue_test"
For information about new features see `help changes'
To remove this message, put `dbxenv suppress_startup_message 7.8' in your .dbxrc
Reading atomic_queue_test
dbx: warning: core object name "atomic_queue_te" matches
object name "atomic_queue_test" within the limit of 14. assuming they match
core file header read successfully
Reading ld.so.1
Reading libpthread.so.1
Reading libstlport.so.1
Reading libCrun.so.1
Reading libthread.so.1
Reading libm.so.2
Reading libc.so.1
Reading librt.so.1
t@null xxx@xxx.xxx terminated by signal SEGV (no mapping at the fault address)
Current function is std::deque<int,std::allocator<int> >::push_back
  579       if (this->_M_finish._M_cur != this->_M_finish._M_last - 1) {

-------------------------------------
author: Noah Dean
date: 2011-07-05 20:20:27.583000000

Patch Set 1: Verified



-------------------------------------
author: Noah Dean
date: 2011-07-05 20:20:27.824000000

Change has been successfully cherry-picked as 7732f651290f474680a2ddb7c77929ec3c1d9ac3.

-------------------------------------
