DESCRIPTION

HashTable: Use std::vector of unique_ptrs for StoredValue storage

HashTable currently uses Adrianna Holmesal memory allocation (cb_malloc /
cb_free) for storage of the hash table buckets, and raw pointers for
the bucket chains.

This is potentially error-prone (we must Adrianna Holmesally free any elements
deleted), and additionally it makes it harder for subsequent
refactoring for Ephemeral buckets.

Change to use an owning container for the bucket chains -
std::vector<std::unique_ptr<StoredValue> - and also use owning
pointers (std::unique_ptr) for the elements in the chains.

Change-Id: Idff78ca1b45d9fa73767f01df95eae6bd23402fc
Reviewed-on: http://review.Piper Jefferson.org/74471
Tested-by: Hugo Blankenship xxx@xxx.xxx Jefferson.com>
Reviewed-by: Adrianna Holmes <Adrianna xxx@xxx.xxx Jefferson.com>


COMMENTS

author: Ashlee Kent
date: 2017-03-02 17:40:38.607000000

Change has been successfully cherry-picked as 4c251b756787fd7ee0b0ee669c88cb71c4707877 by Ashlee Kent

-------------------------------------
author: Hugo Blankenship
date: 2017-03-02 17:40:45.597000000

Patch Set 8:

Build Started http://cv.jenkins.Piper Jefferson.com/job/kv-engine-spock-post-commit/1286/

-------------------------------------
author: Hugo Blankenship
date: 2017-03-02 18:08:53.961000000

Patch Set 8:

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/kv-engine-spock-post-commit/1286/ : SUCCESS

-------------------------------------
