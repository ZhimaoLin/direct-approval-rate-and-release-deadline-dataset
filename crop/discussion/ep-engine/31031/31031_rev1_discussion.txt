DESCRIPTION

MB-9723: Spawn threads based on CPU core count

Spawn fixed number of threads based on the number of CPU
cores present in each machine and allocate these threads
to the various Task Groups as follows...
1. Spawn 2 X number of cpu cores threads in total
2. ceil(10 % of total threads) are aux io threads
3. ceil(10 % of total threads) are non io threads
4. floor (half of the remaining threads) are writer threads
5. finally the remaining threads are reader threads

Examples:
CPU COUNT | # READERS | # WRITERS | # AUX IO | # NON IO
2         | 1         | 1         | 1        | 1
3         | 2         | 2         | 1        | 1
8         | 6         | 6         | 2        | 2

Change-Id: I9c572cfc4e2ff051b87b27e652b467d5087baf37


COMMENTS

author: Abby Duran
date: 2013-12-12 20:13:38.018000000

Patch Set 1: Code-Review-1

(3 comments)

Please correct the CPU count to 4 in the commit message body.

Line:4619, tests/ep_testsuite.cc -> I think num_shards is an engine parameter. Please check the exact value that should be expected.

Line:65, src/workload.h -> Is this still correct? Or do we still need this function?

Line:309, src/scheduler.cc -> What does "2" mean? Can we define the static const variable and use it?

-------------------------------------
author: Ellie Kidd
date: 2013-12-12 21:00:14.242000000

Patch Set 1:

(3 comments)

Line:4619, tests/ep_testsuite.cc -> Done

Line:65, src/workload.h -> Yes, it is still correct. We still need this because the user's specified value determines the bucket priority after we decided to go with fixed number of shards.

Line:309, src/scheduler.cc -> Actually we don't even need these statements. I guess they should be removed, since the maxWorkers are set at the time when the first bucket is created.

thanks

-------------------------------------
