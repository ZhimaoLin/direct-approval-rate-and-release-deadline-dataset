DESCRIPTION

MB-15662: Compression/Uncompression at DCP producer

If enable_value_compression was set by a consumer, the
corresponding producer will compress all uncompressed
documents before transmission. If enable_value_compression
were not enabled by the consumer all the compressed
documents would need to be uncompressed by the producer
before transmission. No additional processing of the
document (be it compressed or not) on the consumer side.

Unit tests:
- consumer to expect compressed document if
  value compression enabled
- consumer to expect uncompressed document if
  value compression disabled

Change-Id: Iee9bace832c35be776ec1a7421ad3edb3381b1d9


COMMENTS

author: Emerson Nolan
date: 2015-08-06 03:07:19.552000000

Uploaded patch set 8.

-------------------------------------
author: Hugo Blankenship
date: 2015-08-06 03:07:34.134000000

Patch Set 8:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/692/

-------------------------------------
author: Hugo Blankenship
date: 2015-08-06 04:17:05.672000000

Patch Set 8: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/692/ : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2015-08-06 04:18:48.009000000

Patch Set 8: -Verified

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/694/

-------------------------------------
author: Hugo Blankenship
date: 2015-08-06 05:02:43.390000000

Patch Set 8: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/694/ : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2015-08-06 05:08:22.873000000

Patch Set 8: -Verified

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/695/

-------------------------------------
author: Hugo Blankenship
date: 2015-08-06 05:19:28.461000000

Patch Set 8: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/695/ : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2015-08-06 05:23:38.404000000

Patch Set 8: -Verified

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/696/

-------------------------------------
author: Hugo Blankenship
date: 2015-08-06 06:01:17.401000000

Patch Set 8: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/696/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2015-08-06 08:22:53.955000000

Patch Set 8: Code-Review-1

(1 comment)

I don't think we should be decompressing on the producer - see inline comment.

Line:277, src/dcp/producer.cc -> I'm not sure this is correct/efficient - historically if the datatype was COMPRESSED then DCP would have simply sent the payload verbatim (i.e. already compressed), and it would be up to the consumer to deal with it as appropriate. Why are we changing this?

IMHO the approach for DCP compression should be "compress if not already" - decompression (at the producer) shouldn't be considered. Otherwise we are just making work for ep-engine. 

Consider the case of a DCP replication stream where the mutations have datatype==COMPRESSED_{JSON,}. Previously the producer would simply send them over as-is (no decompression required), and the consumer would simply add to the DWQ as-is (no compression required).

With the code as written here we'll be spending cycles to decompress on the producer, and then having to re-compress at the consumer end when we hit couchstore/forestdb.

-------------------------------------
author: Emerson Nolan
date: 2015-08-06 15:21:30.514000000

Patch Set 8:

(1 comment)

Line:277, src/dcp/producer.cc -> You're right this isn't supposed to be here, decompression should be done only if the DCP consumer is not datatype aware.

-------------------------------------
author: Tate Garrett
date: 2015-08-10 17:04:50.921000000

Change has been successfully cherry-picked as 52d106bf52c2e8469cdedc8d54bcc160e9e2ed21

-------------------------------------
