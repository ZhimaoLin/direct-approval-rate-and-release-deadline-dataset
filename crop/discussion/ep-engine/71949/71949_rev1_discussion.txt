DESCRIPTION

[Refactor]: Move fetchValidValue() & incExpirationStat() to VBucket frm KVBucket

fetchValidValue() and incExpirationStat() implement functionality by accessing,
modifying hash table. Also they operate at VBucket level.
Hence better place for these functions is VBucket class.

Change-Id: I928ba0b17e517ffb5eba6b1f1cd1fa7152986588


COMMENTS

author: Adrianna Holmes
date: 2017-01-13 01:37:04.945000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2017-01-13 01:37:10.456000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1541/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-13 01:37:10.584000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2346/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-13 01:37:11.162000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/2865/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-13 01:37:11.302000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2709/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-13 02:01:14.047000000

Patch Set 1: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2709/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2346/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1541/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/2865/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-01-13 10:00:41.189000000

Patch Set 1: Code-Review-1

(5 comments)

Mostly looks good - couple of smallish things.

Line:181, src/vbucket.cc -> You're assigning it to itself here. Suggest you use a shorter name for the parameter, or suffix it with underscore.

Line:749, src/vbucket.cc -> If you use lock_guard you can get rid of this check - it's guaranteed to be locked.

Line:765, src/vbucket.cc -> Check with Sriram's recent deleted bodies patch - some of the semantics for fetching deleted items have changed - in general the decision about when to return a deleted body have moved down a level.

Line:537, src/vbucket.h -> lock_guard is preferred here, as it has stricter semantics - it's hard(er) to create one which doesn't have a mutex locked.

For background on the "locks as permits" approach which we're trying to do here, see 
http://www.boost.org/doc/libs/1_63_0/doc/html/thread/synchronization.html#thread.synchronization.tutorial.external_locking_____strict_lock__and__externally_locked__classes

Note that lock_guard isn't /as/ strict as boost::strict_lock.

Line:626, src/vbucket.h -> Please document this new member.

-------------------------------------
author: Adrianna Holmes
date: 2017-01-13 17:46:56.391000000

Patch Set 1:

(4 comments)

Line:181, src/vbucket.cc -> Done

Line:765, src/vbucket.cc -> But KVBucket::fetchValidValue() is still the same.
http://src.Piper Jefferson.org/source/xref/trunk/ep-engine/src/kv_bucket.cc#729

Line:537, src/vbucket.h -> I thought about it.
But currently the function calling it has held a unique_lock for the ht mutex (from getLockedBucket())
And they needed a unique_lock because there was a need to unlock conditionally in between.

Line:626, src/vbucket.h -> Done

-------------------------------------
author: Ashlee Kent
date: 2017-01-13 17:51:24.026000000

Patch Set 1:

(1 comment)

Line:765, src/vbucket.cc -> That's fine - just wanted to flag it in case you hadn't noticed :)

-------------------------------------
author: Tate Garrett
date: 2017-01-13 19:29:42.407000000

Change has been successfully cherry-picked as efd5199ee42286aabebff87326a92752cbc8a15f by Adrianna Holmes

-------------------------------------
