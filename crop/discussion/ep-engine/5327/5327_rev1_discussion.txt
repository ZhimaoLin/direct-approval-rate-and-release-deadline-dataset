DESCRIPTION

Let PersistenceCallback be a bit more aggressive for evicting items

Previously the stored item would only be evicted if it wasn't in
an active vbucket and we're above the minimum free memory limit. This
change also looks at the ejectValue bit in the queueditem, so that
you may specify when you add the item to the persistence layer that you
don't need the item to be resitent in memory when it is persisted.

In addition to the above all items that is stored in "replica buckets"
are automatically evicted. We don't normally reference these items
so we might as well use the memory for something else (optimize for
the common case).

We could alternatively create an more optimal way to reload the
vbucket when the bucket is promoted to an active bucket.

Change-Id: I92ef97aadb49344c7c55cf82bd8a7f31e05513a4


COMMENTS

author: Abby Duran
date: 2011-04-12 16:37:37.392000000

Patch Set 1: Looks good to me, approved

Yeah, I'm a little concerned about evicting all items for replica vbuckets as it will cause more bg fetches when a given replica is promoted to the active vbucket. For 1.7 release, I think we can provide the efficient way of reloading a vbucket that is promoted the new active, as we have a separate table per vbucket.

-------------------------------------
author: Abby Duran
date: 2011-05-27 21:28:27.631000000

Patch Set 1: I would prefer that you didn't submit this

Due to checkpoint support in 1.7, we should not evict any items from PersistenceCallback because some of those items might be being visited by TAP cursors.

-------------------------------------
author: Asher Vang
date: 2011-05-27 21:33:16.174000000

Patch Set 1: Abandoned

-------------------------------------
