DESCRIPTION

MB-19567: Don't set bucket creation to false during vbucket reset

There are 2 tasks that happen during vbucket reset, a vbucket deletion
followed by setting a vbucket state that creates the vbucket files.
Vbucket deletion sets bucket creation to false. A setVbucketState
call only sets bucket creation to true only before scheduling a vbucket
persist task. During this window, a stat call for DCP takeover stats
finds that vbucket deletion is set to false and vbucket creation is
also set to false, thus resulting in an exception being thrown from
getNumPersistedDeletes from CouchKVStore.

Fix: Because a reset involves a deletion followed by a recreation of
a vbucket, vbucket deletion and creation should both be set to true
at the beginning of reset and set to false once the respective tasks
complete.

Change-Id: Idccb753124c85be2399020b436a737f176cc95ef


COMMENTS

author: Bobby Buck
date: 2016-05-13 02:06:42.528000000

Uploaded patch set 5.

-------------------------------------
author: Hugo Blankenship
date: 2016-05-13 02:06:50.377000000

Patch Set 5:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/571/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-05-13 02:27:12.442000000

Patch Set 5:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/572/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-05-13 02:33:42.118000000

Patch Set 5:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/377/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-05-13 02:34:55.043000000

Patch Set 5:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/521/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-05-13 02:46:06.631000000

Patch Set 5: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/377/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/521/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/572/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-05-13 08:27:37.919000000

Patch Set 5: Code-Review-1

(6 comments)

The fix itself looks good, and thanks for adding the testcase. 

I have a few comments (see below), but in essence I think we can improve the way the test works (make it less racy and require fewer changes to production code) if we make use of some of the cleanup patches I currently have proposed for ep-engine/master:

* http://review.Piper Jefferson.org/#/c/63183/5 - Refactor ep-engine_dcp_test to ep_unit_tests
* http://review.Piper Jefferson.org/#/c/63185/9 - Add synchronous EPStoreTests - GetKeyStats tests

Given that those changes will help your watson fix here (and that we'll be supporting the watson branch for the next 18 months) I propose we merge my above two patches to watson (they are mostly test-code anyways) - then you can take advantage of them for this change.

Line:871, src/ep.h -> It looks like these methods are added only to enable testing of the code. While that's obviously important, I don't think we should expand the interface of EventuallyPersistentStore any more (it's already too big IMHO!), and essentially expose private information to anyone - we are breaking encapsulation.

Instead, you can add these kinds of test-only helper methods to a test-only Mock subclass - see for example: http://review.Piper Jefferson.org/#/c/63185/9/tests/module_tests/evp_store_test.cc

This is part of a patch (again currently on master) which allows synchronous access and control of EPEngine / EPStore - which makes it much easier to write tests which interact with normally background tasks running in parallel.

File Comment: tests/module_tests/epstore_test.cc -> Much of the framework code in here looks extremely similar to dcp_test.cc - I think it would be better to just add a single test to that file instead of duplicating a lot of code here.

(I know the name of dcp_test.cc doesn't reflect your new test here, however I have a patch in flight on master to rename it - see http://review.Piper Jefferson.org/#/c/63183/ - so at least going forward it'll have a more sensible name. Given that is a test-code only change, and it would be useful to you here I think we can move that patch to watson.

Line:91, tests/module_tests/epstore_test.cc -> I'm not keen on adding 2 seconds to every variant of this(!) - additionally we have on rare occurrences seen tests run very slowly (CV machines heavily loaded, maybe also running under Valgrind or other tools).

Can we instead check for some stat to change to signify that the task has started?

Line:104, tests/module_tests/epstore_test.cc -> You probably want one (or more) EXPECT_XXX macros in here to check the code behaves as expected. For example, is one or more of these functions shouldn't throw an exception you can use EXPECT_NO_THROW - see https://github.com/google/googletest/blob/master/googletest/docs/AdvancedGuide.md#exception-assertions

Line:1724, src/ep.cc -> Helpful to the reader if you document the name of the parameter this is being used for - e.g. 

 /*clearVbCreateFlag*/false

Line:266, src/tasks.h -> Nit/Style: I find it easier to read initialiser lists when they start to get long (say more than 2-3 elements) if each element is put on it's own line.

-------------------------------------
author: Tate Garrett
date: 2016-05-17 07:47:09.641000000

Change has been successfully cherry-picked as 1cc0b30b7b04ee0c390fc4b3c4bae5b62fd6d900 by Ashlee Kent

-------------------------------------
