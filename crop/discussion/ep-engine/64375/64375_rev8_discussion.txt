DESCRIPTION

MB-9897: Handle slow stream by dropping cursor and switching to backfill state

There can be slow DCP streams which can hold cursors on the checkpoints
causing the memory usage to shoot up. This can also result in deadlocks.

Initially cursor dropping was implemented by closing and re-opening the
slow streams. The re-opening of slow streams caused problems because
ns-server also tried to re-open the closed streams.

This approach tries to solve the problem by switching to
backfilling state from in-memory state when we see the memory usage
in checkpoints going high due to slow streams.

This switch from in-memory to backfill state does not interfere with
a snapshot that is being sent to the client. The change in state
happens only after all the items in a current snapshot is sent.

Hence clients work with the existing DCP protocol without any change.

Change-Id: If4c128df60fc0249cadf08158a04911120de4c99


COMMENTS

author: Adrianna Holmes
date: 2016-05-27 01:13:26.301000000

Uploaded patch set 8.

-------------------------------------
author: Hugo Blankenship
date: 2016-05-27 01:13:32.501000000

Patch Set 8:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/760/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-05-27 01:13:32.645000000

Patch Set 8:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/676/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-05-27 01:13:35.880000000

Patch Set 8:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/520/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-05-27 01:23:16.391000000

Patch Set 8: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/760/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/676/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/520/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-05-27 06:17:58.933000000

Patch Set 8: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/761/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-05-27 06:23:30.336000000

Patch Set 8: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/676/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/520/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/761/ : SUCCESS

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-06-02 11:46:49.514000000

Patch Set 8:

(6 comments)

Line:853, src/dcp/stream.cc -> can we "assert" this statement? throw an exception if not?

Line:935, src/dcp/stream.cc -> So much tidier to have one function, cool!

Line:1050, src/dcp/stream.cc -> nit: can remove this break

Line:1134, src/dcp/stream.cc -> worth putting a comment next to the false/true parameter so we know what is being passed. just /*reschedule*/ will allow the call point to be better documenting

Line:60, src/dcp/stream.h -> We shouldn't delete this.  end_stream_slow is part of the protocol taking up value 0x4. Just document that this is no longer sent and any new reasons we may add will take value 0x5 and onwards.

Line:244, src/dcp/stream.h -> nit: trailing space

-------------------------------------
author: Adrianna Holmes
date: 2016-06-02 22:28:08.257000000

Patch Set 8:

(6 comments)

Line:853, src/dcp/stream.cc -> I am just stating this for documentation purpose.
Even before lastReadSeqno assumed this.

Asserting would only be
1) Confirmation that nextCheckpointItemTask() is not re-entrant.
2) Paranoid check that line 881 is executed, since snapshot() is called directly from processItems().

Since both (1) and (2) are obvious, why assert ?

Line:935, src/dcp/stream.cc -> Thanks :)

Line:1050, src/dcp/stream.cc -> Done

Line:1134, src/dcp/stream.cc -> Done

Line:60, src/dcp/stream.h -> Done

Line:244, src/dcp/stream.h -> Done

-------------------------------------
author: Tate Garrett
date: 2016-06-03 23:17:50.336000000

Change has been successfully cherry-picked as da4a82507a8fe7772ce3ece33abc1d8a077ce1cd by Adrianna Holmes

-------------------------------------
