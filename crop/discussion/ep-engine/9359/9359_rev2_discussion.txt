DESCRIPTION

MB-4202 Avoid using std::string in prepend/append operations.

We observed that as C++ STL and string classes use their own
memory pool allocators, it sometimes shows a quite bad behavior
in its memory pooling. Especially, the current prepend/append
APIs use std::string as temporary storage, which can result in
a number of destructed objects that are not immediately freed
and returned back to OS, if the client invokes prepend/append
APIs frequently with large values.

To mitigate this issue, we temporarily allocate a memory segment
through the underlying memory allocator (e.g., tcmalloc in linux),
and then explictly free it at the end of prepend/append
operations.

Change-Id: I6b128e437b3ffbcc9d981f8aa215324c1d89b7e8


COMMENTS

author: Abby Duran
date: 2011-09-08 23:52:02.423000000

Uploaded patch set 2.

-------------------------------------
author: Asher Vang
date: 2011-09-09 05:33:12.582000000

Patch Set 2: Looks good to me, approved



-------------------------------------
author: Abby Duran
date: 2011-09-10 01:31:59.845000000

Patch Set 2: Verified



-------------------------------------
author: Abby Duran
date: 2011-09-10 01:32:02.367000000

Change has been successfully cherry-picked as be490d1c3ce941c162a11d7706028a4cb52da234.

-------------------------------------
