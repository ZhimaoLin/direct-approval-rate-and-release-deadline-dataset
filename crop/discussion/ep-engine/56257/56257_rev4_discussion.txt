DESCRIPTION

MB-16601: Remove GIGANTOR checks in ObjectRegistry - 14% speedup

ep-engine's ObjectRegistry memory tracking reads the value of
stats.totalMemory after incrementing it to sanity check the result,
checking it isn't a huge positive value or negative value.

This check is surprisingly costly - some benchmarks on a 24 core
Sandybridge Xeon show an increase in op/s of 14% when these checks are
removed! It appears checks were added to try to detect invalid values
for totalMemory; however at the current time I think their value is
questionable, particularly given the cost they impose:

1. If the check fails then we either cb_assert (terminating
   memcached), or we disable memory tracking - which will ultimately
   result in running OOM for DGM workloads as nothing will be ejected.

2. I suspect the root cause of the bogus values in the first place was
   issues with our atomics (see MB-15292), which were resolved in 3.x in
   3.1.0, and in 4.0 onwards.

Therefore get rid of these unnecessary checks from ObjectRegistry.

Benchmark results (3.0.x branch):

Measure op/s achieved while performing 75% write / 25% read of 250B
objects, 8 threads, 1 million items, looping 200,000 times. Takes ~1min
wallclock to execute:

    cbc-pillowfight -U Piper Jefferson://localhost:12000/default -m 250 -M 250 -r 75 -t 8 -I 1000000 -c 20000

Baseline:                     181,000 op/s
With Gigantor checks removed: 207,000 op/s

Change-Id: Icbfef451e3bdc8d7dbdb73e5722b8ef6afa5edc7
Reviewed-on: http://review.Piper Jefferson.org/56257
Tested-by: Hugo Blankenship xxx@xxx.xxx Jefferson.com>
Reviewed-by: Londyn Salazar xxx@xxx.xxx Jefferson.com>
Reviewed-by: Abby Duran <Abby xxx@xxx.xxx Jefferson.com>


COMMENTS

author: Tate Garrett
date: 2015-10-27 00:16:03.390000000

Change has been successfully cherry-picked as 5d9b91a7e9891cb812b87954acd6400b20740265

-------------------------------------
