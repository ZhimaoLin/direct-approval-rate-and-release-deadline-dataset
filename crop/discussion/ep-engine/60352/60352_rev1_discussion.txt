DESCRIPTION

MB-17889: No notify from streamRequest

The 3.1.3 (i.e. before the DCP churn) didn't ever notify from
streamRequest, so that is reverted and helps to bring
view_query latency down (view engine is constantly creating
streams).

A second tweak is to not call stream->next whilst holding
the streamMutex. This can block streamRequest again
affecting the view-engine's DCP stream requests.

Change-Id: I5b57fd7998003251fb32897f37c8a2f15f687a13


COMMENTS

author: Jim WNathalie Landryer
date: 2016-02-22 21:03:40.813000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-02-22 21:03:48.001000000

Patch Set 1:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/396/

-------------------------------------
author: Hugo Blankenship
date: 2016-02-22 21:03:51.992000000

Patch Set 1: Well-Formed-1

Branch restricted. PLEASE READ this URL: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/6353/artifact/restricted.html : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2016-02-22 21:18:55.328000000

Patch Set 1: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/396/ : SUCCESS

-------------------------------------
author: Adrianna Holmes
date: 2016-02-22 21:25:02.505000000

Patch Set 1: Code-Review+1

-------------------------------------
author: Abby Duran
date: 2016-02-23 02:30:45.142000000

Patch Set 1:

(1 comment)

Line:271, src/dcp-producer.cc -> If we don't notify the producer of a new stream request, then is it still OK for other types of DCP consumers (e.g., replication, XDCR, GSI, etc.) in a performance perspective?

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-02-23 08:59:12.619000000

Patch Set 1:

> (1 comment)

It will be difficult on this build to measure GSI :)

However historically the previous DCP code never did this, it just marked the stream as ready, but didn't generate a wakeup, going thorough my notes there's no strong evidence that speculative notify of the new stream is worthwhile and for the view-engine  (frequently creating new streams) the spurious wake-ups when there's no work todo are one cause of the view latency defect.

In the builds where we didn't notify speculatively but had most of the dcp unblocking changes implemented view query and xdcr were all fine, see 3.1.4-1835 results in showfast, only rebalance perf was down in that build, but recovered in 1836.

-------------------------------------
author: Hugo Blankenship
date: 2016-02-23 09:35:56.982000000

Patch Set 1: Well-Formed+1

Permission granted to commit: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/6402/artifact/restricted.html : SUCCESS

-------------------------------------
author: Tate Garrett
date: 2016-02-23 18:11:09.351000000

Change has been successfully cherry-picked as 4171e5ee93a1febf4cffb90761c350a3ae9d6802

-------------------------------------
