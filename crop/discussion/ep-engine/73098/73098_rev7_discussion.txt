DESCRIPTION

[Refactor]: Move VBucket::queueDirty() calls to update/addNewStoredValue()

Currently there are 3 data structures contained in VBucket, namely, HashTable,
Checkpoint, Backfill queue. Logically an item is pushed onto these data
structures during (i) update of an exisitng item (ii) addition of a new item
(iii) soft deletion of an item.

For the above (i), (ii) and (iii) there can be many sources like set, add,
delete, expire, set_with_meta, del_with_meta, insert from warmup etc.

VBucket::queueDirty() is used to queue an item onto a checkpoint or
backfill queue for replication and/or persistence. Rather than being called
from all the sources of (i), (ii) and (iii) it can just be called from 3
functions implementing (i), (ii) and (iii).

Benefits of this design is
(a) We decouple the logic of handling/holding items in VBucket data
    structures from the source functions. Those functions can only focus
    on deciding whether to add/update/delete an item in VBucket.
(b) If we need 2 or more data structures to work in tandem to hold/handle
    items in the VBucket it becomes easier. For example in ephemeral
    vbucket the seqlist and hash table can work in tandem only in these
    functions (just overriding these functions).
(c) We can pull out the semantics of add/update/delete in VBucket like
    seqno generation to the VBucket class from the Checkpoint. Today
    seqno is generated from Checkpoint and then put onto the StoredValue
    in hash table. Rather, seqno should be generated in VBucket during
    (i), (ii) and (iii) and passed to the VBucket data structures in a
    requried way (checkpoint demands items in monotonically increasing
    seqno order, hash table doesn't care).

And the caveat is we have to pass more parameters to functions implementing
(i), (ii) and (iii) as we do some conditional stuff in VBucket::queueDirty()

This commit move all calls related to (i) and (ii) to the respective 2
functions. A following commit will address (iii)
(It does not help to break this as different commits for (i) and (ii)
 because update/addNewStoredValue() are called from same functions)

Change-Id: I44b27c507403e6687f00fc3d0e5266e30ab4d7f9


COMMENTS

author: Adrianna Holmes
date: 2017-02-07 17:35:25.239000000

Uploaded patch set 7.

-------------------------------------
author: Hugo Blankenship
date: 2017-02-07 18:11:21.407000000

Patch Set 7: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/2300/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/3079/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3663/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/3476/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-02-07 18:14:58.633000000

Patch Set 7: Code-Review+2

-------------------------------------
