DESCRIPTION

Two phases of fast vbucket deletion for table per vbucket.

From the large cluster with hundreds of millions of items, the
current fast vbucket deletion frequently takes more than several
minutes. This causes some bad effects when the rebalance failed
and restarted several times and consequently caused many vbucket
deletions because ns_server generates a completely new vbucket
map for each rebalance operation. As fast vbucket deletion jobs
have higher priority than persistence tasks, this will result
in blocking persistence jobs and large persistence queue, and
slow down rebalance operations.

To resolve this issue, this change does two phases of a vbucket
deletion as follows:
1) Change a vbucket table name (e.g., kv_0) to the temporary
name indicating it is now an invalid table. Then, create a new
table for that vbucket. Once this phase is completed, new items
can be inserted into the new table.
2) Invalid tables will be cleaned up by the periodic dispatcher
job with a lower priority. Currently, we remove one invalid table
from disk every 10 minutes.

Change-Id: I97d65cfaea86512f5fafba6fd253b8c45736f70e


COMMENTS

author: Abby Duran
date: 2011-10-19 17:19:54.525000000

Patch Set 1:

Changing database schema through "alter table", "create table", and "drop table" actually does not invalidate PreparedStatement instances that we created when we connect to database. I validated this through running the test program that does "alter table A rename to B", "create table A", and "drop table B".

This is also confirmed from the sqlite documentation:
http://www.sqlite.org/c3ref/prepare.html

From there, it is mentioned that "If the database schema changes, instead of returning SQLITE_SCHEMA as it always used to do, sqlite3_step() will automatically recompile the SQL statement and try to run it again."

-------------------------------------
author: Noah Dean
date: 2011-10-19 18:24:21.306000000

Patch Set 1:

Can you put that comment in the commit message?  Good to have that available when reading.  :)

-------------------------------------
