DESCRIPTION

[Refactor]: Use const for the read-only params of newly refactored funcs

Change-Id: Ia0aa3756b6749179e5a3d255610d8dfe57a187cd


COMMENTS

author: Adrianna Holmes
date: 2017-01-18 19:53:31.316000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2017-01-18 19:53:36.539000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1699/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-18 19:53:36.671000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2869/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-18 19:53:36.799000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2499/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-18 19:53:36.935000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3032/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-18 20:17:25.187000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2869/ : FAILURE

Timeout of a CTest test 24/24 Test #12: ep_testsuite_dcp.value_eviction ..........} ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/2869/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2499/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1699/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3032/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2017-01-18 21:43:19.234000000

Patch Set 1: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2870/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-18 21:52:58.895000000

Patch Set 1: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2499/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1699/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3032/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2870/ : SUCCESS

-------------------------------------
author: Jim WNathalie Landryer
date: 2017-01-19 11:36:59.718000000

Patch Set 1: Code-Review-1

(4 comments)

Line:557, src/vbucket.h -> Does const here really buy us anything? Ok so fetchValueValue can't modify bucket_nu, but a value param can't affect the caller either

Line:647, src/vbucket.h -> a const reference is more useful than the const value parameters

Line:350, src/hash_table.h -> Shouldn't this now be a plain value param, a reference to an int is also (on LP64) larger than an int itself (probably doesn't really matter on modern architectures as much):

  AddStatus unlocked_add(int bucket_num,..);

Line:370, src/hash_table.h -> ditto

-------------------------------------
author: Ashlee Kent
date: 2017-01-19 11:40:01.871000000

Patch Set 1: Code-Review-1

(2 comments)

Line:558, src/vbucket.h -> I'd also debate the usefulness of marking arguments passed by value as const - while it does indicate that in the function the parameter cannot be modified, it has no effect on the interface (or any callers).

As such I think it's superfluous.

Line:350, src/hash_table.h -> Little point in passing ints as const reference, just pass by value.

-------------------------------------
author: Jim WNathalie Landryer
date: 2017-01-19 11:41:01.563000000

Patch Set 1:

(1 comment)

Line:557, src/vbucket.h -> Note you can leave const out on the prototype but leave it on the declaration if you feel you want to const the value params

-------------------------------------
author: Adrianna Holmes
date: 2017-01-19 16:48:09.217000000

Patch Set 1:

(4 comments)

Line:558, src/vbucket.h -> Yeah it does not indicate more than "the parameter cannot be modified". Slightly better code readability perhaps. No harm in having it ?

Line:647, src/vbucket.h -> Yup

Line:350, src/hash_table.h -> Agree, originally this was ref, so just made it to const ref.
Will change

Line:370, src/hash_table.h -> Done

-------------------------------------
author: Ashlee Kent
date: 2017-01-19 17:32:24.474000000

Patch Set 1:

(1 comment)

Line:558, src/vbucket.h -> There's no "harm" in the sense that it doesn't add / remove anything from the compiler pov, but it's essentially "line noise" for a human - you start reading it and think "ah, ok this starts with a const - I should consider that it can't be changed... oh - but it's passed by value so it doesn't matter!"

Moreover it adds another 5 characters to each line, so it's more information for the reader to to parse (and then ignore).

I'm not keen on it, but If you think it adds value in the body (to indicate that the value at the beginning of the function cannot change) then I'm ok you to keep it, but you can remove it from the interface (this is permitted for const values - see the discussion at: http://stackoverflow.com/questions/117293/use-of-const-for-function-parameters)

-------------------------------------
author: Adrianna Holmes
date: 2017-01-19 19:22:41.790000000

Patch Set 1:

(1 comment)

Line:558, src/vbucket.h -> Ok, will remove from the interface but keep it in the function beginning though

-------------------------------------
author: Tate Garrett
date: 2017-01-20 11:17:39.682000000

Change has been successfully cherry-picked as 5168c0412a78883ca7bba1bd6284373c2d71bcc1 by Ashlee Kent

-------------------------------------
