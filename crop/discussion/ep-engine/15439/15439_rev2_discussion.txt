DESCRIPTION

Test races between delete_with_meta and set/delete

Following scenarios are covered:
1. A set is interleaved between a get_meta and the subsequent
   delete_with_meta for an existing key. The delete_with_meta should
   fail.
2. A set is interleaved between a get_meta and the subsequent
   delete_with_meta for a deleted key. The delete_with_meta should
   fail.
3. A set is interleaved between a get_meta and the subsequent
   delete_with_meta for a nonexistent key. The delete_with_meta should
   fail.

4. A delete is interleaved between a get_meta and the subsequent
   delete_with_meta for an existing key. The delete_with_meta should
   fail.
5. A delete is interleaved between a get_meta and the subsequent
   delete_with_meta for a deleted key. The delete should fail and the
   delete_with_meta should pass.
6. A delete is interleaved between a get_meta and the subsequent
   delete_with_meta for a nonexistent key. The delete should fail and
   the delete_with_meta should pass.

Change-Id: I12ae557d45826153f0688aecd67625f87950c682


COMMENTS

author: Tatiana Sheppard
date: 2012-04-30 21:23:43.847000000

Uploaded patch set 2.

-------------------------------------
author: Audrina Olson
date: 2012-05-01 05:00:39.058000000

Patch Set 2: (3 inline comments)



Line:5535, ep_testsuite.cc -> del with meta, right?

Line:5563, ep_testsuite.cc -> you meat del with meta, right?

Line:5587, ep_testsuite.cc -> same as above?

-------------------------------------
author: Audrina Olson
date: 2012-05-01 05:01:22.763000000

Patch Set 2:

minor comments

-------------------------------------
author: Audrina Olson
date: 2012-05-01 05:01:37.243000000

Patch Set 2: I would prefer that you didn't submit this



-------------------------------------
author: Tatiana Sheppard
date: 2012-05-01 05:47:34.244000000

Patch Set 2: (1 inline comment)



Line:5535, ep_testsuite.cc -> Will fix (including the other messages). Thanks for catching this.

-------------------------------------
