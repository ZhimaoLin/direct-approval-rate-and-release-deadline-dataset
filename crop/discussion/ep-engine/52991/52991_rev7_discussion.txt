DESCRIPTION

MB-13910: Refactor flow control code

Create flow control class and flow control manager class.
Change-Id: I473dc553b12ef8512ac47fb898f3e311e8e53c0c


COMMENTS

author: Adrianna Holmes
date: 2015-07-24 23:48:50.714000000

Uploaded patch set 7.

-------------------------------------
author: Hugo Blankenship
date: 2015-07-24 23:48:55.041000000

Patch Set 7:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/622/

-------------------------------------
author: Emerson Nolan
date: 2015-07-24 23:54:26.280000000

Patch Set 7:

As flow-control-manager.cc/.h are for dcp, why not place them in src/dcp/. ?

-------------------------------------
author: Hugo Blankenship
date: 2015-07-25 02:49:51.457000000

Patch Set 7: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/622/ : SUCCESS

-------------------------------------
author: Adrianna Holmes
date: 2015-07-27 16:47:25.816000000

Patch Set 7:

In general, the flow control manager should be extensible to any type of connection (DCP or TAP or someother type if we decide to have another type in future). So, initial idea was to keep it at the level connmap.cc.

But, since I am using "DcpConsumer *consumerConn", I will move it to dcp folder

-------------------------------------
author: Abby Duran
date: 2015-07-30 22:28:35.287000000

Patch Set 7: Code-Review-1

(23 comments)

Most of them are minor comments. Thanks!

Line:19, src/flow-control-manager.h -> It seems to me that this is just for DCP flow control management. Please move it to dcp src directory.

Line:25, src/flow-control-manager.h -> Minor formatting one: Please use a more conventional way of class comments.

/**
 * ...
 * ...
 */

Line:28, src/flow-control-manager.h -> Minor one: Using this base class only implies that ...

Line:34, src/flow-control-manager.h -> during DCP consumer creation and deletion.

Line:56, src/flow-control-manager.h -> Same as the above comment.

Line:3647, tests/ep_testsuite.cc -> white space.

Line:524, configuration.json -> We need to make sure that removing this parameter should not cause any backward compatibility issue.

Line:532, configuration.json -> What is "aggressive flow control policy"? Is it different from "dynamic flow control policy"?

In addition, I'm not sure how this stat is different from "dcp_conn_buffer_size_aggr_mem_threshold".

Line:31, src/flow-control-manager.cc -> Please remove a parameter name if it is not accessed in this function or put (void) consumerConn;

Btw, can you put the comment in a header file to explain what a return value means?

Line:35, src/flow-control-manager.cc -> Same comment as above.

Line:45, src/flow-control-manager.cc -> Configuration &config =

Line:50, src/flow-control-manager.cc -> I think it would be appropriate to set the log level to INFO.

Line:55, src/flow-control-manager.cc -> Same as above.

Line:74, src/flow-control-manager.cc -> As this function is empty as its parent class's function, we don't need to override this function in a child class.

Line:121, src/flow-control-manager.cc -> Please set the log level to INFO or DEBUG.

Line:28, src/dcp/flow-control.h -> As mentioned in the other file, let's use our comment style for class definition.

Line:31, src/dcp/flow-control.h -> White space.

Line:71, src/dcp/flow-control.h -> If this is not used, then let's get rid of it.

Line:103, src/dcp/consumer.h -> static const std::string& getControlMsgKey(void);

Line:23, src/dcp/flow-control.cc -> This is already include in flow-control.h

Line:30, src/dcp/flow-control.cc -> Shouldn't it be set to zero as a consumer is still being initialized?

Line:61, src/dcp/flow-control.cc -> const std::string &controlMsgKey =

Line:858, src/dcp/consumer.cc -> const std::string &

-------------------------------------
author: Adrianna Holmes
date: 2015-07-31 02:18:08.922000000

Patch Set 7:

(23 comments)

Line:19, src/flow-control-manager.h -> Done

Line:25, src/flow-control-manager.h -> Done

Line:28, src/flow-control-manager.h -> Done

Line:34, src/flow-control-manager.h -> Done

Line:56, src/flow-control-manager.h -> Done

Line:3647, tests/ep_testsuite.cc -> Done

Line:524, configuration.json -> Will confirm this with ns_server team before I merge

Line:532, configuration.json -> This is supposed to be a new flow control policy that will be added. Removing this and will add it as part of the commit for the new flow control policy

Line:31, src/flow-control-manager.cc -> Done

Line:35, src/flow-control-manager.cc -> Done

Line:45, src/flow-control-manager.cc -> Done

Line:50, src/flow-control-manager.cc -> Done

Line:55, src/flow-control-manager.cc -> Done

Line:74, src/flow-control-manager.cc -> Done

Line:121, src/flow-control-manager.cc -> Done

Line:28, src/dcp/flow-control.h -> Done

Line:31, src/dcp/flow-control.h -> Done

Line:71, src/dcp/flow-control.h -> Done

Line:103, src/dcp/consumer.h -> Done

Line:23, src/dcp/flow-control.cc -> Done

Line:30, src/dcp/flow-control.cc -> We need to keep track of 5s from the time we send last buffer ack.

Initializing to time the conn is created. It is done in same way previously also and seems correct to me

Line:61, src/dcp/flow-control.cc -> Done

Line:858, src/dcp/consumer.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2015-07-31 18:30:58.848000000

Change has been successfully cherry-picked as 95fd6a7b8fd792b50b9393ce055dd9cca723b08c

-------------------------------------
