DESCRIPTION

MB-19952: Ensure that simultaneous tasks use separate file/kvstore handles

ForestDB doesn't allow separate file and KV store handles be used
simultaneously by 2 different threads. As part of this commit, the
following changes are made to ForestKVStore

- Use separate file handles for readers and writers.
- Synchronize the writer tasks (flusher, snapshot, delete vbucket, flush bucket).
- Open a separate file and kvstore handle for the infrequent tasks. For
  example, stat calls, backfill, getAllKeys.
- There is a possibility that as compaction is running, a file is being moved
  from 0.fdb.1 to 0.fdb.2. A thread trying to open a handle on 0.fdb.1 could
  fail as soon as compaction completes. In order to prevent that, use a
  handleLock to synchronize closing the handle before compaction and a
  separate thread opening a new handle. As long as there is an open
  file handle on the file, the file should ideally not be removed
  according to ForestDB semantics.

Change-Id: I34e4b610755d694e72e2d5080f6eac52e6afebdc


COMMENTS

author: Bobby Buck
date: 2016-07-06 01:23:03.757000000

Uploaded patch set 14: Patch Set 13 was rebased.

-------------------------------------
author: Hugo Blankenship
date: 2016-07-06 01:23:10.846000000

Patch Set 14:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/969/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-07-06 01:36:28.679000000

Patch Set 14:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/893/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-07-06 02:23:33.072000000

Patch Set 14:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/747/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-07-06 02:29:11.845000000

Patch Set 14: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/747/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/893/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/969/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-07-06 09:33:20.149000000

Patch Set 14: Code-Review-1

(7 comments)

Line:364, src/forest-kvstore/forest-kvstore.cc -> Note this will always be non-null - if `new` fails in createKvsHandle then an exception (std::bad_alloc) will be thrown.

Line:515, src/forest-kvstore/forest-kvstore.cc -> This is unnecessary - the logger always adds \n to each message.

Line:918, src/forest-kvstore/forest-kvstore.cc -> Should this be READER - given we only use it to call fdb_get_kvs_info ?

Line:971, src/forest-kvstore/forest-kvstore.cc -> (Note: wrote this after some other comments). I think this function needs to have clearly documented error cases - at the moment it can

1) Successfully return a valid ForestKvsHandle (wrapped in a unique_ptr), with value newDBFileHandle and newKvsHandle.
2) Successfully return a valid ForestKvsHandle with one or both of the newDBFileHandle / newKvsHandle being null (and a message logged).
3) Throw std::bad_alloc if the `new` fails.

This is confusing to users - they have to check both if an exception is thrown, and if the individual members are non-NULL.

I suggest you simplify this - make the function either return a complete, valid object, or throw an exception (essentially remove (2) from the options above). 

Specifically, in the case where one or both of fdb_open & fdb_vks_open fail, throw an exception - std::runtime_error is probably sufficient if there isn't any more specific FDB exceptions. 

Callers then know that if they didn't get an exception, then they have a complete, valid object to work with.

Line:1163, src/forest-kvstore/forest-kvstore.cc -> As above, you need to check for std::bad_alloc if the allocation failed.

Line:1527, src/forest-kvstore/forest-kvstore.cc -> Probably better to make the scanConext hold an owning pointer (unique_ptr<>?) - then you don't need the explicit delete.

Line:1576, src/forest-kvstore/forest-kvstore.cc -> As above, this won't be null.

-------------------------------------
author: Bobby Buck
date: 2016-07-06 17:41:10.415000000

Patch Set 14:

(7 comments)

Line:364, src/forest-kvstore/forest-kvstore.cc -> Done

Line:515, src/forest-kvstore/forest-kvstore.cc -> Done

Line:918, src/forest-kvstore/forest-kvstore.cc -> This routine is called by the flusher, a writer task. Hence, the writer handle.

Line:971, src/forest-kvstore/forest-kvstore.cc -> Done

Line:1163, src/forest-kvstore/forest-kvstore.cc -> Done

Line:1527, src/forest-kvstore/forest-kvstore.cc -> Done

Line:1576, src/forest-kvstore/forest-kvstore.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2016-07-08 14:01:50.141000000

Change has been successfully cherry-picked as fc94ef64099ea7a263f5f7ca561a08a5fadb6c8c by Bobby Buck

-------------------------------------
