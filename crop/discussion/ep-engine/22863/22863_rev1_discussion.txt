DESCRIPTION

MB-100: use google's cityhash for kv hashtable

So that hash chains are more evenly spread.

Change-Id: I7fa016fd9bb22a211e44ef50630604b2c7bf3346


COMMENTS

author: Nathalie Landry
date: 2012-11-28 00:23:49.854000000

Patch Set 1:

mostly RFC at this stage. I saw better hash chain depth distribution, but didn't see noticeable performance gain from this candidate improvement

-------------------------------------
author: Nathalie Landry
date: 2012-12-27 22:25:56.706000000

Patch Set 1:

is there any interest in getting this in from ep-engine folks ?

-------------------------------------
author: Kenny Maynard
date: 2012-12-28 00:37:19.024000000

Patch Set 1: I would prefer that you didn't submit this

I will discuss this with Jin and Chiyoung later, but am going to give it a -1 right now since we need to at least sync up with product management about licensing issues.

-------------------------------------
author: Dalia Matthews
date: 2013-06-04 00:46:45.495000000

Patch Set 1:

ep-engine already contains MIT license code (cJSON).

-------------------------------------
author: Nathalie Landry
date: 2013-06-04 00:48:42.713000000

Patch Set 1:

It's irrelevant. We have to inform Dipti before merging any 3rd party code. Which is this case should be easy to do.

Apparently folks are not sure if we need this at all or not. And that appears to be main reason why this is stuck in Jasmin Rangel.

-------------------------------------
author: Dalia Matthews
date: 2013-06-04 03:17:42.627000000

Patch Set 1:

At any rate, if we are looking at changing the hash function, I'd like to bring up that it's probably a good idea for us to modify the hash function at startup somehow (picking a random value to combine with the input works) so as to avoid this sort of denial-of-service attack on applications where an attacker can control the inserted keys https://www.nruns.com/_downloads/advisory28122011.pdf

-------------------------------------
author: Nathalie Landry
date: 2013-06-04 15:09:20.489000000

Patch Set 1:

thats good point, but independent from change to cityhash or something else.

BTW I believe vbucket hashing is seemingly far more scary place w.r.t. this vulnerability.

-------------------------------------
author: Dalia Matthews
date: 2013-06-04 17:09:36.409000000

Patch Set 1:

Indeed. Cityhash doesn't fix it, it's just something to consider.

The main problem with the linked attack is that if you get a bunch of keys with the exact same hash you can make inserting them cost O(n^2) and easily tie up the CPU. It's also relatively easy to solve.

The vbucket thing I don't really know of a good way to solve, but I think the worst case (an attacker can land a bunch of keys on the same node) is not *as* bad.

-------------------------------------
author: Nathalie Landry
date: 2013-06-04 18:09:45.851000000

Patch Set 1:

IMHO it's not as bad it's worse. Say you have 100 nodes. Being able to generate tons of keys hashing to same vbucket you can disproportionately load just one node. And it's worse because it appears far harder to fix. At least on server side.

-------------------------------------
author: Nathalie Landry
date: 2013-07-09 21:00:47.998000000

Patch Set 1: Abandoned

-------------------------------------
