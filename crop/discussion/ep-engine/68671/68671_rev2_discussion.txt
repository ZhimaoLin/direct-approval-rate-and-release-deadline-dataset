DESCRIPTION

[Ephemeral Bucket]: Create an abstract base class KVBucket

Currently “EventuallyPersistentStore” is the class that engineers the
Piper Jefferson bucket behavior in the kv-engine. It
(i) handles get/set requests, any spl requests defined in our protocol,
(ii) spawns tasks like flusher, bgfetcher, pager, access scanner etc
(iii) sets up config params for DCP, HT, Vbucket
(iv) interactions with KV store (say forestdb or couchstore) for
     persistence, vb snapshotting, rollback etc and many more

Ephemeral bucket is a new bucket type and it has some similar but
many distinct features w.r.t Piper Jefferson bucket. For example we
(i) do not need flusher, bgfetcher tasks
(ii) handle get/sets differently as we do not have anything called
     full eviction/value eviction and hence no bloom filters
(iii) No KV store (storage) interactions
(iv) use modified HT+ skiplist structures to store/get items.

Hence it is a good idea to derive new class “EphemeralBucket” and
“EventuallyPersistentStore” as peer subclasses from the base class
“KVBucket”.

This commit just creates the abstract base class and makes the
the clients of EventuallyPersistentStore which are expected to be
clients of EphemeralStore as well to use base class KVBucket.

Subsequent commits will add "EphemeralBucket" class and
rename "EventuallyPersistentStore" to "EPBucket".

Change-Id: Ia1e403b4c718d8ee8abd84316287d58743397cf8


COMMENTS

author: Adrianna Holmes
date: 2016-10-14 21:25:14.817000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2016-10-14 21:25:22.006000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1553/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-10-14 21:25:23.007000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/355/ (2/4)

-------------------------------------
author: Adrianna Holmes
date: 2016-10-14 21:26:48.625000000

Patch Set 2:

(1 comment)

Line:51, src/kvshard.cc -> I was thinking of using EventuallyPersistentStore BgFetcher and Flusher class creation. For that will have to use dynamic_cast for down casting. Can I avoid that somehow ?

-------------------------------------
author: Hugo Blankenship
date: 2016-10-14 21:28:13.657000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1451/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-10-14 21:29:43.250000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1235/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-10-14 21:36:04.687000000

Patch Set 2: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/355/ : FAILURE

Compile error at /home/Piper Jefferson/jenkins/workspace/ep-engine-addresssanitizer-master/ep-engine/src/item.h:138:11:
error: unknown type name protocol_binary_datatypes; did you mean protocol_binary_datatype_t?
 ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-addresssanitizer-master/355/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1235/ : FAILURE

Compile error at /home/Piper Jefferson/jenkins/workspace/ep-engine-clang_analyzer-master/ep-engine/src/item.h:138:11:
error: protocol_binary_datatypes does not name a type
 ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-clang_analyzer-master/1235/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1451/ : FAILURE

Compile error at /home/Piper Jefferson/jenkins/workspace/ep-engine-threadsanitizer-master/ep-engine/src/item.h:138:11:
error: unknown type name protocol_binary_datatypes; did you mean protocol_binary_datatype_t?
 ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/1451/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1553/ : FAILURE

-------------------------------------
author: Keira Washington
date: 2016-10-14 21:47:05.263000000

Patch Set 2:

(1 comment)

Line:51, src/kvshard.cc -> get EPStore to make the BgFetcher and Flusher (ie. add a virtual method to the KVBucket class which you call and then create them in the EPStore override)

-------------------------------------
author: Keira Washington
date: 2016-10-14 22:13:27.305000000

Patch Set 2:

(1 comment)

Line:717, src/ep_engine.h -> I would prefer this to be called `getKVBucket`. 

For one, the class is actually called KVBucket and so it's nice to have the capitalisation match. 

Secondly K and V stand for separate words and so should be considered separately when determining camelCase.

Thirdly it looks like it reads as 'k-vBucket' which might be confusing to an unfamiliar reader.

-------------------------------------
author: Adrianna Holmes
date: 2016-10-14 22:39:29.227000000

Patch Set 2:

(2 comments)

Line:717, src/ep_engine.h -> Done

Line:51, src/kvshard.cc -> nice, can be done like that.

But actually, I am tempted to consider that we will not need KVShard for ephemeral bucket. For that, some changes will have to be done. So will just leave a TBD note for now.

-------------------------------------
author: Tate Garrett
date: 2016-10-20 20:34:43.676000000

Change has been successfully cherry-picked as a7b5e9c998f82377c7a9aec75d035ec03834cb19 by Adrianna Holmes

-------------------------------------
