DESCRIPTION

Make seqno part of revid a 64-bit data type

This changeset is towards implementing per vbucket counters inside
ep-engine required to guarantee monotonically increasing revids even
when items are deleted and recreated. We require 64-bit seqno values
because a side effect of the pervbucket counter approach is that items
may see bumps in their revids and we may quickly run out of values if
we continue to use only 32 bits.

Change-Id: I5f36f9ccdc44596decbe9e486a716dd444692fa7


COMMENTS

author: Tatiana Sheppard
date: 2011-12-28 03:40:15.833000000

Uploaded patch set 2.

-------------------------------------
author: Noah Dean
date: 2011-12-28 03:54:17.695000000

Patch Set 2: I would prefer that you didn't submit this

This increases the size of every item stored by 8 bytes.  Due to alignment, it also slips in 4 bytes of padding directly into the middle.  Is this strictly necessary?

-------------------------------------
author: Tatiana Sheppard
date: 2011-12-29 07:27:42.464000000

Patch Set 2:

The 8 byte increase in metadata is unfortunate but necessary. Steve, Chiyoung and I discussed this and it's actually not very difficult to overflow a 32-bit counter with the proposed maxDeletedSeqno counter approach. Hence the requirement for a 64-bit counter.

Regarding the alignment, it could be fixed by ensuring that padding happens at the end of the struct and not in its middle. Size wise it won't make any difference but will be a better layout for future extensions.

-------------------------------------
