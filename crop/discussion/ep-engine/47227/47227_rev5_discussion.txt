DESCRIPTION

MB-13356: If the buffer is full check to see if we have dead backfills

It's possible that the buffer becomes full because a backfill is still
running for a dead vbucket. If this is the case remove the backfill
from the backfill manager.

Change-Id: I5c248d71d79dd9fd1796d5b39ed714d8253dc410


COMMENTS

author: Kenny Maynard
date: 2015-02-26 20:08:22.740000000

Uploaded patch set 5: Patch Set 4 was rebased.

-------------------------------------
author: Hugo Blankenship
date: 2015-02-26 20:08:36.590000000

Patch Set 5:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-sherlock/64/

-------------------------------------
author: Adrianna Holmes
date: 2015-02-26 20:39:45.730000000

Patch Set 5:

(1 comment)

Line:230, src/dcp-backfill-manager.cc -> 1) Any particular reason for having toDelete list? We could just delete the backfill while we a dead stream while iterating through activeBackfills list.
2) Is there a need to check if any of the snoozing backfill is with a dead stream ?

-------------------------------------
author: Hugo Blankenship
date: 2015-02-26 20:49:24.567000000

Patch Set 5: Code-Review-1 Verified+1

Build Unstable 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-sherlock/64/ : UNSTABLE

-------------------------------------
author: Kenny Maynard
date: 2015-02-26 21:06:42.218000000

Removed the following votes:

* Code-Review-1 by Hugo Blankenship xxx@xxx.xxx Jefferson.com>
* Verified+1 by Hugo Blankenship xxx@xxx.xxx Jefferson.com>


-------------------------------------
author: Abby Duran
date: 2015-02-26 21:18:34.792000000

Patch Set 5:

(1 comment)

Line:230, src/dcp-backfill-manager.cc -> Regarding 1), I think we can cancel and free the backfill instance within the first while loop.

-------------------------------------
author: Kenny Maynard
date: 2015-02-26 21:23:55.958000000

Patch Set 5:

(1 comment)

Line:230, src/dcp-backfill-manager.cc -> 1) We need to toDelete list because we cannot be holding the lock when freeing the backfill. In particular we need to free up the buffer bytes which requires taking the lock.
2) We don't need to check the snoozing list because each item will only snooze for at most 1 second before being moved to the active list. As a result the snoozed tasks will be checked automatically. I choose against adding code checks since this scenario is so rare and will be taken care of anyways.

-------------------------------------
author: Abby Duran
date: 2015-02-26 21:26:59.127000000

Patch Set 5: Code-Review+2

-------------------------------------
author: Adrianna Holmes
date: 2015-02-26 21:28:58.585000000

Patch Set 5: Code-Review+2

-------------------------------------
author: Kenny Maynard
date: 2015-02-26 21:48:01.018000000

Patch Set 5: Verified+1

-------------------------------------
author: Tate Garrett
date: 2015-02-26 21:48:05.626000000

Change has been successfully cherry-picked as bc34a8855cb8d8e70ed54192a3b4c505855ba6da

-------------------------------------
