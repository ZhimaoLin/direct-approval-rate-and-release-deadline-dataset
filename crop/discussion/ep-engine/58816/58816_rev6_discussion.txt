DESCRIPTION

Update total items using item count from the underlying KVStore

In the case of full eviction, we need to update number of items
with the total number of items in the underlying data store.
The KV store maintains the item count for each vbucket file on disk.
Update the total vbucket item count with that value.

Change-Id: Ib493a996bc450ab1b321c58bdb113b644d7b661b


COMMENTS

author: Hugo Blankenship
date: 2016-01-22 02:29:18.418000000

Patch Set 6:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1359/ (2/2)

-------------------------------------
author: Hugo Blankenship
date: 2016-01-22 02:43:20.792000000

Patch Set 6: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1359/ : SUCCESS

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2131/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-01-22 09:00:56.943000000

Patch Set 6: Code-Review-1

(1 comment)

Line:3117, src/ep.cc -> Correct me if I'm wrong, but doesn't this mean that every time we write something to the DB (and the persistence callback is called), we need to re-open and read the DB on disk?

If so, isn't that going to have a significant impact on performance??

-------------------------------------
author: Bobby Buck
date: 2016-01-22 16:48:44.710000000

Patch Set 6:

(1 comment)

Line:3117, src/ep.cc -> If called on a readOnly instance, then yes, it will open the file. But this is called on a readWrite instance, so the value will be retrieved from memory.

-------------------------------------
author: Abby Duran
date: 2016-01-22 18:35:02.661000000

Patch Set 6: Code-Review-1

(1 comment)

Line:3117, src/ep.cc -> I would rather update a vbucket item counter at the end of the batch write on that vbucket. As I aforementioned, I think we can use the item counter on disk for the full eviction mode. Note that it is expensive to tell if a given item already exists on disk or not in both Couchstore and ForestDB because it requires an index lookup for each item persisted.

-------------------------------------
author: Bobby Buck
date: 2016-01-22 20:22:40.556000000

Patch Set 6:

(1 comment)

Line:3117, src/ep.cc -> For item counter statistics in full eviction, that should be fine. But in the case of number of updates in the vbucket in full eviction, we can't distinguish between a create and an update.

-------------------------------------
author: Abby Duran
date: 2016-01-22 20:42:15.443000000

Patch Set 6:

(1 comment)

Line:3117, src/ep.cc -> Yeah, I understand your point. For the full eviction, I think it is OK to maintain insertion vs. update counter stats by some rough estimation like using the bloom filter. Or if we really need to maintain the exact counter stats, then we need to extend ForestDB, which can allow an application (ep-engine) to provide the callback that can be invoked during the WAL flush in ForestDB. This is something that we should discuss it more.

-------------------------------------
author: Bobby Buck
date: 2016-02-08 22:35:48.849000000

Patch Set 6:

(1 comment)

Line:3117, src/ep.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2016-03-17 21:11:55.875000000

Change has been successfully cherry-picked as 26f28e2148bbc5137ca423c73541d4430b39472a

-------------------------------------
