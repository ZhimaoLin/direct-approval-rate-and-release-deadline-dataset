DESCRIPTION

[Backport] Checkpoint maintains keys and subset of meta data only

The previous checkpoint implementation requires each checkpoint
to maintain the list of keys, their values, and all of their
meta data fields, which can cause very high memory overhead
in case disk write throughput or replication is very slow.

Based on various use cases for checkpoint, it turns out that it
is not necessary to maintain the strong consistency across
checkpoints. This can simplify a checkpoint's item structure,
which allows us to have keys and subset of their meta data fields
only. Basically, a checkpoint only contains the information about
which keys have been mutated and their operation types.

With this simplication, the memory overhead of a single checkpoint
item (i.e., QueuedItem instance) is reduced from 88 bytes to 40
bytes. In addition, the closed checkpoint won't point to stale
Blob value instances anymore.

Conflicts:

backfill.cc
checkpoint.cc
checkpoint.hh
ep.cc
ep.hh
ep_engine.cc
ep_testsuite.cc
queueditem.hh
tapconnection.cc

Change-Id: I9c0273f582a53014ea92dd94ca9194cb9f5bc387


COMMENTS

author: Abby Duran
date: 2012-03-16 02:55:53.012000000

Uploaded patch set 2.

-------------------------------------
author: Abby Duran
date: 2012-03-16 03:00:22.524000000

Patch Set 2: Verified; Looks good to me, approved

This change is backported from master and has been tested through both unit tests and cluster run.

-------------------------------------
author: Abby Duran
date: 2012-03-16 03:00:22.822000000

Change has been successfully cherry-picked as cc699e77136bfa99e453f84ba48846c76e62d386.

-------------------------------------
