DESCRIPTION

MB-18453: Make task scheduling fairer

Give each task a priority that is a
time + it's priority. This ensures a task
can never be overlooked by higher priority
tasks as it will trickle forward with time.

Change-Id: I6d2f9f6759d1647d7ccca587c89de180efbf8741


COMMENTS

author: Jim WNathalie Landryer
date: 2016-06-27 15:42:03.044000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2016-06-27 15:42:08.222000000

Patch Set 2:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-sherlock/583/

-------------------------------------
author: Hugo Blankenship
date: 2016-06-27 15:42:16.306000000

Patch Set 2: Well-Formed+1

Permission granted to commit: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/17172/artifact/restricted.html : SUCCESS

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-06-27 15:47:21.175000000

Patch Set 2:

> Only +1 as I'm not sure if  even 1second "delay" in running a lower
 > priority task is desirable - IIRC many tasks complete in a matter
 > of microseconds so that's a large number of schedules they would be
 > overlooked if we use second granularity as the tie-breaker.

Agree, fear that gethrtime can go backwards (possibly causing more oddness).

Maybe we can have an artificial scheduling tick, just some uint64 going upwards on every readyQueue.push ? Not thought it through, but could work? Takes the time aspect out of the equation.

-------------------------------------
author: Hugo Blankenship
date: 2016-06-27 15:48:52.480000000

Patch Set 2: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-sherlock/583/ : FAILURE

-------------------------------------
