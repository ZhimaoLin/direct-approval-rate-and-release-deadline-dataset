DESCRIPTION

MB-20822: Erase all diverged branch entries correctly in failover table

When we add an entry in failover table we must erase all the other
entries with higher seqno because they are from a diverged branch.

This commit fixes a bug in the loop that was erasing diverged entires.
In a std::list when we erase an entry, the function returns the
iterator pointing to next element and hence we must be careful not to
double increment it.

Change-Id: I9275fba8057f26e2853a8d7d359f1d01f107f2be


COMMENTS

author: Adrianna Holmes
date: 2016-09-08 08:23:42.376000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-09-08 08:23:49.009000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1095/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-08 08:23:49.185000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/990/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-08 08:23:50.036000000

Patch Set 1: Well-Formed-1

Branch restricted. PLEASE READ this URL: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/23013/artifact/restricted.html : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2016-09-08 08:23:57.087000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/822/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-08 08:33:39.060000000

Patch Set 1: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/990/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/822/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1095/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-09-08 08:55:22.175000000

Patch Set 1: Code-Review-1

(2 comments)

Line:150, src/failover-table.h -> Please add a comment - total number of entries? Valid entries? entries on a particular fork? etc :)

Line:65, src/failover-table.cc -> For simplicity just use <algorithm> - no risk of iterator errors:

 table.remove_if([high_seqno](const failover_entry_t& e){
     return e.by_seqno > high_seqno; });

-------------------------------------
author: Adrianna Holmes
date: 2016-09-08 09:22:25.974000000

Patch Set 1:

(2 comments)

Line:150, src/failover-table.h -> Done

Line:65, src/failover-table.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2016-09-30 00:44:22.393000000

Change has been successfully cherry-picked as 4eae12aa7d372d02e14c81c5eb733e5912f81f69 by Adrianna Holmes

-------------------------------------
