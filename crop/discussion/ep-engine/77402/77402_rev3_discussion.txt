DESCRIPTION

MB-23734: Do memory mgmt across backfills in Ephemeral backfills

In Ephemeral buckets we currently do not have backfill memory mgmt.
Mainly because upon increased memory usage by backfill items we cannot
easily pause the backfill midway because pausing a backfill will
increase the duplicate items in the ephemeral sequential data structure.

This commit adds memory mgmt across backfills (each vbucket is an
individual backfill). Upon full usage of the backfill buffer we stop
running other backfills until the backfill buffer is empty again.

However once a backfill starts it runs till completion even if its
memory usage goes beyond the buffer size.

Change-Id: If5f77561a856b5001de159cd4655eb30c71e222c


COMMENTS

author: Adrianna Holmes
date: 2017-04-26 23:20:28.889000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2017-04-26 23:54:07.610000000

Patch Set 3: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/16.04-ep-engine-threadsanitizer-master/42/ : FAILURE

Timeout of a CTest test 26/26 Test #26: ep_perfsuite.ephemeral ...................} ( http://cv.jenkins.Piper Jefferson.com//job/16.04-ep-engine-threadsanitizer-master/42/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/6011/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5488/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/6271/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4790/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2017-04-27 00:14:07.272000000

Patch Set 3: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/6011/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5488/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/6271/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4790/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/16.04-ep-engine-threadsanitizer-master/43/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-04-27 13:36:55.251000000

Patch Set 3: Code-Review-1

I'm not sure this solves the problem I think we have. 

Consider the situation where we have say a large number of nodes (and hence per-node vBucket count is relatively low) - e.g. a 32node cluster would have 32 vBuckets per node.

From my reading of this patch, an Ephemeral backfill would still need to copy the entirety of the vBucket into the DCP send buffer. This could be many, many GBs (e.g. 1/32 of the RAM quota; probably more with protocol overhead). Is my understanding correct?

I was thinking of something along the lines of allowing readers of the SequenceList the ability to obtain an iterator on the sequence list (actually more like a Range as it would have a pre-defined end). The iterator object would set the RangeRead start/end to it's extent. The client could then deference the iterator to get the current item, and then advance it, moving the start forward (and also increasing readRange.begin).

When a client needs to temporarily pause (e.g. when the 20MB buffer is full), they simply stop moving the iterator.

In other words, you get rid of BasicLinkedList::rangeRead() as it exists today, and instead have an interface something like:

class BasicLinkedList {

 // Creates a rangeReadIterator, registers with BasicLinkedLIst and returns it
 BasicLinkedList::RangeIterator makeRangeReadIterator(start, end);

 // Iterator confirming to ForwardIterator
 RangeIterator {

    // returns the Item at the iterator's current position.
    UniqueItemPtr<Item> operator*();
 
    RangeIterator operator++();
 }

Something like this could also be used to improve the tombstone purger, as that currently has to wNathalie Landry the entire list at once; which can take a long time. While this is done on a background NonIO thread, it still keeps that thread busy for an extended period, meaning other Tasks cannot be run.

-------------------------------------
author: Ashlee Kent
date: 2017-04-27 16:26:11.836000000

Patch Set 3:

Please expand the commit message explaining the limitations this still has. 

I'm ok with it going in; given we have it now (and it is better than it was).

-------------------------------------
