DESCRIPTION

MB-20585: Fix three memory leaks

Recent changes have snuck some leaks in.

1) CouchKVStore refactoring allocated two buffers when a single
larger buffer should be used. The second buffer never gets freed.
Also a new/free mistmatch between couchstore/ep-engine is fixed.

Introduced by - 8350175

2) The watson -> master merge fixed a TSAN issue, but introduced a leak
in DcpConsumer code.

Introduced by - 7ed33aa

3) Changes in connmap mean test code can now leak cookies because the
cleanup task runs every second allowing a test to finish with an
allocated cookie.

Introduced by dd2bf1e

Change-Id: I8e63a51a4a6ec0c88782a6f487ced648d36afd2e


COMMENTS

author: Jim WNathalie Landryer
date: 2016-08-19 13:36:21.652000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-08-19 13:36:29.582000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/921/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-08-19 13:36:29.720000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1176/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-08-19 13:36:29.864000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1085/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-08-19 13:49:09.907000000

Patch Set 1: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/921/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1176/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1085/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-08-19 15:30:50.251000000

Patch Set 1: Code-Review-1

(2 comments)

Line:698, src/couch-kvstore/couch-kvstore.cc -> Would be preferable to change the deallocation to delete if possible (instead of changing the allocation to C-style). Particularly true given I'm about to replace  all C-style malloc/calloc calls with cb_XXX versions).

Line:1573, src/dcp/stream.cc -> Not sure I understand why we lock again here - could you explain the rationale?

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-08-19 15:40:09.243000000

Patch Set 1:

(2 comments)

Line:698, src/couch-kvstore/couch-kvstore.cc -> So the free here occurs in couchstore, so this probably needs to become cb_calloc and hence couchstore will use cb_free?

Line:1573, src/dcp/stream.cc -> lh is the lockholder for the buffer mutex (protecting the push and bytes += on line 1575/1576). Line 1536 grabbed the lock so we could make a decision about the if block, however we don't want to keep the lock held as we call down to processMutation and friends (TSAN will flag a lock inversion if we do).

Could also do this work with some scope blocks and a second lockholder maybe to make it more obvious?

-------------------------------------
author: Ashlee Kent
date: 2016-08-22 10:19:02.015000000

Patch Set 1: Code-Review+2

(2 comments)

Line:698, src/couch-kvstore/couch-kvstore.cc -> Ok - probably simpler to leave until my cbmalloc() changes.

Line:1573, src/dcp/stream.cc -> Scoped lock would be better, but it's not the end of the world. I'll leave it with you to undate/not update as you deem appropriate.

-------------------------------------
author: Tate Garrett
date: 2016-08-22 10:44:37.938000000

Change has been successfully cherry-picked as a288f6c6b3e8bc15cecd969404545f58cdf3da81 by Kymani Ramirez

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-08-22 12:07:07.791000000

Patch Set 1:

(1 comment)

Line:1573, src/dcp/stream.cc -> oops, re: Dan's accidental submit, maybe a new patch is coming any way

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-08-22 12:08:40.012000000

Patch Set 1:

> Sorry was attempting to add comment - but pressed submit by
 > mistake.  I was trying to comment on the manageConnections call.
 > 
 > I wanted to say...
 > Would it be better to modify the ConnManager run function so that
 > it just returned true if "  !connmap->isAllEmpty() ||
 > !connmap->isDeadConnectionsEmpty()"
 > (i.e. remove the  !engine->getEpStats().isShutdown)

The run() function is only invoked every second, which is the problem. I.e. the test code exits and leaves a cookie with a ref count of 1 (hence the leak). The ref count is 1 because the ep-engine connManager code only runs once a second

-------------------------------------
