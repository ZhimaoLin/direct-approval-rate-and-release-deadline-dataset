DESCRIPTION

MB-5475: Add stat to track meta data usage

Change-Id: I48fb8a28eba13fcab6ff0a84ff161869eeaa9d9e


COMMENTS

author: Macie Morton
date: 2012-06-11 04:37:49.953000000

Patch Set 1: (1 inline comment)



Line:534, stored-value.hh -> Looks like getKeyLen() returns the length of key, which is variable and does not account size of the meta data like seqno, cas, exptime and flags, etc.   

If we want to account the memory by the key, we may want to change the name to KeySize().  

IHMO the key could be quite long depending on application, but the meta data size should be something constant.

-------------------------------------
author: Kenny Maynard
date: 2012-06-11 04:47:03.557000000

Patch Set 1: (1 inline comment)



Line:534, stored-value.hh -> Good point on the meta data. In terms of naming I think we have a lot of different ways of getting sizes and bad names for those functions. I want to refactor this stuff in a later commit, but for now would prefer to stick to getKeyLen unless you have any objection to that.

-------------------------------------
author: Macie Morton
date: 2012-06-11 04:52:13.251000000

Patch Set 1: (1 inline comment)



Line:534, stored-value.hh -> Thanks Mike for quick response. I do not have objection. I am just wondering what you really account here, is it the memory used by Key or the memory used by metaData (like seqno, cas, etc)?

Seems the value return by getKeyLen comes from 

extra.feature.keylen = itm.getKey().length();

I guess you are counting the memory used by keys in hash table, right?

Thanks.

-------------------------------------
author: Kenny Maynard
date: 2012-06-11 04:54:58.809000000

Patch Set 1: (1 inline comment)



Line:534, stored-value.hh -> This is the number of bytes that always stay in memory. For example when we evict an item we remove the value from memory so that value doesn't count as meta data. The seqno and cas are part of meta data so this should account for everything.

-------------------------------------
author: Macie Morton
date: 2012-06-11 05:02:29.460000000

Patch Set 1: (1 inline comment)



Line:534, stored-value.hh -> I looked at the code a bit. The getKeyLen() returns value from  extra.feature.keylen
    
    uint8_t getKeyLen() const {
        if (_isSmall) {
            return extra.small.keylen;
        } else {
            return extra.feature.keylen;
        }
    }

while, the in constructor, the real value comes from key length

       extra.feature.keylen = itm.getKey().length();

itm.getKey() actually returns the key string, so itm.getKey().length() returns the key string length ONLY, where is the metadata like seqno, cas etc, is counted?

Please correct me if I am wrong. 
Thanks.

-------------------------------------
author: Kenny Maynard
date: 2012-06-11 05:04:51.745000000

Patch Set 1: (1 inline comment)



Line:534, stored-value.hh -> Take a look at the sizeOf() function. It computes the size of StoredValue instance which includes the featured data struct. The featured data struct contains the seqno, cas, and more.

-------------------------------------
author: Macie Morton
date: 2012-06-11 05:10:00.587000000

Patch Set 1: (1 inline comment)



Line:534, stored-value.hh -> Got it. It is sizeOf(), not sizeof(). Thanks for explanation.

-------------------------------------
author: Audrina Olson
date: 2012-06-11 18:34:04.865000000

Patch Set 1:

Looks good, thanks. We can expand one of existing metadata test cases (ep_testsuit) with verifying this new stat though.

-------------------------------------
author: Macie Morton
date: 2012-06-11 18:36:18.630000000

Patch Set 1: Looks good to me, but someone else must approve



-------------------------------------
author: Abby Duran
date: 2012-06-12 06:49:34.678000000

Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)

Please also update the stats.org doc.

Line:1452, stored-value.hh -> Just a minor thing that is not related to this commit. Please adapt the above two static method invocations so that they are also invoked by referencing class name.

Line:1468, stored-value.hh -> Same comment as above

-------------------------------------
author: Tate Garrett
date: 2012-06-13 00:19:56.833000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
