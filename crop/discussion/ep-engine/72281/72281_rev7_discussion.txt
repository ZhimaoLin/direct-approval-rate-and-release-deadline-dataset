DESCRIPTION

MB-22231: Use RAII for ep-engine entrypoints

Adds a function to get a resource handle (unique_ptr) for
EventuallyPersistentEngine rather than a bare pointer. This resource
handler has a custom deleter that calls releaseHandle() rather than
doing a delete.

Initially just a single entrypoint has been changed. The plan is to
increase the usage of this once this change is agreed on.

Change-Id: Ic10fd7b1a693fc31de5ca7998f38976b185cfc8a


COMMENTS

author: Aaliyah Proctor
date: 2017-01-20 16:13:54.236000000

Uploaded patch set 7.

-------------------------------------
author: Hugo Blankenship
date: 2017-01-20 16:14:03.878000000

Patch Set 7:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2550/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-20 16:14:04.033000000

Patch Set 7:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2922/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-20 16:14:04.203000000

Patch Set 7:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1755/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-20 16:14:04.364000000

Patch Set 7:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3084/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-20 16:25:22.372000000

Patch Set 7: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2922/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2550/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1755/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3084/ : SUCCESS

-------------------------------------
author: Keira Washington
date: 2017-01-20 16:31:29.842000000

Patch Set 7: Code-Review-1

(1 comment)

Line:90, src/ep_engine.cc -> Currently EPHandle looks something like the following:

    class EPHandle {
    public:
        // accessors etc.
    private:
        EventuallyPersistentEngine* ptr;
        void (*deleter)(EventuallyPersistentEngine*)'
    }

A regular unique_ptr is the same size as a raw ptr, in this case you're storing a function pointer as well. If you used a regular function instead of a lambda you could do something like this:

    struct EPHandleDeleter {
        void operator()(EventuallyPersistentEngine*) {
            ObjectRegistry::onSwitchThread(nullptr);
        }
    }
    using EPHandle = std::unique_ptr<EventuallyPersistentEngine*, EPHandleDeleter>;

In this case `sizeof(EPHandle) == sizeof(EventuallyPersistentEngine*)` as the size of an EPHandleDeleter is 0. Then when constructing an EPHandle you don't need to give it a pointer to a function. ie:

    return EPHandle(ret);

unique_ptr will default construct an EPHandleDeleter (aka a no-op) and if it ever needs to delete something it won't need to dereference a function pointer.

-------------------------------------
author: Tate Garrett
date: 2017-01-24 16:21:43.338000000

Change has been successfully cherry-picked as 703e11dfd1c2945a490cc48fa0982195fec680ad by Ashlee Kent

-------------------------------------
