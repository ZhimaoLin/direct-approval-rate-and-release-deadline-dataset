DESCRIPTION

Tests to ensure get_meta doesn't break get/set/delete semantics

Following scenarios are covered:
1. get_meta followed by get for an existing key: get passes
2. get_meta followed by get for a deleted key: get fails
3. get_meta followed by get for a nonexistent key: get fails

4. get_meta followed by set for an existing key: set passes
5. get_meta followed by set for a deleted key: set passes
6. get_meta followed by set for a nonexistent key: set passes

7. get_meta followed by delete for an existing key: delete passes
8. get_meta followed by delete for a deleted key: delete fails
9. get_meta followed by delete for a nonexistent key: delete fails

Change-Id: Ie2b7938662559f85a9d28208726a1405ab033b25


COMMENTS

author: Tatiana Sheppard
date: 2012-04-30 21:23:44.168000000

Uploaded patch set 2.

-------------------------------------
author: Audrina Olson
date: 2012-05-01 05:08:29.787000000

Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)



Line:5248, ep_testsuite.cc -> The following test case should pass (also based on you comment here) However, the actual code looks like expecting a failure instead.

-------------------------------------
author: Audrina Olson
date: 2012-05-01 05:12:25.608000000

Patch Set 2: Looks good to me, but someone else must approve

(1 inline comment)



Line:5248, ep_testsuite.cc -> Actually the code is correct.

-------------------------------------
author: Tatiana Sheppard
date: 2012-05-01 05:45:12.036000000

Patch Set 2: (1 inline comment)



Line:5248, ep_testsuite.cc -> The "Expected to get meta" message is the cause of the confusion. Will fix the message.

-------------------------------------
