DESCRIPTION

DCP: Keep connection map and list in sync

When we create a new producer or new consumer
we check to see if a connection with the same
name is in the connection list.  If it is we
remove it, however we left it in the
corresponding connection map.

This patch removes the connection from the
connection map to ensure that both the map
and list remain in sync.

Change-Id: I0160c01a434c0721e4d6941da8cd0104788ac288


COMMENTS

author: Kymani Ramirez
date: 2016-01-14 16:42:48.346000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-01-14 16:42:55.132000000

Patch Set 1:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2027/ (2/2)

-------------------------------------
author: Hugo Blankenship
date: 2016-01-14 16:56:06.886000000

Patch Set 1: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2027/ : SUCCESS

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1265/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-01-14 18:05:14.732000000

Patch Set 1: Code-Review+1

Interesting. Correct me if I'm wrong, but does this mean that if you repeatedly add/remove... a DCP connection with the same name, we'll end up with a bigger and bigger map?

-------------------------------------
author: Kymani Ramirez
date: 2016-01-14 18:33:03.322000000

Patch Set 1:

Yes I believe so - I found the issue during a test I was writing, where the map got bigger but the list did not.

-------------------------------------
author: Adrianna Holmes
date: 2016-01-14 18:52:51.526000000

Patch Set 1:

map_ is a std::map. I believe writing onto std map with the same key will only update the existing value. I don't see why would the size change as we are subsequently adding the connection to the list and the map after breaking from the for loop.

-------------------------------------
author: Ashlee Kent
date: 2016-01-14 19:19:12.377000000

Patch Set 1:

> map_ is a std::map. I believe writing onto std map with the same
 > key will only update the existing value. I don't see why would the
 > size change as we are subsequently adding the connection to the
 > list and the map after breaking from the for loop.

Note the key is the cookie - i.e. the address of the connection object.

Therefore just because the same named connection arrives, doesn't mean it would have the same cookie (and hence replace the old one).

-------------------------------------
author: Kymani Ramirez
date: 2016-01-14 20:31:05.656000000

Patch Set 1:

Dave is correct, and I have a DCP test (that I'm working on adding the the test suite) that demonstrated the issue of getting multiple map entries because of different cookies.  So in my test, I end up with the "all" list containing 1 entry but the "map_" map containing 2.

-------------------------------------
