DESCRIPTION

MB-10488: Add a notifier upr connection type

The upr notifier connection is used to get updates through an upr
stream about when new items are available to stream.

Change-Id: I8f568f7696b09f64703b9bab50a9c5420c9d0c80


COMMENTS

author: Kenny Maynard
date: 2014-03-24 23:34:38.135000000

Uploaded patch set 1.

-------------------------------------
author: Kenny Maynard
date: 2014-03-24 23:37:01.436000000

Patch Set 1:

(1 comment)

Line:117, src/upr-producer.cc -> We need to wait to transition to the backfilling state until we have the ActiveStream reference counted. The reason is that the backfill task uses reference counting and if the backfill finishes before we reference count it here then the stream will be deleted and lead to problems. I'll refactor this later to make it more intuitive to use but it requires another change that should be its own separate commit.

-------------------------------------
author: Hugo Blankenship
date: 2014-03-24 23:49:59.543000000

Patch Set 1:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-300/354/

-------------------------------------
author: Hugo Blankenship
date: 2014-03-25 00:18:08.285000000

Patch Set 1: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-300/354/ : SUCCESS

-------------------------------------
author: Miley Adams
date: 2014-03-25 18:23:13.007000000

Patch Set 1:

(3 comments)

the spec should be updated to reflect this

Line:276, src/upr-stream.cc -> why unlock early?

Line:458, src/upr-stream.cc -> lock first?

Line:2747, tests/ep_testsuite.cc -> "failed upr notifier open?"

-------------------------------------
author: Kenny Maynard
date: 2014-03-25 18:31:04.163000000

Patch Set 1:

(3 comments)

Line:276, src/upr-stream.cc -> We need to unlock before notifying the connection otherwise there will be a deadlock because notifyStreamReady grabs the producer lock.

Line:458, src/upr-stream.cc -> No. endStream is private and will always be called when the lock is already held. Note that the lock is always grabbed in the next() function.

Line:2747, tests/ep_testsuite.cc -> Done

-------------------------------------
