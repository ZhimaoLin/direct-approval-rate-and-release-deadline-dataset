DESCRIPTION

MB-11418: Do not generate access log when resident ratio is greater than 95%

When resident ratio is high, reading from access log during warmup
does not give any benefits and will only slow down warmup process.
Hence, it is good not to generate access log when resident ratio is
greater than 95%

Change-Id: Iab3a87e6db4de93afbe4838f5bcf258b1c0b6722


COMMENTS

author: Adrianna Holmes
date: 2015-09-05 01:00:55.589000000

Uploaded patch set 6.

-------------------------------------
author: Hugo Blankenship
date: 2015-09-05 01:01:01.917000000

Patch Set 6:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/917/

-------------------------------------
author: Hugo Blankenship
date: 2015-09-05 01:58:24.298000000

Patch Set 6: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/917/ : FAILURE

-------------------------------------
author: Ashlee Kent
date: 2015-09-07 08:00:36.023000000

Patch Set 6: Code-Review+1

(1 comment)

Line:265, src/access_scanner.cc -> Given you already have the argument as a std::string (in ::run()) then just use const std::string& as the argument.

-------------------------------------
author: Abby Duran
date: 2015-09-08 17:20:36.735000000

Patch Set 6:

(1 comment)

Line:90, src/access_scanner.cc -> I'm not sure why we need to put this logic in two places below and remove it here. It seems to me that it won't make any difference. Am I missing something?

-------------------------------------
author: Adrianna Holmes
date: 2015-09-08 17:34:11.464000000

Patch Set 6:

(1 comment)

Line:90, src/access_scanner.cc -> The "stateFinalizer" must be set to true only when the ItemAccessVisitor task is done updating the access log files. If it is only top as it was before, then we are setting "stateFinalizer" to true before updating the access log files, then we may have 2 ItemAccessVisitor tasks trying to modify the same access log files.

Also, I see that "stateFinalizer" is not atomic and may be redundant because access scanner runs only once in 24hrs. Should we get rid of "stateFinalizer" ?

-------------------------------------
author: Abby Duran
date: 2015-09-08 20:53:14.859000000

Patch Set 6:

(1 comment)

Line:90, src/access_scanner.cc -> Well, I don't think we should get rid of "stateFinalizer". Otherwise, it might cause more than one access scanner task to be executed at a given moment. We don't need to make "stateFinalizer" atomic as it is guarded by an atomic counter.

-------------------------------------
author: Tate Garrett
date: 2015-09-09 00:06:47.212000000

Change has been successfully cherry-picked as c040ace26c47365ceebc028ab83f6d12a5f0cd35

-------------------------------------
