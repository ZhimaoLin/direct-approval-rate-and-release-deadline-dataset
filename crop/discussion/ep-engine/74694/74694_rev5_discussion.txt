DESCRIPTION

MB-22041 [10/N]: Add config aliasing

This will allow renaming of config values while maintaining backwards
compatability with, e.g., previously set extra_config_string values.

This is done by changing `attributes` in configuration.cc to use shared
pointers, and extending genconfig.cc to facilitate putting a second key
in the map with a pointer to the same value_t.

For example, in configuration.jason, to add an alias "cache_size" for
the parameter "max_size", one could do:

 "max_size": {
     "default": "0",
     "type": "size_t",
+    "aliases":["cache_size"]
 },

Additionally,

...
+    "aliases": "cache_size"
...

would be accepted in the case of a single alias.

Change-Id: Icd9e9fe0263f026b7e906b41efaea0e2b79ab676


COMMENTS

author: Jace Townsend
date: 2017-03-07 10:45:41.560000000

Uploaded patch set 5.

-------------------------------------
author: Ashlee Kent
date: 2017-03-07 10:54:44.606000000

Patch Set 5: Code-Review-1

(1 comment)

Line:494, src/configuration.h -> Now we are using shared_ptr for the attributes I don't think this is necessary?

-------------------------------------
author: Hugo Blankenship
date: 2017-03-07 11:30:16.689000000

Patch Set 5: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4651/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3249/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4427/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/3997/ : SUCCESS

-------------------------------------
author: Jace Townsend
date: 2017-03-07 12:04:42.765000000

Patch Set 5:

(1 comment)

Line:494, src/configuration.h -> Hum - I did drop it once over but the dtor

Configuration::~Configuration() {
    for (const auto& attribute : attributes) {
        if (aliases.find(attribute.first) != aliases.end()) {
            continue;
        }

        for (const auto& listener : attribute.second->changeListener) {
            delete listener;
        }

        delete attribute.second->validator;
        if (attribute.second->datatype == DT_STRING) {
            cb_free((void*)attribute.second->val.v_string);
        }
    }
}

would delete the component parts multiple times. re-jigged the code to not do it this way

-------------------------------------
