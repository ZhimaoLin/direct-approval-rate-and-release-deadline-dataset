DESCRIPTION

MB-20822: When loading persisted failovers, remove any erroneous entries

Due to bugs in older releases (and also possibly in future releases),
we may end up storing wrong failover table on disk. Hence during
warmup while loading failover table from disk we must prune out any
wrong entries.

Also, in the past we have seen erroneous entries with vb_uuid == 0.
So we make sure that vb_uuid is not generated as a valid value and
prune out any entry that has vb_uuid == 0

Change-Id: I630cb7fb1ea9a711432be64f36924d04fcd5e361


COMMENTS

author: Adrianna Holmes
date: 2016-10-04 00:14:20.302000000

Uploaded patch set 6.

-------------------------------------
author: Hugo Blankenship
date: 2016-10-04 00:14:27.412000000

Patch Set 6:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/1067/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-10-04 00:14:27.552000000

Patch Set 6:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1420/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-10-04 00:14:27.700000000

Patch Set 6:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1247/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-10-04 00:14:27.842000000

Patch Set 6:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-watson/82/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-10-04 00:26:44.507000000

Patch Set 6: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-watson/82/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/1067/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1420/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1247/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-10-04 08:06:15.532000000

Patch Set 6: Code-Review-1

(3 comments)

Line:70, src/failover-table.cc -> Might be worth explaining *why* we don't want UUID 0 (I can tell from the code we are skipping zero, but not the reason for it).

Line:374, src/failover-table.cc -> Again, worth explaining why zeros are removed.

Line:382, src/failover-table.cc -> This is probably a premature optimisation - the for loop below won't be entered in the case of 1 or fewer elements, and if you remove this we don't need to duplicate code for the erroneous_entries calculation.

-------------------------------------
author: Keira Washington
date: 2016-10-04 08:35:07.415000000

Patch Set 6:

(1 comment)

Line:382, src/failover-table.cc -> Is it not required for a table size of 0 (Where table.begin() == table.end() and std::next(table.begin()) is undefined behaviour)?

-------------------------------------
author: Ashlee Kent
date: 2016-10-04 08:46:32.473000000

Patch Set 6:

(1 comment)

Line:382, src/failover-table.cc -> True, the for() loop will need adjustment; but it still means we only have a single return point (and a single calculation of erroneous_entries...)

(Basically I don't like the duplicated code).

-------------------------------------
author: Adrianna Holmes
date: 2016-10-04 20:32:30.990000000

Patch Set 6:

(3 comments)

Line:70, src/failover-table.cc -> Done

Line:374, src/failover-table.cc -> Done

Line:382, src/failover-table.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2016-10-11 07:51:36.719000000

Change has been successfully cherry-picked as 3fb0f02cbed9a7ea90af8b59efcf0983794efd2a by Ashlee Kent

-------------------------------------
