DESCRIPTION

MB-20822: When loading persisted failovers, remove any erroneous entries

Due to bugs in older releases (and also possibly in future releases),
we may end up storing wrong failover table on disk. Hence during
warmup while loading failover table from disk we must prune out any
wrong entries.

Change-Id: I630cb7fb1ea9a711432be64f36924d04fcd5e361


COMMENTS

author: Adrianna Holmes
date: 2016-09-15 00:48:16.743000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-09-15 00:48:25.000000000

Patch Set 1: Well-Formed-1

Branch restricted. PLEASE READ this URL: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/23598/artifact/restricted.html : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2016-09-15 00:48:26.353000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/850/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-15 00:48:26.488000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1135/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-09-15 00:48:26.624000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1018/ (3/3)

-------------------------------------
author: Adrianna Holmes
date: 2016-09-15 00:53:32.041000000

Patch Set 1:

(1 comment)

Line:377, src/failover-table.cc -> Requesting comments/suggestions regarding
1. Should we check for any duplicate vb_uuids ? I ask this because, we have not seen duplicate vb_uuid error yet and hence do we sacrifice performance by checking for duplicate vb_uuids ?
2. Should we purge entries with vb_uuid == 0 ? Such an error was previously seen. But removing entry with vb_uuid == 0 may not always be correct because vb_uuid = 0 can be a valid entry

-------------------------------------
author: Hugo Blankenship
date: 2016-09-15 01:11:19.364000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1135/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/850/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1018/ : SUCCESS

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-09-15 13:33:04.485000000

Patch Set 1:

> (1 comment)

For point 2, maybe an option is if you find vb_uuid == 0, wipe out all entries? The chances of affecting a user with a real uuid of 0 are very small, the chances of fixing a user who has hit the vb_uuid bug is much higher.

-------------------------------------
author: Adrianna Holmes
date: 2016-09-15 17:29:18.855000000

Patch Set 1:

Thanks Jim.. Makes sense to wipe out entries when vb_uuid == 0.
Since there is no hurry to merge this in, I think it is good to wait to get any comments from Ashlee Kent.

-------------------------------------
author: Kymani Ramirez
date: 2016-09-16 07:48:52.884000000

Patch Set 1:

When do we get a vb_uuid ==0, is it because its a randomly generated value and therefore it's possible to get zero?

My other question, is assuming that we wipe out the entries that are zero, why is this safe (under the rare condition that the vb_uuid == 0 was actually a valid entry)?

(apologies if these are silly questions - I'm new to the failover table stuff)

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-09-16 13:48:08.745000000

Patch Set 1:

> When do we get a vb_uuid ==0, is it because its a randomly
 > generated value and therefore it's possible to get zero?
 > 
 > My other question, is assuming that we wipe out the entries that
 > are zero, why is this safe (under the rare condition that the
 > vb_uuid == 0 was actually a valid entry)?
 > 
 > (apologies if these are silly questions - I'm new to the failover
 > table stuff)

Dan, we had a bug where a particular warmup path lead to us initialising the failover table with a vb_uuid of 0. This would happen against every vb, leading to some broken failover scenarios.

But because the uuid is a random number, 0 is valid.

So my point is that if you encounter 0, just assume it's because of the bug. Wiping out all entries just means that no client can do a delta DCP style connection, everyone will be forced to backfill from seqno 0.

-------------------------------------
author: Tate Garrett
date: 2016-10-11 07:51:36.719000000

Change has been successfully cherry-picked as 3fb0f02cbed9a7ea90af8b59efcf0983794efd2a by Ashlee Kent

-------------------------------------
