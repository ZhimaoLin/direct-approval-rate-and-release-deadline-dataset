DESCRIPTION

Part 1: Convert existing DCP tests to C+11

Tests from test_dcp_vbtakeover_stat_no_stream up to
and including test_dcp_consumer_noop are converted
to C+11, simplifying the tests and including
additional checks where possible.

Change-Id: I8a3fc5bb1e71c5b6366e871d061bbe881bd01960


COMMENTS

author: Kymani Ramirez
date: 2016-02-10 13:08:47.067000000

Uploaded patch set 7.

-------------------------------------
author: Hugo Blankenship
date: 2016-02-10 13:09:57.594000000

Patch Set 7:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1644/ (2/2)

-------------------------------------
author: Hugo Blankenship
date: 2016-02-10 13:19:07.310000000

Patch Set 7: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1644/ : FAILURE

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2394/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-02-10 13:27:15.568000000

Patch Set 7: Code-Review-1

(7 comments)

I've not gone through the whole file, as I started to see lots of similar issues.

In general I think it's good to move to C++11, but some of these changes aren't really related to that and (IMHO) make the code /less/ readable.

Line:524, tests/ep_testsuite_dcp.cc -> In the rest of the code we have just 1 empty line between functions. While you could argue for either 1 or 2, I'd prefer staying consistent with the rest of the code and just have one.

Line:538, tests/ep_testsuite_dcp.cc -> hardcoded magic numbers are bad. I suggest you revert this / convert to std::string and just use name.c_str() / name.size().

Line:541, tests/ep_testsuite_dcp.cc -> I'd actually argue that the previous code is more explicit / less bug-free - you don't need to comment the argument to tell what it is, and also the user doesn't have to keep track of what opaque is up to.

Line:587, tests/ep_testsuite_dcp.cc -> Similary here - having named variables (even if they never change) is more readable when we make multiple calls which use them.

Line:588, tests/ep_testsuite_dcp.cc -> As above.

Line:601, tests/ep_testsuite_dcp.cc -> As above

Line:638, tests/ep_testsuite_dcp.cc -> Same here, this feels less readable to me.

-------------------------------------
author: Hugo Blankenship
date: 2016-02-10 13:29:07.152000000

Patch Set 7: -Verified

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1645/ (2/2)

-------------------------------------
author: Kymani Ramirez
date: 2016-02-10 13:35:54.185000000

Patch Set 7:

(3 comments)

Line:524, tests/ep_testsuite_dcp.cc -> I want it to be 2.  I just have not finished the convert.  However to be consistent in this patch, I will make the spacing 2 between all functions.

Line:587, tests/ep_testsuite_dcp.cc -> I disagree if the value is a constant I would prefer we pass in the actual value.

Line:638, tests/ep_testsuite_dcp.cc -> I find it useful to know that actual value at the time - it highlights its a constant

-------------------------------------
author: Hugo Blankenship
date: 2016-02-10 13:39:14.673000000

Patch Set 7: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2394/ : SUCCESS

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1645/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-02-10 13:43:04.674000000

Patch Set 7:

(2 comments)

Line:524, tests/ep_testsuite_dcp.cc -> I more meant every other file in memcached / ep_engine - hence I don't think this file should be different.

People will always have different opinions on things like whitespace, we need to be pragmatic and stick with a single format (even if it's not preferred).

If you really want to push for double-lines between functions then that should be done with a single script which updates the whole repo.

Line:587, tests/ep_testsuite_dcp.cc -> Yes, but you end up Adrianna Holmesally commenting the argument so people know what it means - so it's no less typing (actually) more, and someone would have to update multiple places to change the value if they needed to.

I fail to see how this change improves things. If you want it to be const just declare it as a const variable.

-------------------------------------
author: Ashlee Kent
date: 2016-02-10 13:43:59.918000000

Patch Set 7:

(1 comment)

Line:7, /COMMIT_MSG -> s/C+11/C++11/

-------------------------------------
author: Tate Garrett
date: 2016-02-12 18:11:21.575000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
author: Tate Garrett
date: 2016-02-15 14:41:47.246000000

Change has been successfully cherry-picked as ec12e3b79709823aff6e314c7fe88d7c8f5dd407

-------------------------------------
