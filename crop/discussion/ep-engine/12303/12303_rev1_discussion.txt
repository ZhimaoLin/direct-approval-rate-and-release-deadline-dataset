DESCRIPTION

Support TAP_DELETION operation with an item's meta data.

Change-Id: I040f59a88832a0d23ef3c68d42af7cb546de0930


COMMENTS

author: Abby Duran
date: 2012-01-12 03:08:42.925000000

Patch Set 1:

I think we don't have to have separate "setWithMeta" and "deleteWithMeta", but instead should adapt existing "set" and "delete" functions from epstore and hashtable. We should avoid any unnecessary redundant codes.

-------------------------------------
author: Kenny Maynard
date: 2012-01-12 22:52:15.664000000

Patch Set 1: Looks good to me, approved



-------------------------------------
author: Tatiana Sheppard
date: 2012-01-12 23:56:49.256000000

Patch Set 1: (1 inline comment)



Line:1657, ep_engine.cc -> I don't think we need another if statement here. The deleteWithMeta() function could move inside the if block above since meta can only be set to true inside it. We can also get rid of the meta local variable this way.

Does this make sense?

-------------------------------------
author: Abby Duran
date: 2012-01-13 00:10:54.455000000

Patch Set 1: (1 inline comment)



Line:1657, ep_engine.cc -> I don't think that quite matters. I'm still not comfortable with having separate delete functions here. I want to get rid of "setWithMeta" and "delWithMeta" from epstore and hash table soon.

-------------------------------------
author: Tatiana Sheppard
date: 2012-01-13 00:18:40.997000000

Patch Set 1: (1 inline comment)



Line:1657, ep_engine.cc -> I see. Is this change towards having a single delete() function in the future with the presence/absence of meta passed as a boolean? If so, this change set makes sense.

On the more general question of multiple functions -- can you please elaborate what your concerns are? I agree that if two or more functions have a lot of duplicate code then it's bad but to modularize for readability is good, right?

-------------------------------------
author: Abby Duran
date: 2012-01-13 00:40:35.654000000

Patch Set 1: (1 inline comment)



Line:1657, ep_engine.cc -> I don't think having two functions that have the almost same logic except for a couple of lines will improve the readability. My concern is that if we want to add additional common logic or a bug fix to "set" or "delete" functions, should we do just copy and paste it into the other same functions?

Another concern, if we want to define another delete function that also has the almost the same logic, are we going to copy and paste the existing function and change a couple of lines?

If "delete" and "deleteWithMeta" are diverged later, we can then separately define "deleteWithMeta" and move the common parts into the private functions.

-------------------------------------
author: Tatiana Sheppard
date: 2012-01-13 00:44:08.477000000

Patch Set 1: Looks good to me, approved

(1 inline comment)



Line:1657, ep_engine.cc -> OK. We're on the same page then about not having multiple functions when there's a significant amount of code sharing.

-------------------------------------
