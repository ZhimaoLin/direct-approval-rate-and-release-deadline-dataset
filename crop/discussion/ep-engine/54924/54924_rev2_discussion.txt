DESCRIPTION

MB-16189: Replication consumers to explicitly enable cursor dropping

Cursor dropping for replication cursors will be disabled by
default, and will be enabled by default for all other DCP cursors.
A control message will be needed to make replication cursors
eligible for cursor dropping to support backward compatibility.

Change-Id: I0f1a85c01be122a5f84ec2440d649101a41c1cd9


COMMENTS

author: Emerson Nolan
date: 2015-09-01 00:31:24.989000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2015-09-01 00:31:31.602000000

Patch Set 2:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/894/

-------------------------------------
author: Hugo Blankenship
date: 2015-09-01 00:38:53.456000000

Patch Set 2: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/894/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2015-09-01 08:32:14.042000000

Patch Set 2: Code-Review-1

(2 comments)

It'll be much simpler if there's just one mechanism to specify if cursor dropping is supported.

Line:86, src/dcp/producer.cc -> You should just simplify this and always use the "supportsCursorDropping" message, and then ensure that the replication connections set this flag.

I suspect that will be a much easier thing to maintain in future.

Line:459, src/connmap.h -> Maybe add a comment describing this function (and what the return value indicates).

-------------------------------------
author: Emerson Nolan
date: 2015-09-01 17:05:04.566000000

Patch Set 2:

(1 comment)

Line:86, src/dcp/producer.cc -> I understand what you're saying but, I believe this backward compatibility is something we want to support only for replication at the moment. All replication connections will still send the control message. I've had the code this way, just so that this control message isn't mandatory for other DCP consumers: XDCR, views, 2i, backup for now.

-------------------------------------
author: Emerson Nolan
date: 2015-09-01 17:31:04.549000000

Patch Set 2:

I will need to check with the other teams that are DCP consumers, if they can add this control message easily or if this would affect them otherwise.

-------------------------------------
author: Abby Duran
date: 2015-09-01 19:25:53.354000000

Patch Set 2: Code-Review-1

I don’t think it is good to have different default behaviors per DCP consumer type.

Abhinav,

As we discussed over Skype, let’s have a consistent behavior as follows:

1) DCP producers in Watson wouldn’t drop any DCP stream cursors and close their DCP streams for any slow pre-Watson DCP consumers as these consumers don’t understand this new DCP protocol behavior.

2) DCP producers in Watson will drop a given DCP stream cursor and close its DCP stream iff that stream is getting slow and its consumer specifies the new flag (mentioned below) upon establishing the connection.

-------------------------------------
author: Emerson Nolan
date: 2015-09-01 21:03:53.703000000

Patch Set 2:

I will update this change once we have complete insight on how external DCP consumers behave with cursor dropping.

-------------------------------------
author: Tate Garrett
date: 2015-09-08 17:41:43.827000000

Change has been successfully cherry-picked as 9c6e06f19a5296fe9054ef39f3c8b185968e27b7

-------------------------------------
