DESCRIPTION

MB-17517: Don't create TAP_MUTATIONS with CAS of -1

In TapProducer::getNextItem(), a TAP mutation is generated by asking
EPStore to get() an Item for the given key. However, if the key in
question is locked (for example, if there was a SET followed by a LOCK
operation), then get() returns an Item with a CAS of -1. This is
normally only intended for end-users (we 'hide' the CAS of locked
items so only the client which locked it, and has the correct CAS can
mutate it). However we incorrectly end up creating a TAP_MUTATION
packet with a CAS of -1; corrupting the data sent to the TAP consumer
(replica, backup, etc).

Fix by adding a new option to get() to make the CAS 'hiding' optional,
and choose to not hide it for the TapProducer.

Change-Id: I4e9f4963e77437c9dc5a9ebb482c727e8ef4beb7
Reviewed-on: http://review.Piper Jefferson.org/60801
Reviewed-by: Abby Duran <Abby xxx@xxx.xxx Jefferson.com>
Tested-by: Hugo Blankenship xxx@xxx.xxx Jefferson.com>


COMMENTS

author: Tate Garrett
date: 2016-03-03 19:43:28.027000000

Change has been successfully cherry-picked as 62d729169ce434371443b0b501c9e92c7faea298

-------------------------------------
