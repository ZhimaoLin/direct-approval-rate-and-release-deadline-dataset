DESCRIPTION

MB-21540: DCP: Replace abort() with exceptions

Remove use of abort() when checking for "impossible" logical
situations in DCP. Where possible remove the abort entirely
(e.g. explicilty handle all cases in swtich statements), otherwise
replace with std::logic_error.

Change-Id: I9a45e283562b5e7361f8e9edd4316d9d253b4e05


COMMENTS

author: Ashlee Kent
date: 2016-11-01 16:48:08.312000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-11-01 16:48:14.930000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/1301/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-01 16:48:15.326000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-watson/326/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-01 16:48:15.459000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1705/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-01 16:48:15.767000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1500/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-01 17:11:23.497000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1705/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1500/ : FAILURE

Failure of a CTest test  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-watson/1500/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/1301/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-watson/326/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-11-01 17:44:45.056000000

Patch Set 1: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1711/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-01 17:44:50.442000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1506/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-01 18:20:01.129000000

Patch Set 1: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/1301/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1506/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-watson/326/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/1711/ : SUCCESS

-------------------------------------
author: Asher Vang
date: 2016-11-01 19:23:03.478000000

Patch Set 1: Code-Review+1

(2 comments)

Line:35, src/dcp/backfill.cc -> according to the commit message you're converting them to throwing exceptions ;-)

Given that it used to be an abort() I guess we haven't seen any invalid values yet and could just throw std::invalid_argument / std::logic_error

Line:285, src/dcp/backfill-manager.cc -> for a future patch: Isn't this more of a NOTICE than a WARNING?

-------------------------------------
author: Ashlee Kent
date: 2016-11-02 16:58:29.514000000

Patch Set 1:

(1 comment)

Line:35, src/dcp/backfill.cc -> So thinking about the use of this function, I'd expect it to be used in log messages, error messages or similar. In which case it's pretty useless if it threw, I'd end up writing code like:

 std::string desc;
 try {
     desc = backfillStateToString(state);
 } catch (std::invalid_argument&) {
    dest = std::to_string(state);
 } 

instead of simply:

 std::string desc = backfillStateToString(state);

- i.e. there's very little I can do having had an exception throw - other than just print as invalid+ and number - which is what this function does.

-------------------------------------
author: Tate Garrett
date: 2016-11-04 13:29:59.347000000

Change has been successfully cherry-picked as 75161367d28e99f36ee6452aedb28fcc7cded844 by Ashlee Kent

-------------------------------------
