DESCRIPTION

MB-16181: std::string to our own StorageKey class

We use std::string to represent document keys throughout. Collections
will require that a document's key can be interogated in different
and we require our own container class for a key.

Introducing StorageKey

This commit introduces a replacement for std::string called StorageKey
which provides a minimal interface, but some important methods to
build on. A StorageKey is how you would locate a document within
ep-engine's storage mediums, primarily the HashTable and persisted
data stores but also transient storage like checkpoint queues.

Introducing ProtocolKey

* StorageKey::getProtocolKey()

A protocol key is the part of the key owned by the external protocol,
for example the user's keys in a memcached binary SET command.
A protocol key can always be obtained from the StorageKey, but a
StorageKey cannot be infered from a ProtocolKey (without extra
information).

In this introductory commit, the ProtocolKey.data()/.size() is
logically the same as the StorageKey.data()/.size(), but that will be
changing.

Collections and ProtocolKey/StorageKey

The goal is that the introduction of collections will mean that a
client may place a "a::b" document into many of a collection or
default storage, and internally ep-engine will represent each of these
documents via StorageKey's that yield different data()/size() values
(and thus don't collide in hashtables/b-trees), yet these different
StorageKeys will yield the same protocol key value of "a::b"

Change-Id: I50ffd064c2ecee715d554531b331fc869df09679


COMMENTS

author: Jim WNathalie Landryer
date: 2016-11-14 16:52:46.191000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2016-11-14 16:52:55.102000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1794/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-14 17:56:51.655000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/584/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-14 18:00:50.160000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1691/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-14 18:32:03.766000000

Patch Set 3:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1433/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-11-14 18:45:42.518000000

Patch Set 3: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/584/ : FAILURE

Failure of a CTest test  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-addresssanitizer-master/584/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1691/ : FAILURE

Failure of a CTest test  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/1691/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1794/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1433/ : SUCCESS

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-11-30 14:15:00.995000000

Patch Set 3: Code-Review-2

wip wip wip11

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-12-02 14:48:39.554000000

Abandoned

splitting down

-------------------------------------
