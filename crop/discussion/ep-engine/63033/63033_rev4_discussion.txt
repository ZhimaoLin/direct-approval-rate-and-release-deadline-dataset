DESCRIPTION

MB-19278: Fix lock-order inversion on ActiveStream::streamMutex

ThreadSanitizer has identified a potential deadlock due to a cycle in
  the lock order graph: Cycle in lock order graph:

    M43515         => M36787      => M36848            => M43515
   [ActiveStream::   [TaskQueue::   [ExecutorThread::    [ActiveStream::
    streamMutex]      mutex]         currentTaskMutex]    streamMutex]

The crux of the problem appears to be the acquisition of streamMutex
in the destructor of ActiveStream. This is ultimately a Bad Idea - if
you still have multiple threads accessing an object when it's been
deleted then you are already into undefined behaviour.

Change-Id: I2353b5a8ed93a4f9e8cc036cb85680c185cbcc2f


COMMENTS

author: Ashlee Kent
date: 2016-04-22 09:07:37.746000000

Uploaded patch set 4: Patch Set 3 was rebased.

-------------------------------------
author: Hugo Blankenship
date: 2016-04-22 09:08:51.104000000

Patch Set 4:

Branch restricted. PLEASE READ this URL: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/12799/artifact/restricted.html : FAILURE

-------------------------------------
author: Ashlee Kent
date: 2016-04-22 10:35:46.392000000

Patch Set 4:

check approval

-------------------------------------
author: Hugo Blankenship
date: 2016-04-22 10:35:55.698000000

Patch Set 4: Well-Formed+1

Permission granted to commit: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/12817/artifact/restricted.html : SUCCESS

-------------------------------------
author: Tate Garrett
date: 2016-04-23 01:14:12.669000000

Change has been successfully cherry-picked as a430629f25cff1bd01f1a0ed7007ba694769f1fd

-------------------------------------
