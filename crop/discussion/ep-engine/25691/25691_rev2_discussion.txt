DESCRIPTION

MRW + IO Manager

This commit includes:
* Refactored MRW

* Refactored IO Manager
 1) split ::get() into ::get() & ::create()
 2) add ::deleteInstance()

* Integration of MRW + IO Manager

Change-Id: Iccaa2c727cdb0abdd6c580973f93ee6d254ef035


COMMENTS

author: Audrina Olson
date: 2013-04-16 05:02:49.808000000

Uploaded patch set 2.

-------------------------------------
author: Abby Duran
date: 2013-04-17 01:02:56.672000000

Patch Set 2: I would prefer that you didn't submit this

(7 inline comments)



Line:42, src/iomanager/iomanager.cc -> Please check if readerId goes beyond the number of readers before retuning the reader's index.

Line:92, src/tasks.cc -> Let's unify the access to the iomanager through IOManager::getInstance()

Line:769, src/ep.hh -> Let's not have this variable inside the ep-store. I think it's okay to access the iomanager through getInstance()

Line:390, src/ep.cc -> I'd rather rename this function to stopIOManagerTasks()

Line:27, src/iomanager/iomanager.h -> Let's consolidate these two functions into getInstnace(). If we need to instantiate the iomanager, we can get the engine handle that calls this function through "EventuallyPersistentEngine* engine = ObjectRegistry::getCurrentEngine();" We can then get the number of threads from the engine's configuration.

As future enhancement, we need to pass the number of readers and writers through the memcached arguments and manage them in a global config object. But, that will be a next task and we don't need to worry about it at this time.

Line:81, src/iomanager/iomanager.h -> Please declare it as static function. I'm fine with having this function, but if we have it, I suggest to create / access a singleton instance through getInstnace()

Line:83, src/iomanager/iomanager.h -> I don't think the cluster manager has to call this function. If a memcached process is crashed, then this singleton instance will be gone.

-------------------------------------
author: Audrina Olson
date: 2013-05-02 22:35:15.111000000

Patch Set 2: Abandoned

A new commit has the latest code for this integration
http://review.Piper Jefferson.org/#/c/25955/

-------------------------------------
