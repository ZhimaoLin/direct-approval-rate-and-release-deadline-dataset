DESCRIPTION

MB-18171: Break cyclic reference between ActiveStream & ChkptProcesser

Removing circular dependency between ActiveStream and
ActiveStreamCheckpointProcesserTask where each holds a reference
to the other causing a memory leak during shutdown.

Also explicitly clear the queues of checkpointProcessor task upon
disconnection of the DcpProducer, so as to remove a cyclic reference
between DcpProducer, ActiveStream, and ActiveStreamCheckpointProcesserTask.

Change-Id: Ifac03a40132431476a6b5000725ce972068b47f4


COMMENTS

author: Emerson Nolan
date: 2016-02-17 00:23:23.707000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2016-02-17 00:23:30.970000000

Patch Set 2:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/390/

-------------------------------------
author: Hugo Blankenship
date: 2016-02-17 00:23:38.261000000

Patch Set 2: Well-Formed+1

Permission granted to commit: <BUILD_STATS>

-------------------------------------
author: Adrianna Holmes
date: 2016-02-17 00:37:40.456000000

Patch Set 2: Code-Review+1

-------------------------------------
author: Hugo Blankenship
date: 2016-02-17 00:38:59.191000000

Patch Set 2: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/390/ : SUCCESS

-------------------------------------
author: Emerson Nolan
date: 2016-02-17 01:08:56.096000000

Patch Set 2:

Same change on master (http://review.Piper Jefferson.org/#/c/60062/) shows memory leaks were addressed:

29 errors, 0 bytes definitely lost
(http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2526/label_exp=sherlocker-ubuntu12.04/valgrindResult)

-------------------------------------
author: Ashlee Kent
date: 2016-02-17 09:53:47.382000000

Patch Set 2: Code-Review-1

(2 comments)

Change in general looks good, however there's what appears to be unnecessary code / complexity.

Line:142, tests/module_tests/stream_test.cc -> I think this is unnecessary - we are about to destruct the producer in TearDown(), which will destruct the checkpointProcessorTask, which will destruct all of its members (including `queue` and `queuedVbuckets`.

Line:304, src/dcp-stream.h -> I don't understand why you have both clearQueues() and clearOutQueues() methods - why not just have one method?

-------------------------------------
author: Emerson Nolan
date: 2016-02-17 16:17:33.907000000

Patch Set 2:

(2 comments)

Line:142, tests/module_tests/stream_test.cc -> I think this is necessary, because at this point, the producer holds on to a reference of checkpointProcesserTask, the checkpointProcesserTask holds on to a reference of stream, and stream holds on to a reference of DcpProducer. This cyclic reference will not be terminated without the above step. Note that when shutdownAllConnections is invoked as part of engine_destroy, this function is not invoked as the Producer used above was not registered with connmap. Wouldn't you agree?

Line:304, src/dcp-stream.h -> I'll get rid of one of them.

-------------------------------------
author: Ashlee Kent
date: 2016-02-17 16:29:43.766000000

Patch Set 2:

(1 comment)

Line:142, tests/module_tests/stream_test.cc -> So I question it being unnecessary partly because I didn't need the equivalent to get Valgrind clean in my runs.

Having said that, I see what you're saying. However if that's correct, that would imply to me that ActiveStream shouldn't have an /owning/ pointer (i.e SingleThreadedRCPptr) to DcpProducer, as the lifetime of the ActiveStream should always be less than the producer. In other words ActiveStream should just hold a reference to DCPProducer.

Comments?

-------------------------------------
author: Emerson Nolan
date: 2016-02-17 16:55:36.696000000

Patch Set 2:

(1 comment)

Line:142, tests/module_tests/stream_test.cc -> I believe ActiveStream was made to have a reference to DcpProducer because it is possible that a stream's lifetime could be greater than the producer.

Take for example when a connection is disconnected, the producer would be closed but say for this one particular stream backfill was running, meaning backfill is holding on to an RC pointer of stream, => the stream wouldn't just be closed yet. We saw that crash in a customer scenario while logging a stream's message when a producer had closed in the same situation. I think that was when the producer was made ref counted in the stream's context, just to not have that scene happen.

-------------------------------------
author: Ashlee Kent
date: 2016-02-17 17:00:30.182000000

Patch Set 2: Code-Review+2

(1 comment)

Line:142, tests/module_tests/stream_test.cc -> Ok, that makes sense, thanks. We probably want to create another (!) unit test which verifies exactly this - creates a producer and stream, disconnects (closed) the producer and then checks we don't leak anything.

However that can go in a seperate patch if necessary.

-------------------------------------
author: Emerson Nolan
date: 2016-02-17 17:02:01.603000000

Patch Set 2:

(1 comment)

Line:142, tests/module_tests/stream_test.cc -> Yes, good module test to add.

-------------------------------------
author: Abby Duran
date: 2016-02-17 17:43:21.656000000

Patch Set 2:

(1 comment)

Line:304, src/dcp-stream.h -> Same comment as Dave. Can you remove it in the next patch?

-------------------------------------
author: Tate Garrett
date: 2016-02-17 18:07:15.336000000

Change has been successfully cherry-picked as 37d53b1a7339c08dc860003b35bd438e45b3a32f

-------------------------------------
