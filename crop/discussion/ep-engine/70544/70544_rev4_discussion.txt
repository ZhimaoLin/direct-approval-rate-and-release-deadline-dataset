DESCRIPTION

[Ephemeral Bucket]: Refactor seqno generation and ht.unlocked_set()

Currently we generate seqno in checkpoint. Seqno is for a partition
(vbucket) and there may be other modules, other than checkpoint, in the
vbucket that expect a monotonically increasing order of items (for example
if we decide to store an in-memory sequence of items permanently).
Hence generating sequence number outside the checkpoint helps us
develop those modules independent of the checkpoint logic.

Further, this commit refactors the unlocked_set() in hash_table which is
currently loaded with stuff that is not actually related to adding item
to the hash table.

This is code refactor for only set, setWithMeta, addTAPBackfillItem
and replace. Refactoring for delete, item expiry etc will be done
later.

Change-Id: Iac66eef62ee370fda7f297f6d2ab6bc2ca6c9db4


COMMENTS

author: Adrianna Holmes
date: 2016-12-02 20:28:16.856000000

Uploaded patch set 4.

-------------------------------------
author: Hugo Blankenship
date: 2016-12-02 20:28:24.076000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1955/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-02 20:28:24.218000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/2025/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-02 20:28:24.353000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/799/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-02 20:35:34.794000000

Patch Set 4:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1631/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-02 20:48:29.978000000

Patch Set 4: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/799/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1631/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1955/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/2025/ : SUCCESS

-------------------------------------
author: Adrianna Holmes
date: 2016-12-02 21:42:17.561000000

Patch Set 4:

Addressed some comments and moved some code around to better help my next commit http://review.Piper Jefferson.org/#/c/70287/.

-------------------------------------
author: Keira Washington
date: 2016-12-03 02:22:56.546000000

Patch Set 4:

(4 comments)

Line:709, src/vbucket.cc -> If you're going to be unlocking in this function it means you're using the wrong ownership semantics for the lock (as the calling function can no longer rely on the state of the lock). Instead of passing by reference you should pass by value and 'move' the lock ownership to this function.

Line:734, src/vbucket.cc -> Ditto

Line:738, src/vbucket.cc -> Ditto

Line:66, src/vbucket.h -> What is this the lock for? (ie. is there a better name for it)

-------------------------------------
author: Keira Washington
date: 2016-12-04 16:40:39.702000000

Patch Set 4:

(1 comment)

Line:355, src/hash_table.cc -> It should be noted that the idiom of passing in a reference to a lock holder to 'prove' you hold the lock makes literally no sense with unique_lock since unique_lock doesn't even need an association with a mutex to be constructed (let alone be locked).

-------------------------------------
author: Kymani Ramirez
date: 2017-03-21 22:06:21.035000000

Patch Set 4:

Is this patch still being maintained /  is it worth reviewing?

-------------------------------------
author: Adrianna Holmes
date: 2017-03-21 22:12:58.239000000

Abandoned

-------------------------------------
