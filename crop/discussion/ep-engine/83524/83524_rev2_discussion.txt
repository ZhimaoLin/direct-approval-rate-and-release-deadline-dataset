DESCRIPTION

[BP] MB-25798: Backfill task leave stream state unchanged

The backfill task must not change the state machine of the active
stream that it is associated with.  In particular:
1) In ActiveStream::markDiskSnapshot if a vbucket is not found then
   it should just return, leaving the entity deleting the vbucket to
   set the stream to dead.
2) ActiveStream::completeBackfill should not call
   scheduleBackfill_UNLOCKED as this can move the stream into the
   STREAM_IN_MEMORY state.

State machine changes should only be driven by ActiveStream::next,
which is invoked by DcpProducer::getNextItem.

The call to scheduleBackfill_UNLOCKED that was invoked in
ActiveStream::completeBackfill when the pendingBackfill flag was true
has been moved to the ActiveStream::backfillPhase function and is
invoked once the current backfill has completed and the pendingBackfill
flag is set to true.

Change-Id: Idcbf8164792f4fd09898fe90748424687c60fb6a


COMMENTS

author: Adrianna Holmes
date: 2017-09-19 21:29:37.802000000

Uploaded patch set 2: Commit message was updated.

-------------------------------------
author: Hugo Blankenship
date: 2017-09-19 21:29:45.058000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/2037/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-09-19 21:29:45.144000000

Patch Set 2: Well-Formed+1

Permission granted to commit: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/62168/artifact/restricted.html : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2017-09-19 23:04:15.734000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/1566/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-09-19 23:09:08.972000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1789/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-09-19 23:16:10.123000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-watson/603/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-09-19 23:49:10.786000000

Patch Set 2: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/2037/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/1566/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1789/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-watson/603/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2017-09-20 02:56:52.621000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/2040/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-09-20 03:03:44.001000000

Patch Set 2: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/1566/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/1789/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-watson/603/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/2040/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-09-20 08:32:37.567000000

Patch Set 2: Code-Review-1

(1 comment)

Line:284, src/dcp/stream.h -> Master uses `std::lock_guard<std::mutex>` (which is actually the same as LockHolder - using LockHolder = std::lock_guard<std::mutex>). Suggest you keep the same here to minimise unnecessary diffs between the two branches.

-------------------------------------
author: Adrianna Holmes
date: 2017-09-20 15:42:04.175000000

Patch Set 2:

(1 comment)

Line:284, src/dcp/stream.h -> The std::lock_guard<std::mutex> is due to http://review.Piper Jefferson.org/#/c/70363/ that was added only in spock.

In watson, we still use LockHolder. That is, the place where we call backfillPhase uses LockHolder. Hence keeping it as is

-------------------------------------
author: Ashlee Kent
date: 2017-09-20 16:01:56.136000000

Patch Set 2: Code-Review+2

(1 comment)

Line:284, src/dcp/stream.h -> Ah yes, sorry I was looking at the wrong branch :)

-------------------------------------
