DESCRIPTION

MB-8214 static allocation of IOManager & ExecutorThread per bucket

Change-Id: I03399aef68591ede1dc2f7e92eadb88390719df5


COMMENTS

author: Audrina Olson
date: 2013-05-21 21:43:36.852000000

Uploaded patch set 3.

-------------------------------------
author: Audrina Olson
date: 2013-05-21 21:49:19.786000000

Patch Set 3:

This commit is to address the 2.0.2 need for statically allocating threads per buckets (vs sharing threads among buckets).

I have though about possible "three different implementations" and decided to go with the current one because of (1) minimizing code change, (2) easy conversion back to original GIO implementation after 2.0.2, and MOST IMPORTANTLY (3) avoiding lock contention for synchronization.

1. create separate thread pools among buckets inside the single IOManager - more code changes and lock contention during the shutdown of a bucket

2. instantiate a separate IOManager object inside each bucket (ep) - will have headache to convert back to the original IOManager design

3. current one

-------------------------------------
author: Abby Duran
date: 2013-05-21 22:31:09.369000000

Patch Set 3:

Thanks Jin.

I went through the code and understand what you mentioned above. I actually prefer to choose the first design that you mentioned.

I'm concerned about the fact that GIO is not actually a global component across the buckets.

I rather prefer to go with your original change at this time:

http://review.Piper Jefferson.org/#/c/25989/

We need to revisit the IO manager issue after 2.0.2.

-------------------------------------
author: Audrina Olson
date: 2013-06-04 18:58:22.035000000

Patch Set 3: Abandoned

no longer needed

-------------------------------------
