DESCRIPTION

MB-22018: Add tasks stats to cbstats

Initial work on adding a "top" like tool showing tasks running and
sleeping in a cluster.

This can be viewed by running

    cbstats host:port tasks

This shows the information about the tasks such as the state, next
runtime, description, type etc.

Future additions to the tool are intended to add features such as load
averages for task types (of the style shown by `uptime`) and percentage
utilisation over a period of time per thread.

Change-Id: I005a2589a35b4c4364ba46cf2b44b71061ba06b3


COMMENTS

author: Jace Townsend
date: 2017-03-21 13:11:16.151000000

Uploaded patch set 15.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-21 13:14:56.136000000

Patch Set 15: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3780/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4970/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4521/ : ABORTED

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/5195/ : ABORTED

-------------------------------------
author: Ashlee Kent
date: 2017-03-21 13:21:34.907000000

Patch Set 15:

(6 comments)

Line:908, src/executorpool.cc -> As taskLocatorCopy is a shallow copy, is there any risk of this pointer being invalid when you deference it below - for example if the task was removed from the queue  concurrently?

Line:913, src/executorpool.cc -> From a self-documenting pov for the JSON, probably worth printing this as a string (RUNNING, SNOOZED, DEAD)

Line:923, src/executorpool.cc -> Given you're returning a untyped number (and the units could be ambiguous), suggest suffixing this with the type - _ns, _us or whatever it is.

Line:926, src/executorpool.cc -> Ditto

Line:929, src/executorpool.cc -> same

-------------------------------------
author: Ashlee Kent
date: 2017-03-24 13:39:24.032000000

Patch Set 15:

(1 comment)

Line:908, src/executorpool.cc -> I think this could happen during bucket deletion - you could try a brute-force test of calling `tasks` stats in a loop and then adding / deleting buckets.

Having said all that, it looks like taskQueue is only needed to get the type of the task - can we not obtain that information from elsewhere? (I'm actually fine adding a new member to GlobalTask if that solves the potential race here).

-------------------------------------
author: Jace Townsend
date: 2017-03-22 10:18:12.478000000

MISMATCHED INLINE COMMENT
Line:908, src/executorpool.cc -> Hmmm. this would become invalid if the only/last taskable has just been unregistered concurrently and the task queues subsequently deleted... Which isn't great.

I'd have thought it would be safe when a task is cancelled though - the TaskQueue pointer is copied, and the TaskQueue itself isn't made invalid during cancellation?

-------------------------------------
author: Jace Townsend
date: 2017-03-22 10:18:12.478000000

MISMATCHED INLINE COMMENT
Line:913, src/executorpool.cc -> Done

-------------------------------------
author: Jace Townsend
date: 2017-03-22 10:18:12.478000000

MISMATCHED INLINE COMMENT
Line:923, src/executorpool.cc -> Done

-------------------------------------
author: Jace Townsend
date: 2017-03-22 10:18:12.478000000

MISMATCHED INLINE COMMENT
Line:926, src/executorpool.cc -> Done

-------------------------------------
author: Jace Townsend
date: 2017-03-22 10:18:12.478000000

MISMATCHED INLINE COMMENT
Line:929, src/executorpool.cc -> Done

-------------------------------------
