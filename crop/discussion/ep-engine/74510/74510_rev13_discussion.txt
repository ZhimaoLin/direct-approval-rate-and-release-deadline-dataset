DESCRIPTION

MB-22018: Add top tool to cbstats

Initial work on adding a "top" like tool showing tasks running and
sleeping in a cluster.

Change-Id: I005a2589a35b4c4364ba46cf2b44b71061ba06b3


COMMENTS

author: Jace Townsend
date: 2017-03-20 12:15:26.753000000

Uploaded patch set 13: Patch Set 12 was rebased.

-------------------------------------
author: Jace Townsend
date: 2017-03-20 12:17:39.694000000

Patch Set 13:

I intended to tidy this up more before getting an initial review, but it's been waiting on me for a while so here it is.

-------------------------------------
author: Jace Townsend
date: 2017-03-20 12:24:02.577000000

Patch Set 13:

There are more features to come (load average, grouping transient tasks by task type because they do a lot of work but aren't visible in the current view) but this is something of an alpha for review

-------------------------------------
author: Hugo Blankenship
date: 2017-03-20 12:36:37.839000000

Patch Set 13: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4912/ : FAILURE

Failure of a CTest test  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/4912/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/5141/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3724/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4468/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2017-03-20 13:33:35.847000000

Patch Set 13:

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/5141/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3724/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4468/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4924/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-03-20 13:41:38.550000000

Patch Set 13: Code-Review-1

(8 comments)

Functionality looks good. I didn't look at the Python in detail - maybe someone better versed with that can.

Line:93, management/cbstats -> Probably wants a docstring for this (and other non-trivial functions).

Line:162, src/globaltask.h -> Style: Bit pointless to mark something as const if it's passed by value.

Line:174, src/globaltask.h -> ditto.

Line:180, src/globaltask.h -> Don't call this avgRuntime - that implies it's actually an "average", whereas this is not. 

Something like decayingRunTime would be preferable - ideally with some indication of the delay rate etc.

File Comment: /COMMIT_MSG -> Worth including some more details in here - how to access it, example output, etc.

Line:885, src/executorpool.cc -> Seems a bit odd that this group of stats calls out to another high-level group.

If the caller (cbstats) wants the workload group, just have /it/ ask for them, and aggregate / merge with the stats here.

Line:890, src/executorpool.cc -> Unused?

Line:913, src/executorpool.cc -> Given this is a new set of stats which inherently has structure, better to output as JSON.

-------------------------------------
author: Jace Townsend
date: 2017-03-21 13:11:07.607000000

Patch Set 13:

(7 comments)

Line:93, management/cbstats -> Done

Line:162, src/globaltask.h -> fixed

Line:174, src/globaltask.h -> fixed

Line:180, src/globaltask.h -> Going to bin this for now - it isn't really meaningful at all in its current state - but a similar stat will be introduced in a different manner shortly :)

Line:885, src/executorpool.cc -> Done

Line:890, src/executorpool.cc -> fixed

Line:913, src/executorpool.cc -> Done using cJSON - a quick search didn't find "prior art" of other stats returning JSON, just prefixed stats in the manner used previously. If there is a preferred way of doing this, do let me know :)

-------------------------------------
author: Ashlee Kent
date: 2017-03-21 13:14:20.014000000

Patch Set 13:

(1 comment)

Line:913, src/executorpool.cc -> cJSON is fine. The connection stats (in memcached) return as JSON. Also Olie's recent error code stats (ep-engine).

-------------------------------------
author: Ashlee Kent
date: 2017-03-21 13:21:34.907000000

MISMATCHED INLINE COMMENT
Line:162, src/globaltask.h -> I was actually thinking to pass directly by value given that time_point is basically a uint64_t - see http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rf-in

-------------------------------------
