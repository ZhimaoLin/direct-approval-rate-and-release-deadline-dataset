DESCRIPTION

MB-16264: Prevent DcpConsumer deadlocking on task cancellation.

Split out the task stopping part of DcpConsumer so that shutdown
can take down the Processor tasks before stopTaskGroup tries the
same.

stopTaskGroup previously would delete the DcpConsumer triggering
a cancel call which deadlocked as locks in executorpool are already
held.

Change-Id: I4766e1725dc7827ff6a4d7083fa959fcf4033f53


COMMENTS

author: Jim WNathalie Landryer
date: 2015-09-28 15:37:50.202000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2015-09-28 15:37:57.929000000

Patch Set 1:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/1025/

-------------------------------------
author: Asher Vang
date: 2015-09-28 15:43:59.221000000

Patch Set 1: Code-Review+2

-------------------------------------
author: Ashlee Kent
date: 2015-09-28 16:03:36.056000000

Patch Set 1:

(1 comment)

Line:114, src/dcp/consumer.cc -> Is the call to cancel() async? If not this is fine, but if it is then I think we should rename taskStopped to taskStopRequested or similar...

-------------------------------------
author: Hugo Blankenship
date: 2015-09-28 16:08:08.439000000

Patch Set 1: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/1025/ : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2015-09-28 16:45:47.945000000

Patch Set 1: -Verified

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/1026/

-------------------------------------
author: Emerson Nolan
date: 2015-09-28 17:13:16.063000000

Patch Set 1:

(1 comment)

Line:114, src/dcp/consumer.cc -> The cancel is asynchronous, as the task is just marked as DEAD, and the scheduler that picks the task up at some point later (after task actually wakes up), checks the state and removes the task, unless the second parameter of the cancel api (which is like a force) is set to true.

-------------------------------------
author: Hugo Blankenship
date: 2015-09-28 17:16:36.332000000

Patch Set 1: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/1026/ : FAILURE

-------------------------------------
author: Adrianna Holmes
date: 2015-09-28 17:51:17.159000000

Patch Set 1:

(1 comment)

Line:1084, src/connmap.cc -> I am not sure, it is correct to call stopTask from here. Task is created in the constructor of the DCP Consumer, and hence I think it should be stopped (cancelled) only in the DCP consumer destructor.
Now what if in future, a logic is added where you close all streams, but not close the consumer connection and further go on to add streams to the connection ?

-------------------------------------
author: Tate Garrett
date: 2015-09-29 18:43:39.278000000

Change has been successfully cherry-picked as 14868882df1600a37e5a106f0c0c6c8d39617799

-------------------------------------
