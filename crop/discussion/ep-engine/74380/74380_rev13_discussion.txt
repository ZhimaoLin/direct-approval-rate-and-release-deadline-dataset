DESCRIPTION

MB-22013: Add access scanner benchmark

Adds google benchmark in to ep-engine to use in the access scanner
benchmark.

Adds a memory tracker for benchmarks which is a simpler version of
MemoryTracker that also tracks the max total allocation.

Benchmarks the memory overhead of the accessScanner by filling the
vbucket with some varied number of items and then letting the engine run
for 2 seconds.

Example output:

$ ./ep_engine_benchmarks
Run on (8 X 2200 MHz CPU s)
2017-03-14 12:53:18
-----------------------------------------------------------------------------------------------------------------------------
Benchmark                                                                      Time           CPU Iterations
 UserCounters...-----------------------------------------------------------------------------------------------------------------------------
AccessLogBenchEngine/MemoryOverhead/0/1024/min_time:10.000/real_time           2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/1024/min_time:10.000/real_time           2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=103 AccessScanner
AccessLogBenchEngine/MemoryOverhead/0/4096/min_time:10.000/real_time           2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/4096/min_time:10.000/real_time           2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=96 AccessScanner
AccessLogBenchEngine/MemoryOverhead/0/16384/min_time:10.000/real_time          2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/16384/min_time:10.000/real_time          2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=19 AccessScanner
AccessLogBenchEngine/MemoryOverhead/0/32768/min_time:10.000/real_time          2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/32768/min_time:10.000/real_time          2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=96 AccessScanner
AccessLogBenchEngine/MemoryOverhead/0/65536/min_time:10.000/real_time          2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/65536/min_time:10.000/real_time          2 ns          2 ns 1000000000 MaxBytesAllocatedPerItem=42 AccessScanner

Change-Id: I6afca28e369eacde0d0b3c8627854144768603cd


COMMENTS

author: Aaliyah Proctor
date: 2017-03-14 13:05:43.488000000

Uploaded patch set 13.

-------------------------------------
author: Ashlee Kent
date: 2017-03-14 13:23:20.254000000

Patch Set 13: Code-Review-1

(2 comments)

Line:136, tests/benchmark/access_scanner_bench.cc -> Not sure realtime matters now (and it makes the labels of the benchmarks quite a bit longer).

Line:17, /COMMIT_MSG -> This seems overkill - surely we only need 1 iteration? If it's 2 seconds per benchmark, you've just added 20 seconds to our CV runtime per platform!

-------------------------------------
author: Hugo Blankenship
date: 2017-03-14 13:28:02.013000000

Patch Set 13: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3525/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4711/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4273/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4939/ : SUCCESS

-------------------------------------
