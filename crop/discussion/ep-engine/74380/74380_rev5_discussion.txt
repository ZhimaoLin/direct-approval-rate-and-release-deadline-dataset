DESCRIPTION

MB-22013: Add access scanner benchmark

Adds google benchmark in to ep-engine to use in the access scanner
benchmark.

Benchmarks the access scanner by performing sets both when no other
tasks are running and when the access scanner is running constantly.

Change-Id: I6afca28e369eacde0d0b3c8627854144768603cd


COMMENTS

author: Aaliyah Proctor
date: 2017-03-01 11:44:19.570000000

Uploaded patch set 5.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-01 12:34:09.356000000

Patch Set 5: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/2994/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4176/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/3745/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4377/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-03-01 19:35:04.974000000

Patch Set 5: Code-Review-1

(2 comments)

Line:87, tests/benchmark/access_scanner_bench.cc -> numbers need updating here

Line:120, tests/benchmark/access_scanner_bench.cc -> not sure i understand why we pre-fill with 1000 (now 10k) items but then repeatedly replace 1500 of them below. 

Would it not be simpler to use the same number in each case, or at least pre-fill with a say 10k and replace a significant fraction (50% +)?

I'm ok if thers some rationale behind the numbers you've picked, but that should be documented here (the why and what).

-------------------------------------
author: Aaliyah Proctor
date: 2017-03-02 12:02:25.612000000

Patch Set 5:

This is partly a hangover from switching back to an older google benchmark version where we are limited with the number of variables we can use. I'll fix up the comments and add some explanation

-------------------------------------
