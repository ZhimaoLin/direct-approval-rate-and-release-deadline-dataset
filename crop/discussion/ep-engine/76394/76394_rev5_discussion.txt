DESCRIPTION

MB-23750: Fix toggling ephemeral ejection policy

If going

auto_delete -> fail_new_data -> auto_delete

the itemPager task was rescheduled, but as it had previously been
cancelled the state remained TASK_DEAD, and so ExecutorThread::run
behaves as if the task has just been cancelled and needs cleaning up.
By resetting scheduled tasks back to TASK_RUNNING if they are dead, this
can be avoided.

Change-Id: Id007a15fdaeb80a79828da0cade031a424e653cf


COMMENTS

author: Jace Townsend
date: 2017-04-10 12:43:14.243000000

Uploaded patch set 5.

-------------------------------------
author: Ashlee Kent
date: 2017-04-10 12:56:39.098000000

Patch Set 5: Code-Review-1

(4 comments)

Line:234, tests/module_tests/executorpool_test.cc -> Please add a brief comment explaining what this is testing.

Line:242, tests/module_tests/executorpool_test.cc -> Use ASSERT_EQ when checking preconditions.

Line:247, tests/module_tests/executorpool_test.cc -> Do we really need these 0.5s waits in here? What's the current runtime of this test?

Line:93, tests/module_tests/executorpool_test.h -> I think this warrants a comment explaining its usage.

-------------------------------------
author: Hugo Blankenship
date: 2017-04-10 13:27:17.232000000

Patch Set 5: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/5628/ : FAILURE

ThreadSanitizer issue: data race /usr/bin/../lib/gcc/x86_64-linux-gnu/4.9/../../../../include/c++/4.9/bits/stl_tree.h:1868 ExecutorPool::_cancel(unsigned long, bool)  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/5628/ )

Failure of a CTest test  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/5628/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4408/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5128/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/5857/ : SUCCESS

-------------------------------------
author: Jace Townsend
date: 2017-04-10 13:36:12.407000000

Patch Set 5:

(1 comment)

Line:247, tests/module_tests/executorpool_test.cc -> currently 23ms :) They are timeouts, it actually only ever seems to sleep one 10ms iteration per attempt, but I wanted to give it a wide berth. It could probably be done in a nicer manner?

As you've noted, better commenting would have made that clearer :P

-------------------------------------
author: Jace Townsend
date: 2017-04-10 13:39:30.946000000

Patch Set 5:

(1 comment)

Line:247, tests/module_tests/executorpool_test.cc -> Actually, we already notify on a mutex when cancelling, that'll do much better.

-------------------------------------
author: Jace Townsend
date: 2017-04-10 13:40:29.768000000

Patch Set 5:

(1 comment)

Line:247, tests/module_tests/executorpool_test.cc -> s/mutex/SyncObject/

-------------------------------------
