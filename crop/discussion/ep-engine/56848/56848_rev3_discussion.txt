DESCRIPTION

MB-16186: Stream only keys if DCP client sets NO_VALUE flag

DCP clients can choose to get only keys (no values) by setting an
appropriate flag at the time of DCP request. When this flag is set
only item key and metadata are streamed to the client. This helps
reduce the indexing time.

Change-Id: Ic24194c3627194c8bc9dae8204b88e7df27726a6


COMMENTS

author: Adrianna Holmes
date: 2015-11-11 02:12:07.837000000

Uploaded patch set 3.

-------------------------------------
author: Adrianna Holmes
date: 2015-11-11 02:13:30.148000000

Patch Set 3:

Kindly, review this again.
I had missed the case of streaming items from checkpoint in the previous patchset

-------------------------------------
author: Hugo Blankenship
date: 2015-11-11 02:21:22.856000000

Patch Set 3:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/764/ (2/2)

-------------------------------------
author: Hugo Blankenship
date: 2015-11-11 02:55:12.869000000

Patch Set 3: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/1520/ : FAILURE

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/764/ : FAILURE

One or more CTests tests timed out during execution:

15 - ep-engine-engine-tests (Timeout) ( http://factory.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/764/ )

-------------------------------------
author: Ashlee Kent
date: 2015-11-11 17:17:49.420000000

Patch Set 3: Code-Review-1

(2 comments)

Line:279, src/dcp/response.h -> Style: I'm not a big fan of using bools to indicate different behavior - it quickly gets hard to know what true/false means - and you quickly end up doing things like:

 /*keyOnly*/true 

to document what it does.

I'd suggest instead creating an enum and using that - the code is self-documenting then. Something like:

 enum MutationPayload { KeyValue, KeyOnly };

Line:774, src/stored-value.cc -> I'd probably make the error handling the same as ::toItem() - i.e. let the exception be handled by the caller. Currently this is a clunky API - toItem and toValuelessItem() behave differently.

(as an aside, consider if this function is the senible place to catch the exception - would it make more sense to propogate the exception to the caller and let them make some decision about what to do? Given that the caller will have to check the result of this function (to see if NULL was returned) then I'd say it makes sense to just throw here and let the caller decide.

-------------------------------------
author: Tate Garrett
date: 2015-11-17 00:39:04.349000000

Change has been successfully cherry-picked as 7a1ada1cc1805a8f29c8b05e41085c052b252ccb

-------------------------------------
