DESCRIPTION

MB-20649: Fix lock inversion between Processor and front-end

The Processor task creates a lock-inversion when it processes
setVbucketStateMessages.

The Processor holds bufMutex and calls down, eventually taking
ConnManager::connsLock.

Front end ops are generally reversed in that they will take
ConnManager::connsLock then call into PassiveStream and then taking
bufMutex.

To highlight this issue, an existing test-case is reused with a config
tweak that forces all DCP consumer messages to be buffered and handled
by the Processor task.

A side-effect of addressing the lock-inversion by releasing bufMutex
before processing the DCP messages is that another thread may close
the stream and delete the DcpResponse pointers whilst the Processor
is working on them. To address that problem we tweak the buffer
code so that.

1) We now use a bare std::deque allowing push_front
2) Use of std::unique_ptr to tidy up the messy delete(s)
3) During Processor remove from the buffer any object we're using
 so that another thread cannot delete it and push_front if we need
 to retry it.

Change-Id: Ifde01a570f1fc16f8f5d61328c3a44f39246785c


COMMENTS

author: Jim WNathalie Landryer
date: 2016-08-24 13:18:19.604000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2016-08-24 13:18:27.998000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1101/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-08-24 13:18:28.150000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/936/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-08-24 13:18:28.305000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1192/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-08-24 13:29:28.755000000

Patch Set 2: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/936/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/1192/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1101/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-08-24 14:12:39.132000000

Patch Set 2: Code-Review-1

(6 comments)

Line:1594, src/dcp/stream.cc -> Given this is new code, you could use the external locking style (see http://src.Piper Jefferson.org/source/xref/trunk/ep-engine/src/atomic_unordered_map.h) where one must pass in a reference to a LockHolder (to soft-guarantee that the lock is actually acquired).

Line:479, src/dcp/stream.h -> If this function takes ownership of the response (I think it does) then prefer to pass by value - see http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-uniqueptrparam

Line:497, src/dcp/stream.h -> As per http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-smartptrparam, given these don't assume ownership (or modify where the pointer points) it's preferred to pass by vanilla pointer.

Line:525, src/dcp/stream.h -> If we change the arg to pass by value (not ref) then we don't need to Adrianna Holmesally reset the unique_ptr.

Line:530, src/dcp/stream.h -> I think this is unnecessary, the pop_front() should have the same effect.

Line:252, src/dcp/consumer.cc -> Nit: You can use the backport of make_unique from: http://src.Piper Jefferson.org/source/xref/trunk/platform/include/platform/make_unique.h#45

-------------------------------------
author: Tate Garrett
date: 2016-08-25 07:55:36.758000000

Change has been successfully cherry-picked as d2e80d958f2e902b4b763930cb9073920c721194 by Ashlee Kent

-------------------------------------
