DESCRIPTION

DCP Backfill: Handle small backfill buffers correctly

When items are drained from DCP readyQ, we free up the DCP backfill
buffer (that is, we decrement its memory usage). This commit addresses
2 bugs in that:
1. We never set the backfill buffer full status to false when the
   next read size is larger than max buffer size. This can result in
   backfill hangs with items larger than backfill buffer size.
2. We may never set the backfill buffer full status to false when
   buffer.bytesRead == (buffer.maxBytes * 3 / 4) == 0. In practice
   this may never happen as buffer.maxBytes is generally > 4 :).

This commit has fix for both 1 and 2. Also adds a functional test
and a unit test reproducing the bug 1.

Change-Id: Icf9512bbe6f21296374958b69cfbe851ec8873b3


COMMENTS

author: Adrianna Holmes
date: 2017-04-25 22:41:50.578000000

Uploaded patch set 3.

-------------------------------------
author: Hugo Blankenship
date: 2017-04-25 23:25:50.592000000

Patch Set 3: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/6237/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/5983/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5461/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4760/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/jameseh-ep-engine-threadsanitizer-master/14/ : SUCCESS

-------------------------------------
