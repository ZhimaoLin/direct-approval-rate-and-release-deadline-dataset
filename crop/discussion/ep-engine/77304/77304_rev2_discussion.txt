DESCRIPTION

DCP Backfill: Address a backfill buffer accounting bug

When items are drained from DCP readyQ, we free up the DCP backfill
buffer (that is, we decrement its memory usage). This commit addresses
2 bugs in that:
1. We never set the backfill buffer full status to false when the
   next read size is larger than max buffer size. This can result in
   backfill hangs with large items.
2. We may never set the backfill buffer full status to false when
   buffer.bytesRead == (buffer.maxBytes * 3 / 4) == 0. In practice
   this may never happen as buffer.maxBytes is generally > 4 :).

This commit has fix for both 1 and 2.

Change-Id: Icf9512bbe6f21296374958b69cfbe851ec8873b3


COMMENTS

author: Adrianna Holmes
date: 2017-04-25 07:39:16.448000000

Uploaded patch set 2.

-------------------------------------
author: Adrianna Holmes
date: 2017-04-25 07:55:49.580000000

Patch Set 2:

Also targeting to write a functional test reproducing a hang without the fix

-------------------------------------
author: Hugo Blankenship
date: 2017-04-25 08:02:48.403000000

Patch Set 2: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4745/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/5968/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5447/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/6223/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/16.04-ep-engine-addresssanitizer-master/24/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-04-25 10:19:20.456000000

Patch Set 2: Code-Review-1

(1 comment)

Would be good to get the functional test you mentioned in before merging.

Line:493, tests/module_tests/dcp_test.cc -> 2

-------------------------------------
