DESCRIPTION

DCP Backfill: Address a backfill buffer accounting bug

When items are drained from DCP readyQ, we free up the DCP backfill
buffer (that is, we decrement its memory usage). This commit addresses
2 bugs in that:
1. We never set the backfill buffer full status to false when the
   next read size is larger than max buffer size. This can result in
   backfill hangs with large items.
2. We may never set the backfill buffer full status to false when
   buffer.bytesRead == (buffer.maxBytes * 3 / 4) == 0. In practice
   this may never happen as buffer.maxBytes is generally > 4 :).

This commit has fix for both 1 and 2.

Change-Id: Icf9512bbe6f21296374958b69cfbe851ec8873b3


COMMENTS

author: Adrianna Holmes
date: 2017-04-25 01:34:14.271000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2017-04-25 02:00:01.568000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/6222/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4744/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/5967/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/5446/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/16.04-ep-engine-addresssanitizer-master/22/ : SUCCESS

-------------------------------------
