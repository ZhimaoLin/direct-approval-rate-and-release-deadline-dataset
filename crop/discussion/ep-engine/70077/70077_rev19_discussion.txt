DESCRIPTION

DCP traffic added to ep-perfsuite stats tests

A key stat used during rebalance is dcp-vbtakeover.  The execution path
for this stat differs depending on whether a DCP producer exists.

Therefore in addition to measuring the performance of the stat when sets
are executing on a separate thread a second thread performing DCP work
is also created.

This ensures that all the main code paths for the stat are measured.

An example of the fast stats test output is as follows:

Running [0014/0023]: Stat latency with sets and DCP traffic on separate thread (couchstore)...Latency [With background sets & DCP] - 100 items (µs) =================================
30:
30:                                 Percentile
30:                          Median     95th     99th  Std Dev  Histogram of samples
30:
30: Sets and DCP (bg)         2.170   13.182   29.679    9.728  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: diskinfo                  7.873   10.537   44.743    4.058  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: failovers_vb0             7.456    8.875   20.055    1.837  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: dcp-vbtakeover           21.441   43.206 1175.486  115.990  ▁▁█▆▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: tap-vbtakeover            8.064   32.231   53.523    9.053  ▁█▂▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: config                  185.833  332.507  410.591   66.573  ▁▁▁▁▁▁▁▁▁▁█▁▁▂▁▁▂▂▅▃▅▂▁▂▂▂▂▁▁▁▁▁
30: kvstore                 122.575  231.885  261.950   47.367  ▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁
30: prev-vbucket             33.332   51.345   58.556    5.222  ▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: vkey_vb0                 69.650   96.693  157.314   15.113  ▁▁▁▁▁▁▃█▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: key_vb0                   6.017   12.568   23.095    3.044  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: info                      1.715    1.876    6.858    0.642  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: uuid                      1.769    1.892    4.102    0.263  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: scheduler                50.483   96.094  111.182   20.904  ▁▁▁▁▁█▁▁▁▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: memory                   29.441   32.135   50.614    3.004  ▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: runtimes                 76.913  123.003  167.926   25.523  ▁▁▁▁▁▁▁█▂▁▂▂▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: workload                 16.301   42.575   53.428    8.967  ▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: timings                  74.240  103.497  106.431   21.059  ▁▁▁▁▁▁█▂▂▂▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: vb-details_vb0           90.609  108.710  172.503   21.400  ▁▁▁▁▁▄▃▂▃▇█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: warmup                   18.965   25.019   43.432    4.230  ▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: checkpoint_vb0           48.141   83.595  125.946   15.753  ▁▁▁▂▅█▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: dcp                     112.283  164.415  190.379   24.953  ▁▁▁▁▁▁▁▂▃▆▆▇█▄▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: vb-seqno_vb0             22.903   66.304  116.409   21.447  ▁▃█▅▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: vbucket                  32.984   49.763   53.911    4.709  ▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: tap                      13.796   13.890   25.090    1.160  ▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: dcpagg                   21.604   39.212   80.023   11.602  ▁▂▇█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: tapagg                    0.506    0.569    0.939    0.061  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30:                                                             0              µs            332

An example of the slow stats test output is as follows:

Running [0020/0023]: Stat latency with sets and DCP traffic on separate thread (couchstore)...Latency [With background sets & DCP] - 10 items (µs) ==================================
30:
30:                                 Percentile
30:                          Median     95th     99th  Std Dev  Histogram of samples
30:
30: Sets and DCP (bg)         3.309   16.333  166.754   28.923  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: diskinfo-detail          90.067  129.560  129.560   12.827  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: failovers                63.311   70.707   70.707    5.237  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: allocator               804.440 1779.830 1779.830  320.586  ▁▁▂█▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: checkpoint              115.035  138.541  138.541   18.701  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: dispatcher              936.773 2582.982 2582.982  526.162  ▂▂▂█▄▃▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
30: engine                  661.392 1018.714 1018.714  155.405  ▂▂█▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
30: kvtimings                70.165  100.945  100.945   12.763  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: vb-seqno                 55.595  141.590  141.590   37.143  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: vb-details              131.228  205.552  205.552   37.771  ▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
30: hash            (x1e3)    9.671   11.268   11.268    0.572  ▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂█▆▅▂▂
30:                                                             1              µs          11268

Change-Id: I891acc2cea7986963edba21c60a6546006ae0b39


COMMENTS

author: Kymani Ramirez
date: 2016-12-14 17:12:26.178000000

Uploaded patch set 19: Commit message was updated.

-------------------------------------
author: Hugo Blankenship
date: 2016-12-14 17:12:34.166000000

Patch Set 19:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/2216/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-14 17:18:34.668000000

Patch Set 19:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/975/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-14 17:19:37.923000000

Patch Set 19:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2135/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-14 17:25:24.981000000

Patch Set 19:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1798/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-14 17:49:56.517000000

Patch Set 19: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2135/ : FAILURE

Failure of a CTest test  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/2135/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/975/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1798/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/2216/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-12-14 17:58:41.413000000

Patch Set 19: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2137/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2016-12-14 18:07:28.838000000

Patch Set 19: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/975/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/1798/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/2216/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/2137/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-12-15 17:27:09.170000000

Patch Set 19: Code-Review-1

There seems to be a lot of duplication here - do we actually need all these stats again when DCP traffic is running? e.g.e how much difference is there in the `diskinfo` stats when DCP is running?

I'm concerned about (a) making the tests run necessarily long - see the MB related I raised the other week - and (b) having so many results that we don't know what we're looking for.

-------------------------------------
author: Kymani Ramirez
date: 2016-12-29 09:36:52.164000000

Patch Set 19:

I have thinned down the number of tests, by removing the following from both the slow and fast category of stats:

- 1 vbucket with only sets running in background thread 
- 1 vbucket with sets and DCP running on background threads
- 100 vbuckets with only sets running in background thread.

This has reduced the number of stats tests by half (down from 12 to 6)

-------------------------------------
author: Tate Garrett
date: 2017-01-04 15:11:34.187000000

Change has been successfully cherry-picked as bbaba7ad14c37ae2df0ca335b6e5b30cafcbaad0 by Ashlee Kent

-------------------------------------
