DESCRIPTION

MB-18453: Basic scheduler starvation fix

This change moves a tasks priority from being a fixed integer
to something more dynamic, each time a task gets 'ignored'
by the std::priority_queue Compare method we change it's
priority value so that it begins to trickle to the top.

The unit test demonstrates a basic example where a LpTask
takes 5 attempts before it finally gets to run, the key point
is that it always runs.

Change-Id: Ifd03d43d36b926debbfd5fe798a185543cfa9e9e


COMMENTS

author: Jim WNathalie Landryer
date: 2016-06-22 14:08:36.364000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-06-22 14:08:44.671000000

Patch Set 1: Well-Formed-1

Branch restricted. PLEASE READ this URL: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/16877/artifact/restricted.html : FAILURE

-------------------------------------
author: Hugo Blankenship
date: 2016-06-22 14:08:45.747000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/843/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-06-22 14:08:45.901000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/593/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-06-22 14:08:49.539000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/750/ (3/3)

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-06-22 14:09:55.778000000

Patch Set 1:

A workable idea (keeping it simple), dynamically adjust the task priority each time a task has someone moved ahead of it.

-------------------------------------
author: Hugo Blankenship
date: 2016-06-22 14:34:34.556000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/843/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/593/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/750/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2016-06-22 15:28:30.983000000

Patch Set 1: Code-Review+1

(1 comment)

High level approach looks decent. As discussed in person, I think the modification of the priority in the comparator makes it slightly harder to reason about / predict exactly when a task will run, given that the insertion into std::priority_queue is O(log N), and hence we'll essentially "bump" a  data-dependent set of elements based on what has to be visited.

 An alternative would be to keep the priority of an element fixed when it is inserted, but we essentially penalise new elements when they are added. One possibility would be to record the time an item was inserted (in terms of scheduler ticks), and make the priority_queue comparator function use the sum of the insert_time and priority. This would result in items added at the same time still being purely priority-based, but older items which have been overlooked for a while will get "boosted" based on the fact that newer items will have a larger insert_time.

Line:458, src/tasks.h -> Maybe expand the comment here, noting we also adjust to prevent starvation.

-------------------------------------
author: Adrianna Holmes
date: 2016-06-22 18:30:21.081000000

Patch Set 1:

(1 comment)

Line:167, src/taskqueue.cc -> Due to this we are not anyways adding new tasks to the readyQueue from the futureQueue until all tasks in the readyQueue is processed.

It is not clear to me why we need to bump up the priority for LP tasks as they will eventually be run

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-06-24 18:50:11.612000000

Patch Set 1:

(1 comment)

Line:167, src/taskqueue.cc -> Actually this patch is wrong, it's the wake function that is the cause of the real issue. As _wake puts the woken task straight into the readyQueue, and that means a high-prio task always goes to the front triggering our MB, got some updates coming with Dave's comments too

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-06-27 11:28:26.662000000

Abandoned

new version coming, needs to be done against Sherlock (4.1.2)

-------------------------------------
