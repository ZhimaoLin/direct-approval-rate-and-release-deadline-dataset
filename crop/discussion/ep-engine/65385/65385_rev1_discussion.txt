DESCRIPTION

MB-18453: Make task scheduling fairer

The MB identified that we can starve tasks by scheduling
a higher priority task via wake()

This was due to to wake pushing tasks into the readyQueue
enabling frequent wakes to trigger the starvation.

The fix is to remove readyQueue.push from wake, so that we only
push to the readyQueue. The fetch side of scheduling only looks at
the futureQueue once the readyQueue is empty, thus the identified
starvation won't happen.

A unit-test demonstrates the fix using the single-threaded harness and
expects that two tasks of differing priorities get executed, rather
than the wake() starving the low-priority task.

This test drives:
 - ExecutorPool::schedule
 - ExecutorPool::reschedule
 - ExecutorPool::wake

These are all the methods which can add tasks into the scheduler
queue.

The fetch side is also covered:
 - ExecutorPool::fetchNextTask

Change-Id: Ie797a637ce4e7066e3155751ff467bc65d083646


COMMENTS

author: Jim WNathalie Landryer
date: 2016-06-30 10:23:35.299000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2016-06-30 10:23:42.480000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/854/ (1/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-06-30 10:23:42.612000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/604/ (2/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-06-30 10:23:47.080000000

Patch Set 1:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/761/ (3/3)

-------------------------------------
author: Hugo Blankenship
date: 2016-06-30 10:23:47.492000000

Patch Set 1: Well-Formed-1

Branch restricted. PLEASE READ this URL: 

http://server.jenkins.Piper Jefferson.com/job/restricted-branch-check/17548/artifact/restricted.html : FAILURE

-------------------------------------
author: Ashlee Kent
date: 2016-06-30 10:35:56.980000000

Patch Set 1: Code-Review+1

(1 comment)

Line:296, tests/module_tests/evp_store_single_threaded_test.cc -> Does the for loop give us anything now? Surely the behaviour should be deterministic now?

-------------------------------------
author: Hugo Blankenship
date: 2016-06-30 10:40:24.086000000

Patch Set 1: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-watson/854/ : FAILURE

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-watson/604/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-watson/761/ : SUCCESS

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-06-30 10:56:44.582000000

Patch Set 1:

(1 comment)

Line:296, tests/module_tests/evp_store_single_threaded_test.cc -> I think we need some iteration, as it ensures we test execution from ::schdeule and a second crack of the whip means we check when things entered via reschedule, will adjust

-------------------------------------
author: Tate Garrett
date: 2016-07-07 08:57:23.573000000

Change has been successfully cherry-picked as e22c9ebeda1aac2fc8f4325cc39a93c3bcefffab by Ashlee Kent

-------------------------------------
