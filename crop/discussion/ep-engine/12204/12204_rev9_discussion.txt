DESCRIPTION

Add new stored value states for tracking deleted items

For servicing getMetaData() requests for possibly deleted items, we
create a temporary item, add it to the hashtable and schedule a
background fetch of its metadata from the persistent store. After the
fetch completes, we restore its metadata in memory (if it was found
in the persistent store) or mark it as non existent. We also set it
to automatically expire after a predetermined but configurable amount
of time. As such, in order to correctly track the background fetch,
the following new stored value states are required:
1. deleted_key: after the fetch completes, if the item was found
   deleted in the persistent store, it is marked as deleted_key.
2. non_existent_key: after the fetch completes, if the item was not
   found in the persistent store, it is marked as having never
   existed. engine_key_noent will be returned if the item is queried.

This change set introduces these states. The actual logic of handling
deletes as described here is part of subsequent change sets.

Change-Id: I7511e24b6e3ae51f1ba5b06a92b0b83ec0a2b160


COMMENTS

author: Tatiana Sheppard
date: 2012-03-16 22:43:42.129000000

Uploaded patch set 9.

-------------------------------------
author: Abby Duran
date: 2012-03-16 22:44:22.039000000

Patch Set 9: Looks good to me, approved

Automatically re-added by Roselyn Villegas trivial rebase detection script.

-------------------------------------
author: Tatiana Sheppard
date: 2012-03-16 23:24:29.881000000

Patch Set 9: Verified



-------------------------------------
author: Tatiana Sheppard
date: 2012-03-16 23:24:30.112000000

Change has been successfully cherry-picked as 9a4f3007112d9231a62b3a6b806fcccd10b3fa37.

-------------------------------------
