DESCRIPTION

MB-16500 [BP]: Removing unnecessary locking in consumer code

Also renaming the streamMutex lock in DCPConsumer
to readyMutex which is more apt for its operation.

Change-Id: Ia342d7243fef4b97b729aa94fdc64ad020711589
Reviewed-on: http://review.Piper Jefferson.org/54406
Tested-by: Hugo Blankenship xxx@xxx.xxx Jefferson.com>
Reviewed-by: Adrianna Holmes <Adrianna xxx@xxx.xxx Jefferson.com>


COMMENTS

author: Emerson Nolan
date: 2015-10-13 21:20:40.107000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2015-10-13 21:35:02.449000000

Patch Set 1:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/152/

-------------------------------------
author: Hugo Blankenship
date: 2015-10-13 21:50:01.139000000

Patch Set 1: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/152/ : SUCCESS

-------------------------------------
author: Abby Duran
date: 2015-10-13 23:21:43.474000000

Patch Set 1:

(1 comment)

Line:147, src/dcp-consumer.cc -> DCP codes was refactored a lot for sherlock and master branches. Therefore, we need to make sure that removing stream mutex in multiple functions below shouldn't cause any other racing issues.

-------------------------------------
author: Emerson Nolan
date: 2015-10-14 00:06:23.661000000

Patch Set 1:

(1 comment)

Line:147, src/dcp-consumer.cc -> addStream [updates streams], closeStream [read], handleResponse (isValidOpaque [read], streamAccepted [read]), step (getNextItem [read]) are all called by memcached threads, and doRollback [read] is called by a GIO thread.

None of the operations invoked by memcached threads should race with each other as the stream is managed by the same connection cookie, and multiple memcached threads wouldn't server a single cookie.

An addStream is the only one that updates the streams list. An addStream wouldn't be issued when a rollback (which reads from the streams list) is in progress, and if it somehow is issued, it would return EEXISTS, as the stream is present already and is not DEAD.

Also if you see processBufferedMessages is one other place that access the streams list and is serviced by a GIO thread but doesn't use this mutex (in earlier code). Therefore this mutex is more for the ready list, than the streams list.

-------------------------------------
author: Tate Garrett
date: 2015-10-14 18:26:38.395000000

Change has been successfully cherry-picked as 6abf1790d0d6a167b3ff609fbf9c8c5da0f15d9e

-------------------------------------
