DESCRIPTION

MB-23293: Remove seqno from mutation log

This patch:
        - Removes the rowid(seqno) from the mutation log (v2)
        - Removes storage of the seqno from the access scanner
        - Changes the storage of rows in the access scanner to a vector
          from a linked list

Use of the sequence number stored in the access log by warmup was
removed by MB-20623 as it was unused. As such it makes sense not to
store it in the access log or the access scanner.

As the access scanner is the only other component that makes use of the
mutation log, the sequence number was removed from V2 of
MutationLogEntry since it is unused.

As MutationLogEntryV2 as yet doesn't appear in a release "in the wild"
it seems unnecessary to increment MutationLogEntry to V3.

This commit reduces the memory overhead per item stored in the access
scanner as can be seen below in the before and after comparison.

Before:
$ ./ep_engine_benchmarks
Run on (8 X 2200 MHz CPU s)
2017-03-29 09:50:07
------------------------------------------------------------------------------------------------------------------
Benchmark                                                           Time           CPU Iterations
 UserCounters...------------------------------------------------------------------------------------------------------------------
AccessLogBenchEngine/MemoryOverhead/0/32768/min_time:0.000      31682 ns       6000 ns          1 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/32768/min_time:0.000   28544445 ns   22181000 ns          1 MaxBytesAllocatedPerItem=106 AccessScanner
AccessLogBenchEngine/MemoryOverhead/0/65536/min_time:0.000       7550 ns       8000 ns          1 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/65536/min_time:0.000   57640028 ns   49224000 ns          1 MaxBytesAllocatedPerItem=104 AccessScanner

After:
$ ./ep_engine_benchmarks
Run on (8 X 2200 MHz CPU s)
2017-03-29 09:50:48
------------------------------------------------------------------------------------------------------------------
Benchmark                                                           Time           CPU Iterations
 UserCounters...------------------------------------------------------------------------------------------------------------------
AccessLogBenchEngine/MemoryOverhead/0/32768/min_time:0.000      39719 ns       6000 ns          1 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/32768/min_time:0.000   21993107 ns   17858000 ns          1 MaxBytesAllocatedPerItem=82 AccessScanner
AccessLogBenchEngine/MemoryOverhead/0/65536/min_time:0.000       7347 ns       7000 ns          1 MaxBytesAllocatedPerItem=0 Control
AccessLogBenchEngine/MemoryOverhead/1/65536/min_time:0.000   38534385 ns   31009000 ns          1 MaxBytesAllocatedPerItem=80 AccessScanner

Change-Id: I4becdc56a54518cb914298ce99709b8886fe6f35


COMMENTS

author: Aaliyah Proctor
date: 2017-03-29 08:54:37.198000000

Uploaded patch set 2.

-------------------------------------
author: Asher Vang
date: 2017-03-29 09:05:01.473000000

Patch Set 2: Code-Review+2

-------------------------------------
author: Ashlee Kent
date: 2017-03-29 09:19:11.592000000

Patch Set 2: Code-Review+1

(1 comment)

Line:27, /COMMIT_MSG -> Nit: I generally call out the improvement in perf changes (often in the subject or high up) as the reader might not be familiar with the format of the benchmarks / or exactly what number you're referring to.

Something as simple as "~20% reduction in per-item overhead" is fine.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-29 09:20:46.673000000

Patch Set 2: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4011/ : FAILURE

Timeout of a CTest test 24/24 Test #14: ep_testsuite_dcp.ephemeral ...............} ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-addresssanitizer-master/4011/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/5225/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4745/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/5433/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2017-03-29 10:23:24.282000000

Patch Set 2:

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4017/ : FAILURE

Timeout of a CTest test 24/24 Test #13: ep_testsuite_dcp.full_eviction ...........} ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-addresssanitizer-master/4017/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/5225/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4745/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/5433/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2017-03-29 10:58:28.506000000

Patch Set 2: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/5225/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4745/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/5433/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/4027/ : SUCCESS

-------------------------------------
