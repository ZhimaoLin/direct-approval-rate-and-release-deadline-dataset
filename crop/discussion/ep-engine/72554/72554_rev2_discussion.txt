DESCRIPTION

[Refactor]: Move insert() from HashTable to VBucket class

insert() should only use update and addnew item funcs in HashTable.
Also HashTable::insert() was called only during warmup. Hence
renamed it to VBucket::insertFromWarmup.

Change-Id: I98de23be1d90ae1487913910df342ccdec438be7


COMMENTS

author: Adrianna Holmes
date: 2017-01-27 08:25:22.161000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2017-01-27 08:25:32.012000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3269/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-27 08:25:32.171000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2722/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-27 08:25:32.313000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1936/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-27 08:25:32.454000000

Patch Set 2:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/3104/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-27 08:37:20.307000000

Patch Set 2: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/3104/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2722/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/1936/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3269/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-01-27 09:21:11.979000000

Patch Set 2: Code-Review-1

(3 comments)

Line:818, src/vbucket.h -> Can this be const? If not, then please document what is modified.

Line:819, src/vbucket.h -> Not sure I understand this - if we want to eject (evict?) the value immediately, then why not just pass an empty value in via the Item?

Line:820, src/vbucket.h -> Similary with partial - this seems confusingly named - seems like we should just pass in what we want to store via the Item object?

-------------------------------------
author: Adrianna Holmes
date: 2017-01-27 17:38:06.146000000

Patch Set 2:

(3 comments)

Line:818, src/vbucket.h -> This is not modified, but cannot be passed as const because it is passed to a func and it conditionally does not modify the itm.
I will document that

Line:819, src/vbucket.h -> We want to eject in case we are doing a warmup and already are above memory threshold mem_low_wat. There are bunch of stats that are updated in this process of setting a key and evicting it. Also there is logic like 
    if (eject && !partial) {
        ht.unlocked_ejectItem(v, eviction);
    }
Just handling the way the original code was handling it.

Line:820, src/vbucket.h -> I can change the name to "onlyMetadata".
If we don't use this flag then we must rely on item->getValMemSize() == 0. I will check if that works

-------------------------------------
author: Ashlee Kent
date: 2017-01-27 17:42:00.978000000

Patch Set 2:

(1 comment)

Line:820, src/vbucket.h -> The rename sounds good. If we can drive it from the state of Item then even better :)

-------------------------------------
author: Adrianna Holmes
date: 2017-01-27 20:04:31.390000000

Patch Set 2:

(1 comment)

Line:820, src/vbucket.h -> Actually can't drive it from the state of the item. Do not want to sweat over it in this refactor. Just changing the name for now

-------------------------------------
author: Tate Garrett
date: 2017-01-30 10:39:10.503000000

Change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
author: Tate Garrett
date: 2017-01-30 14:01:49.192000000

Change has been successfully cherry-picked as c1216d4f38c4156fb490d80205eaba668bb4efd1 by Ashlee Kent

-------------------------------------
