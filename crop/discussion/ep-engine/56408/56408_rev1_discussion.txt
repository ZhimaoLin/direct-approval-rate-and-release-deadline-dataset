DESCRIPTION

Add LockTimer class to debug lock performance issues

Add a new class - a lock holder wrapper to assist to debugging locking
issues which logs when the time taken to acquire a lock, or the
duration a lock is held exceeds the specified thresholds.

Implemented as a template class around a RAII-style lock holder, with
three template params (latter two are defaulted):

  T - underlying lock holder type (LockHolder, ReaderLockHolder etc).
  ACQUIRE_MS - Report instances when it takes longer than this to acquire a
               lock. Defaults to 100ms.
  HELD_MS - Report instance when a lock is held (locked) for longer than
            this. Defaults to 100ms.

Usage:

To debug a single lock holder - wrap the class with a LockTimer<>, adding
a lock name as an additional argument - e.g.

  LockHolder lh(mutex)

becomes:

  LockTimer<LockHolder> lh(mutex, "my_func_lockholder")

The ACQUIRE_MS and HELD_MS times can changed by specifing as template
params:

  LockTimer<LockHolder, 500, 500> lh(mutex, "my_slowfunc_lockholder")

Change-Id: I99108b92e875fe30c888ab1e38fd50253a1d78bb


COMMENTS

author: Ashlee Kent
date: 2015-10-26 18:59:20.376000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2015-10-26 18:59:27.892000000

Patch Set 1:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/1433/

-------------------------------------
author: Hugo Blankenship
date: 2015-10-26 19:19:48.817000000

Patch Set 1: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/1433/ : SUCCESS

-------------------------------------
author: Abby Duran
date: 2015-10-27 00:39:58.397000000

Patch Set 1: Code-Review-1

Can you add the unit test for this? I know we can't easily check whether a  warning message is logged for a slow lock operation, which can be addressed later.

-------------------------------------
author: Asher Vang
date: 2015-10-27 06:23:24.355000000

Patch Set 1:

What about using std::chrono directly instead with milliseconds?

-------------------------------------
author: Ashlee Kent
date: 2015-10-27 09:35:08.883000000

Patch Set 1:

> Can you add the unit test for this? I know we can't easily check
 > whether a  warning message is logged for a slow lock operation,
 > which can be addressed later.

Hmm, I had written one but looks like I forgot to add to this commit - will upload it shortly.

-------------------------------------
author: Ashlee Kent
date: 2015-10-27 09:36:09.761000000

Patch Set 1:

> What about using std::chrono directly instead with milliseconds?

When I implemented this originally on the 3.x branch we don't have C++11 there so couldn't use it.

We could use std::chrono here, although I wanted to make it easy to backport given the recent investigations.

-------------------------------------
author: Tate Garrett
date: 2015-10-27 18:17:37.892000000

Change has been successfully cherry-picked as dc63ab4e99a246d8af54f413b6997888a71cca52

-------------------------------------
