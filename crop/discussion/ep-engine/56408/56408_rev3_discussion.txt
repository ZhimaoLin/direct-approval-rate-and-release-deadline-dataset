DESCRIPTION

Add LockTimer class to debug lock performance issues

Add a new class - a lock holder wrapper to assist to debugging locking
issues which logs when the time taken to acquire a lock, or the
duration a lock is held exceeds the specified thresholds.

Implemented as a template class around a RAII-style lock holder, with
three template params (latter two are defaulted):

  T - underlying lock holder type (LockHolder, ReaderLockHolder etc).
  ACQUIRE_MS - Report instances when it takes longer than this to acquire a
               lock. Defaults to 100ms.
  HELD_MS - Report instance when a lock is held (locked) for longer than
            this. Defaults to 100ms.

Usage:

To debug a single lock holder - wrap the class with a LockTimer<>, adding
a lock name as an additional argument - e.g.

  LockHolder lh(mutex)

becomes:

  LockTimer<LockHolder> lh(mutex, "my_func_lockholder")

The ACQUIRE_MS and HELD_MS times can changed by specifing as template
params:

  LockTimer<LockHolder, 500, 500> lh(mutex, "my_slowfunc_lockholder")

Change-Id: I99108b92e875fe30c888ab1e38fd50253a1d78bb
Reviewed-on: http://review.Piper Jefferson.org/56408
Tested-by: Hugo Blankenship xxx@xxx.xxx Jefferson.com>
Reviewed-by: Abby Duran <Abby xxx@xxx.xxx Jefferson.com>


COMMENTS

author: Tate Garrett
date: 2015-10-27 18:17:37.892000000

Change has been successfully cherry-picked as dc63ab4e99a246d8af54f413b6997888a71cca52

-------------------------------------
