DESCRIPTION

MB-16181: Add Collections::VB::ManifestEntry

A class that stores a single collection for a VBucket.

We store

- the name
- the seqno it was added
- the seqno it was deleted
- the Collections::Manifest revision which added it

Change-Id: Iaa3a1ae3c6405572680361e885ca7a52879ffd0f


COMMENTS

author: Jim WNathalie Landryer
date: 2017-01-31 13:27:05.456000000

Uploaded patch set 5: Patch Set 4 was rebased.

-------------------------------------
author: Hugo Blankenship
date: 2017-01-31 13:27:14.116000000

Patch Set 5: -Verified

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2866/ (1/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-31 13:27:14.298000000

Patch Set 5:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3435/ (2/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-31 13:27:14.814000000

Patch Set 5:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/2084/ (3/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-31 13:27:15.154000000

Patch Set 5:

Build Started http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/3259/ (4/4)

-------------------------------------
author: Hugo Blankenship
date: 2017-01-31 13:53:26.559000000

Patch Set 5: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/3259/ : FAILURE

Timeout of a CTest test 24/24 Test #12: ep_testsuite_dcp.value_eviction ..........} ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/3259/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/2866/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/2084/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/3435/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-01-31 13:59:46.044000000

Patch Set 5: Code-Review-1

(6 comments)

Line:37, src/collections/vbucket_manifest_entry.h -> This is (potentially) a little misleading - while it doesn't own a std::string directly, it *does* own a pointer to one - and hence is responsible for the collection name.

Line:57, src/collections/vbucket_manifest_entry.h -> You /might/ find that the compiler-generated default is sufficient here (although I think you'll need to explicit declare it):

 ManifestEntry& operator=(ManifestEntry&& rhs) = default;

(However you might hit some MSVC compiler bugs which don't create it correctly).

Line:59, src/collections/vbucket_manifest_entry.h -> I believe this should be const reference (for consistency with the normal copy-assignment) - given you already have a move-assignment operator.

Line:113, src/collections/vbucket_manifest_entry.h -> Nit: Given you appear to always append this extra space in the call-site of throwInvalidArg(), you could just have that function add it.

Line:167, src/collections/vbucket_manifest_entry.h -> Are revisions signed? Would it make more sense to use uint32_t ?

Line:483, src/stored-value.h -> Might also be useful to describe where it *is* used.

-------------------------------------
author: Keira Washington
date: 2017-01-31 14:06:41.148000000

Patch Set 5:

(1 comment)

Line:59, src/collections/vbucket_manifest_entry.h -> In the post C++11 world this is actually a fairly idiomatic way of implementing copy assignment.

-------------------------------------
author: Jim WNathalie Landryer
date: 2017-01-31 15:34:19.049000000

Patch Set 5:

(5 comments)

Line:37, src/collections/vbucket_manifest_entry.h -> Done

Line:79, src/collections/vbucket_manifest_entry.h -> umm

Line:113, src/collections/vbucket_manifest_entry.h -> yep, cleaner - done

Line:167, src/collections/vbucket_manifest_entry.h -> should be unsigned - will update (although the true spec is still to be approved, i can't see us changing away).

Line:483, src/stored-value.h -> Done

-------------------------------------
author: Jim WNathalie Landryer
date: 2017-01-31 15:42:26.757000000

Patch Set 5:

(1 comment)

Line:59, src/collections/vbucket_manifest_entry.h -> swap requires non-const object

-------------------------------------
author: Ashlee Kent
date: 2017-01-31 16:23:34.101000000

Patch Set 5:

(1 comment)

Line:59, src/collections/vbucket_manifest_entry.h -> It's probably six and two threes here, but Core C++ Guidelines suggests passing by const ref - http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rc-copy-assignment

(Especially as you have a move-assignment operator, which already handles the case where you have an rvalue reference).

-------------------------------------
