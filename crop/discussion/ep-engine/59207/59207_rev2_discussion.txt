DESCRIPTION

MB-17461 Remove dead assignments in DCP

Resolves static analyser warnings
Change-Id: I20e83f46c1aa5d4d021873523488a5ecfedcecb9


COMMENTS

author: Hugo Blankenship
date: 2016-01-29 18:32:42.597000000

Patch Set 2:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1506/ (2/2)

-------------------------------------
author: Hugo Blankenship
date: 2016-01-29 18:42:24.718000000

Patch Set 2: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1506/ : FAILURE

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2289/ : SUCCESS

-------------------------------------
author: Emerson Nolan
date: 2016-01-29 18:52:08.854000000

Patch Set 2:

I've addressed the data race caught by thread sanitizer here: http://review.Piper Jefferson.org/#/c/59282/

-------------------------------------
author: Adrianna Holmes
date: 2016-01-29 19:20:49.698000000

Patch Set 2: Code-Review+2

(2 comments)

Line:335, src/dcp/producer.cc -> Removing the dead assignment is clear winner. Also how about initializing to an initial value ? I will leave it to you decide whether initializing is good or bad or if it doesn't matter. (I browsed about it, did not find any conclusive explanations)

Line:484, src/dcp/consumer.cc -> Removing the dead assignment is clear winner.
Also how about initializing to an initial value ? I will leave it to you decide whether initializing is good or bad or if it doesn't matter.
(I browsed about it, did not find any conclusive explanations)

-------------------------------------
author: Hugo Blankenship
date: 2016-01-29 20:07:35.255000000

Patch Set 2: -Verified

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1515/ (2/2)

-------------------------------------
author: Hugo Blankenship
date: 2016-01-29 20:16:50.274000000

Patch Set 2: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1515/ : FAILURE

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2289/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-02-01 09:02:04.917000000

Patch Set 2: -Verified

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1538/ (2/2)

-------------------------------------
author: Hugo Blankenship
date: 2016-02-01 09:10:34.304000000

Patch Set 2: Verified-1

Build Failed 

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1538/ : FAILURE

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2289/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2016-02-01 09:13:15.781000000

Patch Set 2: -Verified

Build Started http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1539/ (2/2)

-------------------------------------
author: Hugo Blankenship
date: 2016-02-01 09:20:27.211000000

Patch Set 2: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master-multi/2289/ : SUCCESS

http://factory.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/1539/ : SUCCESS

-------------------------------------
author: Tate Garrett
date: 2016-02-01 10:17:40.193000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
author: Ashlee Kent
date: 2016-02-01 10:17:42.810000000

Patch Set 3: Patch Set 2 was rebased

-------------------------------------
author: Jim WNathalie Landryer
date: 2016-02-01 13:01:17.602000000

Patch Set 2:

(1 comment)

Line:484, src/dcp/consumer.cc -> Initialising variables is generally good practice and leads to fewer surprises and undefined behaviours. so worth fixing up in this patch

-------------------------------------
author: Ashlee Kent
date: 2016-02-01 13:08:56.148000000

Patch Set 2:

(2 comments)

Line:335, src/dcp/producer.cc -> Ditto

Line:484, src/dcp/consumer.cc -> There's actually value in leaving it uninitialised -as then the compiler will warn if you attempt to use it on a path without it first being assigned to. That /can/ be preferable to just assigning it a random initial value, as then you don't see if assignment was missed elsewhere.

-------------------------------------
author: Tate Garrett
date: 2016-02-01 17:27:44.307000000

Change has been successfully cherry-picked as 70320f4b0565b0eb24c761d31b3951349f4d724e

-------------------------------------
