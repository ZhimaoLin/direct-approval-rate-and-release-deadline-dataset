DESCRIPTION

CBD-1051: Global IO Manager thread pool, comments

Re-architecture the scheduler to allow for a global thread pool where threads
are shared among all buckets and can pick up any task when its ready

Change-Id: Ic44c03250d11b87db7f5497503915bc56a1c7a18


COMMENTS

author: Ellie Kidd
date: 2013-09-06 19:19:03.596000000

Uploaded patch set 11.

-------------------------------------
author: Abby Duran
date: 2013-09-07 06:12:01.774000000

Patch Set 11:

(5 comments)

Thanks Sundar!

Overall looks great. Most of my comments are minor and whitespace issues. However, as I pointed out in one of my comments, it seems to me that bucket prioritization is not enabled until we hit the max capacity scheduling. Is it correct?

Line:112, src/flusher.h -> Can we move this atomic variable to Shard class? It seems like a better place there because it represents if there is any IO task running on that shard. I think we can make it as a separate commit.

Line:235, src/scheduler.cc -> Whitespace.

Line:240, src/scheduler.cc -> whitespace

Line:427, src/scheduler.cc -> Seems like we always use a single reader queue and writer queue to schedule tasks across all the buckets as long as the number of IO threads created doesn't exceed the max number of IO threads allowed. Does it mean we might NOT support the bucket IO prioritization until we hit the max capacity mode?

Line:571, src/scheduler.cc -> How about usleep(1000) and then retry instead of looping constantly?

-------------------------------------
