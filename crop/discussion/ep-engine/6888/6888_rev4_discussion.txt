DESCRIPTION

Schedule backfill task through Non-IO dispatcher.

Previously, each backfill task was scheduled by creating a separate
thread. We observed that this might cause much overhead especially
with more than one replica in the large cluster.

This change addresses the above issue by scheduling a backfill task
through Non-IO dispatcher. If a given backfill task requires
backfill from disk, it kicks off separate disk backfill tasks
through Read-Only dispatcher. Backfill from memory is scheduled per
vbucket by Non-IO dispatcher.

Each memory backfill task sleeps for 1 sec if the current backfill
backlog for the corresponding TAP producer is greater than the
threshold (5000 by default).

Change-Id: I4fb63d89a49ad10748a7b540e6383d3d20f02d7e


COMMENTS

author: Abby Duran
date: 2011-06-10 01:12:09.286000000

Uploaded patch set 4.

-------------------------------------
author: Abby Duran
date: 2011-06-10 03:05:54.031000000

Patch Set 4: Verified

Verified through 4 node cluster with 2X DGM and 2 replica. Each backfill task will snooze for 1 sec if the current backlog size of the corresponding TAP producer is more than the threshold (5000 by default)

-------------------------------------
author: Rubi Walsh
date: 2011-06-10 17:31:52.359000000

Patch Set 4: Looks good to me, but someone else must approve

(1 inline comment)



Line:59, backfill.hh -> If queue is created in constructor and destroyed in destructor, why not define it as std:list<queue_item> object ?

-------------------------------------
