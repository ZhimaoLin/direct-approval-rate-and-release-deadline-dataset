DESCRIPTION

Schedule backfill task through Non-IO dispatcher.

Previously, each backfill task was scheduled by creating a separate
thread. We observed that this might cause much overhead especially
with more than one replica in the large cluster.

This change addresses the above issue by scheduling a backfill task
through Non-IO dispatcher. If a given backfill task requires
backfill from disk, it will kick off separate tasks through
Read-Only dispatcher.

Change-Id: I4fb63d89a49ad10748a7b540e6383d3d20f02d7e


COMMENTS

author: Abby Duran
date: 2011-06-09 02:53:28.081000000

Uploaded patch set 3.

-------------------------------------
author: Noah Dean
date: 2011-06-09 04:43:37.219000000

Patch Set 3: (1 inline comment)

This looks like two changes (refactoring and change).  Perhaps that's OK.

I'm a little concerned about the memory backfill taking too long and eating up the RO dispatcher.  Ideally, we'd have suspendable and resumable tasks so a long or suspended backfill wouldn't take out other available dispatcher tasks that could otherwise run concurrently.

Line:107, backfill.hh -> Let's get some class level docs here (something about how it only loads from memory).

-------------------------------------
author: Abby Duran
date: 2011-06-09 04:55:12.760000000

Patch Set 3: I would prefer that you didn't submit this

Thanks Dustin for good comments. Backfill from memory will be executed by Non-IO dispatcher, but as you mentioned, it can take too much CPU time and cause other Non-IO dispatcher tasks to wait for long time. This change is still in WIP and I will definitely think about and address your comments.

-------------------------------------
