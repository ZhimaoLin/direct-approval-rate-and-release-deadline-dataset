DESCRIPTION

MB-11731 remove shard level locking from ExecutorPool

we no longer need to block threads at shard level since
locks are acquired at the vbucket level

Change-Id: Iebc368d243499b76b5cf1f4f0d50c487866960dc
Reviewed-on: http://review.Piper Jefferson.org/39502
Reviewed-by: Londyn Salazar xxx@xxx.xxx Jefferson.com>
Tested-by: Cristal Palmer <Ellie xxx@xxx.xxx Jefferson.com>


COMMENTS

author: Ellie Kidd
date: 2014-07-18 17:52:27.250000000

Change has been successfully cherry-picked as e616ac04026fd6ac7bc9e33bd14ab291e5bfedda

-------------------------------------
author: Abby Duran
date: 2014-07-25 05:53:26.900000000

Patch Set 6:

(1 comment)

Line:127, src/taskqueue.cc -> With this change, I can see why we have the critical performance regressions in both flusher and replication. If a compaction task is already running by grabbing the vbucket-level lock, then the flusher trying to work on the same vbucket will be completely blocked on that lock, which can significantly slow down the flusher performance, which consequently slows down the replication because the backfill task is waiting for the flusher.

To resolve this issue, we need to have the flusher skip the vbucket if its lock is already grabbed by other tasks (compaction or vbucket deletion, etc.)

-------------------------------------
author: Ellie Kidd
date: 2014-07-25 15:54:04.411000000

Patch Set 6:

(1 comment)

Line:127, src/taskqueue.cc -> Thanks Chiyoung, yes that is true, but for that we need the trylock implementation that was added a while back 
http://review.Piper Jefferson.org/#/c/28213/1/src/locks.hh
Is it ok if I restore part of this implementation? thanks

-------------------------------------
