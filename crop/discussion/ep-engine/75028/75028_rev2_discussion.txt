DESCRIPTION

Refactor: CacheCallback to not directly access HashTable object

The hash table object should ideally be a protected member of the
VBucket class, as opposed to being public.

The patch moves towards this goal by introducing a getItem function to
the VBucket class, which ensures that the backfill function
CacheCallback::callback no longer requires direct access to the hash
table object.

Change-Id: Ief94cdc5b54b079464584a67f32cbb80b8ed6238


COMMENTS

author: Kymani Ramirez
date: 2017-03-11 07:20:34.244000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-11 07:35:28.253000000

Patch Set 2: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3464/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4648/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4214/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4874/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-03-13 10:34:05.968000000

Patch Set 2: Code-Review-1

(1 comment)

Can we not just use the existing fetchValidValue() method, and then simply have the caller call toItem on the result? That doesn't need the addition of a new method to the API.

Line:239, src/vbucket.cc -> Given we are only returning two statues here (SUCCESS or NOMEM), and moreover the second status is only if we failed to allocate memory for the Item copy (i.e. a truly exceptional circumstance), I think it's cleaner to simply return a Item; and document that on error an exception is thrown.

Furthermore, Item* should be returned via unique_ptr<Item>, given the caller takes ownership and is responsible for freeing the object.

-------------------------------------
author: Kymani Ramirez
date: 2017-03-16 09:32:51.460000000

Patch Set 2:

(1 comment)

Regarding the general comment about "Can we not just use the existing fetchValidValue() method, and then simply have the caller call toItem on the result?"

I have changed getItem to call fetchValidValue.  However we still need the getItem function to ensure that we are not directly accessing the ht object from CacheCallback

Line:239, src/vbucket.cc -> Have changed to only return the Item.

I know you have a patch in-flight where toItem returns a unique_ptr.  So won't make the change in this patch.

-------------------------------------
