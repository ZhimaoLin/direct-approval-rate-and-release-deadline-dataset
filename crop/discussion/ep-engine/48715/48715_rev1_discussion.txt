DESCRIPTION

[Unittest] Parallel writes to the same vbucket

Issue multiple writes(creates) parallely to same
vbucket to assure no race in the queueDirty function.
Context: MB-13757

Change-Id: I9bd4c08098c4199bdc226fe580a26a8084d3a994


COMMENTS

author: Emerson Nolan
date: 2015-03-24 23:57:56.749000000

Uploaded patch set 1.

-------------------------------------
author: Hugo Blankenship
date: 2015-03-24 23:58:02.242000000

Patch Set 1:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-sherlock/93/

-------------------------------------
author: Hugo Blankenship
date: 2015-03-25 00:07:16.486000000

Patch Set 1: Code-Review-1 Verified+1

Build Unstable 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-sherlock/93/ : UNSTABLE

-------------------------------------
author: Emerson Nolan
date: 2015-03-25 00:17:22.328000000

Removed the following votes:

* Code-Review-1 by Hugo Blankenship xxx@xxx.xxx Jefferson.com>
* Verified+1 by Hugo Blankenship xxx@xxx.xxx Jefferson.com>


-------------------------------------
author: Emerson Nolan
date: 2015-03-26 00:39:50.061000000

Patch Set 1:

This is different from test_conc_set, as in test_conc_set we update/delete the same key, meaning we will be picking up the same hash table lock, and thus all queueDirty calls are serialized, while in this test, as its all different keys over the same vbucket, we can get into the scenario where 2 threads access the queueDirty function for the same vbucket at the same time.

-------------------------------------
author: Bobby Buck
date: 2015-03-26 18:43:21.173000000

Patch Set 1: Code-Review+2

-------------------------------------
author: Emerson Nolan
date: 2015-03-26 18:43:32.469000000

Patch Set 2: Patch Set 1 was rebased

-------------------------------------
author: Tate Garrett
date: 2015-03-26 18:44:21.145000000

Change has been successfully cherry-picked as de6c80e1cdcc12053bb6c241cefcfedcb5b8446c

-------------------------------------
