DESCRIPTION

MB-22451: Re-register a dropped cursor if we don't backfill

After dropping a cursor, when scheduleBackfill_UNLOCKED is called but
the backfill task does not need to be scheduled, it means the cursor is
not re-registered in markDiskSnapshot.

Therefore the cursor must therefore be re-registered from within
scheduleBackfill_UNLOCKED.

Change-Id: I4a643aed902316e0753555564b8bfd9b56291efe


COMMENTS

author: Kymani Ramirez
date: 2017-03-10 14:46:41.707000000

Uploaded patch set 11.

-------------------------------------
author: Hugo Blankenship
date: 2017-03-10 15:12:31.681000000

Patch Set 11: Verified-1

Build Failed 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3425/ : FAILURE

Timeout of a CTest test 24/24 Test #14: ep_testsuite_dcp.ephemeral ...............} ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-addresssanitizer-master/3425/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4607/ : FAILURE

Failure of a CTest test  ( http://cv.jenkins.Piper Jefferson.com//job/ep-engine-threadsanitizer-master/4607/ )

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4174/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4834/ : SUCCESS

-------------------------------------
author: Hugo Blankenship
date: 2017-03-10 15:57:37.872000000

Patch Set 11: Verified+1

Build Successful 

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-addresssanitizer-master/3426/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-threadsanitizer-master/4609/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-clang_analyzer-master/4175/ : SUCCESS

http://cv.jenkins.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-master/4835/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2017-03-13 10:11:46.437000000

Patch Set 11: Code-Review-1

(2 comments)

Line:661, src/checkpoint.h -> Nicer to return a std::pair<bool, CursorRegResult> if you need two return variables - that way it's explicit from the caller that CursorRegResult isn't an in or in/out param.

(Or a std::tuple if you now need three arguments).

Line:1108, src/dcp/stream.cc -> What action should we take here if we can't register - disconnect the client maybe? Otherwise we'll probably hang I guess?

-------------------------------------
author: Adrianna Holmes
date: 2017-03-13 16:40:27.448000000

Patch Set 11:

(1 comment)

Line:716, src/checkpoint.cc -> Should we throw an exception here ?  This should never happen.
Upper layers can handle the exception by disconnecting the request maybe

-------------------------------------
author: Kymani Ramirez
date: 2017-03-16 12:15:02.757000000

Patch Set 11:

(3 comments)

Line:661, src/checkpoint.h -> Reverted back to just returning CursorRegResult.
We now throw an exception on a logic error. (where I had been returning false)

Line:1108, src/dcp/stream.cc -> good point - I have added "endStream(END_STREAM_STATE);" to close the stream if we are unable to register the cursor.

Line:716, src/checkpoint.cc -> Done

-------------------------------------
