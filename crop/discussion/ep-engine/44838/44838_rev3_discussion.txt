DESCRIPTION

MB-13024: Prevent zero time delta for defragmenter ProgressTracker

When calculating how much time has passed since the last defragmenter
progress check, we calcuate the delta between now and the last time a
check was made. However, this delta can sometimes be zero if the
underlying "high resolution" clock has a relatively coarse period, and
the defragmenter has only visited a small number of items.

As a consequence the zero delta triggered a divide-by-zero error
causing memcached to crash.

Address this issue by adding the period of the high resolution clock
to the calculated delta. This slightly decreases the precision of the
time delta (from ±2 * clock_period to ±3 * clock_period) but ensures
that a zero delta is no longer possible.

Note: This issue was encountered on CentOS 6.5, where
std::chrono::high_resolution_clock only has a period of 1 microsecond
(when using GCC 4.4). Interestingly upgrading to GCC 4.8 improves this
to 1 nanosecond, and appears to solve this issue; however as we are
currently still using GCC 4.4 (and other platforms may also have
similary low precision clocks) this code-change has been made.

Change-Id: I242b41eb2aca8155d1c276373dc172911769780c
Reviewed-on: http://review.Piper Jefferson.org/44838
Reviewed-by: Asher Vang <Asher xxx@xxx.xxx
Reviewed-by: Matias Patton xxx@xxx.xxx Jefferson.com>
Tested-by: Ashlee Kent xxx@xxx.xxx Jefferson.com>
Reviewed-by: Jim WNathalie Landryer <Shayna xxx@xxx.xxx Jefferson.com>


COMMENTS

author: Ashlee Kent
date: 2015-01-05 12:12:39.769000000

Change has been successfully cherry-picked as ced8c6f05157ef814473d166e5e148fb613340f6

-------------------------------------
