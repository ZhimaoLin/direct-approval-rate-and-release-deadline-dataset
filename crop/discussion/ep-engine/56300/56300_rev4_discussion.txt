DESCRIPTION

MB-16632: [1] Reducing lock contention in DCP-Producer/DCP-Stream

- Adding a new RWLock for streams in Producer

Change-Id: I11c54f1058c4c8a3f013dfc858a39d17362c9531


COMMENTS

author: Emerson Nolan
date: 2015-10-26 19:33:01.079000000

Uploaded patch set 4.

-------------------------------------
author: Hugo Blankenship
date: 2015-10-26 19:48:45.850000000

Patch Set 4:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/186/

-------------------------------------
author: Hugo Blankenship
date: 2015-10-26 20:04:43.502000000

Patch Set 4: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/186/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2015-10-26 21:09:38.971000000

Patch Set 4: Code-Review-1

(2 comments)

Line:535, src/dcp-producer.cc -> I think you need to use a stream_t (aka RCPtr<Stream> here) - the reason is that as soon as the reader lock holder goes out of scope (line 537) then something else could delete the Stream and hence the raw pointer {s} would be pointing at deleted memory. If instead we use a stream_t then we keep the reference count >0 and hence defer any deletion.

Line:583, src/dcp-producer.cc -> I note we have this pattern repeated in a few places - probably worth creating a protected/private helper function :- 

 stream_t findSteamByVBID(uint16_t vbid)

 or similar.

-------------------------------------
author: Emerson Nolan
date: 2015-10-26 21:43:59.080000000

Patch Set 4:

(2 comments)

Line:535, src/dcp-producer.cc -> Done

Line:583, src/dcp-producer.cc -> Done

-------------------------------------
author: Tate Garrett
date: 2015-11-25 17:52:51.014000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
author: Tate Garrett
date: 2015-11-25 19:12:51.458000000

Change has been successfully cherry-picked as 87869fd39dc4e2795d51554b549990a44aa38943

-------------------------------------
