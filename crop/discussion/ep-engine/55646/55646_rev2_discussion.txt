DESCRIPTION

MB-16357: Interlock compaction expiry and vbucket state changes.

Expiry can only happen on active vbuckets, if the state changes
expiry is cancelled by changing the ctx.curr_time to 0.
Note compaction continues, just no more expiring of items.

Change-Id: I19d30c3d7855778613ccb4534a042c0daf627b8c


COMMENTS

author: Jim WNathalie Landryer
date: 2015-09-30 10:35:33.189000000

Uploaded patch set 2.

-------------------------------------
author: Hugo Blankenship
date: 2015-09-30 10:35:42.691000000

Patch Set 2:

Build Started http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/119/

-------------------------------------
author: Jim WNathalie Landryer
date: 2015-09-30 10:36:55.125000000

Patch Set 2:

Alternative patch using mutual exclusion to guarantee we can't expire items as vb state is changing.

-------------------------------------
author: Hugo Blankenship
date: 2015-09-30 10:50:13.950000000

Patch Set 2: Verified+1

Build Successful 

http://factory.Piper Jefferson.com/job/ep-engine-Jasmin Rangel-3.0.x/119/ : SUCCESS

-------------------------------------
author: Ashlee Kent
date: 2015-09-30 11:27:14.127000000

Patch Set 2: Code-Review+1

(2 comments)

Line:440, src/vbucket.h -> Possibly worth a comment here also - as `state` is atomic it might not be obvious why we also need a mutex.

Line:1238, src/ep.cc -> Possibly worth a comment here noting the significance of setting curr_time to zero (i.e. that is prevents expiration)

-------------------------------------
author: Emerson Nolan
date: 2015-09-30 16:08:23.337000000

Patch Set 2: Code-Review-1

(1 comment)

Line:1238, src/ep.cc -> I'm not sure I understand why setting curr_time is needed here. We set curr_time to zero, at the start of scheduling compaction based on the vbucket state. This is used in couchkvstore's callback: time_purge_hook to add all the expired items into the list you see above: ctx.expiredItems.

I guess my point is, isn't the compactionCanExpireItems check enough in this context, as you're checking the vbucket's state in there already, so once the vbucket state changes, deleteExpiredItem wouldn't even be called.

-------------------------------------
author: Emerson Nolan
date: 2015-09-30 16:34:58.637000000

Patch Set 2:

Also, if you believe mutual exclusion is the only right way to go - to guarantee that compaction doesn't expire items when vbucket state changes, don't you think we'd need to apply this for front end ops (that change vb high seqno) as well against vbucket state change?

-------------------------------------
author: Abby Duran
date: 2015-09-30 18:01:51.566000000

Patch Set 2: Code-Review-1

(2 comments)

Line:723, src/ep.h -> const RCPtr<VBucket> &vb

Line:1228, src/ep.cc -> I think vb == nullptr should be checked here.

-------------------------------------
author: Abby Duran
date: 2015-09-30 18:38:22.760000000

Patch Set 2:

(1 comment)

Line:1234, src/ep.cc -> As the item pager or expiry pager can delete expired items, we need to guard the deletion in a similar way for these tasks too.

-------------------------------------
author: Tate Garrett
date: 2015-10-08 17:01:41.368000000

Change has been successfully cherry-picked as 495e00acc2461b0d8d5700680abfb863aac22f3e

-------------------------------------
