DESCRIPTION

tmf: Add support for time range selection

Time graph:
- Add time data provider interface extension to set and get selection
range
- Support left-button drag and Shift-left-click to set selection range
- Support middle-button and Ctrl-left-button drag to move the view left
or right
- Update cursors for mouse operations
- Add support for status line display of time coordinates of cursor
position and selection range
- Update time graph time listener event for selection range
- Remove right-mouse-drag support for setting zoom range in time graph
scale
- Add interface between time graph scale and control to display drag
range decorators in scale

Signals:
- Remove current time from TmfRangeSynchSignal
- Replace current time with begin and end time in TmfTimeSynchSignal

Trace Manager:
- Update trace manager for selection range

Views:
- Update statistics viewer to use selection range instead of view range
- Update Call Stack view for selection range
- Update Histogram view for selection range
- Support Shift-click in histogram
- Update Time Chart view for selection range
- Update abstract time graph view for selection range

Change-Id: I30b215f6c6b2ed2623978e83d3b96e117eff586c
Signed-off-by: Luciana Barry xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-07-04 22:16:14.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2854/

-------------------------------------
author: Brenden Conley
date: 2013-07-04 22:29:50.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2854/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-07-04 22:40:32.000000000

Patch Set 1:

Pulling this locally and running:

 $ git diff HEAD~1 | grep SuppressWarnings\(\"deprecation\"\) | wc -l
 9

 $ git diff HEAD~1 | grep xxx@xxx.xxx | wc -l
 26

Really not a big fan of cluttering the current code with suppress warnings and deprecated methods... any reason this absolutely cannot go in the 3.0 branch, which we have for exactly stuff like this?

-------------------------------------
author: Luciana Barry
date: 2013-07-05 14:54:45.000000000

Patch Set 1:

When it gets merged to lttng-luna I will merge the APIs and remove all the deprecated code. Deal?

-------------------------------------
author: Annalise Jimenez
date: 2013-07-08 14:18:34.000000000

Patch Set 1:

(1 comment)

It works as announced, excellent work!

But could it support both the selection range and a current timestamp?  The selection will be really useful for trace analysis, to mark the beginning and end time of the range to analyze.  But now, the moment we click anywhere else, the selection is gone.

Line:251, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/statistics/TmfStatisticsViewer.java -> Why not still use the getCurrentRange() method?  Unless fTraceManager.getCurrentRange returns the zoom range, in which case, the description of the function needs to be changed

-------------------------------------
author: Braxton Mccarthy
date: 2013-07-08 19:19:56.000000000

Patch Set 1:

(1 comment)

It's kind of "by design" that the selection is now either a range or a single timestamp. When the selection is a range, some views will treat the range as it is, but others could decide to consider the selection as a single timestamp (normally the beginning of the range). The State System Explorer comes to mind.

Line:32, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/widgets/timegraph/widgets/TimeGraphControl.java -> TimeGraphControl shouldn't be specific to CTF elements, should it?

-------------------------------------
author: Luciana Barry
date: 2013-07-12 20:25:41.000000000

Patch Set 1: Verified-1

(3 comments)

Line:282, lttng/org.eclipse.linuxtools.tmf.ui.tests/src/org/eclipse/linuxtools/tmf/ui/tests/views/uml2sd/loader/TmfUml2SDSyncLoaderTimeTest.java -> Unit test fails. Sequence diagram ignored current time in TmfRangeSynchSignal, so test should not send TmfTimeSynchSignal instead.

Line:302, lttng/org.eclipse.linuxtools.tmf.ui.tests/src/org/eclipse/linuxtools/tmf/ui/tests/views/uml2sd/loader/TmfUml2SDSyncLoaderTimeTest.java -> Unit test fails. Sequence diagram ignored current time in TmfRangeSynchSignal, so test should not send TmfTimeSynchSignal instead.

Line:32, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/widgets/timegraph/widgets/TimeGraphControl.java -> The CtfTmfTimestamp is just a timestamp that defaults to nanosecond scale. I considered using TmfSimpleTimestamp and modifying it to use nanoseconds, but there are too many changes due to unit test because the formatting of negative time stamps needs to be fixed, so this will have to be done in a separate patch.

-------------------------------------
author: Gerrit Code Review
date: 2013-07-29 20:16:17.000000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
