DESCRIPTION

ctf: add synthetic LTTng kernel trace

This will allow us to have much more control over testing the parser
and it allows scalability testing too.

Change-Id: I433709dafab8fd5c8d412cb9b4b632ade03f18a9
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2013-10-18 14:22:58.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2013-10-18 14:23:05.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3716/

-------------------------------------
author: Brenden Conley
date: 2013-10-18 14:56:00.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3716/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2013-10-24 17:06:58.000000000

Patch Set 5: Verified+1 Code-Review+1 IP-Clean+1

-------------------------------------
author: Braxton Mccarthy
date: 2013-10-25 14:55:39.000000000

Patch Set 5: Code-Review-2

I'll have some comments, stay tuned ;)

-------------------------------------
author: Braxton Mccarthy
date: 2013-10-25 15:38:13.000000000

Patch Set 5: Code-Review-1

(7 comments)

Line:20, lttng/org.eclipse.linuxtools.ctf.core.tests/META-INF/MANIFEST.MF -> Package (with new name?) could be internal too.

Line:31, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/tracegenerator/GenerateKernelTrace.java -> Similarly, I'd call this class "CtfKernelTraceGenerator". Might want to cram "Lttng" in there, or not.

Line:13, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/tracegenerator/GenerateTrace.java -> The package could be called "...core.tests.synthetictraces".  If we add new synthetic traces we can put them in there.

Line:22, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/tracegenerator/GenerateTrace.java -> I'd call this "CtfTraceGenerator".

It'd be worth making this class a bit more generic too, as we might add new synthetic traces in the future. See following comments.

Line:24, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/tracegenerator/GenerateTrace.java -> Previous comment still applies (using File.createTempFile())

And instead of hard-coding it, why not call it every time generateTrace() is called? This guarantees separate files, which will be important if we have more than one synthetic trace.

Line:41, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/tracegenerator/GenerateTrace.java -> No need for two methods, you can always return the actual path as a String, the caller is free to ignore it.

Line:49, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/tracegenerator/GenerateTrace.java -> Perhaps call this generate[Lttng]KernelTrace(), so it leaves room for future expansion.

-------------------------------------
