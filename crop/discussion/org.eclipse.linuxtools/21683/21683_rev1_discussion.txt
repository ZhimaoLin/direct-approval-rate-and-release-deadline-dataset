DESCRIPTION

TMF: Add state provider methods called before and after the event processing

These methods allow the state provider to initialize data at the start, and
complete state changes at the end. Some state providers may use information
from the beginning and end of the trace (for instance the timestamps) to have
better accuracy at both ends of the processing.

Change-Id: If91fe1a63d65856223a85e09cb2cc11047f07871
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2014-02-07 15:42:29.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5372/

-------------------------------------
author: Annalise Jimenez
date: 2014-02-07 15:45:48.000000000

Patch Set 1:

The use case I implemented this for: The CPU usage state system of LTTng kernel trace. There is no need to wait for a first sched_switch to start calculating CPU time. We start from the timestamp of the beginning of the trace, and at the first sched switch, we can already have the CPU time of the process that had been running. Same is true at the end, we can complete the last state change with the end time of the trace for the processes that are on the CPU at that time. 

Let me know if you have better ideas how to do this.

-------------------------------------
author: Brenden Conley
date: 2014-02-07 16:19:58.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5372/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2014-02-07 16:48:13.000000000

Patch Set 1: Code-Review-2

Nevermind, I think it's useless anyway, even in that case

-------------------------------------
author: Annalise Jimenez
date: 2014-02-20 19:19:45.000000000

Abandoned

Not useful

-------------------------------------
