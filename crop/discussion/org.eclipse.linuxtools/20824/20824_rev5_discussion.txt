DESCRIPTION

tmf: Change to timer based coalescing of background requests

Coalescing of foreground requests are still based on signal
synchronization using start and end sync signal. Foreground requests
are meant for short and higher priority requests and need to be
processed right away.

Change-Id: Iae0cf886e4c932b1620a13057a9e1242702e2089
Signed-off-by: Ricky Reeves <Meredith xxx@xxx.xxx


COMMENTS

author: Ricky Reeves
date: 2014-01-22 13:32:35.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2014-01-22 13:32:40.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5142/

-------------------------------------
author: Ricky Reeves
date: 2014-01-22 13:33:57.000000000

Patch Set 5:

consistently use equals when checking for execution type (even if it doesn't really matter)

-------------------------------------
author: Brenden Conley
date: 2014-01-22 14:11:22.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5142/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2014-01-23 04:16:34.000000000

Patch Set 5: Verified+1 Code-Review+2 IP-Clean+1

I personally prefer using == to compare enums, because it cannot throw an NPE. Other than that it doesn't really matter, .equals() calls == anyway. As you said, consistency is most important.

-------------------------------------
author: Ricky Reeves
date: 2014-01-23 12:40:20.000000000

Patch Set 5:

Good point about the null pointer exception. We could also do ExectutionType.FOREGROUND.equals(request.getExecType()) to avoid that. 

Even if it is only a small changes of NPE, I'll change it to == (which is consistent with the TmfRequestExecutor and TmfCoalescedEventRequest classes)

-------------------------------------
