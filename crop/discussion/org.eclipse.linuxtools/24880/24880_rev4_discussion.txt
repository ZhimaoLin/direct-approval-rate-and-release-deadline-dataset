DESCRIPTION

tmf: make big bang and big crunch special classes

Makes normalize stricter

Change-Id: I4b2d96e04b7ea29922b6b3790724aea0769db904
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2014-04-11 21:39:14.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2014-04-12 03:51:00.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6394/

-------------------------------------
author: Brenden Conley
date: 2014-04-12 04:50:01.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6394/ : SUCCESS

-------------------------------------
author: Luciana Barry
date: 2014-04-14 14:41:10.000000000

Patch Set 4: Code-Review-1

(4 comments)

Line:40, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/timestamp/TmfTimestamp.java -> I would prefer if these were private inner classes (e.g.TmfTimestamp.BigBang) only accessible through the constants.

Line:51, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/timestamp/TmfTimestamp.java -> How about ditching these while you're at it...

Line:257, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/timestamp/TmfTimestamp.java -> Should we just return BIG_BANG or BIG_CRUNCH? Otherwise we might crash the application by having traces with certain time stamp combinations?

Line:314, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/timestamp/TmfTimestamp.java -> Is there an overflow risk when you compare a very large value with a very small value or vice versa? (of the same scale)

-------------------------------------
author: Luciana Barry
date: 2014-04-14 17:00:43.000000000

Patch Set 4:

(1 comment)

Line:165, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/timestamp/TmfTimestamp.java -> static final fields should be ALL_CAPS_LIKE_THIS.

-------------------------------------
author: Braxton Mccarthy
date: 2014-04-24 18:19:41.000000000

Patch Set 4: Code-Review-1

(3 comments)

Line:40, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/timestamp/TmfTimestamp.java -> agreed

Line:51, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/timestamp/TmfTimestamp.java -> agreed

Line:228, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/timestamp/TmfTimestamp.java -> This is ugly as hell. Guava Long unsigned arithmetic should be able to replace this, right?

-------------------------------------
author: Ivy Mitchell
date: 2014-04-24 22:48:04.000000000

Topic set to Tmf timestamp

-------------------------------------
author: Ivy Mitchell
date: 2015-02-20 18:38:26.000000000

Abandoned

-------------------------------------
