DESCRIPTION

TMF: Consolidate some view code into the AbstractTimeGraphView

This new view is a base view for all views using the TimeGraphCombo widget.
As a first step, the lttng2 kernel Control flow view and Resources view have
been modified to extend this abstract view.

Mostly all of the interface management code (build thread, zoom thread, signal
handling, etc) is in the base class.  Final views need only implement to code
to fill the entries' list and events.

This patch includes:
- The abstract view class that all new time graph views may extend.  The default
   weight of each sash can be set in the child view.
- A TimeGraphEntry class that can be used as is if the view does not require
  extra data of its entries
- Modification of the TimeEvent class to add a value to it.
- Added a ITimeGraphDrawingHelper interface to pass to the presentation
  providers to help them get the information they need to know where to draw
  some things (see ResourcesPresentationProvider)

It is a first step before adding new features to the time graph views.  Some
more abstraction may need to be done as well as other reorganizing of the
code.

Also updated for the 2.1 API, added a ITimeGraphPresentationProvider2 interface
to avoid API breakage.

Change-Id: I73c9f1b4bf8ec265f1b02804fa7f819bd2b8dd7a
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2013-06-13 15:36:20.000000000

Uploaded patch set 8.

-------------------------------------
author: Brenden Conley
date: 2013-06-13 15:36:26.000000000

Patch Set 8:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2713/ 

-------------------------------------
author: Brenden Conley
date: 2013-06-13 15:51:05.000000000

Patch Set 8: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2713/ : SUCCESS

-------------------------------------
author: Luciana Barry
date: 2013-06-20 14:09:47.000000000

Patch Set 8: Looks good to me, approved; IP review completed

I still have some issues with how the event list is created for the ResourcesView but this is unrelated to the abstraction of the view so it can be fixed later after the patch is merged.

-------------------------------------
author: Braxton Mccarthy
date: 2013-06-20 20:56:47.000000000

Patch Set 8: I would prefer that you didn't submit this

(1 inline comment)

One small comment.

Props on doing this without breaking the API!

Line:81, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/widgets/timegraph/model/TimeEvent.java -> CallStackEvent.getValue() will need xxx@xxx.xxx annotation now.

-------------------------------------
author: Annalise Jimenez
date: 2013-06-21 13:19:52.000000000

Patch Set 8:

Actually Alex, give me a few days after this patch is merged and CallStackEvent is gone forever and callStackView has a new parent.

Unless you'd prefer me to rework the callStackView inside this patch?

-------------------------------------
author: Braxton Mccarthy
date: 2013-06-21 17:53:03.000000000

Patch Set 8:

No you can keep the callstack view rework separate, I think this patch is already quite big as it is ;) 

My comment was only about adding a xxx@xxx.xxx annotation, since we should not be introducing new warnings knowingly...

-------------------------------------
