DESCRIPTION

TMF: Consolidate some view code into the AbstractTimeGraphView

This new view is a base view for all views using the TimeGraphCombo widget.
As a first step, the lttng2 kernel Control flow view and Resources view have
been modified to extend this abstract view.

Mostly all of the interface management code (build thread, zoom thread, signal
handling, etc) is in the base class.  Final views need only implement to code
to fill the entries' list and events.

This patch includes:
- The abstract view class that all new time graph views may extend.  The default
  weight of each sash can be set in the child view.
- A TimeGraphEntry class that can be used as is if the view does not require
  extra data of its entries
- Modification of the TimeEvent class to add a value to it.
- Added a ITimeGraphDrawingHelper interface to pass to the presentation
  providers to help them get the information they need to know where to draw
  some things (see ResourcesPresentationProvider)

It is a first step before adding new features to the time graph views.  Some
more abstraction may need to be done as well as other reorganizing of the
code.

Also updated for the 2.1 API, added a ITimeGraphPresentationProvider2 interface
to avoid API breakage.

Change-Id: I73c9f1b4bf8ec265f1b02804fa7f819bd2b8dd7a
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2013-06-26 18:13:51.000000000

Uploaded patch set 15.

-------------------------------------
author: Brenden Conley
date: 2013-06-26 18:13:57.000000000

Patch Set 15:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2775/

-------------------------------------
author: Braxton Mccarthy
date: 2013-06-26 18:26:59.000000000

Patch Set 15: Code-Review+1 IP-Clean+1

Woot, LGTM, thanks for the nice work!

About the IP review: this patch seems big, but it's mostly refactoring, there is probably around 100 added lines of code.

-------------------------------------
author: Brenden Conley
date: 2013-06-26 18:28:15.000000000

Patch Set 15: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2775/ : SUCCESS

-------------------------------------
author: Luciana Barry
date: 2013-06-27 18:23:18.000000000

Patch Set 15: Code-Review-1

(2 comments)

I'm really starting to dislike some of the overzealous Sonar warnings :(

Line:145, lttng/org.eclipse.linuxtools.lttng2.kernel.ui/src/org/eclipse/linuxtools/internal/lttng2/kernel/ui/views/controlflow/ControlFlowView.java -> I think it's pointless to define constants for this here as you cannot choose any value you want. This has to match exactly the order in the COLUMN_NAMES array, so ideally it should be programatically tied to the array index somehow, or at least defined at the same place as the array (constants section).

Line:481, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/timegraph/AbstractTimeGraphView.java -> What if someone wants to implement a feature that allows the user to change the sort order at runtime? I think it was better with a setter method and leave it out of the constructor, it's not mandatory to have a comparator.

-------------------------------------
author: Annalise Jimenez
date: 2013-06-27 18:40:56.000000000

Patch Set 15:

(1 comment)

I think I should install sonar, so much I could have corrected myself...

Line:145, lttng/org.eclipse.linuxtools.lttng2.kernel.ui/src/org/eclipse/linuxtools/internal/lttng2/kernel/ui/views/controlflow/ControlFlowView.java -> Yes and what if somebody implements a feature to move columns around...  It should stay tied to some identifier of the column.

-------------------------------------
