DESCRIPTION

tmf: Enable "Potentially static methods" warning

This will warn for public/protected methods that do not use any
class field, thus could be marked as static. This allowed finding
many utility classes that were offering instances when they didn't
need to (everything was static already).

Sometimes however, you may want to allow sub-implementations to
override a method whose default implementation is "return null" or
something of the like. For these cases, you have to suppress the
warning.

Change-Id: I148cabee99482513036f85b9122966879e332644
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2014-04-17 21:06:51.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2014-04-18 03:25:34.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6521/

-------------------------------------
author: Brenden Conley
date: 2014-04-18 04:16:29.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6521/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2014-10-23 23:09:33.000000000

Abandoned

Noble goals, but it is a bit overkill. Needing to do SupressWarnings is kinda bad (you'd want to get to a point where you avoid them completely). What could be done though is only fixing the methods that should actually be static, but not touching the compiler settings.

API break btw...

-------------------------------------
