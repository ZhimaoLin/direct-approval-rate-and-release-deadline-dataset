DESCRIPTION

TMF: add support of cut/copy/paste/dnd in FilterView

Signed-off-by: Bryce Kline xxx@xxx.xxx
Change-Id: I67f15cd9c1dcb046de8dc6eef196012be14d9265


COMMENTS

author: Bryce Kline
date: 2013-10-28 08:37:49.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-10-28 08:37:56.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3767/

-------------------------------------
author: Bryce Kline
date: 2013-10-28 08:40:13.000000000

Patch Set 2:

Hi Alexandre,

>  It feels bit unnatural to cut/copy entries in the table
> (and you cannot paste them anywhere else)

Do you think we should allow to paste them as XML ?

-------------------------------------
author: Brenden Conley
date: 2013-10-28 09:22:54.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3767/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-10-29 18:40:52.000000000

Patch Set 2:

> Do you think we should allow to paste them as XML ?

That could be interesting. Would it be in the same format as they are saved in the *.filter.xml files? And then, would it be possible to copy the filter in XML form and paste it in the Filter View? That I could see a use case for (you have a big XML filter file, but you only want to import one or two filters).

-------------------------------------
author: Luciana Barry
date: 2013-10-30 18:17:54.000000000

Patch Set 2: Code-Review-1

(11 comments)

Awesome contribution!

Don't forget to add yourself to the contributor list of modified files (and update the end-year).

One thing I've often wanted to change is to allow adding a second child condition to a node and it would automatically insert an AND (or OR) node with both conditions under it. But we can worry about that later...

Line:51, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/filter/FilterDropTargetAdapter.java -> Ancestor

Line:81, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/filter/FilterDropTargetAdapter.java -> It feels more intuitive that it should copy only if user asked for copy (hold CTRL), and do nothing otherwise. Just my opinion though.

Line:1134, lttng/org.eclipse.linuxtools.tmf.ui/plugin.xml -> I would have liked for this to work on any use of the filter viewer (for example it's in a dialog spawned by the Colors view), but after looking into it, it seems complicated. We can tackle it later in a separate patch.

Line:1162, lttng/org.eclipse.linuxtools.tmf.ui/plugin.xml -> It could be nice and easy to add a DeleteHandler so that we can support Edit > Delete and the Delete key shortcut.

Line:89, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/filter/model/TmfFilterContainsNode.java -> OK if this can only happen when fValueUpperCase is null. Seems the case is when cloning before any value has been set?

Line:188, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/filter/FilterViewer.java -> It would be nice to add Cut, Copy & Paste actions to the context menu.

Line:51, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/filter/PasteHandler.java -> Interesting bug: since you use the same LocalSelectionTransfer instance for both Copy&Paste and Drag&Drop, then if you do a Drag&Drop after a Copy, the subsequent Paste will not work because the dragFinished() will clear the selection. Perhaps it can be solved using a Clipboard instance? If there's no easy solution, we can leave it for later.

Line:40, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/filter/CopyHandler.java -> This could be generalized for IWorkbenchPart so that it doesn't depend on FilterView

Line:73, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/filter/CopyHandler.java -> What we usually do is store the now-validated selection in a field variable here so that it can be directly used by execute(). Don't know if that's the proper Eclipse way to do it though ;)

Line:30, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/filter/FilterEditUtils.java -> Transferred

Line:35, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/filter/FilterEditUtils.java -> maybe this can all be simplified to .getFirstElement() if we only support single selection

-------------------------------------
