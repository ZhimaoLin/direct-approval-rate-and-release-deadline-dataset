DESCRIPTION

tmf: Use the signal's trace set in signal handlers

In relevant signal handlers (like traceOpened, traceSelected,...),
to verify if the trace is the target of the signal, use the new
TmfTraceManager.getTraceSet() method instead of relying on the
currently-active trace set.

In practice, the behavior should be the same, but it's a bit clearer
and cleaner this way.

Change-Id: Ied4405e5d3cfc051dcb43cc60837752c1f8889ea
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2013-05-08 22:28:58.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-05-08 22:29:03.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2221/ 

-------------------------------------
author: Braxton Mccarthy
date: 2013-05-08 22:32:23.000000000

Patch Set 2:

I think it's worth keeping getActiveTraceSet(), in many places we'd be calling:

  fTraceManager.getTraceSet(TmfTraceManager.getActiveTrace())

anyway. In view initializers for example.

But I changed it to getTraceSet(param) where it made more sense to, like in signal handlers.

-------------------------------------
author: Brenden Conley
date: 2013-05-08 22:48:47.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2221/ : SUCCESS

-------------------------------------
author: Luciana Barry
date: 2013-05-09 14:44:43.000000000

Patch Set 2:

In all views/viewers that I checked, the currently handled trace is stored in an instance variable (e.g. fTrace), which is initialized with getActiveTrace() or updated by TmfTraceSelected.

I would think that this instance variable should be used when calling getTraceSet(), even though they should be the same, but in case of discrepancy the variable should have precedence.

-------------------------------------
