DESCRIPTION

Tmf: Remove the unused request in the events table

Change-Id: I290d65188f5fff5dbac456c8973937f6c83718cb
Signed-off-by: Kelsie Blackwell xxx@xxx.xxx

COMMENTS

author: Kelsie Blackwell
date: 2013-08-14 18:38:17.000000000

Uploaded patch set 2.

-------------------------------------
author: Luciana Barry
date: 2013-08-14 19:41:18.000000000

Patch Set 2: Code-Review-1

(3 comments)

Line:2213, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> Could you perform the seek inside a Thread, so that it doesn't block the UI. As a further improvement, the thread could be cancelable so that if another TmfTimeSynchSignal is received, the previous thread(s) do not bother doing the UI update (asyncExec)

Line:2218, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> not sure if there was a reason to put it here, but I believe it would be more correct to update the selected rank in the UI thread (asyncExec()).

Line:2229, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> we already checked...

-------------------------------------
author: Ricky Reeves
date: 2013-08-14 20:20:57.000000000

Patch Set 2: Code-Review-1

(1 comment)

Line:2213, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> This was one of the purpose of using a event request in the first place. This ensures that the execution is done not in the UI thread. Also, using a request makes the selection work event if the trace implementation is not thread safe, i.e. concurrent seekEvent() and getNext() calls.

-------------------------------------
author: Braxton Mccarthy
date: 2013-09-24 19:37:52.000000000

Abandoned

Looks like the request was used after all.

-------------------------------------
