DESCRIPTION

tmf: Bug 416660: -1 long state value is not long

- Do not return nullValue when creating a new int or long with a value
of -1. This ensures that these values can be used and be differentiated
from a null value.

- Since nullValue can be unboxed into anything, it would be more
intuitive that adding nullValue to a number or appending nullValue to a
string would have no effect. Unboxing nullValue now returns 0, 0.0 or
"".

- Int and Long can now be unboxed into a double value.

Change-Id: I7c9e80963736e701a0b30f5f3009a0c7084527bb
Signed-off-by: Luciana Barry xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-09-12 22:02:17.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3465/

-------------------------------------
author: Brenden Conley
date: 2013-09-12 22:21:14.000000000

Patch Set 1: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3465/ : FAILURE

-------------------------------------
author: Braxton Mccarthy
date: 2013-09-12 22:44:14.000000000

Patch Set 1: Code-Review-2

This is by design. Merely changing null.unboxInt() to return 0 instead of -1 will break MANY things only in the state system (like stack attributes, off the top of my head). And that's without talking about views.

> Int and Long can now be unboxed into a double value

This is also by design. If we start to allow unboxing from one type to another, people might stop caring about what the actual type is, and always unbox their things into longs for example, doing costly casts over and over.

-------------------------------------
author: Gerrit Code Review
date: 2013-11-28 21:23:58.000000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
