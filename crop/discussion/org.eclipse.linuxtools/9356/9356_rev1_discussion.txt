DESCRIPTION

Changes for bug
https://bugs.eclipse.org/bugs/show_bug.cgi?id=396956
(support modelURI)

Change-Id: I60a0b45132aa0f0b3249d221336d3ddec1b15a75


COMMENTS

author: Brenden Conley
date: 2012-12-21 09:01:50.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/817/ 

-------------------------------------
author: Brenden Conley
date: 2012-12-21 09:17:23.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/817/ : SUCCESS

-------------------------------------
author: Janet Compton
date: 2012-12-24 14:59:13.000000000

Patch Set 1:

Hi Ansgar,

I had a look at your contribution and it looks good.

However, I have 2 comments about modelURI, the new field you are proposing:

1. Not all types of trace will have an associated UML model so this field might not be generic enough to justify putting it in the base model. Note that it could be provided by an extension class (e.g. [I]TmfModelEvent) but that would complicate things in a messy way (new viewer, etc).

2. The reference field was meant to store this type of information.  In other words, at the model level, the trace event reference can very well be the model URI. In the ITmfEvent head comment we refer to file:line as an example of usage but that was just a suggestion for some kind of connection between the event and its source. Which is what you seem to want and what makes sense at the model level.


So, here's my question: Would it be possible to just re-use the event's reference field as the model URI instead of introducing a new field?

-------------------------------------
author: Braxton Mccarthy
date: 2013-01-02 16:00:51.000000000

Patch Set 1:

Hi Ansgar, thanks for contributing!

Small comment, the commit title is too long. Apparently this can cause problems with some clients. You could use for example:

Add support for modelURI (bug 396956)

Gerrit will automatically add a hyperlink to the bug on Bugzilla. For some general guidelines about commit messages, see http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html

-------------------------------------
author: Luciana Barry
date: 2013-01-02 20:24:53.000000000

Patch Set 1: (5 inline comments)



Line:162, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> TmfEventsTable is not a singleton, there can be multiple instances when more than one trace is opened. I presume from the changes below that you are trying to access the table to apply a filter from an outside source. Perhaps this could be achieved by broadcasting the TmfEventFilterAppliedSignal and having TmfEventsTable handle reception of this signal (currently it only sends it but does not expect to receive it).

Line:305, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> Not a singleton.

Line:420, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> We should try to open the model only if the double-click is outside of the image bounds (e.g. an else clause of the if(...contains...) below)

Line:421, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> The event can be found directly with item.getData().

Line:447, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/viewers/events/TmfEventsTable.java -> We should either ignore the exception or open an error dialog to the user. It will be a common error case that the user does not have the model's source in his workspace. Maybe we should first check if file.exists().

-------------------------------------
author: Ivy Mitchell
date: 2013-01-04 16:14:33.000000000

Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)

Hi Ansgar, for the most part, this patch is very good, in my opinion, I will run it later and test it, this is my overview on my first day back. :) 

Please check the eclipse wiki here http://wiki.eclipse.org/Linux_Tools_Project/LTTng_Eclipse_Plug-in_Development_Environement_Setup#Define_an_API_baseline, I think you will need to update xxx@xxx.xxx
also, you are making some members public instead of protected, why is that? 

Please don't let the -1 discourage you. It really means it's a good idea but needs a little more love.

Line:62, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/EventDeclaration.java -> This strikes me as very specific, not all ctf traces have a model. Some are just logs. Some have a model on a white board in some dev's office/bedroom. I propose a map of extra attributes.

Line:266, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/EventDeclaration.java xxx@xxx.xxx

-------------------------------------
author: Ivy Mitchell
date: 2013-01-10 16:44:03.000000000

Patch Set 1:

Ansgar, could you base your changes on the new master branch, there is now support for custom attributes and this will streamline the work. 

thanks, Matthew

-------------------------------------
author: Braxton Mccarthy
date: 2013-01-17 16:54:30.000000000

Patch Set 1: Fails

I think this patch is now obsolete, Ansgar could you please "Abandon" this change, since we can't delete other people's changes ;)

-------------------------------------
author: Leanna Good
date: 2013-01-18 08:32:07.000000000

Patch Set 1: Abandoned

Patch is obsolete, replaced by https://git.eclipse.org/r/9699

-------------------------------------
