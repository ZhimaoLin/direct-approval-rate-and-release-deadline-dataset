DESCRIPTION

ctf: add getLong to bitBuffer

* add getLong to bitBuffer
* support unaligned long reads
* add tests

Change-Id: I6848b2bde4e37580c1327f03cd025ea2bae4e134
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2013-11-26 19:26:08.000000000

Uploaded patch set 6.

-------------------------------------
author: Brenden Conley
date: 2013-11-26 20:45:04.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4180/

-------------------------------------
author: Brenden Conley
date: 2013-11-26 20:57:59.000000000

Patch Set 6: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4180/ : ABORTED

-------------------------------------
author: Ivy Mitchell
date: 2013-11-26 21:31:55.000000000

Patch Set 6:

This test has failed due to GProf failing, I have re-initialized the test.

-------------------------------------
author: Braxton Mccarthy
date: 2013-11-26 22:48:14.000000000

Patch Set 6: Code-Review-1

We should move to the the getLong()/getInt()/get(length, signed) API first.

-------------------------------------
author: Jordon Obrien
date: 2013-11-27 04:13:03.000000000

Patch Set 6:

(2 comments)

more nits

Line:156, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/io/BitBuffer.java -> A fallback is something you run "after" that handles all unmanaged cases...  (like the default in a switch).

Here is the definition [fallback]:
  "an alternative plan that may be used in an emergency".

I rewrote this comment to specify this is a fast-path (an optimisation), and the readBE/readLE are the fallback.

Line:158, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/io/BitBuffer.java -> this is a candidate for a faster alignment detection

(pos & (BIT_CHAR-1)) != 0

The compiler won't be able to optimize because he can't proves 'pos' is only a positive number.

-------------------------------------
