DESCRIPTION

TMF: Move timestamp transform to internal to avoid API breakage later

The original timestamp transforms have been deprecated. The factory makes them
obsolete anyway.

Change-Id: I83d7fe9d2d78c93850e281d56d8201ea0f0b9177
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2014-08-15 14:22:39.000000000

Uploaded patch set 1.

-------------------------------------
author: Annalise Jimenez
date: 2014-08-15 14:25:56.000000000

Patch Set 1:

I'm sick of being stuck with API breakage every single time I want to update this framework, so let's get this internal!

I changed the method names from the timestamp factory also, it's better practice according to Effective Java, instead of all having the same name with differing parameters, which can be confusing.

-------------------------------------
author: Ivy Mitchell
date: 2014-08-15 14:32:14.000000000

Patch Set 1: Code-Review+1

I LOVE THIS PATCH MORE THAN BACON.


And I do appreciate bacon.

-------------------------------------
author: Brenden Conley
date: 2014-08-15 14:52:39.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8321/

-------------------------------------
author: Brenden Conley
date: 2014-08-15 15:32:14.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8321/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2014-08-15 15:34:15.000000000

Patch Set 1: Code-Review-1

(1 comment)

One small comment.

Are you planning to put everything else in .core.synchronization internal too? Since the whole synchronization framework is relatively new and experimental, it could make sense.

Line:37, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/synchronization/TimestampTransformFactory.java -> Perhaps call this getDefaultTransform() ? "getDefault" could be confused with "get default factory", (as is the case with Display.getDefault(), Activator.getDefault(), etc.) and wrongly make people think this class is instantiable.

-------------------------------------
author: Annalise Jimenez
date: 2014-08-15 15:57:36.000000000

Patch Set 1:

(1 comment)

Moving things internal involves deprecating their public counterpart and modifying code in many places to use the internal stuff instead. Though that is the final plan for next API break, I'll do it in a need-be basis for now. Internalizing the timestamp transform is enough for my need right now.

Line:37, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/synchronization/TimestampTransformFactory.java -> Good point

-------------------------------------
