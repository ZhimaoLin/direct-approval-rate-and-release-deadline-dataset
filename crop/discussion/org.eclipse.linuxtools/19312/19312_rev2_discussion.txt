DESCRIPTION

ctf: more restrictive parameters accepted as sequence lengths

Only accept unsigned ints as valid sequence lengths

Change-Id: I70cc6022ad99d1340f3c5a30546e489d2428832e
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2013-12-04 15:42:28.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-12-04 16:26:05.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4391/

-------------------------------------
author: Brenden Conley
date: 2013-12-04 17:00:05.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4391/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-12-04 18:58:53.000000000

Patch Set 2: Code-Review-1

(4 comments)

Line:1168, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/event/metadata/IOStructGen.java -> there's two "is"

and "is unsigned" = false is a double-negative. It'd be a bit clearer to call it "isSigned" (and you can drop the ! in the return clause).

Line:112, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/event/metadata/DeclarationScope.java -> space before String

and missing space before {

seriously... EVERY time there's a bunch of things like that. You might want to add the auto-format to a save action in your workspace.

Line:115, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/event/metadata/DeclarationScope.java -> We don't externalize any other exception message, why should this one be?

Line:349, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/event/metadata/DeclarationScope.java -> method should be called lookupIdentifierRecursive() (or keep both methods in one and add a boolean parameter)

-------------------------------------
author: Jordon Obrien
date: 2013-12-04 19:06:32.000000000

Patch Set 2:

(2 comments)

A general comment, why the notion of scope is kept in the tree? That's a part of a cleanup I want to do.

The notion of "symbols" and the notion of "scope" are misused in your parser, which lead to inefficient tree management.

Line:1169, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/event/metadata/IOStructGen.java -> what is the meaning of "r" in rLookup?

Line:112, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/event/metadata/DeclarationScope.java -> +1

-------------------------------------
