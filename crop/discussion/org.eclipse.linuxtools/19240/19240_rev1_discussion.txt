DESCRIPTION

ctf: avoid temporary array creation when parsing CTF-Array.

The temporary List<long> is useless and the conversion function too.

Change-Id: I42bb50536deb1529998287fd9dae34c5f009c194
Signed-off-by: Jordon Obrien xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-12-03 10:01:09.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4351/

-------------------------------------
author: Bryce Kline
date: 2013-12-03 10:12:24.000000000

Patch Set 1:

Have you metrics on array length ?
If there is many empty arrays, we can also optimize this use-case (with predefined empty arrays)

-------------------------------------
author: Jordon Obrien
date: 2013-12-03 10:17:54.000000000

Patch Set 1:

I won't expect empty array here. Make no sense to have traces with empty array.

-------------------------------------
author: Jordon Obrien
date: 2013-12-03 10:21:37.000000000

Patch Set 1:

But, but.... maybe a cache could still apply here.
Won't be part of this patch.

This patch-set is just to remove the temporary copy.

-------------------------------------
author: Brenden Conley
date: 2013-12-03 10:32:29.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4351/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2013-12-03 13:49:33.000000000

Patch Set 1: Code-Review+1

lgtm, nice and easy

-------------------------------------
author: Ivy Mitchell
date: 2013-12-03 14:46:55.000000000

Patch Set 1: Code-Review+2 IP-Clean+1

This patch looks correct to me, I will verify it shortly.

Are there any performance gains from this? I am just curious.

-------------------------------------
author: Jordon Obrien
date: 2013-12-03 14:50:49.000000000

Patch Set 1:

Genevieve, I'll fix in an other commit. (I also see it).

They asked me to keep coding style and behavior changes in separate commit. And I agree with this practice.

Matthew, for the speed improvement, I don't know. But, it cannot be worse, just better. I assume this code wasn't time critical.

-------------------------------------
