DESCRIPTION

Fix mouse wheel zoom in histogram view

Partial fix for bug 384423.

Create a single HistogramZoom instance owned by the full trace histogram
which receives mouse wheel events from every control in the view that
can have focus. This allows mouse wheel zoom to be possible when the
text controls have taken focus from the histogram canvas.

Change-Id: Iefd4db5eafbe54e9386a9ec23b4ac1ecd2ce2a1b
Signed-off-by: Luciana Barry xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-05-21 19:19:52.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2373/ 

-------------------------------------
author: Brenden Conley
date: 2013-05-21 19:38:04.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2373/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2013-05-21 19:48:41.000000000

Patch Set 2: I would prefer that you didn't submit this

(1 inline comment)

It works well and fixes the problem with the lost focus. However, you introduce a tight coupling between the TimeRangeHistogram and the FullRangeHistogram. You take the zoom implementation of the FullRangeHistogram and set it to the TimeRangeHistogram and FullRangeHistogram by calling addMouseWhellListener which is implemented in the common parent class Histogram. I think, we should keep this functionality encapsulated so that the TimeRangeHistogram is independent from the FullRangehistogram. To achieve this you could keep a zoom instance in the Histogram base class which is constructed by the sub-class constructor. Then, you can call the addMouseWhellListener from the constructor itself.

Line:491, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/histogram/Histogram.java -> In the dispose method we need to remove the mouse wheel listeners from each component.

-------------------------------------
author: Luciana Barry
date: 2013-05-22 14:08:51.000000000

Patch Set 2: (1 inline comment)



Line:491, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/histogram/Histogram.java -> When dispose() is called (triggered by dispose of the view) the controls have already been disposed so it causes a SWT exception. It could be done by adding a dispose listener, but I don't think it's necessary to dispose listeners that have been added to your own control or its children. It is required when listeners are added to external objects.

-------------------------------------
