DESCRIPTION

tmf : queryHistoryRange performance fix

This patch fix an unnecessary loop for the small resolution and increase the performance.

Benchmark :

Before :
Query resolution 1022444670: 0.245
Query resolution 102244467: 1.167
Query resolution 10224446: 3.390s
Query resolution 1022444: 4.028s
Query resolution 102244: 4.285s
Query resolution 10224: 5.451s
Query resolution 1022: 10.970s
Query resolution 102: 37.396s
Query resolution 10: 306.308s

After :
Query resolution 1022444670: 0.278s
Query resolution 102244467: 1.138s
Query resolution 10224446: 3.373s
Query resolution 1022444: 3.976s
Query resolution 102244: 4.329s
Query resolution 10224: 5.309s
Query resolution 1022: 8.001s
Query resolution 102: 8.145s
Query resolution 10: 8.231s

Reference :
Performance with queryHistoryRange without resolution : 8.414s

Change-Id: I6022dc6c562d994310f9419c362dd1f06a414036
Signed-off-by: Ayanna Reed xxx@xxx.xxx


COMMENTS

author: Ayanna Reed
date: 2014-03-06 01:48:11.000000000

Uploaded patch set 6.

-------------------------------------
author: Brenden Conley
date: 2014-03-06 01:48:17.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5798/

-------------------------------------
author: Brenden Conley
date: 2014-03-06 02:18:10.000000000

Patch Set 6: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5798/ : FAILURE

-------------------------------------
author: Ayanna Reed
date: 2014-03-06 15:25:21.000000000

Patch Set 6: Code-Review-1

(1 comment)

One nit

Line:707, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/statesystem/StateSystem.java -> Unnecessery if we use ts = t1 in the loop.

-------------------------------------
author: Ayanna Reed
date: 2014-03-06 15:45:53.000000000

Patch Set 6:

(1 comment)

Another nit

Line:727, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/statesystem/StateSystem.java -> Impossible : we have before the end condition of the loop : ts >= tEnd, and ts <= currentInterval.getEndTime.
So we have automaticly : currentInterval.getEndTime() => tEnd.

-------------------------------------
