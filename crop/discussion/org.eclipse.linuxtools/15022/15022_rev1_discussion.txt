DESCRIPTION

tmf: Add time graph viewer option to AbstractTimeView

The AbstractTimeView is modified to add the possibility to be used with
a time graph viewer only, when the time graph combo and tree viewer are
not needed.

The Resources view is updated to use the time graph viewer option.

Change-Id: I95b557070c9fb412649d56428ae314731ec165aa
Signed-off-by: Luciana Barry xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-07-31 17:58:17.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/3064/

-------------------------------------
author: Brenden Conley
date: 2013-07-31 18:14:08.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/3064/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2013-08-01 13:32:34.000000000

Patch Set 1: Code-Review-1

(1 comment)

What is the advantage of having a time graph viewer only vs a simple time graph combo with some defaults?

Anyway, the necessary changes are relatively small, clean and transparent, so I have no objection.  Looks good!

Line:488, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/timegraph/AbstractTimeGraphView.java -> I think this function should go.  With the wrapper, there should now be a better way to obtain the desired result, if it is called at all.

-------------------------------------
author: Luciana Barry
date: 2013-08-01 14:12:23.000000000

Patch Set 1:

(1 comment)

The main advantage of TimeGraphViewer over the combo is that you can use custom item heights, you are not tied to the tree item height.

Line:488, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/timegraph/AbstractTimeGraphView.java -> Well, for now, it's used by ControlFlowView to get access to the time graph viewer's expanded items, and to set the selection.

Either we keep the method (and probably need to add a getTimeGraphViewer method for the other option), the subclass should know which method to call.

Or, we add the whole TimeGraphCombo public API to the abstract view's API and to the wrapper. I think it's just less maintenance to go for the first option.

-------------------------------------
author: Annalise Jimenez
date: 2013-08-02 14:13:43.000000000

Patch Set 1:

(1 comment)

Line:488, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/timegraph/AbstractTimeGraphView.java -> In this case, getExpandedItems and setSelection are desirable in both cases so it may be preferable to have them directly in the API.  

I don't like having to expose the possibility to go too deep in the views widgets like getTimeGraphCombo().getTimeGraphViewer()...

-------------------------------------
author: Luciana Barry
date: 2013-08-08 18:26:47.000000000

Patch Set 1:

(1 comment)

Line:488, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/views/timegraph/AbstractTimeGraphView.java -> I wouldn't want to limit the possibilities for users of this abstract view. I also wouldn't want to bloat this class with all the possible API methods of its child controls.

Another example, now the ControlFlowView needs access to the viewer's Hide Arrows action...

-------------------------------------
author: Gerrit Code Review
date: 2013-08-12 20:44:30.000000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
