DESCRIPTION

perf: replaced File variables with IPath in order to use in remote.

Added support for disassembly, stat and comparison views in remote.

Change-Id: I13c7bc5bccbfce7ba9672379f83ad8f302f365d2


COMMENTS

author: Craig Arias
date: 2013-09-17 23:57:53.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-09-17 23:57:59.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3507/

-------------------------------------
author: Brenden Conley
date: 2013-09-18 00:25:22.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3507/ : SUCCESS

-------------------------------------
author: Erick Ross
date: 2013-09-18 11:56:28.000000000

Patch Set 2: Code-Review-1

(10 comments)

Exception handling can be improved a lot.

Line:119, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/StatData.java -> Do not printStackTrace. Handle it in a way that user will get at least some information what's going on instead of having to dig in the .log file.

Line:44, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/handlers/PerfComparisonHandler.java -> Why is this System.out.println needed ? This will went unnoticed durign regular IDE usage. Probably better to remove it.

Line:47, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/handlers/AbstractSaveDataHandler.java -> You would better use newText.isEmpty() here.

Line:103, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/handlers/AbstractSaveDataHandler.java -> Do not print stack trace. Handle it better.

Line:280, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/remote/launch/PerfLaunchConfigDelegate.java -> Do not printStackTrace.

Line:43, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/SourceDisassemblyData.java -> Please do not just printStackTrace but handle it in some better way.

Line:71, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/handlers/PerfStatsQuickDiffHandler.java -> Do not print stack trace.

Line:48, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/handlers/PerfSaveSessionHandler.java -> Do not print StackTrace handle it better.

Line:71, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/handlers/PerfSaveSessionHandler.java -> Here even better handling of exceptions is changed to simply printStackTrace, please fix.

Line:93, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/AbstractDataManipulator.java -> I don't like the printStackTrace. It's invisible to users and just polutes the log. Please find a way to properly handle the exceptions or ignore them if they don't make sense.
Also in case URISyntaxException is thrown the exeRC would not be initialed and few lines later we would get a NPE (exeRC.getRmtFileProxy).

-------------------------------------
