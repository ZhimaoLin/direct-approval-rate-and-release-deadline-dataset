DESCRIPTION

TMF: [WIP] Add analysis requirement to generate traces from an analysis

Change-Id: I764291e0ca5281550a16d61a9aa8dbf5ca05d390
Signed-off-by: Keshawn Lopez xxx@xxx.xxx
Signed-off-by: Bailey Galloway xxx@xxx.xxx


COMMENTS

author: Keshawn Lopez
date: 2014-03-03 17:39:04.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2014-03-03 17:47:50.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5767/

-------------------------------------
author: Brenden Conley
date: 2014-03-03 18:34:56.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5767/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2014-03-17 15:55:20.000000000

Patch Set 3:

(3 comments)

First few comments, I'm reviewing the patch series. More comments may come as I read the other patches.

Line:44, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/IAnalysisModule.java -> Why put it in a separate interface if IAnalysisModule extends it? Unless there is something else that may want to implement IAnalysisRequirementProvider except an analysis module?

If you want to force a default behavior, you should have the abstract analysis module implement it, instead of forcing all analysis modules to do so.

Line:106, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisRequirement.java -> It saves a line to put subRequirement.getValues in the for and avoids one local variable

Line:176, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisRequirement.java -> the same type of -> the same type as

-------------------------------------
author: Ivy Mitchell
date: 2014-03-17 17:07:03.000000000

Patch Set 3: Code-Review-1 IP-Clean+1

(5 comments)

Reviewing too, maybe I'll look at another patch chain.
-1 for this patch, but you know that since it's a work in progress. Looks great though.

Line:146, lttng/org.eclipse.linuxtools.tmf.analysis.xml.ui/src/org/eclipse/linuxtools/tmf/analysis/xml/ui/module/TmfAnalysisModuleHelperXml.java -> remove me please

Line:98, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/IAnalysisModuleHelper.java -> Just curious, why not return ITmfTrace and skip the generics?

Line:106, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisRequirement.java -> Not certain, as getValues() returns a new array, does foreach copy the value or re-call it at every iteration?

Line:116, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisModuleHelperConfigElement.java -> remove todo please

Line:122, lttng/org.eclipse.linuxtools.tmf.core.tests/stubs/org/eclipse/linuxtools/tmf/tests/stubs/analysis/AnalysisModuleTestHelper.java -> please remove me

-------------------------------------
author: Bailey Galloway
date: 2014-03-18 00:24:23.000000000

Patch Set 3:

(8 comments)

Thanks for the review. the modifications will come up soon.

Line:44, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/IAnalysisModule.java -> Since we want to get access of the requirements from the helpers, they will be requirement providers as well. By creating a dummy analysis, they will provide the requirements through an IAnalysisModule.
We also added the default behavior in the abstract analysis module. This way, the modules that don't have requirements will send an empty list.

Line:146, lttng/org.eclipse.linuxtools.tmf.analysis.xml.ui/src/org/eclipse/linuxtools/tmf/analysis/xml/ui/module/TmfAnalysisModuleHelperXml.java -> In progress

Line:98, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/IAnalysisModuleHelper.java -> If you are asking why we do not return an instance of ITmfTrace instead is because we are trying to get the types only. Dealing with generics here makes it simpler than having to create and return dummy traces only to get to know their types.

Line:106, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisRequirement.java -> Tested and it seems that it's called once.

Line:106, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisRequirement.java -> Done

Line:176, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisRequirement.java -> Done

Line:116, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisModuleHelperConfigElement.java -> In progress

Line:122, lttng/org.eclipse.linuxtools.tmf.core.tests/stubs/org/eclipse/linuxtools/tmf/tests/stubs/analysis/AnalysisModuleTestHelper.java -> In progress

-------------------------------------
author: Gerrit Code Review
date: 2014-04-15 22:10:24.000000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
