DESCRIPTION

tmf: Improve time graph combo responsiveness

- Optimize computation of visible expanded items list and prevent
unnecessary recomputation.

- Optimize alignment of tree and time graph item heights and only align
currently visible items.

- Remove the paint listener used to align item heights and add a common
method to simultaneously align the top index and the item heights when
necessary.

Change-Id: I4aedb6ca5973f867288a8334d92c53e688b775fe
Signed-off-by: Luciana Barry xxx@xxx.xxx


COMMENTS

author: Luciana Barry
date: 2014-03-21 15:37:04.000000000

Uploaded patch set 6.

-------------------------------------
author: Brenden Conley
date: 2014-03-21 17:13:10.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6059/

-------------------------------------
author: Brenden Conley
date: 2014-03-21 18:04:17.000000000

Patch Set 6: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6059/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2014-03-21 21:12:12.000000000

Patch Set 6: Verified+1 IP-Clean+1

It works and is fast. But is it full bullet-proof? ie. does the delay make is so that in 100% of the case, when the cache is built again, the items will have the right status. Or will it just make it work in 99.99999% of the cases?

Both ways, I guess it's good enough.

-------------------------------------
author: Luciana Barry
date: 2014-03-26 13:49:29.000000000

Patch Set 6:

The delay is because the TreeExpansionEvent indicates that the element is 'being' expanded. Debugging shows that in the tree the item is not yet expanded when the treeExpanded method is called on the listeners. Hopefully it should be the very next thing that happens after the listeners have been notified, and when the queued asyncExec is processed the tree should have the new states.

Clearing the cache in the meantime is for protection against some other (unexpected) event that would execute in between the treeExpanded and the asyncExec, so that event would use the current tree state (whatever it is at the time). In that case the asyncExec would still be processed subsequently and rebuild the list.

-------------------------------------
author: Ivy Mitchell
date: 2014-03-26 19:58:34.000000000

Patch Set 6: Code-Review+1

This code looks clean to me.

-------------------------------------
author: Braxton Mccarthy
date: 2014-03-26 22:12:36.000000000

Patch Set 6: Verified+1 Code-Review+2 IP-Clean+1

I couldn't reproduce the 6000-line time graph view with the latest XML unfortunately, but for normal-sized traces, everything seems fine. The paint listener is removed, and that was the big offender.

-------------------------------------
