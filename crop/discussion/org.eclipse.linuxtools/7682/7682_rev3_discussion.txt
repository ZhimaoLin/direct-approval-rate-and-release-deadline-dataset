DESCRIPTION

tmf: Support for multiple state systems per trace

With the statistics-in-the-state that are coming up, the
state system won't be limited to CTF/LTTng traces anymore.

This commit reworks the state system field of CtfTmfTrace
into a map of available systems, and exposes its getter
all the way up to ITmfTrace. Now every level of trace type
can, if they want, add one or more state systems to the map.

Change-Id: Iadda89aeb28aab7573f084d5c99f155ba207e02b
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2012-09-17 21:48:09.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2012-09-17 21:48:16.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/181/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-17 21:53:57.000000000

Patch Set 3: Fails

Build Failed 

https://hudson.eclipse.org/sandbox/job/linuxtools/181/ : FAILURE

-------------------------------------
author: Braxton Mccarthy
date: 2012-09-17 21:53:59.000000000

Patch Set 3:

I've re-worked this commit a bit, now on top of exposing the method in ITmfTrace I've changed it to return a map of all the state systems for this trace.

I tried to keep the complexity at a minimum (not touching the extension points, etc.) The extension point already specifies a trace type, so it's simple to define one (or more) state system for each trace type.

Admittedly, I'm not sure a Map<String, something> is the best thing to use here. I like the fact that it's dead simple (if there's a conflict, it replaces with the new one. User's fault). But then you have to make sure you cache the hashmap lookups and don't do them every query...

-------------------------------------
author: Braxton Mccarthy
date: 2012-09-17 21:59:10.000000000

Patch Set 3:

Oops, failed to build because of the changes to the plugin version. I'll split that in a separate commit tomorrow.

-------------------------------------
