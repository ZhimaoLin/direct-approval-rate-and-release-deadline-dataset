DESCRIPTION

ctf: get iterable of stream input readers

This patch creates an interface IDeclarationProvider to
isolate StreamInput from the outside world.

Change-Id: If12805ba6436ab5f5ce562686f5870c0fbf05261
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2014-05-02 17:52:06.000000000

Uploaded patch set 5.

-------------------------------------
author: Brenden Conley
date: 2014-05-02 18:48:02.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6821/

-------------------------------------
author: Brenden Conley
date: 2014-05-02 19:45:58.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6821/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2014-05-02 21:42:09.000000000

Patch Set 5: Code-Review-1

(4 comments)

Line:10, /COMMIT_MSG -> StreamInput, or StreamInputReader ?

Line:32, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/StreamInputReader.java -> spacing

Line:259, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTraceReader.java -> Only one naming should be used/exposed (in the javadoc and the method signature). getDeclarationProviders()?

Line:260, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTraceReader.java -> The DeclaratationProvider then provides (dohoho) a Map. That's an extra level of .get() users will have to do. How about ditching the interface, and exposing here the Iterable<IEventDeclaration>? They can always get the ID from the declaration.

-------------------------------------
