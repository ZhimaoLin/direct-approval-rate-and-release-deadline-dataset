DESCRIPTION

tmf: Add Variant field handling in CtfTmfEventField

Also add unit test for variant types

Change-Id: I863fb57ea34dafd0ed7e02caa3f698b4cb88f65c
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2013-03-06 15:28:13.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2013-03-06 15:28:19.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/1594/ 

-------------------------------------
author: Annalise Jimenez
date: 2013-03-06 15:43:01.000000000

Patch Set 3: (1 inline comment)



Line:185, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/ctfadaptor/CtfTmfEventField.java -> We may want this field to be a new CTFVariantField (or reuse the CTFStructField ?) because now we lose the variant's field name... Only the child appears in this case.
If someone needs traces with variants (ipv4 vs ipv6) I have some.

-------------------------------------
author: Brenden Conley
date: 2013-03-06 15:43:19.000000000

Patch Set 3: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/1594/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-03-06 16:22:42.000000000

Patch Set 3: (1 inline comment)

Small comment, I haven't had time to test the whole thing yet.

Line:373, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/ctfadaptor/CtfTmfEventField.java -> yuck, copy-pasted code :P

This could be unified with the same excerpt in IntegerField. Either as a protected method in the super-class, or as another separate file-level class. (probably the former?)

-------------------------------------
author: Annalise Jimenez
date: 2013-03-06 16:25:03.000000000

Patch Set 3: (1 inline comment)



Line:373, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/ctfadaptor/CtfTmfEventField.java -> I know! yuck yuck.

I wanted to do the former, but IntegerField is a final class.  Any reason for that?  Can it be made not final?

-------------------------------------
author: Braxton Mccarthy
date: 2013-03-06 16:55:12.000000000

Patch Set 3: (1 inline comment)



Line:373, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/ctfadaptor/CtfTmfEventField.java -> > IntegerField is a final class. Any reason for that?

Not really, mostly just for hypothetic compiler optimizations...

But does it really cause a problem? If you add a new protected method (or a default static method?) in CtfTmfEventField, IntegerField would be able to call it, no?

-------------------------------------
author: Annalise Jimenez
date: 2013-03-06 17:03:09.000000000

Patch Set 3: (1 inline comment)



Line:373, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/ctfadaptor/CtfTmfEventField.java -> Yes, maybe a static method in CtfTmfEventField... But it would only apply to integer types with a base.

Wouldn't it be preferable to un-final CtfIntegerField and make CTFIntegerArrayField extend it?

-------------------------------------
author: Gerrit Code Review
date: 2013-03-19 03:51:28.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
