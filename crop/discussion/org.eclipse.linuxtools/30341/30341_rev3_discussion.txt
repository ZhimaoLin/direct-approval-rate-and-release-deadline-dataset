DESCRIPTION

tmf: Update the refresh handler

- Remove delay when the handler is not busy
- Immediately schedule the next task when the current one is completed
- Allow any Object as source to allow a component to queue different
types of update that don't cancel each other
- Only schedule one update at a time to allow other (non-coalesced) UI
runnables to execute between updates and to allow updates from other
sources to be replaced while the handler is busy

Change-Id: I9af49d6a11e8e224bc7ff527ba592c238715c7d7
Signed-off-by: Luciana Barry xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2014-07-23 20:53:49.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7908/

-------------------------------------
author: Braxton Mccarthy
date: 2014-07-23 20:53:51.000000000

Patch Set 3: Code-Review-1

(4 comments)

Design comment. Perhaps put the last part in a separate patch so we can discuss that separately?

Line:9, /COMMIT_MSG -> That's very good! Less lag

Line:12, /COMMIT_MSG -> that's good too, it's true some components may want to queue different types of updates.

(add a space before "types of...", it doesn't do it automatically)

Line:13, /COMMIT_MSG -> This I am not sure I like. One of the goals of having a UI handler was to reduce the stuttering in the UI, by running many Runnable's within one call to (a)syncExec().

With this now, sure we could eliminate redundant updates from the same components, but we'd still keep multiple calls to the UI thread, one for each view.

Line:131, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/TmfUiRefreshHandler.java -> you could do syncExec(fTask) to get the same result.

-------------------------------------
author: Brenden Conley
date: 2014-07-23 21:36:28.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7908/ : SUCCESS

-------------------------------------
author: Luciana Barry
date: 2014-07-24 14:32:05.000000000

Patch Set 3:

(3 comments)

Line:12, /COMMIT_MSG -> Done

Line:13, /COMMIT_MSG -> I thought it was mainly to avoid spamming the Display queue with Runnables. This only queues one at a time.
I would think it is better to have many short stutterings than a single long one. If the duration of each update is noticeable, you want to avoid blocking normal UI operations like mouse selection.
We can, however, trigger each queued update from the same thread like you had done in the original patch. This avoids creating and starting a new thread for every update.

Line:131, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/TmfUiRefreshHandler.java -> indeed!

-------------------------------------
