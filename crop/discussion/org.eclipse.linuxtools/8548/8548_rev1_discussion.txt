DESCRIPTION

Iostructgen cleanup

Change-Id: I36f5818a8ea49f93e7a1ea68a8e22b1381f80461

Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2012-11-06 21:53:18.000000000

Patch Set 1: (7 inline comments)



Line:7, /COMMIT_MSG -> IOStructGen

Line:219, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/Metadata.java -> no point having stub Javadoc for private methods

Line:14, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/trace/IOstructgenTest.java -> * Unit tests for xxx@xxx.xxx IOStructGen}

Line:20, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/trace/IOstructgenTest.java -> It be worth putting this at the class level in this case.

Line:21, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/trace/IOstructgenTest.java -> any reason why they are not private also?

as in, "private static" :P

Line:277, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/trace/IOstructgenTest.java -> This is pretty sweet. Could this functionality be re-used by other tests?

It could return a specific instance of a trace, so each test gets its own instance. Not sure if that would be best, but just throwing the idea out there. It's not clear in the tests that the "new CTFTrace" call uses the result of the createDummyTrace()

Line:134, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> might be a good occasion to use the interface in the definition, e.g.

private final Map<L,S> = new HashMap<L,S>()

Can't wait for Java 7 to simplify it even more ;)

-------------------------------------
author: Ivy Mitchell
date: 2012-11-06 22:06:04.000000000

Patch Set 1: (1 inline comment)



Line:277, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/trace/IOstructgenTest.java -> No

-------------------------------------
