DESCRIPTION

ctf: Replace Long.compare() with Java 6 compatible method

We still technically support Java 6, and Long.compare() was added in 7.

Change-Id: I565b40bbc11c1c1c3b05a4097cc0e619598d0553
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2013-11-25 18:49:40.000000000

Uploaded patch set 2.

-------------------------------------
author: Ricky Reeves
date: 2013-11-25 18:51:25.000000000

Patch Set 2: Code-Review+1 IP-Clean+1

-------------------------------------
author: Jordon Obrien
date: 2013-11-25 19:01:59.000000000

Patch Set 2:

(1 comment)

Thanks to take care of that.

Line:85, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/Utils.java -> In fact, I don't think it's a good idea to allocate a Long.
This function should be fast.

Thus, a three branch if seems to be the solution.
if (a < b) ...
else if (a > b) ...
else ...

The domain trick works to avoid the "sign" hack.

-------------------------------------
author: Brenden Conley
date: 2013-11-25 19:15:13.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4137/

-------------------------------------
author: Brenden Conley
date: 2013-11-25 19:36:58.000000000

Patch Set 2: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4137/ : FAILURE

-------------------------------------
author: Braxton Mccarthy
date: 2013-11-25 20:09:32.000000000

Patch Set 2: Code-Review-1

(1 comment)

Line:85, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/Utils.java -> Long.valueOf() caches the most used values, but I agree, it's simple enough that we can compare the two values manually. I just copy-pasted what was suggested in Long.compare's Javadoc >.>

I'll have to push a new patch anyway, the TmfExecutor test that can fail once in every 1000 times actually failed...

-------------------------------------
