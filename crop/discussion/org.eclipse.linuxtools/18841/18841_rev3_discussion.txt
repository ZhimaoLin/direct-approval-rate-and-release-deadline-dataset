DESCRIPTION

ctf: Replace Long.compare() with Java 6 compatible method

We still technically support Java 6, and Long.compare() was added in 7.

Change-Id: I565b40bbc11c1c1c3b05a4097cc0e619598d0553
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2013-11-25 20:20:00.000000000

Uploaded patch set 3.

-------------------------------------
author: Jordon Obrien
date: 2013-11-25 20:23:49.000000000

Patch Set 3: Code-Review+1

lgtm for me. It's your call.

But, does -1 and 1 are mandatory?
Otherwise, return b - a?

result < 0, result > 0, result == 0

-------------------------------------
author: Brenden Conley
date: 2013-11-25 20:27:15.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4142/

-------------------------------------
author: Brenden Conley
date: 2013-11-25 20:57:38.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4142/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2013-11-25 21:01:15.000000000

Patch Set 3: Code-Review+1 IP-Clean+1

-------------------------------------
author: Braxton Mccarthy
date: 2013-11-25 21:18:41.000000000

Patch Set 3: Verified+1 Code-Review+2 IP-Clean+1

It's true that the compareTo() javadoc specifies "something lesser than 0" and "something higher than 0", but in practice they are usually implemented with -1, 0, +1.

For example Long.compare() does:
  return (x < y) ? -1 : ((x == y) ? 0 : 1);

Wouldn't "b - a" underflow if b is very small and a very big, giving a positive number?

-------------------------------------
