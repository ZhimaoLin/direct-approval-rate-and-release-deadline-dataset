DESCRIPTION

TMF: Add XML state provider schema definition and test file

This patch adds to the XSD the schema definition for a full XML-defined state
provider. The valid test file is also augmented to use that definition.

Change-Id: Ib75082f04fae69f62f6c7990ee8c92ea4cc042e5
Signed-off-by: Aryana Jones xxx@xxx.xxx
Signed-off-by: Ayanna Reed xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2014-01-20 21:26:47.000000000

Uploaded patch set 3.

-------------------------------------
author: Ayanna Reed
date: 2014-01-20 22:05:02.000000000

Patch Set 3: Code-Review+1

lgtm

-------------------------------------
author: Annalise Jimenez
date: 2014-01-20 22:21:06.000000000

Patch Set 3: Code-Review-1

(2 comments)

I was re-working the next patch inline and here are some reflexions on this one.

Line:90, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> why do we want a stateAssignation here? If we use a stateChange instead, we can have many levels of if then else? And we can remove the stateAssignation after all

Line:121, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> I'll have to review this further, but the "condition", "conditionSingle", "conditionMultiple" does not feel natural... conditionSingle contains condition Multiple. 

Maybe 
condition => conditionAtomic,
conditionSingle => condition,
conditionMultiple => ...conditionMultiple?

-------------------------------------
author: Brenden Conley
date: 2014-01-20 22:23:39.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5114/

-------------------------------------
author: Braxton Mccarthy
date: 2014-01-20 22:30:37.000000000

Patch Set 3:

(1 comment)

Line:121, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> It does feel unnatural. <condition> should be only one thing. What you have in Ant for example:

  <and>
    <condition 1>
    <condition 2>
  </and>

  <or>
    <condition 3>
    <condition 4>
  </or>

-------------------------------------
author: Brenden Conley
date: 2014-01-20 23:12:58.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5114/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2014-01-21 00:56:12.000000000

Patch Set 3:

(1 comment)

Line:121, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> Alex, this is what it actually looks like in XML (see the test_valid.xml file). My comment is more on the terms used for those types in the XSD. But those terms never appear in the resulting XML, so it's more an internal question.

-------------------------------------
author: Ayanna Reed
date: 2014-01-21 01:01:10.000000000

Patch Set 3:

(2 comments)

Line:90, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> Why do we want multiple level of if then else ? Give me an example ?

Line:121, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> As for stateAssignation, we discuss about the wrong things. condition, conditionSingle or conditionMultiple are TYPE of markup. It's not the NAME of a such markup.

So maybe you can name conditionSingle by "operator with a single element" (ie : not) and conditionMultiple by "operator with 2 or more elements" (ie : and, or).

This syntaxe is directly inspire by Ant.

an basic example :

<if>
   <and>
       <not>
           <condition> 
           </condition>
       </not>
       <condition> 
       </condition>
   </and>
</if>

-------------------------------------
author: Annalise Jimenez
date: 2014-01-21 14:08:17.000000000

Patch Set 3:

(1 comment)

Line:90, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> I don't have an example, but if then else gives you 2 possible outcomes while multiple levels allow more possible outcomes, like

if (fieldX == valueA)
then something
else
if (fieldX == valueB)
then something else
else something else again

-------------------------------------
author: Annalise Jimenez
date: 2014-01-21 17:23:33.000000000

Patch Set 3:

(1 comment)

yet another comment to change all this!

Line:145, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> From looking at the code, we could enforce this element a little more.

For instance, it seems it is either constant, eventField or location, these attributes can't be grouped, right?

Also, it makes sense to have stateAttributes under this element only if the type is query.  Constants, event fields and locations just require a field value.

This element is too permissive.

-------------------------------------
author: Annalise Jimenez
date: 2014-01-21 19:34:30.000000000

Patch Set 3:

(1 comment)

Line:112, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> Ok so other question, now that I'm reviewing the stateAttribute type for more severe schema definition. How does this eventField here differ with the one from stateAttribute.

Knowing that now stateAttribute is just a group and the actual element is a choice of 
<constant><eventField><query><location>, the eventField element now appear twice at this same level. Can the one from stateAttribute be used as is?

-------------------------------------
author: Ayanna Reed
date: 2014-01-21 20:17:42.000000000

Patch Set 3:

(2 comments)

Line:90, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> You have a example in the test_valid.xml

Line:112, lttng/org.eclipse.linuxtools.tmf.analysis.xml.core/src/org/eclipse/linuxtools/tmf/analysis/xml/core/module/xmldefinition.xsd -> stateAttribute is a path in the state system. 
We can use the data of a eventfield to specified the path.
For example when you want to acces /threads/10, you can use the event field tid to have 10.
<attribute constant="THREADS">
<attribute eventfield="tid">
So in a condition we can test : /threads/10 (as a value in the state system) == something, 

But <eventfield> is used to compare directly the state system.
For example if you want a condition that use only the eventfield (tid == 10). It's not linked with a path or a value in the state system.

-------------------------------------
