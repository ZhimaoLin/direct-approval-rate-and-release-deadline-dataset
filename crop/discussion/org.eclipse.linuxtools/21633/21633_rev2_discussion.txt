DESCRIPTION

LTTng: CPU usage analysis from the LTTng kernel trace

This analysis creates a new state system to save the total time spent on each
CPU by the different threads. It then uses it, along with the LTTng kernel
state system to compute CPU usage statistics in a time range.

Change-Id: Ia60e95c3bace646477aef06d58bdb7ed64c32bd4
Signed-off-by: Francis Mclean xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2014-02-25 16:12:07.000000000

Uploaded patch set 2.

-------------------------------------
author: Dax Sharp
date: 2014-02-25 17:04:39.000000000

Patch Set 2:

(3 comments)

I like this. 

I'm still not a big fan of the interpolateCount function prototype, though. It's so easy to mix up arguments.

Line:50, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuUsageAnalysis.java -> This string is not used?

Line:104, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuUsageAnalysis.java -> Maybe we should remove this FIXME if we don't intend to do it anyway.

Line:46, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuStateProvider.java -> Maybe we should bump that down to 0. I had bumped it to 1 during development.

-------------------------------------
author: Annalise Jimenez
date: 2014-02-25 17:27:57.000000000

Patch Set 2:

(3 comments)

For the interpolateCount, you're right, I had to do a few trials and errors to have it right. Do you have any suggestions? I guess we could javadoc it to make clear what each parameter means. That should do it!

Line:50, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuUsageAnalysis.java -> It is used in the viewers

Line:104, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuUsageAnalysis.java -> Actually, when we have streaming traces, we will have to do this. I'm just waiting for a few examples of how to do this to actually do it.

Line:46, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuStateProvider.java -> Version 0 sounds a bit beta 0.9 :p

-------------------------------------
author: Brenden Conley
date: 2014-02-25 19:11:46.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5671/

-------------------------------------
author: Brenden Conley
date: 2014-02-25 20:07:01.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5671/ : SUCCESS

-------------------------------------
author: Ivy Mitchell
date: 2014-03-11 19:41:29.000000000

Patch Set 2: Code-Review-1

(1 comment)

very soft -1 based on an opinion

Line:104, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuUsageAnalysis.java -> I think this should be done now, we will support streaming very soon.

-------------------------------------
author: Annalise Jimenez
date: 2014-03-11 19:54:32.000000000

Patch Set 2:

(1 comment)

Line:104, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuUsageAnalysis.java -> Actually, I was thinking along the lines of "Let someone else do it"! But if it must be done... Any state system already streaming-ready?

-------------------------------------
author: Ivy Mitchell
date: 2014-03-11 20:34:21.000000000

Patch Set 2:

(1 comment)

replied

Line:104, lttng/org.eclipse.linuxtools.lttng2.kernel.core/src/org/eclipse/linuxtools/lttng2/kernel/core/cpuusage/LttngKernelCpuUsageAnalysis.java -> control flow, resource, statistics.

-------------------------------------
