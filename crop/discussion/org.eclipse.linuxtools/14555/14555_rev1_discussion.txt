DESCRIPTION

TMF: It's now possible to do not display times & duration on TimeGraph Tooltips

Signed-off-by: Bryce Kline xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-07-15 08:51:17.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2911/

-------------------------------------
author: Brenden Conley
date: 2013-07-15 09:09:13.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2911/ : SUCCESS

-------------------------------------
author: Luciana Barry
date: 2013-07-29 15:34:24.000000000

Patch Set 1: Code-Review-1

(2 comments)

I wonder if we would not rather have complete control over the tool tip contents, by perhaps adding some constants that could be returned in the tool tip info map and used by the tool tip handler to replace with built-in information?

There would be no default tool tip information (and no tool tip) unless specifically included in the info map by the presentation provider.

Line:170, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/widgets/timegraph/ITimeGraphPresentationProvider.java -> xxx@xxx.xxx 3.0

Line:149, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/widgets/timegraph/TimeGraphPresentationProvider.java -> Should xxx@xxx.xxx 3.0

-------------------------------------
author: Bryce Kline
date: 2013-07-29 16:16:48.000000000

Patch Set 1:

> I wonder if we would not rather have complete control over the tool tip contents,
> by perhaps adding some constants that could be returned in the tool tip info map
> and used by the tool tip handler to replace with built-in information?
> 
> There would be no default tool tip information (and no tool tip) unless
> specifically included in the info map by the presentation provider.


OK for the complete control over the tooltip content. 

However, I'm not sure to understand your proposal.
If I understand well, you want to test some special values on the returned map ?
For example:

----------8<------------

String wayToManageTooltip = map.remove("HOW_TO_MANAGE_TOOLTIP_MAP");
if (wayToManageTooltip == null) {
  // backward-compatible way to manage tooltip 
  // display line type, map content, times and durations.
  ...
} else if (wayToManageTooltip == "COMPLETE") {
  // display only user tooltips
  ...
} else if (wayToManageTooltip == "NO TIME") {
  // do not display times ad durations
  // display line type, map content
  ...
  ...
}

----------8<------------

Is it really what you have in mind ?

-------------------------------------
author: Luciana Barry
date: 2013-07-29 21:30:05.000000000

Patch Set 1:

What I'm thinking about is something like:

    public Map<String, String> getEventHoverToolTipInfo(ITimeEvent event) {
        Map<String, String> map = new LinkedHashMap<String, String>();

        map.put(ITimeGraphToolTip.NAME, null);
        map.put(ITimeGraphToolTip.STATE, null);
        map.put("My Info Name", "My Info Value");
        map.put(ITimeGraphToolTip.TIME, null);

        return map;
    }

The tool tip handler would automatically replace those nulls with the correct value based on built-in code.

I also have an idea that if you use one of those constants, if you put a string in place of the null it could replace the default name in the tool tip while still showing the built-in value. But that's a bit weird, and would have to be explained clearly in the JavaDoc.

-------------------------------------
author: Bryce Kline
date: 2013-07-30 07:41:07.000000000

Patch Set 1:

I don't like to have functions with such implicit side effects.
I prefer having an *explicit* way to control tooltips.

Therefore, I prefer to maintain adding a new function in the class.

-------------------------------------
author: Bryce Kline
date: 2013-10-09 11:31:31.000000000

Patch Set 1:

ping ?

-------------------------------------
author: Ricky Reeves
date: 2013-10-10 12:47:27.000000000

Patch Set 1:

Hi Xavier

sorry for the delay. Patrick is currently out of office. What I remember him saying was that he was ok with your proposal after discussing it with you. So, please update the patch with his comments about xxx@xxx.xxx flags and then I can approve it.

Meredith Scott

-------------------------------------
