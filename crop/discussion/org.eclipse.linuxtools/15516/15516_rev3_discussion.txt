DESCRIPTION

Tmf: Use an abstract class for request scheduler

Now we can have many schedulers and choose between them.

Change-Id: I56f413d868944d8d3c9324a2be92fc7c732c1890
Signed-off-by: Kelsie Blackwell xxx@xxx.xxx

COMMENTS

author: Kelsie Blackwell
date: 2013-08-19 15:35:58.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2013-08-19 15:36:03.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/3217/

-------------------------------------
author: Brenden Conley
date: 2013-08-19 15:51:10.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/3217/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-09-24 17:18:01.000000000

Patch Set 3: Code-Review-1

Sounds good, more modularity is always welcome. Only comment is I would rework the class names a bit:

The abstract method should be called AbstractTmfRequestScheduler.

"OS Scheduler" is okay-ish, maybe we'd need to explain more in the class Javadoc that it simply defers the scheduling to the operating system by using one worker thread per request.

And the TmfRequestScheduler should have a unique name to differentiate it. Not sure what would be good though...

-------------------------------------
