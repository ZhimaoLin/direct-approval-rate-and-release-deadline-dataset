DESCRIPTION

[WIP] tmf: only dispatch events to relevant event providers 

When coalescing request across event providers (e.g. Experiment and
traces) then the requests done on the traces are not interested
in events from other requests. Before this patch each implementation
of handleData() had to do this.

However, the implementation doesn't seem to scale well when having
many traces in an experiment. It needs to be profile if this actually
improves the overall performance in comparision to not coalesce
requests across providers.

Change-Id: I1482c79ef3a0359b9b3526212c4555b57c102650
Signed-off-by: Ricky Reeves <Meredith xxx@xxx.xxx


COMMENTS

author: Ricky Reeves
date: 2014-03-21 15:22:56.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2014-03-21 16:20:29.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6057/

-------------------------------------
author: Brenden Conley
date: 2014-03-21 17:13:10.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6057/ : SUCCESS

-------------------------------------
author: Ivy Mitchell
date: 2014-03-27 01:08:04.000000000

Patch Set 2: IP-Clean+1

(2 comments)

This is a great patch, it just needs a little fine tuning. 

I think if we pre-cache all the parent traces, we can get a noticeable performance boost imo.

Line:272, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> The getChildren method is not cached, it is re-created at every event. this means that is will slow down by O(n) depending on the number of traces in the eperiment. This call alone is O(n)

Line:273, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> This call is also O(n*log(n)) each provider should probably cache a set of traces and then call hashset<ITmfTrace>.contains(event.getTrace) and we should cache the hash of TmfTrace.hashcode(). That is probably a way to speed things up

-------------------------------------
