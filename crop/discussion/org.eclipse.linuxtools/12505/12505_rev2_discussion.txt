DESCRIPTION

Centralize execution of systemtap

...so it can be mocked for testing.

Change-Id: I80d797251f6625ea5217f6c0b06790593e38d800


COMMENTS

author: Brenden Conley
date: 2013-05-06 15:59:37.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2192/ 

-------------------------------------
author: Octavio Lucero
date: 2013-05-06 16:00:09.000000000

Patch Set 2:

Rebased to trigger a hudson build.

-------------------------------------
author: Brenden Conley
date: 2013-05-06 16:25:43.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2192/ : SUCCESS

-------------------------------------
author: Octavio Lucero
date: 2013-05-06 17:30:40.000000000

Patch Set 2: I would prefer that you didn't submit this

Change looks good, but some class and function level javadoc should be added.

-------------------------------------
author: Erick Ross
date: 2013-05-07 08:13:41.000000000

Patch Set 2: (1 inline comment)



Line:26, systemtap/org.eclipse.linuxtools.systemtap.structures/src/org/eclipse/linuxtools/systemtap/structures/process/RemoteSystemtapProcess.java -> Why not have single systemtap process that relies on stap --remote xxx@xxx.xxx as described here https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Developer_Guide/systemtap.html ?
Is there something we gain by relying on jsch ? By using stap provided remote execution we shouldn't need to get into that many details regarding connection or I'm missing something.

-------------------------------------
author: Kamila Nguyen
date: 2013-05-07 14:18:16.000000000

Patch Set 2: (1 inline comment)



Line:26, systemtap/org.eclipse.linuxtools.systemtap.structures/src/org/eclipse/linuxtools/systemtap/structures/process/RemoteSystemtapProcess.java -> That is a good idea. It'll give it a try

-------------------------------------
author: Kamila Nguyen
date: 2013-05-07 18:02:14.000000000

Patch Set 2: (1 inline comment)



Line:26, systemtap/org.eclipse.linuxtools.systemtap.structures/src/org/eclipse/linuxtools/systemtap/structures/process/RemoteSystemtapProcess.java -> Turns out that --remote compiles the script locally then runs the module remotely. This means that you have to have a local kernel install matching the remote kernel.
you can use --use-server to compile remotely but that requires that the remote server be set up as a systemtap compile server. Setting up a compile server is a bit elaborate https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Developer_Guide/systemtap.html#compileserver

-------------------------------------
author: Erick Ross
date: 2013-05-07 18:16:25.000000000

Patch Set 2: (1 inline comment)

My suggestion happens to not be working so it's only Camilo's requests to be fixed now.

Line:26, systemtap/org.eclipse.linuxtools.systemtap.structures/src/org/eclipse/linuxtools/systemtap/structures/process/RemoteSystemtapProcess.java -> Well, it looked nice from first side.

-------------------------------------
