DESCRIPTION

[RFC] tmf: Remove start/endSyncSignals

With the upcoming auto-coalescing of event requests, callers will
not need to manually manage the start/end times of the coalescing
periods.

Change-Id: I3501547db5010e2843c9547b86a86efca513831b
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-12-05 01:47:16.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4419/

-------------------------------------
author: Brenden Conley
date: 2013-12-05 02:29:14.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4419/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2013-12-05 15:06:40.000000000

Patch Set 1: Code-Review-1

I think it's a good idea to keep the possibility to coalesce requests upon reception of a signal. This is transparent to the developer. We also need this for signals that are not coalesced with the new request aggregator based on a time. 

However, I think we can get away with removing the notify pending request. But I think we should do that once we are confident about the timer based solution.

-------------------------------------
author: Braxton Mccarthy
date: 2013-12-05 23:13:05.000000000

Patch Set 1:

Couldn't the "end synch" signal conflict with the new timer task? For example, if requests are being queued due to a signal handler, but while it's being processed a timer task expires, so it calls provider.fireRequest(), won't it also launch the requests that were being queued by the signal handler?

-------------------------------------
author: Ricky Reeves
date: 2014-01-09 02:37:10.000000000

Patch Set 1:

Sorry for the late replay, I noticed your answer today. 

I think the timer should only be started after the endSynch when the fireRequest() is triggered. Then it is possible to add new requests during the wait time. If we do like this there is no conflict.

Start/endSynch approach can a also be used to make sure that one signal was processed by all signal handlers before issuing another signal. Another reason why I don't want to remove the signals.

-------------------------------------
author: Ricky Reeves
date: 2014-02-25 12:16:18.000000000

Patch Set 1:

Could you please abandon this patch since the signals will stay?

-------------------------------------
author: Braxton Mccarthy
date: 2014-02-25 18:41:44.000000000

Abandoned

-------------------------------------
