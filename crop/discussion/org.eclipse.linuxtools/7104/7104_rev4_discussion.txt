DESCRIPTION

ctf: Add time scaling support

Useful if your clock is not == 1.0 ghz

Change-Id: Ie81bfa6b4379d5cbe5b88abae22618bc5a08dc3f
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2012-08-07 20:07:20.000000000

Uploaded patch set 4.

-------------------------------------
author: Braxton Mccarthy
date: 2012-08-07 20:09:18.000000000

Patch Set 4: Fails

Rebased on latest -kepler branch, small fixes...

Although it breaks the StateSystemFullHistoryTest. The expected and actual timestamps now differ by 7-8 nanoseconds. We should see with Matthew if this is intended or not.

-------------------------------------
author: Janet Compton
date: 2012-08-09 19:48:28.000000000

Patch Set 4:

I see that you perform float to integer conversions to get timestamps from clock ticks and frequency. This triggers some memories from my numerical analysis courses...

Before you commit this, I would like to have a quick chat and a few clarifications about how the approximation errors are mitigated.

Otherwise, looks good.

-------------------------------------
author: Braxton Mccarthy
date: 2012-08-13 15:09:39.000000000

Patch Set 4: (1 inline comment)

Just a note as to not forget, shouldn't the scale be part of the CtfClock, and not the trace itself?

Line:699, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> So a long gets casted to a double, then to a Long, then to a double again for the division? Rounding errors galore! ;)

-------------------------------------
