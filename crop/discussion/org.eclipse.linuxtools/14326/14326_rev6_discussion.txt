DESCRIPTION

lttng: Fix Resources view event list

With the fix to the event iterator (42acdc2), it is no longer required
to add 'null' events in the zoomed event list to hide underlying events
in the full range event list. This simplifies the building of event list
in the Resources view.

Adds an EventList class to properly handle the full range split events
at the borders of the zoomed event list.

Adds an interface to TimeEvent to split an event while keeping it's
class type and value.

Change-Id: I6b3058227e64e456601b40fa2ea6c0afe3886f14
Signed-off-by: Luciana Barry xxx@xxx.xxx


COMMENTS

author: Luciana Barry
date: 2013-07-18 14:10:47.000000000

Uploaded patch set 6.

-------------------------------------
author: Brenden Conley
date: 2013-07-18 14:10:52.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2940/

-------------------------------------
author: Brenden Conley
date: 2013-07-18 14:25:36.000000000

Patch Set 6: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2940/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-07-18 18:25:20.000000000

Patch Set 6: Verified+1 Code-Review+2 IP-Clean+1

I get a bit more "fake" rectangles when scrolling (easier to see with the IRQ states in the Resource View), but I think we don't really care about correctness while scrolling.

It would be nice to have pixel-perfect views both when static and while moving, but I don't see how we can do it without using a real graphics API like OpenGL.

-------------------------------------
author: Luciana Barry
date: 2013-07-25 14:38:36.000000000

Patch Set 6: Verified-1

Having the split event end or start at the border of the zoom range affects the outcome of the "Select Previous Event" and "Select Next Event" actions in an undesirable way.

A new solution is proposed. If the query range starts or ends with a null state, a NullTimeEvent will be included at the beginning and/or the end of the event list. The NullTimeEvent will have the same time and duration as the null state.

This will ensure that an underlying full range event is split at the border of the null state. This also has the nice benefit that when scrolling we won't see a temporary aggregated state that ends at the arbitrary zoom border, but instead it will end at the border of an actual state.

-------------------------------------
