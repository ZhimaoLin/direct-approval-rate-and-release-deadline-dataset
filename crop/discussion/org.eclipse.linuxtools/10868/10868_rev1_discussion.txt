DESCRIPTION

[TMF] Add support for 64-bit integers in the history tree

Change-Id: Ib37fc52bcb3e032bb671ba836023281f4c4f0b01
Signed-off-by: Francis Mclean xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-03-05 19:45:45.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/1582/ 

-------------------------------------
author: Brenden Conley
date: 2013-03-05 19:45:48.000000000

Patch Set 1: Fails

Build Failed 

https://hudson.eclipse.org/sandbox/job/linuxtools/1582/ : FAILURE

-------------------------------------
author: Dax Sharp
date: 2013-03-05 19:51:57.000000000

Patch Set 1: (2 inline comments)

I left some comments about comments I should have modified. (yo dawg)

Line:247, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/statesystem/backends/historytree/HTInterval.java -> This comment is wrong. There are no additional bytes for a long entry.

Line:35, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statevalue/ITmfStateValue.java -> This should be a (2)

-------------------------------------
author: Braxton Mccarthy
date: 2013-03-05 19:59:41.000000000

Patch Set 1: I would prefer that you didn't submit this

(2 inline comments)

Since I'm in 3-4 levels deep of git stash'es I will wait a bit before pulling it locally, but it is definitely a nice addition!

Some superficial comments, also, did you forget to 'git add' a new LongStateValue or something of the like?

Line:293, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateSystemPushPopTest.java -> You should query at "8" here, one of the goals is to make sure that the state changes are effective immediately.

Line:239, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/statesystem/backends/historytree/HTInterval.java -> I don't have that code close at hand, but is byteArrayToWrite defined here? We shouldn't need to write the raw bytes here, you can do putLong(value). We know the size will be the same every time for this particular type.

I'd say you don't even have to add a 0'ed byte in this case *gashes teeth*

-------------------------------------
author: Dax Sharp
date: 2013-03-05 20:25:54.000000000

Patch Set 1: (2 inline comments)

See my inline comments for details.

Line:293, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateSystemPushPopTest.java -> Done

Line:239, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/statesystem/backends/historytree/HTInterval.java -> I agree that the size is constant. I was using the "sizeofstring" as an indicator that the value will have to be written in the "string" section.

Since the long state value resembles more the string state value than the integer state value, I kept the bytearray conversion. The only difference is that the string implementation adds the length and the trailing 0 while the long implementation writes the bytearray directly.

I felt like this method of doing it has more genericity if we ever want to support a larger amount of different types that require the use of the string-section.

-------------------------------------
