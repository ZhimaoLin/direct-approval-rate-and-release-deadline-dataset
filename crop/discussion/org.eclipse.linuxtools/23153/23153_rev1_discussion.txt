DESCRIPTION

TMF: Add possibility to add new module listener to analysis manager

Also cleanup the source and output initialization

Change-Id: I61f363a798734757f9ac3d991a34fd0c13ee6143
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2014-03-10 21:14:52.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-03-10 21:57:20.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5852/

-------------------------------------
author: Brenden Conley
date: 2014-03-10 22:39:17.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5852/ : SUCCESS

-------------------------------------
author: Kaeden Tapia
date: 2014-03-11 22:48:21.000000000

Patch Set 1:

(1 comment)

Line:59, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisManager.java -> I think it's better to synchronize on the individual lists instead of the whole TmfAnalysisManager object. Do you agree?

-------------------------------------
author: Annalise Jimenez
date: 2014-03-12 15:25:14.000000000

Patch Set 1:

(1 comment)

Line:59, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisManager.java -> Is it? From what I read, statement synchronization is more complex. Especially since the synchronized part affects full methods. That said, those methods are are initialization methods typically called only once, so I don't think there is a "better" solution.

-------------------------------------
author: Kaeden Tapia
date: 2014-03-12 18:16:45.000000000

Patch Set 1:

(4 comments)

Line:49, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisManager.java -> This needs to be synchronized because of fSources

Line:59, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisManager.java -> I feel like more granular locks are better because they are more explicit about what they protect and potentially faster (less waiting on unrelated things). But after discussing with Meredith Scott, he didn't feel strongly about it so I'm fine with this way. But it needs to be consistent (see other comments).

Line:102, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisManager.java -> This needs to be synchronized because of fSources / registerModuleSource / initialize

Line:222, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAnalysisManager.java -> This needs to be synchronized because fListeners / addNewModuleListener

-------------------------------------
