DESCRIPTION

ctf: Fix seek bug with multi-threaded access

Store the map of event definitions per stream reader, not per
trace. This allows multiple parallel stream readers to work
correctly (same with multiple CtfIterator's).

Fixes bug #405411.

Change-Id: I43e4e05b5d8313410905e90cb23badbd1d54b9f8
Signed-off-by: Ivy Mitchell xxx@xxx.xxx
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2013-06-25 16:00:45.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-06-25 16:00:50.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2758/

-------------------------------------
author: Brenden Conley
date: 2013-06-25 16:15:12.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2758/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2013-06-25 17:42:20.000000000

Patch Set 2: Code-Review-1

(1 comment)

Line:291, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> It's a little harsh to return null because the deprecated method should work as the original implementation, right? Can't this method read the StreamInputReader and get the information from there?

-------------------------------------
author: Braxton Mccarthy
date: 2013-06-25 22:16:58.000000000

Patch Set 2:

(1 comment)

Line:291, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> I'm not super familiar with this code, but from what I can see there's no direct way to get a specific StreamInputReader from the trace or from the StreamInput.

IMHO, it would be simpler to just remove this method and push this to the 3.0 branch instead. What do you guys think?

-------------------------------------
author: Ricky Reeves
date: 2013-06-26 11:23:28.000000000

Patch Set 2:

(1 comment)

Line:291, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> If it's not possible I'm ok with the fix. This code is probably only used by us. I'll check with Matthew though, to confirm.

In any case, I think we should keep it in 2.x because it's a important fix especially when using the soon to be delivered new Scheduler. In 3.0 we can remove the deprecated method.

-------------------------------------
