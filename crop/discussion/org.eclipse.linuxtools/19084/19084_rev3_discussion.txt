DESCRIPTION

Systemtap: Pre-run autosave for projectless scripts.

When a Systemtap script that lacks a parent project is run,
have that script be immediately saved before the run begins.

This adds to the functionality of fa6613e, which only saves
scripts that belong to a project. This improvement also fixes a
bug introduced in that patch which caused a NullPointerException
when running a projectless script.

This patch also fixes a bug in fa6613e that allowed non-*.stp
files to be run as Systemtap scripts.

Change-Id: Ib0cc475e882ad9775fdaca44b1119089ca65638c
Signed-off-by: Landon Wilkins xxx@xxx.xxx


COMMENTS

author: Landon Wilkins
date: 2013-11-29 19:38:45.000000000

Uploaded patch set 3.

-------------------------------------
author: Landon Wilkins
date: 2013-11-29 19:41:15.000000000

Patch Set 3:

This patch set executes file autosaves in the UI thread, so that out-of-workspace files may be saved before a run regardless of how the run was started.

-------------------------------------
author: Brenden Conley
date: 2013-11-29 19:41:32.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4302/

-------------------------------------
author: Nathanael Holden
date: 2013-11-29 19:48:30.000000000

Patch Set 3: Code-Review-1

-------------------------------------
author: Nathanael Holden
date: 2013-11-29 19:52:10.000000000

Patch Set 3:

(1 comment)

Line:100, systemtap/org.eclipse.linuxtools.systemtap.ui.ide/src/org/eclipse/linuxtools/internal/systemtap/ui/ide/actions/RunScriptHandler.java -> (Had to move this to newer patchset)

If you're launching from Run Configurations then you have the path to the script (and it must exist), so the only responsibility is to execute it. In the context of an EditorPart being selected it could still be argued that the file still shouldn't be saved as the user has only requested it be executed, but I have nothing against saving it.

Overall it's best to avoid doing things like findTargetEditor does when it's possible.

-------------------------------------
author: Brenden Conley
date: 2013-11-29 20:19:57.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4302/ : SUCCESS

-------------------------------------
author: Landon Wilkins
date: 2013-11-29 20:26:54.000000000

Patch Set 3:

(1 comment)

Line:100, systemtap/org.eclipse.linuxtools.systemtap.ui.ide/src/org/eclipse/linuxtools/internal/systemtap/ui/ide/actions/RunScriptHandler.java -> I did things this way so that files are always saved before they are run, rather than only in certain cases. It's possible to launch an identical run with or without referencing an EditorPart (ex. editor context menu vs RC menu), and if a script is only saved only when referencing an editor, it may be confusing for users (as it was for me) to know when they need to manually save a file before running it.

Also, considering other Eclipse plugins (like the Java IDE & PyDev) always save files before they're run, I think it would be inconsistent if Systemtap IDE didn't do the same, and with the same degree of consistency. I agree that searching through every editor isn't that efficient, but it guarantees that files outside the workspace will be saved if they are open.

When running a script that's inside the workspace, though, its entire parent project now gets saved by the standard launch procedure, so all of the work done in RunScriptHandler for saving files is really only for out-of-workspace files. Having a whole separate procedure for this may be seen as a bit of an edge case, but since all the Stap IDE needs to run a script is a text .stp file, I think it's a good feature to have for users who don't feel like making a new project for their scripts.

-------------------------------------
author: Nathanael Holden
date: 2013-11-29 21:27:28.000000000

Patch Set 3: Verified+1 Code-Review+1 IP-Clean+1

This change works, but the added feature of asking the user to save a file when the launch configuration is open seems excessive. Especially when references to the editor are already accessible.

With that said, this is an improvement, so might as well get this in and improve in the future.

-------------------------------------
author: Nathanael Holden
date: 2013-11-29 21:48:07.000000000

Patch Set 3: Code-Review+2

Approved!

-------------------------------------
author: Gerrit Code Review
date: 2013-11-29 21:48:08.000000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
author: Nathanael Holden
date: 2013-11-29 21:48:34.000000000

Patch Set 4: Patch Set 3 was rebased

-------------------------------------
