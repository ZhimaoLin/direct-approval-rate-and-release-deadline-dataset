DESCRIPTION

tmf: Re-enable the unit tests depending on CTF traces

And skip them if the traces are not available.

Also added a new exported test file manager, so that other
plugin tests (like the lttng2 ones) can re-use it.

Change-Id: I71cffad8f68089f3e88582e436a74bb2ec57c897
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-02-13 22:30:58.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/1373/ 

-------------------------------------
author: Brenden Conley
date: 2013-02-13 22:47:58.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/1373/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2013-02-14 13:30:27.000000000

Patch Set 1:

Why is static class CtfTmfTestTraces needed? Couldn't we just use class CtfTestTraces directly as it is done in test class CtfTmfTraceTest?

-------------------------------------
author: Ricky Reeves
date: 2013-02-14 13:42:23.000000000

Patch Set 1:

Follow up to last comment:
I'm ok with having a wrapper class for accessing the test files. Please make sure that all test classes in this test plugin are using the wrapper (i.e. update also CtfTmfTraceTest)

-------------------------------------
author: Braxton Mccarthy
date: 2013-02-14 15:57:23.000000000

Patch Set 1:

CtfTmfTestTraces is to wrap the test traces into a "CtfTmfTrace", which is only available in tmf.core (in ctfadaptor). I think you figured that one out ;)

One (or two, iirc) of the test classes in tmf.core.tests do use the CtfTestTraces, from ctf.core, because they only need the path to the trace, no the CtfTmfTrace object itself. That's why I was using CtfTestTraces directly.

We could also expose the tracePaths through CtfTmfTestTraces, so that tests in tmf.core.tests can all use that class. Would you prefer this solution?

-------------------------------------
author: Ricky Reeves
date: 2013-02-14 16:10:32.000000000

Patch Set 1:

Yes, I would prefer that. I would be more consistent

-------------------------------------
