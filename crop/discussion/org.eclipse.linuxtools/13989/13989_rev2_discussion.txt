DESCRIPTION

RPM: download and prepare sources

Download and Prepare sources command added to
RPM UI Editor. Need to create tests to make sure
that they work.

Change-Id: I3373e8738c1a98040bb6836808416604b1910a45


COMMENTS

author: Tori Trevino
date: 2013-06-24 13:05:09.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-06-24 13:07:55.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2749/ 

-------------------------------------
author: Brenden Conley
date: 2013-06-24 13:32:40.000000000

Patch Set 2: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2749/ : SUCCESS

-------------------------------------
author: Erick Ross
date: 2013-06-24 14:13:08.000000000

Patch Set 2: (6 inline comments)



Line:15, rpm/org.eclipse.linuxtools.rpm.core/META-INF/MANIFEST.MF -> Never export internal package.

Line:21, rpm/org.eclipse.linuxtools.rpm.ui.editor/src/org/eclipse/linuxtools/internal/rpm/ui/editor/actions/messages.properties -> Avoid trailing whitespaces.

Line:28, rpm/org.eclipse.linuxtools.rpm.ui.editor/META-INF/MANIFEST.MF -> Please stay away from Import-Package but use Require-Bundle instead. The point is that Require-Bundle is automatically translated to rpm level while import-package is not. Although Import-Package is the recommended way in pure OSGi when dealing with RPM Require-Bundle is the one that allows automation.

Line:39, rpm/org.eclipse.linuxtools.rpm.ui.editor/plugin.properties -> I would prefer to have the same key used for Download Sources/Prepare Sources everywhere. There is no point in having 2-3 keys for the same string.

Line:41, rpm/org.eclipse.linuxtools.rpm.ui.editor/src/org/eclipse/linuxtools/rpm/ui/editor/utils/RPMUtils.java -> This would better fit in SpecfileParser class as additional parse(IFile) method.

Line:52, rpm/org.eclipse.linuxtools.rpm.ui.editor/src/org/eclipse/linuxtools/rpm/ui/editor/utils/RPMUtils.java -> Never print stack to syserr. In case this is used in a single place it might be better if there is no utility method or the utility method throws all the exceptions so they can be properly handled. If printed like this there will be nothing visible to users unless they debug eclipse.

-------------------------------------
