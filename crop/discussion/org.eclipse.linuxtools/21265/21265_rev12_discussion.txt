DESCRIPTION

TMF: Add development trace in the TMF developers tools

This development trace uses a custom XML definition and converts the custom XML
event to a TmfEvent, where the fields and their values are defined through the
XML fields. To illustrate, here is the content of each type of event:

CustomXmlEvent: fields = "a | b", values = "1 | abd"

would transpose to this

Development trace: a = 1, b = "abd"

This type of trace will be useful to unit test analysis involving LTTng kernel
and UST traces for instance.

Change-Id: I41ac7206c1a54088c998d551a4174f2184b05f5b
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2014-07-04 19:23:27.000000000

Patch Set 12:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7610/

-------------------------------------
author: Brenden Conley
date: 2014-07-04 20:12:04.000000000

Patch Set 12: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7610/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2014-07-09 21:22:08.000000000

Patch Set 12:

(8 comments)

Some quick comments.

Also, shouldn't this be internal? ;)

Line:10, /COMMIT_MSG -> events to TmfEvents

Line:19, /COMMIT_MSG -> analyses

Line:49, lttng/org.eclipse.linuxtools.tmf.core/plugin.xml -> Eww, do we really want a new category/trace type that will show up for EVERYONE using the framework/RCP/etc. ?

I'm wondering if this shouldn't go in the analysis plugins instead.

Line:61, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/trace/development/DevelopmentTraceTest.java -> I see two spaces

Line:93, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/trace/development/TmfXmlDevelopmentTrace.java -> space before {

if you have only one statement between the () you don't need the ;  but it doesn't hurt.

Line:30, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/trace/development/TmfXmlDevelopmentTrace.xsd -> :O

Line:43, lttng/org.eclipse.linuxtools.tmf.core/META-INF/MANIFEST.MF -> "development" is a bit generic, doesn't mean much. How about "devtrace" ?

File Comment: lttng/org.eclipse.linuxtools.tmf.core.tests/testfiles/development_traces/invalid/xmlFile -> .xml ?

-------------------------------------
author: Braxton Mccarthy
date: 2014-07-09 21:37:06.000000000

Patch Set 12: Code-Review-1

-------------------------------------
author: Annalise Jimenez
date: 2014-07-10 15:14:59.000000000

Patch Set 12:

(3 comments)

What could be done is...

1) Put this trace internal in the tmf.core plug-in and make it x-friend with tmf.core.tests and tmf.analysis.xml.core

2) in tmf.core.tests, add a public stub trace class extending this one that can then be re-used in all unit test plugins

3) Add the category and tracetype in the tmf.analysis.xml.core's plugin.xml file so that only this plug-in will expose it as a trace type (on the UI side, the only use we have of it is to test the XML analyses and views, so it makes sense to expose it in this plug-in, so that if someone does not want the XML plug-in, the trace type won't be available)

What do you think? Are you agree?

Line:49, lttng/org.eclipse.linuxtools.tmf.core/plugin.xml -> The analysis plugins are part of the framework/RCP. Wouldn't make a difference if they were there instead. Also, which analysis plugin? XML? This is the kind of feature that we want in the core so all plugins can depend on it and add their own unit tests.

Line:30, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/trace/development/TmfXmlDevelopmentTrace.xsd -> ah!!

Line:43, lttng/org.eclipse.linuxtools.tmf.core/META-INF/MANIFEST.MF -> trace.devtrace is a bit redundant

-------------------------------------
author: Braxton Mccarthy
date: 2014-07-11 21:38:11.000000000

Patch Set 12:

(1 comment)

Line:43, lttng/org.eclipse.linuxtools.tmf.core/META-INF/MANIFEST.MF -> Yes, but trace.development implies more "development of generic traces". Here it is a specific type of trace.

-------------------------------------
author: Gerrit Code Review
date: 2014-09-22 13:44:51.000000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
