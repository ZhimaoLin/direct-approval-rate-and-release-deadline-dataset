DESCRIPTION

TMF: Add development trace in the TMF developers tools

This development trace uses a custom XML definition and converts custom XML
events to TmfEvents, where the fields and their values are defined through the
XML fields. To illustrate, here is the content of each type of event:

CustomXmlEvent: fields = "a | b", values = "1 | abd"

would transpose to this

Development trace: a = 1, b = "abd"

This type of trace will be useful to unit test analyses involving LTTng kernel
and UST traces for instance.

Change-Id: I41ac7206c1a54088c998d551a4174f2184b05f5b
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2014-07-11 14:19:09.000000000

Uploaded patch set 13.

-------------------------------------
author: Brenden Conley
date: 2014-07-11 14:19:15.000000000

Patch Set 13:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7717/

-------------------------------------
author: Brenden Conley
date: 2014-07-11 14:56:40.000000000

Patch Set 13: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7717/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2014-07-11 21:40:27.000000000

Patch Set 13: Code-Review-1

xmlFile -> xmlFile.xml ?

Since this is meant to be used by tests, why not just define all of it (implementation + extension point) in the tmf.core.tests plugin?

That way developers running the plugins from Eclipse would have it available. But I am not sure we want to expose it to "normal" users, yet. At least until we get a view to configure that trace etc.

-------------------------------------
author: Annalise Jimenez
date: 2014-07-12 02:15:48.000000000

Patch Set 13:

> But I am not sure we want to expose it to "normal" users, yet.

The idea behind the XML plugin is to have the "normal" user become a developer ;-), so yeah in that sense, we do want to expose it. Especially since the documentation on the XML points to a tar.gz that contains one such trace, as an example trace/analysis.

I'd say if that really bugs people, the view to configure the visible tracetypes will come sooner than later.

-------------------------------------
author: Annalise Jimenez
date: 2014-07-14 21:37:33.000000000

Patch Set 13:

How about Easy Trace Format? After BTF, and CTF, ETF sounds about right! :D

-------------------------------------
author: Gerrit Code Review
date: 2014-09-22 13:44:51.000000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
