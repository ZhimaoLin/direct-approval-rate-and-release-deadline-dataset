DESCRIPTION

Bug 468607 - Refactor the wizard to run a container

Change-Id: Ie41be59b3326e9521833f25c3fe91ac565adf6d5
Signed-off-by: Zechariah Krause xxx@xxx.xxx


COMMENTS

author: Zechariah Krause
date: 2015-05-29 17:07:53.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2015-05-29 17:08:00.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9578/

-------------------------------------
author: Brenden Conley
date: 2015-05-29 17:22:17.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9578/ : SUCCESS

-------------------------------------
author: Nathanael Holden
date: 2015-06-01 16:37:48.000000000

Patch Set 3: Verified-1

(2 comments)

Creating a container that runs /bin/bash still isn't working.

Line:90, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerContainerConfig.java -> I see this when creating a simple C application and attempting to run it in a container.

!ENTRY org.eclipse.core.jobs 4 2 2015-06-01 11:20:23.181
!MESSAGE An internal error occurred during: "Launching hello".
!STACK 0
java.lang.NullPointerException
	at org.eclipse.linuxtools.internal.docker.core.DockerContainerConfig.<init>(DockerContainerConfig.java:90)
	at org.eclipse.linuxtools.internal.docker.core.DockerContainerConfig.<init>(DockerContainerConfig.java:82)
	at org.eclipse.linuxtools.internal.docker.core.DockerContainerConfig$Builder.build(DockerContainerConfig.java:511)
	at org.eclipse.linuxtools.docker.ui.launch.ContainerLauncher.launch(ContainerLauncher.java:172)
	at org.eclipse.cdt.internal.docker.launcher.ContainerLaunchConfigurationDelegate.launch(ContainerLaunchConfigurationDelegate.java:223)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:885)
	at org.eclipse.debug.internal.core.LaunchConfiguration.launch(LaunchConfiguration.java:739)
	at org.eclipse.debug.internal.ui.DebugUIPlugin.buildAndLaunch(DebugUIPlugin.java:1039)
	at org.eclipse.debug.internal.ui.DebugUIPlugin$8.run(DebugUIPlugin.java:1256)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)

Line:206, containers/org.eclipse.linuxtools.docker.ui/src/org/eclipse/linuxtools/docker/ui/launch/ContainerLauncher.java -> This seems to completely ignore the connectionUri that is passed from the launch configuration, and we can't ignore those options. If the connectionUri passed in didn't exist, then I could see using the last one, or attempting to retrieve a connection that has an image that is the closest match to the image referenced in the configuration.

Also, what happens if there was no last connection used ? The launch fails for me. I can't find LAST_CONNECTION_IMAGE_VIEW (or last_connection_image_view ) being set anywhere in our code so likely that it's no longer used.

I'd prefer changes like these be kept out for now if they're not absolutely necessary.

-------------------------------------
