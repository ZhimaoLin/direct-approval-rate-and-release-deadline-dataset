DESCRIPTION

Bug 468607 - Refactor the wizard to run a container

Change-Id: Ie41be59b3326e9521833f25c3fe91ac565adf6d5
Signed-off-by: Zechariah Krause xxx@xxx.xxx


COMMENTS

author: Zechariah Krause
date: 2015-05-29 10:25:59.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-05-29 10:26:06.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9572/

-------------------------------------
author: Brenden Conley
date: 2015-05-29 10:47:14.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9572/ : SUCCESS

-------------------------------------
author: Luna Sosa
date: 2015-05-29 12:26:43.000000000

Patch Set 1:

(15 comments)

Line:138, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerContainerConfig.java -> if these Boolean methods can never be null why not have the return type be boolean instead of Boolean ?

Line:243, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerContainerConfig.java -> This means both .hostname("").hostname("wonka") .hostname("wonka").hostname("") result in hostname being "wonka" ? That seems inconsistent. Why is this needed ?

Line:405, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerContainerConfig.java -> same, why not set what is coming in here ?

Line:470, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerContainerConfig.java -> so how do make the entryPoint be empty ?

Line:52, containers/org.eclipse.linuxtools.docker.ui/src/org/eclipse/linuxtools/internal/docker/ui/commands/RunImageCommandHandler.java -> unused string ?

Line:362, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerConnection.java -> is it really intended we mutate the state of tcpHost in these methods ? why is these not handled in constructor or in the UI layer ?

Line:372, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerConnection.java -> any reacont ahy a different kind of mutation is done in this method compared to streamToString ?

Line:646, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerConnection.java -> was it intended to remove this "lateContainers" logic ?

Line:772, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerConnection.java -> is the intent here not to decouple our classes from the docker api? then it seems bad to pass Container type to DockerContainer ?

Line:1292, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerConnection.java -> intended to remove this ?

Line:21, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerContainer.java -> should this not be completly removed from the model ?

Line:47, containers/org.eclipse.linuxtools.docker.ui/src/org/eclipse/linuxtools/internal/docker/ui/RunConsole.java -> should it not just be removed?

Line:153, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/docker/core/IDockerConnection.java -> shouldn't we start adding some javadocs to the interfaces?

Line:40, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerImage.java -> why are these deprecated and not just removed before v1 released ?

Line:116, containers/org.eclipse.linuxtools.docker.core/src/org/eclipse/linuxtools/internal/docker/core/DockerImage.java -> does the order not matter ? is sorting not something UI should do rather than the model ?

-------------------------------------
