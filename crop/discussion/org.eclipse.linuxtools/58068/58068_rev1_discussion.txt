DESCRIPTION

perf: Reduce usage of OSGi Version.

Create new class PerfVersion and use it instead of OSGi Version one as
"perf --version" output doesn't adhere to rules for OSGi qualifier (no
dot allowed in it).

Change-Id: I02b9afe2b81fba4c5d7c7ded00446ea12bebee8c
Signed-off-by: Erick Ross xxx@xxx.xxx


COMMENTS

author: Erick Ross
date: 2015-10-13 12:54:06.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2015-10-13 12:54:12.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9944/

-------------------------------------
author: Brenden Conley
date: 2015-10-13 13:08:49.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9944/ : SUCCESS

-------------------------------------
author: Logan Yoder
date: 2015-10-13 14:41:53.000000000

Patch Set 1: Code-Review-1

(6 comments)

I mad some comments, a few cosmetics suggestions.

But what drove to -1 is it fails to parse "4.0.8-200.fc21.x86_64". Added the testcase in for you to reproduce.

Line:68, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/launch/PerfOptionsTab.java -> Eclipse PDE puts an error marker here saying visibility has been reduced.

Line:13, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/PerfVersion.java -> Eclipse PDE says we must update the bundle version (currnetly is 1.2.0.qualifier) due new API. How do you suggest to handle that? Update now or just before next LinuxTools release?

Line:56, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/PerfVersion.java -> Eclipse PDE put an error marker here because the plug-in is configured to use JRE 1.7. Changing to 1.8 makes the marker go away.

Line:445, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/PerfCore.java -> remove it.

Line:13, perf/org.eclipse.linuxtools.perf.tests/src/org/eclipse/linuxtools/internal/perf/tests/PerfVersionTest.java -> The following testcase makes the PerfVersion fails:

		version = new PerfVersion("4.0.8-200.fc21.x86_64");
		assertEquals(4, version.getMajor());
		assertEquals(0, version.getMinor());
		assertEquals(8, version.getMicro());
		assertEquals("200.fc21.x86_64", version.getQualifier());

Line:35, perf/org.eclipse.linuxtools.perf.tests/src/org/eclipse/linuxtools/internal/perf/tests/PerfVersionTest.java -> White space.

-------------------------------------
author: Erick Ross
date: 2015-10-13 15:50:01.000000000

Patch Set 1:

(2 comments)

Line:68, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/launch/PerfOptionsTab.java -> internal package again so no issue.

Line:13, perf/org.eclipse.linuxtools.perf/src/org/eclipse/linuxtools/internal/perf/PerfVersion.java -> This is internal class so we can ignore it.

-------------------------------------
author: Gerrit Code Review
date: 2015-10-14 18:58:52.000000000

Change has been successfully cherry-picked as 1a1555db9491cc2632d8ef51d24480c327acc23f by Logan Yoder

-------------------------------------
