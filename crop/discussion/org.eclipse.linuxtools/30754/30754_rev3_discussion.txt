DESCRIPTION

tmf: make tmftrace implement IEventParser

There is no way the parser is not a trace, this just make devs miserable.

Change-Id: I6e92201a4887bb009f28b518829029069f72c6e2
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2014-07-31 18:55:32.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2014-07-31 18:55:38.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8027/

-------------------------------------
author: Ivy Mitchell
date: 2014-07-31 19:56:04.000000000

Patch Set 3: Code-Review-1

(1 comment)

Line:67, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/trace/TmfTraceTest.java -> NO!

-------------------------------------
author: Brenden Conley
date: 2014-07-31 20:55:51.000000000

Patch Set 3: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8027/ : ABORTED

-------------------------------------
author: Luciana Barry
date: 2014-07-31 20:56:23.000000000

Patch Set 3: Code-Review-1

(1 comment)

I'm not sure how this helps. A lot of instances of ITmfTrace (most known ones?!) override getNext() and don't use the parser. Even some implement parseEvent() but it never gets called. What we need is a way to ensure that every ITmfTrace (even those that don't extend TmfTrace) use the timestamp transform on the timestamp of the event returned by getNext(). I'm not sure how to achieve this.

Line:163, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/trace/TmfTrace.java -> don't you get a parameter not used warning?

-------------------------------------
author: Luciana Barry
date: 2014-07-31 21:07:11.000000000

Patch Set 3:

(1 comment)

Line:711, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/trace/TmfTrace.java -> I think there's a big problem with units here. What is the unit of the timestamp provided by the subclass? What is the unit that the timestamp transform expects?

-------------------------------------
author: Annalise Jimenez
date: 2014-08-01 14:29:29.000000000

Patch Set 3: Code-Review-1

(2 comments)

Line:65, lttng/org.eclipse.linuxtools.tmf.ctf.core/src/org/eclipse/linuxtools/tmf/ctf/core/CtfTmfTrace.java -> Did it automatically wrap it there? looks weird.

Line:711, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/trace/TmfTrace.java -> Indeed Patrick you are right. I hadn't though about the unit when that was implemented, as I worked only with LTTng traces. This sort of assumes that for a trace X, units of time are constant, so the timestamp transform obtained after synchronization would match the units of the timestamp of the original trace. But with what you are doing right now, adding a manual offset that can be any unit different from that of the trace, the concept of unit might need to be added here.

-------------------------------------
author: Ivy Mitchell
date: 2014-08-01 14:47:41.000000000

Abandoned

Useless waste of time... this code actually didn't fix anything upon further inspection

-------------------------------------
