DESCRIPTION

ctf: Make events immutable

This patch does some major changes to the ctf parser

The event definitions are now immutable and can no longer be modified.
The declarations will read the bitbuffer and then create event
definitions. The event definitions are going to have fields. Initial
tests show a 1.5x speedup but the parser is 50% slower without eclipse.

Change-Id: I52b8c0de9776fa7cd2b333628c2bb6d3dd2c86ac
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2014-04-24 17:31:15.000000000

Uploaded patch set 17.

-------------------------------------
author: Brenden Conley
date: 2014-04-24 22:08:07.000000000

Patch Set 17:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6647/

-------------------------------------
author: Ivy Mitchell
date: 2014-04-24 22:44:56.000000000

Topic set to CTF Performance

-------------------------------------
author: Ivy Mitchell
date: 2014-04-24 22:45:30.000000000

Topic changed from CTF Performance to CTF performance

-------------------------------------
author: Brenden Conley
date: 2014-04-24 23:02:48.000000000

Patch Set 17: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6647/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2014-04-25 22:37:24.000000000

Patch Set 17: Code-Review-1

(35 comments)

Some comments, more to come (looked up to ArrayDeclaration).

Line:41, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/IEventDeclaration.java -> add explanation

Line:85, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/FloatDefinitionTest.java -> put the two static methods together (and above or below xxx@xxx.xxx methods)

Line:99, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/StringDefinitionTest.java -> copyright infringement!

Line:62, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/event/CTFEventFieldTest.java -> perhaps put one parameter per line, it'll be more clear what is part of what

Line:88, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/VariantDefinitionTest.java -> remove those commented lines if they are not to be used

Line:33, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/AllCtfCoreTests.java -> alphabetical order plz (easier to compare to the list of packages to see if there are any missing)

Line:28, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> I wouldn't mind using two-line comments for these:

  /** Empty string 
   xxx@xxx.xxx 3.0 */
  public static final blahblah

would add up some space savings

Line:145, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> why not put these straight with the declarations?

Line:171, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> remove this empty line

Line:181, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> remove , at the end

Line:191, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> This map shouldn't change after the constructor, right? Why not use a ImmutableMap?

Line:239, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> this method isn't needed, it's only called by the constructor. You can do

  fParent.fChildren.addChild()

in the ctor

Line:274, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> isn't fName part of fAbsoluteName?? By the variable names I'd expect it to be so. If it is not, then maybe they should be called fPath and fName or something

Line:279, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> you want to compare the base names, not the absolutename? Is this on purpose?

Line:283, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> If you override hashCode() you should also override equals().  Maybe you don't need to override this at all?

Line:13, lttng/org.eclipse.linuxtools.ctf.core/META-INF/MANIFEST.MF -> not here, in build.properties

Line:119, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/VariantDeclarationTest.java -> one param per line (for the last 3 declarations)

Line:65, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDefinition.java -> Arrays.copy(), or use an ImmutableList

Line:103, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDefinition.java -> arrays.copy (or not if it's a ImmutableList)

Line:133, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDefinition.java -> this should use getDefinition()

Line:25, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Declaration.java -> remove this empty line

Line:35, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Declaration.java -> spacing

Line:42, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Declaration.java -> spacing

Line:48, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/SequenceDeclarationTest.java -> private

in general, put static declaration above object attributes

Line:86, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/SequenceDeclarationTest.java -> one param per line

Line:121, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/ArrayDefinitionTest.java -> space after ,

Line:46, lttng/org.eclipse.linuxtools.tmf.ctf.core/src/org/eclipse/linuxtools/tmf/ctf/core/CtfTmfEvent.java -> this should be private. the check done in the factory should be done in this class's constructor.

Line:63, lttng/org.eclipse.linuxtools.tmf.ctf.core/src/org/eclipse/linuxtools/tmf/ctf/core/CtfTmfEvent.java -> private xxx@xxx.xxx

Line:39, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/DefinitionTest.java -> use

  private static xxx@xxx.xxx StringDeclaration

that way it doesn't get auto-formatted to another line

Line:46, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/DefinitionTest.java -> .
 xxx@xxx.xxx
  public IDelcaration getDeclaration()

Line:14, lttng/org.eclipse.linuxtools.ctf.core.tests/META-INF/MANIFEST.MF -> Good to see you use this! But it should be in the build.properties, not in Manifest (we don't need a run-time dependency).

Line:121, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/EventDefinition.java -> I still think this abstraction should be done at another level, and this class should expose just getEventContext(), getPacketContext(), and getStreamContext(). Rebuilding intermediary arrays every single time seems terribly inefficient.

But that's something for another patch.

Line:37, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/EventDefinition.java -> private static xxx@xxx.xxx

Line:113, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/EventDefinition.java -> @NonNull on its own line (method annotations go one per line, xxx@xxx.xxx

rest on one line

Line:115, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/EventDefinition.java -> no need for this method, just make NULL_EVENT public

-------------------------------------
author: Ivy Mitchell
date: 2014-04-26 00:28:53.000000000

Patch Set 17:

(9 comments)

Thanks for the comments. Get ready for the horror that is structdefinition, as it is the scope of its children, it needs to be declared before its children. To make a struct immutable, we need to declare the children first... ugh

Line:28, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> fair enough

Line:145, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> I was nervous about the declaration order, but it should be fine

Line:191, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> yes it does whenever a child is created.

Line:239, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> yep, but isn't that roundabout and less clear?

Line:274, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> I am agree

Line:279, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> it's to compare them in a child only... but this should change.

Line:283, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> yes, this was an acceleration hack

Line:127, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/trace/CTFTraceGrowingStreamTest.java -> should this be getField(String)?

Line:121, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/EventDefinition.java -> I am agree

-------------------------------------
author: Braxton Mccarthy
date: 2014-04-28 20:14:37.000000000

Patch Set 17:

(31 comments)

Rest of the comments. This is getting good!

Line:51, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Definition.java -> private xxx@xxx.xxx (same line)

no need for since annotations on private stuff

Line:70, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Definition.java -> don't need to mark parameters final, we have compiler warning/errors if they get modified (unless you NEED to, like using it inside an inner Runnable).

Line:123, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Definition.java -> for method declarations, you can follow the typical use of annoations:

 xxx@xxx.xxx
  public void blahblah

Line:47, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDeclaration.java -> the others two we can keep around for now, but I'm pretty sure fNbFields is not needed (just do fFieldNameArray.length).

Line:162, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDeclaration.java -> Ah the fun part. We'll have to do something about this... But in another patch.

We could use the same pattern as in in PartialStateSystem.assignUpstream()

Line:65, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> If you have a public factory method, the constructor should be private. There should be a clear "one" way of building new objects of this type.

Line:46, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> for fields put the definition on the same line:

 public static xxx@xxx.xxx IntegerDeclaration THINGY

or event xxx@xxx.xxx on the class, which is what we should be aiming to everywhere eventually.

("static final" *wink* *wink* others below too)

Line:120, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> a bit far-off, but fields like this fAlignement here can be also marked "transient". This indicates that it is not part of the internal state of the object, since it can be recalculated from the other fields. This tells the compiler to not serialize them, among other things.

Line:337, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> javaStyleVariableNames

Line:360, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> idem

Line:110, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/event/EventDeclaration.java -> unrelated, but why is this method synchronized? It doesn't seem to access any other static mutable resources.

Line:462, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/StreamInputReader.java -> no need

Line:177, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/VariantDeclaration.java -> ctrl+shift+f this file, spacing errors

Line:42, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDeclaration.java -> to be consitent in style, fChildrenNames (or just fChildren ?)

also small javadoc explaining what are <key, value>, it's not obvious

Line:131, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDeclaration.java -> spacing

Line:150, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDeclaration.java -> spaces around *

you have to cast one of the elements on the right-hand side to (long) to avoid an overflow, don't you?

Line:34, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/SequenceDefinition.java -> Same as ArrayDefinition, ImmutableList would work well here. 

.copyOf(definitions) at the constructor, then no copy on the getter

Line:83, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/EnumDefinition.java -> why return a Long here, why not just a long? Can integerValue really be null, and if so, why?

Line:90, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDefinition.java -> Might want to mark this xxx@xxx.xxx it highlights some places where it's used without null checks

Line:56, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDefinition.java -> storing the array directly is unsafe. Use an ImmutableList, and...

Line:69, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDefinition.java -> ...you won't need to do a copy here

Line:65, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDefinition.java -> fDefinitions you can leave as it is now

Line:62, lttng/org.eclipse.linuxtools.tmf.ctf.core/src/org/eclipse/linuxtools/tmf/ctf/core/CtfTmfEventFactory.java -> Don't just do this. If we are to calculate the content on-demand, remove it from the constructor's API. Send "null" manually to the super-constructors (because TmfEvent.fContent is indeed final), and add a comment in CtfTmfEvent's constructor, exactly like we do with getType().

Line:57, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Declaration.java -> If this is meant to be the same version for all subclasses, make it final

Line:99, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/FloatDeclaration.java -> spacing

Line:146, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/FloatDeclaration.java -> ctrl+shift+f

Line:204, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> this wasn't move to the method below, but deleted altogether, is that on purpose?

Line:278, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> I think this will disappear once you rebase on the new version of the dependant patch.

Line:484, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> this is not used anywhere, except in a test. Is this still needed?

Line:172, lttng/org.eclipse.linuxtools.tmf.ctf.core.tests/src/org/eclipse/linuxtools/tmf/ctf/core/tests/CtfTmfEventFieldTest.java -> space after ,

File Comment: lttng/org.eclipse.linuxtools.tmf.ctf.core/src/org/eclipse/linuxtools/tmf/ctf/core/CtfTmfEvent.java -> This class is a nice contender xxx@xxx.xxx ! Many checks are made where elsewhere assumptions are made for the same things, etc. Other patch though.

-------------------------------------
author: Ivy Mitchell
date: 2014-04-29 18:31:05.000000000

Patch Set 17:

(50 comments)

replies

Line:41, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/IEventDeclaration.java -> Done

Line:51, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Definition.java -> Done

Line:70, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Definition.java -> Done

Line:123, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Definition.java -> Done

Line:47, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDeclaration.java -> Done

Line:162, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDeclaration.java -> wilco

Line:65, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> Done

Line:120, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> later

Line:337, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> Done

Line:360, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> Done

Line:85, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/FloatDefinitionTest.java -> Done

Line:99, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/StringDefinitionTest.java -> Done, if only we had IP clean

Line:110, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/event/EventDeclaration.java -> Now it's immutable. IIRC it was to avoid sonar critical warnings.

Line:462, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/StreamInputReader.java -> Done

Line:62, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/event/CTFEventFieldTest.java -> Done

Line:177, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/VariantDeclaration.java -> Done

Line:88, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/VariantDefinitionTest.java -> Done

Line:131, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDeclaration.java -> Done

Line:150, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDeclaration.java -> Done

Line:33, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/AllCtfCoreTests.java -> Done

Line:34, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/SequenceDefinition.java -> Done

Line:28, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> Done

Line:145, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> Done

Line:171, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> Done

Line:181, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/scope/LexicalScope.java -> Done

Line:83, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/EnumDefinition.java -> Override

Line:13, lttng/org.eclipse.linuxtools.ctf.core/META-INF/MANIFEST.MF -> Done

Line:90, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDefinition.java -> Done

Line:56, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDefinition.java -> Done

Line:69, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/ArrayDefinition.java -> Done

Line:119, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/VariantDeclarationTest.java -> Done

Line:133, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/StructDefinition.java -> That would slow things down a LOT

Line:62, lttng/org.eclipse.linuxtools.tmf.ctf.core/src/org/eclipse/linuxtools/tmf/ctf/core/CtfTmfEventFactory.java -> Done

Line:25, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Declaration.java -> Done

Line:35, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Declaration.java -> Done

Line:42, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Declaration.java -> Done

Line:57, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/Declaration.java -> Done

Line:99, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/FloatDeclaration.java -> Done

Line:146, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/FloatDeclaration.java -> Done

Line:48, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/SequenceDeclarationTest.java -> Done

Line:204, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> I think so, I don't remember tbh. if it works, yes it was intentional

Line:278, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> Done

Line:484, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/trace/CTFTrace.java -> It's very useful for debug

Line:172, lttng/org.eclipse.linuxtools.tmf.ctf.core.tests/src/org/eclipse/linuxtools/tmf/ctf/core/tests/CtfTmfEventFieldTest.java -> Done

Line:86, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/ArrayDefinitionTest.java -> remove some spaces

Line:46, lttng/org.eclipse.linuxtools.tmf.ctf.core/src/org/eclipse/linuxtools/tmf/ctf/core/CtfTmfEvent.java -> Done

Line:39, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/types/DefinitionTest.java -> Reflow hates me

Line:14, lttng/org.eclipse.linuxtools.ctf.core.tests/META-INF/MANIFEST.MF -> Done

Line:127, lttng/org.eclipse.linuxtools.ctf.core.tests/src/org/eclipse/linuxtools/ctf/core/tests/trace/CTFTraceGrowingStreamTest.java -> It would be a first line optimization that would lead to a.getField("X").getDefinition("y")... not worth it.

Line:37, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/EventDefinition.java -> no

-------------------------------------
