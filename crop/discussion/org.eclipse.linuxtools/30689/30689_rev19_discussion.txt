DESCRIPTION

tmf: Offset traces ui

Rudimentary ui for offsetting traces.

Change-Id: Ifbcfa32cddfaa21e6c526169e9b2b3a8f06fcf72
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2014-08-19 20:05:52.000000000

Uploaded patch set 19.

-------------------------------------
author: Brenden Conley
date: 2014-08-19 20:05:58.000000000

Patch Set 19:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8384/

-------------------------------------
author: Brenden Conley
date: 2014-08-19 20:40:22.000000000

Patch Set 19: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8384/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2014-08-20 19:54:54.000000000

Patch Set 19: Code-Review-1

(26 comments)

Here are some comments for now. Since it's a big feature it probably won't be last round of review (sorry).

Line:882, lttng/org.eclipse.linuxtools.tmf.ui/plugin.xml -> I think you need a visibleWhen for the offset command. Otherwise it is shown all the time in the context-sensitive menu. For example, it is part of the menu when selecting the Traces directory or project.

Line:1621, lttng/org.eclipse.linuxtools.tmf.ui/plugin.xml -> you can combine both in one activeWhen

Line:1635, lttng/org.eclipse.linuxtools.tmf.ui/plugin.xml -> What is the desired behaviour? Selecting one trace and experiment at a time? Or shall multiple selections be allowed?
If multiple selections, shall we allow the command for the TmfTraceFolder?

Line:117, lttng/org.eclipse.linuxtools.tmf.ui/plugin.properties -> I'm not sure if it's clear for the user what is meant here.
Time Offset Traces (not if it is better).
Maybe ask others for an idea.

Line:119, lttng/org.eclipse.linuxtools.tmf.ui/plugin.properties -> offset and factor contradicts each other

Maybe: Offset traces by a constant time value

File Comment: lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/OffsetDialog.java -> I don't understand why you need the TraceAndOffset class.

Line:45, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/OffsetDialog.java -> Better one line description please.

Line:79, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/OffsetDialog.java -> This can throw an exception if the value entered is not a number

Line:132, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/OffsetDialog.java -> It would be good that user can resize the dialog box. If you do that set also a minimum size.

Line:180, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/OffsetDialog.java -> The trace column is not wide enough depending on the trace name. I think there should be a column.pack() somewhere after the data is set in the tree viewer.

Line:193, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/OffsetDialog.java -> Shouldn't we display the start time in a human readable format (e.g. using the timestamp formatter

Line:29, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/TraceAndOffset.java -> My gut feeling is that this data structure and how it is used in the tree and content provider etc can be simplified.
However, I'm not sure yet, how. Maybe you can use this class when setting the input and not an array of this class. The tree will call the content provider getElements() and passing this object and then you can return the entry set there. I think it would make it more understandable.

Line:58, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/TraceAndOffset.java -> Should we use the start timestamp formatter to have user friendly printing.

Line:64, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/TraceAndOffset.java -> costly. Do we need to display the start time actually? I noticed after offsetting once and the start time is the new transformed start time. To know the original start time we would need to delete the sync formula file.

File Comment: lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> Please add some meaning comments in what is done. It's currently hard to understand each step.

Line:54, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> Don't we need a different name to avoid clashes with synchronizing traces (SynchronizeTraceHandler) in an experiment?

Line:62, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> If you don't do anything special. Then you don't need to override isEnabled(). I think it will work then based on what is defined in the plugin.xml.

Line:75, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> return null or Boolean.FALSE?

Line:82, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> return null or Boolean.FALSE?

Line:86, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> return null or Boolean.FALSE?

Line:94, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> I would prefer to have more readable variable names (instead of tl, uiexperiment etc)

Line:110, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> here you allow multiple selected traces and experiments. However, the plugin.xml only allows for 1 trace or experiment selected. If more are selected the command is disabled.

What is the desired behavior? Please fix accordingly.

Line:112, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> can that actually happen considering the plugin.xml definition?

Line:113, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> return null or Boolean.FALSE?

Line:151, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> Up to here it could be long lasting operation and it would be good to add user feedback (progress monitor) and provide to cancel it. So, I would suggest to wrap this in an WorkspaceModificationOperation since it modifies also the workspace (refreshSupplementaryFiles()). See DeleteTraceFolderElementHandler for an example usage of the operation. 

After that you can open the dialog. 

After the dialog use a new workspace modification operation to execute the offsetting.

Line:163, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> you need to check the return value to verify whether the user pressed ok or cancel.

-------------------------------------
author: Ivy Mitchell
date: 2014-08-20 21:54:17.000000000

Patch Set 19:

Don't be sorry, I'm thrilled. :)

-------------------------------------
author: Luciana Barry
date: 2014-09-23 17:22:36.000000000

Patch Set 19: Code-Review-1

(6 comments)

Line:1626, lttng/org.eclipse.linuxtools.tmf.ui/plugin.xml -> We should support multipe selection.

Line:65, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/wizards/offset/OffsetDialog.java -> There should be alternatives to entering manually the offset in nanoseconds. To be discussed.

Line:170, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> Should setTimestampTransform be a method on the trace element instead? We don't seem to need an opened trace instance.

Line:178, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> Perhaps we could delete all supplementary files first, then set the timestamp transform.

Line:186, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> Editors get closed even if Cancel was pressed or if no offset was changed

Line:188, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/internal/tmf/ui/project/handlers/OffsetTraceHandler.java -> The method closeEditors() and is part of the base class and overloaded so we don't need to make the distinction here.

-------------------------------------
