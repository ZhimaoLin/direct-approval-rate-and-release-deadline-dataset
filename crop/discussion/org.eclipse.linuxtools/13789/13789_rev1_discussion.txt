DESCRIPTION

Tmf: Allow the experiment to have a state system

Some modifications were required for an experiment itself to have a state
system.  Maybe a more general approach would be required instead of those
very local changes, so that experiments can have the same behavior and
functionnalities as the traces.

Change-Id: Iae8da14f89e61eb94bb0a87910d4c9b7fe540d83
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-06-13 13:15:05.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2711/ 

-------------------------------------
author: Brenden Conley
date: 2013-06-13 13:34:24.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2711/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-07-17 19:22:36.000000000

Patch Set 1: Code-Review-1

(2 comments)

Some comments, but concept looks good. Let's just hope we don't get too confused about the SS of an experiment, and the SS's of the traces underneath it!

Line:197, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/statesystem/HistoryBuilder.java -> It didn't exist back then, but now it's possible to do TmfTraceManager.getTraceSet(trace), which returns an array of the inner traces (so the real traces for an experiment, or just the one trace for a normal trace). It may or may not be useful here.

Line:263, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/statesystem/HistoryBuilder.java -> Here too, you could use getTraceSet() and check its contents.

That way, you wouldn't need the 'experiment' field at all.

-------------------------------------
