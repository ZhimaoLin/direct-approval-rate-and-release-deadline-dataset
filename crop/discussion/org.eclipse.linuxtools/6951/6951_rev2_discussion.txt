DESCRIPTION

Genericized CTF parser and events handling.

Add support for enums in trace fields.
Add support for broken end timestamped traces. (experimental)
Add support for variant free id/timestamp pairings (non-lttng)
Add support for non-CPU based traces (dsp/gpu/fpga...)

Change-Id: I2e49f798ae5e2fefda0316631dbbb74609ba36aa
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2012-07-24 19:45:57.000000000

Uploaded patch set 2.

-------------------------------------
author: Braxton Mccarthy
date: 2012-07-24 21:03:00.000000000

Patch Set 2: I would prefer that you didn't submit this

(7 inline comments)

Don't wrap qualified invocations (object\n.getField())

The formatter settings patch should fix this, it's still pending merge unfortunately...

Line:12, /COMMIT_MSG -> This could have been split in many commits, one for 1), one for 2) and one for 3)-4) maybe?

Line:18, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/SimpleDatatypeDefinition.java -> Missing Javadoc and file header

Line:278, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/trace/StreamInput.java -> Ugh, I guess this weird wrapping came from the formatter again...

If not even your first parameter fits on the line, it's a bit cleaner to do:

private static long

computeNextOffset(param 1)

Line:417, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/trace/StreamInput.java -> Here too, I don't think it's worth wrapping to 80 if it could fit in 100 columns and be much clearer.

Line:214, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/trace/StreamInputPacketIndexEntry.java -> missing empty line here

Line:221, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/internal/ctf/core/trace/StreamInputPacketIndexEntry.java -> Missing Javadoc! No excuses you get warnings now ;)

Line:178, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/ctfadaptor/CtfTmfEventField.java -> A clearer way to split those over two lines would be like the INTEGER type:

CTFStringField strOther = (CTFStringField) other;

return new CTFStringField(strOther.getValue(), strOther.name);

-------------------------------------
author: Gerrit Code Review
date: 2012-07-25 14:07:14.000000000

Your change could not be merged due to a path conflict.

Please merge (or rebase) the change locally and upload the resolution for review.

-------------------------------------
