DESCRIPTION

TMF: Add the concept of host id to a trace

This patch adds the concept of a host to a trace.  By default, the host if the
name of the trace itself (so 1 trace => 1 host).  For CTF traces, the clock
uuid is used to uniquely identify the host (boot session) the trace was taken
from.

Change-Id: Ie35725bc24be4ea5678c94d5ab5680e67892f4be
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2013-07-04 20:44:08.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2013-07-04 20:44:13.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2850/

-------------------------------------
author: Brenden Conley
date: 2013-07-04 20:57:55.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2850/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-07-04 22:11:03.000000000

Patch Set 3: Code-Review-1

(2 comments)

Sorry, I don't like not catching stuff the first time, but I'm bad like that...

Line:299, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/ctfadaptor/CtfTmfTrace.java -> here it should use super.getHostId(). It's obviously the same thing now, but if we ever change how TmfTrace defines its host ID, then clock-less CTF traces should follow.

Line:349, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/trace/ITmfTrace.java -> How about:

 Returns the ID of the host this trace is from. The host ID is not necessarily the hostname,
 but should be a unique identifier for the machine on which the trace was taken.
 It can be used to determine if two traces were taken on the exact same machine.

(added the "not necessarily", since it could be the hostname, and shortened it a bit)

-------------------------------------
