DESCRIPTION

tmf: Make IAnalysisModule AutoCloseable

This will help ensure that we always close()/dispose() analysis
modules when we are done using them. This exposed many places in
the tests where unclosed modules could be leaking resources.

Change-Id: I32b9168d27460bd5daca61edebc38746a919ee4d
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2014-05-02 21:17:28.000000000

Uploaded patch set 1.

-------------------------------------
author: Brenden Conley
date: 2014-05-02 21:36:23.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6828/

-------------------------------------
author: Brenden Conley
date: 2014-05-02 22:38:12.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/6828/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2014-05-05 15:15:23.000000000

Patch Set 1: Code-Review-1

(3 comments)

Good idea. No more leakages if used properly.

Line:37, lttng/org.eclipse.linuxtools.lttng2.kernel.core.tests/src/org/eclipse/linuxtools/lttng2/kernel/core/tests/stateprovider/StateSystemInMemoryTest.java -> fModule?

Line:110, lttng/org.eclipse.linuxtools.tmf.ctf.core.tests/src/org/eclipse/linuxtools/tmf/ctf/core/tests/CtfTmfLostEventStatisticsTest.java -> It disposes state systems, but not the analyses.

Line:121, lttng/org.eclipse.linuxtools.lttng2.ust.core.tests/src/org/eclipse/linuxtools/lttng2/ust/core/tests/trace/callstack/AbstractProviderTest.java -> Why a null check here, but not in previous test classes? Can this one be null more than others?

-------------------------------------
author: Braxton Mccarthy
date: 2014-05-08 20:33:20.000000000

Patch Set 1:

(3 comments)

Line:37, lttng/org.eclipse.linuxtools.lttng2.kernel.core.tests/src/org/eclipse/linuxtools/lttng2/kernel/core/tests/stateprovider/StateSystemInMemoryTest.java -> it's static, it shouldn't have the f prefix (for instance fields)

we could come up with a prefix for static fields though!

Line:110, lttng/org.eclipse.linuxtools.tmf.ctf.core.tests/src/org/eclipse/linuxtools/tmf/ctf/core/tests/CtfTmfLostEventStatisticsTest.java -> Hmm, you're right, I guess I read too fast!

Line:121, lttng/org.eclipse.linuxtools.lttng2.ust.core.tests/src/org/eclipse/linuxtools/lttng2/ust/core/tests/trace/callstack/AbstractProviderTest.java -> Hmm, technically it'd be better to check. But then we'd have to check every. single. thing. we close/dispose in here. And that would get annoying real fast! A NPE in a test would fail the test, so we would know what's up.

I don't know, maybe I'm becoming lazy (or I've always been!), but unless there is a clear possibility of the test ending normally with the value being null, we shouldn't bother. What do you think?

-------------------------------------
