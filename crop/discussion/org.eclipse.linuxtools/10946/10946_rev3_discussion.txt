DESCRIPTION

Introduce GDB Tracepoint Analysis feature

Change-Id: I0800687b8b55b381fb304b828f57b9cd330c0d4b
Signed-off-by: Luciana Barry xxx@xxx.xxx


COMMENTS

author: Luciana Barry
date: 2013-03-08 22:43:34.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2013-03-08 22:49:36.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/1629/ 

-------------------------------------
author: Brenden Conley
date: 2013-03-08 23:02:16.000000000

Patch Set 3: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/1629/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2013-03-11 12:30:33.000000000

Patch Set 3: I would prefer that you didn't submit this

(2 inline comments)

- You should introduce internal packages especially for the UI plug-in. They don't need to be external APIs. 

- Also we should have JUnit test plug-ins (especially for the core). You could add tests for the event content and event (not much to test) and the GdbTrace classes. For the latter you would need to create a DsfGdbAdaptorStub so that you can test it.

Note I'm ok if you introduce the tests plug-in in a separate commit.

Line:46, lttng/org.eclipse.linuxtools.gdbtrace.core/src/org/eclipse/linuxtools/gdbtrace/event/GdbTraceEventContent.java -> Put brackets on same line as method

Line:82, lttng/org.eclipse.linuxtools.gdbtrace.core/src/org/eclipse/linuxtools/gdbtrace/GdbTraceCorePlugin.java -> Put Brackets on same line that method

-------------------------------------
