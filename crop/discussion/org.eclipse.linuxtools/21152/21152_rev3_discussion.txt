DESCRIPTION

tmf: Rework analysis-returning methods in ITmfTrace

Make the analysis accesses thread-safe: each access is now encased
in a synchronized block (or using the synchronizedMap wrapper).

This also implies exposing only Iterable's in the interface, which
is a good practice in general. If a caller could get a reference to
the map (even through unmodifiableMap), we'd have no guarantee that
they'd correctly lock their iterations, which could result in a
concurrent access error if the map is modified internally at the
same time.

Change-Id: Ibd2f1130ab9839ad20c3df3ac7c92119754ecc42
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2014-01-31 21:09:42.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2014-01-31 21:09:48.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5278/

-------------------------------------
author: Ivy Mitchell
date: 2014-01-31 21:23:31.000000000

Patch Set 3: Code-Review+1 IP-Clean+1

Nothing looks crazy out of place, I will test the entire patch chain for verified.

-------------------------------------
author: Brenden Conley
date: 2014-01-31 22:01:10.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5278/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2014-02-01 00:51:08.000000000

Patch Set 3: Code-Review+1

I have no objections anymore!

-------------------------------------
author: Braxton Mccarthy
date: 2014-02-03 03:19:43.000000000

Patch Set 3: Code-Review+2

-------------------------------------
