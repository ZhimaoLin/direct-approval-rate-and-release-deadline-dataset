DESCRIPTION

ctf: Fix feature.xml to allow building with pde-build

When trying to build the CTF feature with pde-build, it currently
fails because of unsatisfied dependencies.

We need to:
- Remove the e.o.l.ctf.parser dep completely (the feature ships
  this plugin, it cannot depend on it before it's built!)
- Change the order of the plugins so .parser is built first, since
  the .core depends on it.

Side note, this .parser plugin is the only one (apart from the help
plugin) that does not get put into a jar when built. I really have
no idea why...

Change-Id: Id520ba5fe4b2aa064f0850748774e14a6b83e49b
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2012-09-11 20:38:18.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/153/ 

-------------------------------------
author: Brenden Conley
date: 2012-09-11 20:48:47.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/153/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2012-09-12 12:08:42.000000000

Patch Set 1: I would prefer that you didn't submit this

The thing is, that the PDE editor of the feature.xml adds this dependency to the feature.xml file when pressing clicking on "Compute" on the Dependencies tab.

I looked at other features (e.g. o.e.l.tmf) and I see similar settings. 

I think we should investigate further before submitting this.

-------------------------------------
author: Braxton Mccarthy
date: 2012-09-13 14:22:47.000000000

Patch Set 1:

Alright, no worries, I can keep this as a packaging patch for now.

-------------------------------------
author: Ricky Reeves
date: 2012-09-13 16:55:11.000000000

Patch Set 1: Verified; Looks good to me, approved; IP review completed

After our discussion, I'm ok to merge it.

-------------------------------------
author: Braxton Mccarthy
date: 2012-09-13 16:59:56.000000000

Patch Set 1:

Thanks, pushing to master.

Turns out the parser plugins gets unpacked because it doesn't set the "unpack=false" attribute. This was probably done because of the grammar (.g) files that are present in it. We'll check with Matthew if this is really intended. For now it doesn't hurt to leave it like that.

-------------------------------------
author: Braxton Mccarthy
date: 2012-09-13 16:59:57.000000000

Change has been successfully cherry-picked

-------------------------------------
