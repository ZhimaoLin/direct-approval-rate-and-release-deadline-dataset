DESCRIPTION

ctf: simplify getMinValue/getMaxValue computation.

The BigNumber divide is useless in this case.

Change-Id: Ibec0c081430b93ff4873db3bf9de3a2eece76f29
Signed-off-by: Jordon Obrien xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-12-03 11:51:22.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4354/

-------------------------------------
author: Brenden Conley
date: 2013-12-03 12:26:43.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4354/ : SUCCESS

-------------------------------------
author: Jordon Obrien
date: 2013-12-03 16:09:37.000000000

Patch Set 1:

(2 comments)

After talking with Mathieu.

Integer must have a least one bit.

But, signed number can have only a sign bit.
The meaning is values from [-1, 0].

Line:166, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> length == 0 is no longer needed.

Line:180, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> length == 0 is no longer needed.

-------------------------------------
author: Ivy Mitchell
date: 2013-12-03 16:31:22.000000000

Patch Set 1: Code-Review-1 IP-Clean+1

(1 comment)

Line:169, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> this algorithm is rather hard to understand, could you comment it please? I could if you're time bound.

-------------------------------------
author: Jordon Obrien
date: 2013-12-03 17:34:37.000000000

Patch Set 1:

(1 comment)

Is this called often? If yes, for length less than 64-bits it should be compute in "long", and only 64-bits and more should be compute with BigInteger.

The current implementation doesn't support Integer larger than 64-bits, thus there is only one case not computable in 64-bits. Which could be pre-compute.

In fact, an array of 64-bits values could be statically defined.

Line:169, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> It's the same algorithm, but instead of dividing by 2... it left-shift by 1 less (which is equivalent).

Delta should be named something like "sign_bits".
And, the computation calculates the (unsigned) capacity minus one.

-------------------------------------
author: Ivy Mitchell
date: 2013-12-03 18:26:02.000000000

Patch Set 1: Verified+1

(1 comment)

Line:169, lttng/org.eclipse.linuxtools.ctf.core/src/org/eclipse/linuxtools/ctf/core/event/types/IntegerDeclaration.java -> Should these be cached? like BigInt fMaxValue = null; 
public ... getMaxValue(){
if( fMaxValue == null) {
 fMaxValue = divide by two thing
}
return fMaxValue;
}

-------------------------------------
