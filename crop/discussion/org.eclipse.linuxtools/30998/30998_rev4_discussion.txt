DESCRIPTION

pcap: make PacketStream compute useful information

The PacketStream now computes Nb of packets/bytes, duration of
the conversation, Bytes per seconds, etc. Also, it now does not
store indexes to packet, since it makes the size of PacketStream
proportional to the size of the trace. This is unwanted since we
have to be able to open traces that are bigger than memory.

Change-Id: I8f6bde99ceabc20c4a66786a2dbd25d49251cc9e
Signed-off-by: Itzel Singleton xxx@xxx.xxx


COMMENTS

author: Itzel Singleton
date: 2014-08-05 21:21:10.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2014-08-05 21:39:25.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8101/

-------------------------------------
author: Brenden Conley
date: 2014-08-05 22:20:04.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8101/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2014-08-05 22:44:12.000000000

Patch Set 4: Code-Review-1

(3 comments)

Just the tolerance thing (you're quite intolerant! xD), after that should be good to merge imo.

Line:94, lttng/org.eclipse.linuxtools.pcap.core/src/org/eclipse/linuxtools/pcap/core/stream/PacketStream.java -> Technically it shouldn't be caught, it's a runtime exception ;)

Line:243, lttng/org.eclipse.linuxtools.pcap.core/src/org/eclipse/linuxtools/pcap/core/stream/PacketStream.java -> Here it's used only once so it doesn't really matter, but you could have static defines for those, like

   private static final double NANOSECONDS_IN_SECONDS = ...

would also prevent easy mistakes like one zero too many

Line:253, lttng/org.eclipse.linuxtools.pcap.core/src/org/eclipse/linuxtools/pcap/core/stream/PacketStream.java -> that's a small tolerance! This is the same concept as the delta in assertEquals(double, double, delta), so why not use something similar like 0.001? (or add some zeroes to handle microseconds/nanoseconds etc.)

-------------------------------------
