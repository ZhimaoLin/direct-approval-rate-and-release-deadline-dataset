DESCRIPTION

TMF: Bug 422846, trace resource is refreshed after analysis

Change-Id: I2c9301eb5f6eb18139e0af475ad639429b6126bd
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2013-12-03 14:10:50.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2013-12-03 14:10:56.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4355/

-------------------------------------
author: Annalise Jimenez
date: 2013-12-03 14:12:28.000000000

Patch Set 2:

I changed for Marc-AndrÃ©'s proposal.

Sorry Florian if it doesn't solve the bug in Windows, but unless it is worst than before, it does solve a bug in Linux

-------------------------------------
author: Brenden Conley
date: 2013-12-03 14:33:15.000000000

Patch Set 2: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4355/ : FAILURE

-------------------------------------
author: Luciana Barry
date: 2013-12-03 15:15:55.000000000

Patch Set 2: Code-Review-1

(1 comment)

I don't have any error in Windows, but perhaps I did not execute the same use case. What is causing the file to be attempted to be deleted?

The error seems to be caused by a file still opened for a state system. Normally the state system is disposed when you dispose the trace, as long as the state system was registered with registerStateSystem()... which is now deprecated due to analysis framework? What is the replacement procedure to cancel ongoing analysis and cleanly dispose state systems when closing a trace?

Also 'ss.ht' seems like a very generic file name and prone to name clash, perhaps it could be something more specific? I'm not sure which state system this is.

Line:215, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAbstractAnalysisModule.java -> null check is unnecessary before an instanceof check

-------------------------------------
author: Ayanna Reed
date: 2013-12-03 15:50:16.000000000

Patch Set 2:

I use the UI Delete supplementaries files. I'm agree that the file is still open (I can't delete its directly in the windows explorer).

The name ss.ht has been rename. Originaly it's polymtl.kernel.windows.ht (in fact the name of the analyse).

I have the same probleme to delete all state system produce by the analysis framework.

-------------------------------------
author: Annalise Jimenez
date: 2013-12-03 15:59:43.000000000

Patch Set 2:

(1 comment)

I think Florian's is another bug entirely.  I'll check with him.

For the record, the bug is not with state systems produced by the analysis framework but with state systems built with the buildManually method, which the analysis use.

Here, the bug is that though the analysis is completed, the generated file did not appear in the supplementary files list because it hasn't been refreshed.  That's what this solves.

It does not cover the case of the analysis being cancelled and disposed when the trace is disposed (that should be dealt with by cancelling the analysis, default mechanism are provided but it's up to analysis developer to make sure their processing may be cancelled).  More tests would be needed for this I guess, but it is not the scope of this patch.

Line:215, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAbstractAnalysisModule.java -> Is the -1 for this or should I act on others of your comments?

-------------------------------------
author: Brenden Conley
date: 2013-12-03 16:00:27.000000000

Patch Set 2: -Verified

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4356/

-------------------------------------
author: Brenden Conley
date: 2013-12-03 16:44:25.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4356/ : SUCCESS

-------------------------------------
author: Luciana Barry
date: 2013-12-03 20:27:29.000000000

Patch Set 2:

(1 comment)

Line:215, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAbstractAnalysisModule.java -> Just for this. We can address the other issues in another patch.

-------------------------------------
