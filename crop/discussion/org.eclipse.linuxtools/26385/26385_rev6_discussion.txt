DESCRIPTION

tmf: Introduce tmf remote plug-ins and feature

Change-Id: Ibc4e806f35524490ae9c46be356038fd46c3777c
Signed-off-by: Ricky Reeves <Meredith xxx@xxx.xxx


COMMENTS

author: Ricky Reeves
date: 2014-05-21 02:06:48.000000000

Uploaded patch set 6.

-------------------------------------
author: Brenden Conley
date: 2014-05-21 02:06:55.000000000

Patch Set 6:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7061/

-------------------------------------
author: Brenden Conley
date: 2014-05-21 02:19:51.000000000

Patch Set 6: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7061/ : FAILURE

-------------------------------------
author: Brenden Conley
date: 2014-05-21 03:24:45.000000000

Patch Set 6: -Verified

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7064/

-------------------------------------
author: Brenden Conley
date: 2014-05-21 04:01:38.000000000

Patch Set 6: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/7064/ : SUCCESS

-------------------------------------
author: Kaeden Tapia
date: 2014-05-21 04:07:07.000000000

Patch Set 6: Verified+1 Code-Review+2

-------------------------------------
author: Braxton Mccarthy
date: 2014-05-21 08:11:54.000000000

Patch Set 6:

I'm still wondering, what is the tmf.remote *feature* for? Why would a user install "TMF Remote" by itself?

-------------------------------------
author: Ricky Reeves
date: 2014-05-22 11:44:44.000000000

Patch Set 6:

Hi Alex

I didn't want to put the tmf.remote plug-ins in the TMF feature to avoid having dependencies to RSE there. Also, users could install tmf.remote alone to use it for building a remote plug-in using the classes provided by tmf.remote.

/Meredith Scott

-------------------------------------
author: Ricky Reeves
date: 2014-05-22 12:23:04.000000000

Topic set to TMF Remote

-------------------------------------
author: Braxton Mccarthy
date: 2014-05-22 13:12:46.000000000

Patch Set 6:

> I didn't want to put the tmf.remote plug-ins in the TMF feature to
> avoid having dependencies to RSE there.

Yes, that makes sense.

> Also, users could install tmf.remote alone to use it for building
> a remote plug-in using the classes provided by tmf.remote.

"Users" don't build plugins, do they? ;)  A developer that wants to build plugins would use the source, in which case they won't use the feature.

I'm seeing this like the o.e.l.statesystem plugins. They don't have their own feature, because there is no point for users to install it by itself. Other features can include the plugins if they use it.

The "tmf.remote" plugins could be part of the "lttng2.control" feature. But I don't think they need a feature of their own. Unless we're doing the "statesystem" plugins wrong, and they should have a feature too?

-------------------------------------
author: Ricky Reeves
date: 2014-05-24 01:02:07.000000000

Patch Set 6: Code-Review-2

We decided to not push that patch before Luna

-------------------------------------
author: Ricky Reeves
date: 2014-08-08 13:06:00.000000000

Abandoned

Not needed right now. Will be brought back at a later time.

-------------------------------------
author: Ricky Reeves
date: 2014-10-18 18:27:46.000000000

Restored

It's time to bring it back

-------------------------------------
author: Ricky Reeves
date: 2014-10-20 10:48:51.000000000

Patch Set 6: -Code-Review

-------------------------------------
author: Ricky Reeves
date: 2014-10-20 14:00:28.000000000

Patch Set 6:

To sum up my conclusion: I still think it might be useful to have a separate feature for tmf.remote. However, I'll create a separate patch for the feature and we can decide later on, when (or whether) to include this feature. 

Here are the replies to the existing discussions:

> "Users" don't build plugins, do they? ;) 
I meant plug-in developers. 

>A developer that wants to build plugins would use the source, in which case they won't use the feature.

No, that's not the case usually. I think the common case is, that developers don't use the source code of the plug-in they develop against. Usually they install a feature and then use the API of the plug-ins of interest. 

> The "tmf.remote" plugins could be part of the "lttng2.control" feature. 
Yes, that's we could do for this patch.

>But I don't think they need a feature of their own. Unless we're doing the "statesystem" plugins wrong, and they should have a feature too?

I think it would makes sense to have a o.e.l.statesystem feature so that a developer doesn't have to install TMF to be able to use the o.e.l.statesystem plug-ins. (I know it's possible to use target definitions, but that is advanced stuff, IMHO).

-------------------------------------
