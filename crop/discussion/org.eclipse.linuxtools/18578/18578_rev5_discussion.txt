DESCRIPTION

tmf: Coalescing for analysis framework

When opening a trace all relevant background requests (indexing,
histogram, Kernel State system Analysis etc) are coalesced so
that the trace is read only once. To make it work the method
notifyPendingRequest() of the TmfEventProvider was used (amongst some
rearrangements). This method allows to synchronize requests across
threads. This is on top of the synchronization using TMF signals.

However, due to the fact that the HistoryBuilder.buildManually() waits
for the state system request to complete, the place to use
notifyPendingRequests(false) to decrement the internal pending counter
is not obvious.

This patch is also to demonstrate that coalescing of requests is
possible with the current means provided by TMF.
The "Fun-bus-coalescing" hasn't been designed and there will be a
several challenges to make it work (e.g. multi-thread handling). Also
we don't know what the gain is. We should try to use what is already
there.

Change-Id: Ib5e156df9bca416e9546b16c5c9e06efe768372f
Signed-off-by: Ricky Reeves <Meredith xxx@xxx.xxx


COMMENTS

author: Ricky Reeves
date: 2013-11-29 21:28:38.000000000

Uploaded patch set 5.

-------------------------------------
author: Ricky Reeves
date: 2013-11-29 21:30:20.000000000

Patch Set 5:

I made more save to use the pending counter. Let me know if we could live with that.

-------------------------------------
author: Brenden Conley
date: 2013-11-29 22:04:06.000000000

Patch Set 5:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4310/

-------------------------------------
author: Brenden Conley
date: 2013-11-29 22:48:43.000000000

Patch Set 5: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4310/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2013-12-02 15:03:15.000000000

Patch Set 5: Code-Review-1

(1 comment)

Line:277, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/analysis/TmfAbstractAnalysisModule.java -> This will always be true right now, you'd have to setNofityRequestNeeded(false) also in buildManually of the history builder.

I'm not sure what this adds, it's one more call the module developer will have to make, just to avoid calling this twice.

-------------------------------------
author: Ricky Reeves
date: 2013-12-02 15:11:34.000000000

Abandoned

I have to rework the patch and rebase it. So, I abandon it  for now.

-------------------------------------
author: Ricky Reeves
date: 2013-12-04 15:52:41.000000000

Restored

New version of proposal is available

-------------------------------------
