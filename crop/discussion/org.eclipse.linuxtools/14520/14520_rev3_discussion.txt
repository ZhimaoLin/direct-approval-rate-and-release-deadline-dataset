DESCRIPTION

Tmf:Benchmark for the request scheduler

The benchmark has three tests. The first one is the latency (time
between the creation of the request and the beginning of its execution).
The second one is the average waiting time for a request. The last one
is the total completion time.

Change-Id: Icc8cb47111221aaefb871faab97bb49c8bdf0b03
Signed-off-by: Kelsie Blackwell xxx@xxx.xxx


COMMENTS

author: Kelsie Blackwell
date: 2013-07-18 18:52:54.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2013-07-18 18:52:59.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2943/

-------------------------------------
author: Brenden Conley
date: 2013-07-18 19:07:44.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2943/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-08-08 19:49:20.000000000

Patch Set 3: Code-Review-1

(3 comments)

Finally getting to the backlog of things to review... this will be a nice thing to add, here's some comments.

Line:26, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/request/TmfSchedulerBenchmark.java -> Perhaps add more explanation what this is and what it will benchmark.

Line:72, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/request/TmfSchedulerBenchmark.java -> This could be a stand-alone runnable class instead of a JUnit test. Basically, instead xxx@xxx.xxx use a

public static void main(String[] args)

method. Then it can be Run As -> Java Application. (it could also be run from the command-line).

Line:74, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/request/TmfSchedulerBenchmark.java -> Instead of System.out, you could have a PrintWriter as a private field, and everywhere in the file use pw.println. By default it could be assigned to System.out, but that would make it easier to change which output.

You can check in GenerateStateValues.java for an example (there it uses an output file).

-------------------------------------
