DESCRIPTION

TMF: bug 440998: Set active task to null in TmfRequestExecutor when completed

This avoids keeping references to the request, which itself may contain
references to rather big objects.

Change-Id: Ib82fbea5cdc6b73a0a76d51bc2e960d0d223927a
Signed-off-by: Aryana Jones xxx@xxx.xxx


COMMENTS

author: Annalise Jimenez
date: 2014-08-04 21:07:47.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2014-08-04 21:22:56.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8071/

-------------------------------------
author: Brenden Conley
date: 2014-08-04 22:02:46.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/8071/ : SUCCESS

-------------------------------------
author: Luciana Barry
date: 2014-08-07 17:55:13.000000000

Patch Set 2: Code-Review+1

(1 comment)

Line:267, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfRequestExecutor.java -> The else of this if is where we know that there is no more an active task. Would it be better design to clear it here, or to preemptively clear it, then schedule() may or may not set it? I'm not sure. Any opinions? (note: if cleared here then line 254 can be removed).

-------------------------------------
author: Annalise Jimenez
date: 2014-08-07 19:33:40.000000000

Patch Set 2:

(1 comment)

Line:267, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfRequestExecutor.java -> I have no idea which would be better design. I've put it where we know there is an active task and we know it happens to be completed, so it can be safely set to null. 

And while looking where to put it, I was under the impression that fExecutor.execute(fActiveTask); in the executefActiveTask method was not necessarily blocking (which it happens to be in this implementation), so that when the schedule is next called, the thread is not necessarily completed and if it is not, we do not want to set it to null (or do we care?).

Anyway, in both cases line 254 is not useful anymore.

-------------------------------------
author: Ricky Reeves
date: 2014-08-08 19:08:37.000000000

Patch Set 2: Code-Review+2 Verified+1

(1 comment)

Line:267, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfRequestExecutor.java -> I looked at the code. Genevieve's proposal seems to be the natural place to put reset the fActiveTask reference. Putting it to the other place is not so obvious because multiple conditions have to met which are checked at several methods.

So, I'm ok to push it as is.

-------------------------------------
author: Annalise Jimenez
date: 2014-08-11 13:14:52.000000000

Patch Set 2: Verified+1 Code-Review+2

-------------------------------------
