DESCRIPTION

tmf : introducing the mipmap

Introduce the AbstractTmfMipmapStateProvider class which can be used to
modify state system attributes while creating a mipmap of the attribute
for one or more of the supported features (max, min, average).

Add queries for max, min and average of an attribute over a range to the
state system operation. If the attribute was not built using the mipmap
state provider, the queries still work but query the base attribute
intervals over the full range.

Change-Id: Idfde25a4cc622db35c5e9bb8a3f88bc89285a6b4
Signed-off-by: Luciana Barry xxx@xxx.xxx
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2013-09-26 20:31:32.000000000

Uploaded patch set 19.

-------------------------------------
author: Brenden Conley
date: 2013-09-26 20:40:37.000000000

Patch Set 19:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3560/

-------------------------------------
author: Brenden Conley
date: 2013-09-26 21:09:35.000000000

Patch Set 19: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3560/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-09-26 23:01:26.000000000

Patch Set 19: Code-Review-1

(1 comment)

Patch 19 seems to revert the changes from Patch 18 (putting the provider in the mipmap package, moving the "operations" methods from StateSystem to the Operations class)

Line:39, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/mipmap/TmfMipmapStateProvider.java -> This class should not be public, and should be called something more test-y, like TmfMipmapStateProviderStub, or StateTestProvider. Right now if you Ctrl+Shift+T, this will show up in the list and might look like something you want to use.

Or, is this a reference implementation that might be useful to users of the mipmap? If so it shouldn't be in tests then.

-------------------------------------
author: Luciana Barry
date: 2013-09-27 14:01:04.000000000

Patch Set 19:

(1 comment)

Line:39, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/mipmap/TmfMipmapStateProvider.java -> Yeah, it used to be called TmfMipmapStateProviderForTest but I thought it could be confused with a test class... Stub is better.
However all the other stubs are public and show up in the 'Open Type' dialog (ex: TmfTraceStub). Is it ok to leave it public?

-------------------------------------
author: Braxton Mccarthy
date: 2013-09-27 15:52:09.000000000

Patch Set 19:

(1 comment)

Reply to comment on PS19

Line:39, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/mipmap/TmfMipmapStateProvider.java -> Ok it might make sense for the TraceStub's to be public, because they can be used by the extension point, but I don't think that applies to state providers right? They are only called by their trace type (and in the case here, by the test programs).

-------------------------------------
