DESCRIPTION

tmf : introducing the mipmap

Introduce the AbstractTmfMipmapStateProvider class which can be used to
modify state system attributes while creating a mipmap of the attribute
for one or more of the supported features (max, min, average).

Add queries for max, min and average of an attribute over a range to the
state system operation. If the attribute was not built using the mipmap
state provider, the queries still work but query the base attribute
intervals over the full range.

Change-Id: Idfde25a4cc622db35c5e9bb8a3f88bc89285a6b4
Signed-off-by: Luciana Barry xxx@xxx.xxx
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Luciana Barry
date: 2013-09-27 19:56:29.000000000

Uploaded patch set 21.

-------------------------------------
author: Brenden Conley
date: 2013-09-27 21:00:24.000000000

Patch Set 21:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3570/

-------------------------------------
author: Brenden Conley
date: 2013-09-27 21:32:54.000000000

Patch Set 21: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3570/ : SUCCESS

-------------------------------------
author: Ivy Mitchell
date: 2013-09-30 15:51:11.000000000

Patch Set 21: Code-Review+1 IP-Clean+1

-------------------------------------
author: Luciana Barry
date: 2013-09-30 17:56:43.000000000

Patch Set 21: Code-Review+2

-------------------------------------
author: Braxton Mccarthy
date: 2013-09-30 18:03:21.000000000

Patch Set 21:

(7 comments)

Line:32, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateSystemOperations.java -> xxx@xxx.xxx

Line:36, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateSystemOperations.java -> I still don't get why the "operations" has to own the SS object. The class has no specific state (pun intended) wrt to the SS.

Wouldn't it be more representative as a "static" class with static methods that all take an SS in parameter?

Line:68, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateSystemOperations.java -> This would be cleaner / more peformant as a switch/case. Types that don't support Max can log an error explicitely (in the default case).

That way the exception should never be thrown (we can throw IllegalStateException())

Line:104, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateSystemOperations.java -> Same thing here, switch/case

Line:158, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateSystemOperations.java -> log error (state value type doesn't support average etc.)

Line:191, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateSystemOperations.java -> exceptions should be handled/logged

Line:265, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateSystemOperations.java -> log/handle exceptions.

The case "the state system wasn't built with mipmaps" could be checked and logged separately.

-------------------------------------
