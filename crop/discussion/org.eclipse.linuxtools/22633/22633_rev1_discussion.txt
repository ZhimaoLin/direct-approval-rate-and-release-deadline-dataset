DESCRIPTION

tmf: Avoid exposing the TreeViewer form the TMF abstract one

The only operation needed at the moment is setting the number
of levels to expand, which can be done via a specialized method.
We can add similar methods in the future if the need arises.

But exposing the TreeViewer object to subclasses directly is
potentially dangerous: for example, one of them could call setInput()
and set the input to a completely different type of object, which
would break all the things.

Change-Id: I2f325ae9f42a41e1a221ded78ae37bf782ddbe8c
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2014-02-27 18:43:23.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5724/

-------------------------------------
author: Brenden Conley
date: 2014-02-27 19:27:11.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5724/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2014-02-27 20:15:13.000000000

Patch Set 1:

Actually, I started implementing this way, but decided to expose the treeViewer when I needed to do the expandLevel thing, thinking it would be better than to add a method for every call to the treeViewer. It is documented, the developer will test his view before submitting so it shouldn't break too hard. But if it's preferable to hide it and add methods to the API each time something new is needed, then go ahead.

-------------------------------------
author: Kaeden Tapia
date: 2014-03-10 20:17:37.000000000

Abandoned

-------------------------------------
