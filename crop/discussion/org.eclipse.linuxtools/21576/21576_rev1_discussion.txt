DESCRIPTION

tmf: Handle empty traces with the abstract state provider

Traces with state systems using the AbstractTmfStateProvider (ie,
all of them) would not get closed correctly if no event was ever
received in the provider - currentEvent would remain null, and the
closing step would be skipped.

This is probably an artifact back from the time where history backends
were optional. Now the closing step should always be run, and if we do
not have a valid end time to define, simply use 0. The dummy state
system will go from MIN_VALUE to 0, and since it will have absolutely
no data in it, it really doesn't matter.

Change-Id: Ia36d7bb2cce0b5712825043c7d9becd85cd7ec35
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2014-02-05 19:28:45.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5343/

-------------------------------------
author: Braxton Mccarthy
date: 2014-02-05 19:29:31.000000000

Patch Set 1:

Finally found it!  I'll add a test case using the empty UST trace next.

-------------------------------------
author: Brenden Conley
date: 2014-02-05 20:17:04.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5343/ : SUCCESS

-------------------------------------
author: Ivy Mitchell
date: 2014-02-06 22:19:53.000000000

Patch Set 1: Code-Review+1 IP-Clean+1

looks good to me.

-------------------------------------
author: Braxton Mccarthy
date: 2014-02-06 22:50:48.000000000

Patch Set 1: Code-Review+2

In the end a core unit test wouldn't trigger the bug, for some obscure reason. We'll need a SWTBot test for that!

-------------------------------------
