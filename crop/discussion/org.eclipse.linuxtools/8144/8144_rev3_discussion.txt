DESCRIPTION

Add tool tip and descriptive labels to field editors in preferences window.

Add tool tips to profiling tools' field editors in the preferences window,
providing brief tool specific information. In order to avoid having too much
information in the tool tips, general tool descriptions are provided as labels
beside the radio buttons.

Change-Id: If15b2ef11f35922c0491f1581c28f08e878d1d44


COMMENTS

author: Octavio Lucero
date: 2012-10-19 16:29:45.000000000

Uploaded patch set 3.

-------------------------------------
author: Brenden Conley
date: 2012-10-19 16:29:51.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/368/ 

-------------------------------------
author: Brenden Conley
date: 2012-10-19 16:42:31.000000000

Patch Set 3: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/368/ : SUCCESS

-------------------------------------
author: Kaylin Maxwell
date: 2012-10-22 21:42:24.000000000

Patch Set 3:

I find the framing of the tool descriptions very distracting and it isn't done elsewhere in other UI pages.  I suggest just using [] around them as you did before.

The tool-tips are now actually special notes to the user and IMO should start with "Note:". 

The perf tool tip doesn't provide anything meaningful since all tools require installation.  I would prefer you say: "Note: does not require set-up or special compilation" which explains why we chose it as the default.

Instead of "Cache Using" for cachegrind which is very awkward I would suggest: "Cache Usage" or "Cache Reporting".

For Callgraph, say: "Note: requires SystemTap to obtain data" or something to that effect rather than talking about the SystemTap language.

For the ones requiring compilation, I'm not sure whether to include the C/C++ qualifier or not.  They will require rewording if specifying a note: for example, gprof could be worded as:  "Note: requires compilation of at least one C/C++ source file using "-pg" option." possibly leaving out the C/C++ part which is implied by our tools (see next paragraph).

This brings up an interesting issue.  Since our tools only support C/C++, should the Profiling preferences and Properties be under the C/C++ Preferences and Properties.  This should not be solved in this patch and would require a separate RFE or bug.

For now, I would suggest adding something to the top Profiling page, which currently doesn't have anything on it, to indicate that the preferences are for tools using the Linux Tools profiling framework for C/C++ projects.  This will at least prevent any confusion.

The Restore Defaults buttons on all the pages do not operate properly as they set the default to be the first item in any radio group.  It should restore the preferred provider.  If this is due to this change, fix it, otherwise, open a separate bug and fix this in a separate patch.

-------------------------------------
