DESCRIPTION

tmf: Merge TmfDataProvider and TmfEventProvider together

Initially, there was a plan to support "traces" that had no timestamps,
and this would be handled by a DataProvider. Turns out the whole
framework requires some sort of timestamp nowadays, so this distinction
is no longer necessary.

(If a trace really does not have any timestamp, they could just use the
event rank as a sort of dummy timestamp, which is quite intuitive anyway).

This also merges Tmf{Data|Event}Request and TmfCoalesced{Data|Event}Request.

Change-Id: I734bb297d252d56902e1eb0534669b0d4088d911
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2013-11-20 23:47:40.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2013-11-21 01:23:40.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4063/

-------------------------------------
author: Brenden Conley
date: 2013-11-21 02:05:12.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4063/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2013-11-21 16:15:38.000000000

Patch Set 4:

(4 comments)

Sounds like a good idea, not familiar enough with the requests to judge the insides of the patch, but I'd be happy to participate in white-spaces reduction ;-)

Line:135, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> extra line :p

Line:139, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> That's a lot of whitespaces

Line:42, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/component/TmfProviderManager.java -> While in this file, you might as well Ctrl-Shift-F it all to remove tabs

Line:183, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfEventRequest.java -> While copy-pasting, you could remove the redundant javadoc over the overridden methods

-------------------------------------
author: Ricky Reeves
date: 2013-11-21 17:03:38.000000000

Patch Set 4: Code-Review-1

(2 comments)

Line:77, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfDataRequest.java -> My preference is to keep this class as I suggested for patch 3. To make it more explicit for the user. 

A second constructor in TmfEventRequest would work too. But it is not so explicit.

Line:161, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfEventRequest.java -> If you don't keep TmfDataRequest you need to add a 2nd constructor for that purpose. You know my preference for that :-)

-------------------------------------
author: Braxton Mccarthy
date: 2013-11-21 18:12:22.000000000

Patch Set 4:

(3 comments)

Line:139, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> Not sure what you mean? It's a condition split on two lines (second indented two "tabs" further).

Line:42, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/component/TmfProviderManager.java -> Good point. I didn't even look at it, it was just modified by the Refactor -> Rename operation.

Line:77, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfDataRequest.java -> If we replace the concept of "Data" by "Event" everywhere, I'm not sure it would make things more clear to keep a "DataRequest".

But I can add another constructor in TmfEventRequest, if you're fine with that. There should be no confusion when calling the constructor, as the extra parameter is a TmfTimeRange, not a long or int (so less chance of calling the wrong one mistakenly)

-------------------------------------
