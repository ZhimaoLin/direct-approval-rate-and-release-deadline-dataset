DESCRIPTION

tmf: Merge TmfDataProvider and TmfEventProvider together

Initially, there was a plan to support "traces" that had no timestamps,
and this would be handled by a DataProvider. Turns out the whole
framework requires some sort of timestamp nowadays, so this distinction
is no longer necessary.

(If a trace really does not have any timestamp, they could just use the
event rank as a sort of dummy timestamp, which is quite intuitive anyway).

This also merges Tmf{Data|Event}Request and TmfCoalesced{Data|Event}Request.

Change-Id: I734bb297d252d56902e1eb0534669b0d4088d911
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Braxton Mccarthy
date: 2013-11-19 18:59:02.000000000

Uploaded patch set 3.

-------------------------------------
author: Braxton Mccarthy
date: 2013-11-19 19:03:27.000000000

Patch Set 3:

I'd really like if this change could get in before we start working on the request coalescing... it'll make things much simpler.

-------------------------------------
author: Ricky Reeves
date: 2013-11-19 20:58:26.000000000

Patch Set 3:

Ok I'll look at it ... not promising anything :-)

-------------------------------------
author: Brenden Conley
date: 2013-11-19 21:31:22.000000000

Patch Set 3:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4036/

-------------------------------------
author: Brenden Conley
date: 2013-11-19 22:21:44.000000000

Patch Set 3: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4036/ : SUCCESS

-------------------------------------
author: Ricky Reeves
date: 2013-11-20 20:59:14.000000000

Patch Set 3: Code-Review-1

(22 comments)

Looking at the changes I'm ok with merging the 2 classes. This change removes several instanceof checks which shows that the initial intention of abstracting certain functionality didn't fully work out.

However, I have few comments to fix.

Line:38, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> Update to ITmfEventProvider if ITmfDataProvider is changed to ITmfEventProvider

Line:44, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> The last sentence is not correct and needs to be updated. There are no methods processRequest() and initializeContext().

Line:48, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> General comment: should we remove version everywhere? In another patch?

Line:70, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> only initialized but never used

Line:73, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> not used

Line:168, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> remove dead code

Line:253, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> primitive test?

Line:258, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> Should be with rest of attributes

Line:266, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> change to newCoalescedEventRequest

Line:287, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> change to coalesceEventRequest

Line:109, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/request/TmfEventRequestTest.java -> we should check for request.getRange().equals(ETERNITY)

Line:74, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> add the trace back (TmfCoreTracer)

Line:114, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> overlap(), overlap2(), merge() merge2() are not very intuitive names. Please change them to meaningful names.

Or merge methods overlap2() into overlap() and merge2() into merge() ince the resulting methods are not very big.

Line:178, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> ITmfEventRequest

Line:204, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> remove

Line:296, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> If we don't need it remove the comment-out code

Line:23, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfEventRequest.java -> Java doc not correct. 

Also, TmfDataRequest used to have a description how to use the Request. Please add a similar description here.

Line:75, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfEventRequest.java -> The comment about blocks is not correct anymore. Remove

Line:27, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/ITmfDataProvider.java -> you have twice TmfEventProvider

Line:29, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/ITmfDataProvider.java -> shouldn't be the interface called ITmfEventProvider?

Line:78, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfDataRequest.java -> You could keep this class and change it to 
public abstract class TmfDataRequest extends TmfEventRequest {

public TmfEventRequest(Class<? extends ITmfEvent> dataType,
            long index,
            int nbRequested,
            ExecutionType priority) {
                 super(dataType, TmfTimeRange.ETERNITY, index, nbRequested, priority);
            }
}

By doing that the user can just use this class to request a range of ranks without specifiying TmfTimeRange.ETERNITY. E.g. the events table would be user for that.

Line:151, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/request/TmfCoalescedEventRequestTest.java -> I wonder if we need to add some test case to cover test cases which were removed by TmfCoalescedDataRequestTests. I didn't check all one by one but for the equals I could imagine that we need to add some.

-------------------------------------
author: Braxton Mccarthy
date: 2013-11-20 23:46:26.000000000

Patch Set 3:

(10 comments)

Line:48, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> Yeah, we could remove them as we go.

Line:73, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> good catch, it's not obvious with non-private fields...

Line:253, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/TmfEventProvider.java -> probably an artifact from a long time ago ;)

Line:109, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/request/TmfEventRequestTest.java -> Done

Line:74, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> hmm, why did I remove this... we'll need it for the hack-a-thon! ;)

Line:114, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/internal/tmf/core/request/TmfCoalescedEventRequest.java -> Oh yes, merge2() used to be super.merge(). They should go together.

For overlap(), I've renamed them to ranksOverlap() and timeRangesOverlap(), which is more clear.

Line:23, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfEventRequest.java -> Ok, I copied over the doc from TmfDataRequest... wow that was outdated!

Line:29, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/component/ITmfDataProvider.java -> Definitely, I must've forgot to rename this one after bringing the contents from ITmfEventProvider over.

Line:78, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/request/TmfDataRequest.java -> What about adding a second constructor to TmfEventRequest that does this? As long as we don't devolve into 10+ different constructors again ;)

Line:151, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/request/TmfCoalescedEventRequestTest.java -> I looked briefly, and both classes seemed to be straight copy-pastes of one another... which is why I didn't bother keeping the old one.

Following your comment, I checked the .equals() method, and they are indeed exactly the same (except of course for the EqualsSuper() one below, since it's no longer applicable).

-------------------------------------
