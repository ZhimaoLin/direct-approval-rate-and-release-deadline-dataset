DESCRIPTION

lttng: Add a view for any graphical analysis

This view is a placeholder for any graphics built on top of the traces.
It comes with a example of graphics, CPU load build on top of LTTng traces.
It consist on a tree viewer to show all threads spending time on the CPU
in the time range, and an XY chart viewer to display the total CPU of all
threads and the CPU usage of the currently selected from the tree viewer.

Change-Id: Id96fa1005623601539fad10e28949691b70ea1df
Signed-off-by: Aryana Jones xxx@xxx.xxx
Signed-off-by: Bryce Kline xxx@xxx.xxx


COMMENTS

author: Bryce Kline
date: 2014-03-06 16:25:46.000000000

Uploaded patch set 2.

-------------------------------------
author: Brenden Conley
date: 2014-03-06 16:46:38.000000000

Patch Set 2:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5809/

-------------------------------------
author: Brenden Conley
date: 2014-03-06 17:43:34.000000000

Patch Set 2: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/5809/ : SUCCESS

-------------------------------------
author: Annalise Jimenez
date: 2014-03-07 01:26:22.000000000

Patch Set 2: Code-Review-1

Hi Xavier,

I just read the code, I haven't tested it yet. But I'm not sure I see the advantage of this graphical analysis approach vs the previous one. You still have to implement the full tree viewer and XY line chart for each analysis, but instead of a view, you have a IGraphicalAnalysisFactory to create and advertise through an extension point.

And with this approach, can you have more than one such analysis opened at the same time? I'm under the impression that there is a combo with a list of analysis I can choose from and I can only have one opened.

But I like the idea of not having to do a view each time and this kind of output may indeed be really interesting for all kind of analysis. I wonder if we can abstract it further and make it a lot easier for developers to implement...

I'll try it out tomorrow when I have my development environment.

-------------------------------------
author: Annalise Jimenez
date: 2014-03-20 20:20:21.000000000

Patch Set 2:

Hi Xavier,

So what do we do about this patch? I think the concept of graphicalAnalysis is a bit redundant with the analysis framework where you can specify all kinds of analysis for a tracetype with various outputs. Also, with the analysis framework, you can know when the trace is opened whether or not an analysis can be executed, so you don't see the analysis you don't have the events for. 

We also plan to add to analysis outputs the possibility to send parameters, so eventually we could have a TmfGraphicalAnalysisView output that could receive as parameter a treeViewer and a xychart and would manage the signals and synchronize the 2 views. That would mean less code to generate to obtain such a view.

What do you think?

-------------------------------------
author: Bryce Kline
date: 2014-03-31 15:55:13.000000000

Patch Set 2:

Bonjour Genevi√®ve.

Well, frankly, I do not know. I wanted to express my interest in this type of view, and show that we could also do other things with.

My idea was also to avoid multiple views. Very soon, there will be a dozen different metrics on the same trace.
Do we want to have a dozen different views in the trace perspective?

I do not want to block your work on it.
If you think my patch is redundant, or not interesting, just delete it.

Your second paragraph seems interesting. I definitively should have a look on it.

-------------------------------------
author: Annalise Jimenez
date: 2014-03-31 19:19:08.000000000

Patch Set 2:

Hi Xavier,

I'm glad this view interests you! I think it has a lot of potential, we might soon event XML-define it!

And indeed we do not want to have one view for each analysis in the perspective, especially since not all LTTng kernel traces (for instance) will have all the views available. It will depend on the enabled events.

For now, I'll go back with the original version of this patch. That will provide a first version of this view and give us time to think of the best way to integrate all the future analysis to TMF, we may want the CPU view to be next to a memory view for instance...

-------------------------------------
