DESCRIPTION

ctf: Fix out of bounds positioning of the bitbuffer

rename private fields to follow fNameHere style

Change-Id: Ie579863b352a99e70cc9c1887d647aaa6018c9d4
Signed-off-by: Ivy Mitchell xxx@xxx.xxx


COMMENTS

author: Ivy Mitchell
date: 2013-12-02 15:35:17.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2013-12-02 16:21:39.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4340/

-------------------------------------
author: Brenden Conley
date: 2013-12-02 17:05:59.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4340/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-12-02 21:54:21.000000000

Patch Set 4: Code-Review-1

Good looks good, but what are the cases where this can happen? Can a malformed/malicious trace cause a BitBuffer out-of-bounds move? If so, then there should be ideally such a trace in the testsuite :)

If not though, if it can only happen due to a logic error in the CTF reader, then it would make sense to keep the runtime exception instead.

I'm asking because it doesn't fix any tests in the CTF test-suite, while I would expect it to.

-1 for discussion!

-------------------------------------
author: Ivy Mitchell
date: 2013-12-02 22:15:55.000000000

Patch Set 4: Code-Review-2

-2 for discussion

-------------------------------------
author: Ivy Mitchell
date: 2013-12-02 22:24:57.000000000

Patch Set 4: -Code-Review

-------------------------------------
author: Braxton Mccarthy
date: 2013-12-02 22:41:46.000000000

Patch Set 4: Verified+1 Code-Review+1 IP-Clean+1

Ok now that we've merged https://git.eclipse.org/r/#/c/19006/ the exception being thrown here is not caught midway, and is actually reported to the library caller. And there is actually a test in the testsuite for that.

Looks good! Push iiiit!

-------------------------------------
author: Ivy Mitchell
date: 2013-12-02 22:44:15.000000000

Patch Set 4: Code-Review+2 IP-Clean+1

This should fix some failures in the ctf test suite and make out of bounds problems a lot cleaner to read.

-------------------------------------
author: Gerrit Code Review
date: 2013-12-02 22:44:15.000000000

The change could not be merged due to a path conflict.

Please rebase the change locally and upload the rebased commit for review.

-------------------------------------
