DESCRIPTION

State system: add a Compare() method to ITmfStateValue

It is required to compare two state values based on different comparison
operators. It will be useful for the XML analysis.

Change-Id: I1fcb9525a41b11a648922271b5c2e06d6bd309ac
Signed-off-by: Makena Hernandez xxx@xxx.xxx


COMMENTS

author: Makena Hernandez
date: 2014-09-30 19:17:05.000000000

Uploaded patch set 9.

-------------------------------------
author: Brenden Conley
date: 2014-09-30 19:17:14.000000000

Patch Set 9:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9137/

-------------------------------------
author: Brenden Conley
date: 2014-09-30 20:11:58.000000000

Patch Set 9: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9137/ : FAILURE

-------------------------------------
author: Brenden Conley
date: 2014-10-01 02:31:29.000000000

Patch Set 9: -Verified

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9147/

-------------------------------------
author: Brenden Conley
date: 2014-10-01 03:00:18.000000000

Patch Set 9: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9147/ : FAILURE

-------------------------------------
author: Brenden Conley
date: 2014-10-01 03:01:42.000000000

Patch Set 9: -Verified

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9148/

-------------------------------------
author: Brenden Conley
date: 2014-10-01 03:32:21.000000000

Patch Set 9: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9148/ : FAILURE

-------------------------------------
author: Annalise Jimenez
date: 2014-10-01 14:52:58.000000000

Patch Set 9: Code-Review-1

(22 comments)

Smallish comments, mostly formatting, style. Code-wise it looks good.

I'm just not sure if the TmfStateValuesComparison.java really belongs in the tmf.core or if it would be better to keep in the analysis.xml.core, since this is where you're going to use it. Is that a feature we'll be using anywhere else? Now that state values are comparable, the preferred, non-XML way, would be to use those methods directly. But when that's the last point of discussion, we'll add Alex to the debate ;-)

Line:56, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/DoubleStateValue.java -> automatic formatting will add a line break after nullable, but it should not. It should be kept in the same line.

Line:74, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/DoubleStateValue.java -> say null value because null state value is confusing with the actual nullStateValue

Line:56, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/LongStateValue.java -> remove line break

Line:2, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateValueComparisonTest.java -> Update the copyright here

Line:10, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateValueComparisonTest.java -> "Initial API and implementation"

Line:24, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateValueComparisonTest.java -> "Unit tests for the {@link TmfStateValuesComparison} class. With the xxx@xxx.xxx ...} if the name of the class changes, it will automatically be updated.

Line:48, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateValueComparisonTest.java -> You can say "Test the xxx@xxx.xxx TmfStateValuesComparison#compare()} method ...".  Again, the javadoc will be automatically updated if anything changes in the method signature.

Line:51, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateValueComparisonTest.java -> don't skip line here

Line:64, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateValueComparisonTest.java -> You probably mean nullValue on this last line

Line:79, lttng/org.eclipse.linuxtools.tmf.core.tests/src/org/eclipse/linuxtools/tmf/core/tests/statesystem/StateValueComparisonTest.java -> Add a line for the nullValue comparison

Line:24, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateValuesComparison.java -> space after TmfStateValuesComparison

Also, this is a utility class that will contain only static methods. The good practice for that kind of class is to make the class final (public final class ...) and add a private constructor to avoid its instantiation. So private TmfStateValuesComparison() {}

Line:54, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateValuesComparison.java -> You should ctrl-shift-f this comment (and the whole file as well) to reformat correctly.

Line:56, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateValuesComparison.java -> don't skip line here

Line:57, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateValuesComparison.java -> The comparison operator should also be @NonNull? If so, you might as well add @NonNullByDefault on the line above the public class declaration, you will not have to xxx@xxx.xxx for every parameter.

Line:81, lttng/org.eclipse.linuxtools.tmf.core/src/org/eclipse/linuxtools/tmf/core/statesystem/TmfStateValuesComparison.java -> Shouldn't the default also throw IllegalArgumentException? This way, if you add an operator and forget to add it here, you'll have an exception thrown instead of having it act exactly like ==, which might more tricky to debug.

Line:56, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/IntegerStateValue.java -> remove line break

Line:94, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/IntegerStateValue.java -> You can remove this line and use directly this.value, like you do in other places.

Line:2, lttng/org.eclipse.linuxtools.statesystem.core.tests/src/org/eclipse/linuxtools/statesystem/core/tests/StateValueCompareToTest.java -> Again, just 2014, not 2012, 2014 and École Polytechnique de Montréal

Line:10, lttng/org.eclipse.linuxtools.statesystem.core.tests/src/org/eclipse/linuxtools/statesystem/core/tests/StateValueCompareToTest.java -> typo here should be Initial API and implementation

Line:30, lttng/org.eclipse.linuxtools.statesystem.core.tests/src/org/eclipse/linuxtools/statesystem/core/tests/StateValueCompareToTest.java -> static final not final static. Remember, Yannick is in San Francisco, so SF!

Line:60, lttng/org.eclipse.linuxtools.statesystem.core.tests/src/org/eclipse/linuxtools/statesystem/core/tests/StateValueCompareToTest.java -> no blank line here

Line:62, lttng/org.eclipse.linuxtools.statesystem.core.tests/src/org/eclipse/linuxtools/statesystem/core/tests/StateValueCompareToTest.java -> I would put the compareTo in xxx@xxx.xxx methods for each type, like testIntValueCompare, testLongValueCompare, etc. But this way is ok too.

-------------------------------------
