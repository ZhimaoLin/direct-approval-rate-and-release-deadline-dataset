DESCRIPTION

State system: add a Compare() method to ITmfStateValue

It is required to compare two state values based on different comparison
operators. It will be useful for the XML analysis.

Change-Id: I1fcb9525a41b11a648922271b5c2e06d6bd309ac
Signed-off-by: Makena Hernandez xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2014-09-26 17:38:47.000000000

Patch Set 8:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9097/

-------------------------------------
author: Brenden Conley
date: 2014-09-26 18:09:50.000000000

Patch Set 8: Verified-1

Build Failed 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/9097/ : FAILURE

-------------------------------------
author: Annalise Jimenez
date: 2014-09-26 18:55:40.000000000

Patch Set 8: Code-Review-1

(9 comments)

The compareTo method may be used to order state values and therefore it should probably be coherent for all types, for instance, null values < numerical values < string values. So no matter the order in which you say val1.compareTo(val2), the result has to represent that order. So as Alex mentioned, doing a switch/case on other.getType() in every compareTo method would be a good idea.

Line:71, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/DoubleStateValue.java -> Like Alexandre pointed out, it might be a good to also check comparison with similar types, say a long or int here

Line:21, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/ITmfStateValue.java -> xxx@xxx.xxx should not have to be incremented or does it?

Line:77, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/IntegerStateValue.java -> Here also, comparison of value should look at similar types like long and doubles (checking for overflow)

Line:70, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/LongStateValue.java -> compare with similar types too

Line:1, lttng/org.eclipse.linuxtools.statesystem.core.tests/src/org/eclipse/linuxtools/statesystem/core/tests/StateValueComparisonTest.java -> This whole file should be moved to tmf.core.tests to test with the ComparisonOperator enum.

But it would be important to have in this plugin unit tests to test the compareTo method of ITmfStateValue. So if you could, copy paste this in tmf.core.tests and update this one so it uses the compareTo methods.

Line:2, lttng/org.eclipse.linuxtools.statesystem.core.tests/src/org/eclipse/linuxtools/statesystem/core/tests/StateValueComparisonTest.java -> just 2014 here

Line:82, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/NullStateValue.java -> Careful with the return value: returning -1 means nullstate value is smaller than all other objects. It should also be that other objects are greater than nullstate value, so you should do explicitly in other methods if (object instanceof NullStateValue) return 1;

Also, for your unit tests, you should always do both ways, for instance,

assertTrue(val1.compareTo(val2) > 0);
assertFalse(val2.compareTo(val1) > 0);

Line:15, lttng/org.eclipse.linuxtools.statesystem.core.tests/META-INF/MANIFEST.MF -> the state system cannot depend on tmf.core

Line:192, lttng/org.eclipse.linuxtools.statesystem.core/src/org/eclipse/linuxtools/statesystem/core/statevalue/TmfStateValue.java -> 2 blank lines were added here

-------------------------------------
