DESCRIPTION

Fix BZ#412148: mixing local and remote env variables

Re-exporting the system's environment variables before execute commands on
remote projects might causes failure due use of local system's env instead.

Change-Id: Ic691f97cff0203871842fa88566c982b7fe529df
Signed-off-by: Madeline Richardson xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-07-05 02:24:43.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/2856/

-------------------------------------
author: Brenden Conley
date: 2013-07-05 02:39:12.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/2856/ : SUCCESS

-------------------------------------
author: Nathanael Holden
date: 2013-07-05 14:07:19.000000000

Patch Set 1:

(2 comments)

I wasn't initially able to reproduce the issue that his should resolve so if someone is able to, they can also verify if this works.

Line:56, profiling/org.eclipse.linuxtools.tools.launch.core/src/org/eclipse/linuxtools/tools/launch/core/factory/LinuxtoolsProcessFactory.java -> Shouldn't this be just 'systemPath=systemEnvMap.get(PATH);' with the if statement removed completely ?

newPath is initially set to "PATH=". The Linux Tools path, followed by the current environment path are then appended with appropriate delimiters used. If the systemPath is then appended we end up with something like :

'PATH=/linuxtools/path:/usr/local/bin:/usr/bin:/bin:/other/stuff:PATH=/remote/system/path'

Line:58, profiling/org.eclipse.linuxtools.tools.launch.core/src/org/eclipse/linuxtools/tools/launch/core/factory/LinuxtoolsProcessFactory.java -> This exception should be handled properly.

-------------------------------------
author: Logan Yoder
date: 2013-07-05 15:44:34.000000000

Patch Set 1:

(2 comments)

Line:56, profiling/org.eclipse.linuxtools.tools.launch.core/src/org/eclipse/linuxtools/tools/launch/core/factory/LinuxtoolsProcessFactory.java -> True. Going to fix that and re-send the patch

Line:58, profiling/org.eclipse.linuxtools.tools.launch.core/src/org/eclipse/linuxtools/tools/launch/core/factory/LinuxtoolsProcessFactory.java -> The bundle has not Activator class so I cannot print to system log properly, like:
Status status = new Status(IStatus.ERROR, e.getMessage(), Activator.PLUGIN_ID);
Activator.getDefault().getLog().log(status);

See some options:
1) I can make the plug-in ID hardcored in the Status call. Not good.
2) I can try to get system's log though Platform object. Might work but not using standard way being used through out linuxtools plug-ins
3) I can add an Activator class then print to system's log properly. In this case i would prefer send a separate patch.

-------------------------------------
