DESCRIPTION

Fix for subtree expanding sync bug in timegraphcombo

Change-Id: I7bb82544e669cf73aafdd81f8993d1b7105a77b7
Signed-off-by: Francis Mclean xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-03-27 17:45:34.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/sandbox/job/linuxtools/1809/ 

-------------------------------------
author: Brenden Conley
date: 2013-03-27 18:03:07.000000000

Patch Set 1: Verified

Build Successful 

https://hudson.eclipse.org/sandbox/job/linuxtools/1809/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-03-27 19:40:23.000000000

Patch Set 1: I would prefer that you didn't submit this

(3 inline comments)

Thanks for looking into this! That's the kind of issue nobody likes to debug usually ;)

It seems more robust in general, good job on that front. However I can still get the problem doing the following:

Using the trace "kernel" (which you can download with the get-traces.sh in the tree), towards the bottom there should be a process "compiz", which has a child "sh", which has 3 children.

If I collapse sh, then compiz, then reopen compiz, everything is fine. But if I leave sh open, then collapse compiz, and re-open it, 3 extra time graph bars will show on the right. Scrolling to the end shows that the right part is now offset by 3 rows wrt to the left part.

Also minor style comments.

Putting Patrick in the loop he might have an idea.

Line:18, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/widgets/timegraph/TimeGraphCombo.java -> unused

Line:377, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/widgets/timegraph/TimeGraphCombo.java -> missing space,
  while (

and before the {

Line:382, lttng/org.eclipse.linuxtools.tmf.ui/src/org/eclipse/linuxtools/tmf/ui/widgets/timegraph/TimeGraphCombo.java -> here too

-------------------------------------
author: Dax Sharp
date: 2013-03-27 19:49:39.000000000

Patch Set 1: I would prefer that you didn't submit this

I also have a problem with this patch when collapsing an entry, switching trace and coming back to the original trace. The previously collapsed entry will no longer have any children. 
This is indeed a harder problem than it looks.

-------------------------------------
author: Luciana Barry
date: 2013-03-28 18:18:33.000000000

Patch Set 1:

It seems that the SWT Tree behavior is different in Linux and Windows. In Windows, all children of a collapsed tree item preserve their expanded state. In Linux, all children of a collapsed tree item are recursively collapsed.

What I would suggest is to fix Linux<bak><bak><bak><bak><bak><bak><bak><bak><bak> query the expanded state of all children of a tree item when it gets expanded and set the expanded state on the corresponding time graph entry. Maybe this needs to be done recursively. Or to make a more efficient fix targeted at the Linux behavior, to query only the first level children when a tree item is expanded and propagate to the time graph only for those that are collapsed.

-------------------------------------
