DESCRIPTION

tmf: Add null-annotations to the state system

Big patch bringing JDT null-analysis annotations to the state system
and related classes.

It's relatively straightforward, some null checks are now redundant, and
other stuff is now xxx@xxx.xxx which enforces null checks before
use.

The main downside is that most Java standard methods (toString(), equals(),
List.get(), etc.) do not use those types of annotations, so nullability needs
to be checked every time they are used. In cases where their Javadoc mentions
that they should not return null, I've simply wrapped it in a null check +
IllegalStateException(). This is a bit ugly, but I really think it's worth
the much more robust compile-time checking we get from the annotations.

(and if the Java classes ever support those, those checks will emit "redundant
null check" warnings and it will be very simple to remove them).

Change-Id: Id3e9ed49c3fdda7098dc1f380dc56710c55b92ae
Signed-off-by: Braxton Mccarthy xxx@xxx.xxx


COMMENTS

author: Brenden Conley
date: 2013-09-18 21:07:40.000000000

Patch Set 1:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3514/

-------------------------------------
author: Brenden Conley
date: 2013-09-18 21:36:10.000000000

Patch Set 1: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/3514/ : SUCCESS

-------------------------------------
author: Braxton Mccarthy
date: 2013-09-19 19:08:56.000000000

Patch Set 1: Code-Review-1

Does not compile on 3.8/4.2, because of a few annotations to fields. Field analysis was only added in 4.3, so the 4.2 compiler recognizes the annotation, but since it doesn't support fields it gives an error.

There should be a way to support both versions with the same code.

-------------------------------------
