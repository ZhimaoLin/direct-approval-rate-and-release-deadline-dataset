DESCRIPTION

[ctf] Simplify the logic of the unsigned long comparator.

To understand this modification, let assume the "char 8-bits" domain.

unsigned [0 .. 255]
signed [-128 .. 127]

By receiving the parameters encoded in a signed number, the method receives

left:  [0..127,-128..-1]  (which represents [0..127,128..255])
right: [0..127,-128..-1]  (which represents [0..127,128..255])

By definition (on an unconstrained domain), this assertion holds

 left < right  <==>  left + k < right + k

Thus, the idea is to rotate the domain by k to allow a signed operator to
be able to compare to full domain.
In this case k must be -128.

By rotating the domain, left and right range become [-128..-1,0..127],
and are now comparable with the signed operator.

Change-Id: I92b27ab00e8f14102a04e085ef807e211e39a7f0
Signed-off-by: Jordon Obrien xxx@xxx.xxx


COMMENTS

author: Jordon Obrien
date: 2013-11-24 19:51:28.000000000

Uploaded patch set 4.

-------------------------------------
author: Brenden Conley
date: 2013-11-24 19:51:34.000000000

Patch Set 4:

Build Started https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4125/

-------------------------------------
author: Brenden Conley
date: 2013-11-24 20:21:48.000000000

Patch Set 4: Verified+1

Build Successful 

https://hudson.eclipse.org/linuxtools/job/linuxtools-gerrit/4125/ : SUCCESS

-------------------------------------
author: Tessa Dickson
date: 2013-11-24 23:16:44.000000000

Patch Set 4: Code-Review+1

-------------------------------------
author: Bryce Kline
date: 2013-11-25 15:26:05.000000000

Patch Set 4: Verified+1 Code-Review+2 IP-Clean+1

I love it !

-------------------------------------
