DESCRIPTION

Do not write timedout operations to the MemcachedNode.

This commit and related ones add support to an operation to
have new methods and a state of TIMEDOUT.  The intent is to
keep track of when an operation is created and if it either
times out due to a latch timeout expiration or it is found
to be already too old when thinking about sending the op
to the network, just consider it timed out then and there.

Note, object creation time is actually possibly quite a bit
after when the request is made, depending on how that request
is made.  Any number of things could have happened in
between with GC, JIT, scheduling, etc.

Also note that in order to avoid needing to rely on the latch
which is in a different thread, this allows us to keep track
of the creation time of the operation and check for whether or
not it has timed out via the isTimedOut() method on the
operation.

Doing this correctly and with as little API change as possible
required getting the default operation timeout down to the
MemcachedNode level.  That information was not previously known
to the Operation or the node, but simply relied on a latch.

Change-Id: I60228433bfa121ed031dd81fc05a9d65cae5bf20


COMMENTS

author: Andreas Short
date: 2011-01-04 23:44:32.189000000

Uploaded patch set 5.

-------------------------------------
author: Nora Conway
date: 2011-01-05 00:39:00.954000000

Patch Set 5: I would prefer that you didn't submit this

Hi, any test for this?

-------------------------------------
author: Nora Conway
date: 2011-01-05 00:40:11.224000000

Patch Set 5: No score

Removing the -1, as the next commit seems to test something, but not sure if it's related to this commit.

-------------------------------------
author: Andreas Short
date: 2011-01-05 00:55:33.793000000

Patch Set 5:

There is a test for this in a later commit, and a set of test fixes for other tests that break.

In my defense, those tests should have been breaking for some time.

-------------------------------------
