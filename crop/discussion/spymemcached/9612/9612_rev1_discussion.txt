DESCRIPTION

Only add an item to the read queue when written fully to wbuf

The old code would move an operation to the read queue when it
was first starting to be written. This is incorrect and it
should only be put into the read queue once it is fully written.

Change-Id: I1e0310bd418cf4b80e2a81faf30ab54e1fd22a69


COMMENTS

author: Andreas Short
date: 2011-09-16 02:05:41.218000000

Patch Set 1:

I don't see it here, but I remember a comment in here that showed he knows the read and write would be concurrent.  

I don't necessarily see why it would be incorrect for an operation to be in read and write concurrently.  For instance, getting a tmp_oom could occur while still writing, and be correct.  I think anyway.

If there's a correctness issue here, is there a test that would demonstrate it or a bug that describes it?

-------------------------------------
author: Andreas Short
date: 2011-09-28 16:47:47.554000000

Patch Set 1: I would prefer that you didn't submit this

I'm not sure if you saw my review previously.  I'm marking it -1 as I don't feel so good changing the behavior here without knowing there was a found issue or something like that.

As previously mentioned, my earlier read on the code is that an item could be both read and written at the same time.  Say someone tries to set a 30 MByte object.  The server can send a response saying "too big" even though the client is still shoveling it out.  That's perfectly valid with object futures.

-------------------------------------
author: Kenny Maynard
date: 2011-10-12 21:39:42.229000000

Patch Set 1: Abandoned

This isn't the correct fix for the issue at hand.

-------------------------------------
