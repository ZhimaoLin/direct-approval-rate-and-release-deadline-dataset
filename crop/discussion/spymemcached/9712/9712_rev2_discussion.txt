DESCRIPTION

Refactored tap message classes.

These needed to be more readable and were horribly coded (by me). I
started seeing issues with conversion from bytes on the wire to
variables in spy so I changed how this was done.

Change-Id: I583c43216643b111b6256f39ca475582b37267c6


COMMENTS

author: Kenny Maynard
date: 2011-09-22 18:14:05.659000000

Uploaded patch set 2.

-------------------------------------
author: Andreas Short
date: 2011-09-24 15:23:24.229000000

Patch Set 2: I would prefer that you didn't submit this

(2 inline comments)

-1 just because of the whitespace issue

These look like really good changes.  The concern I'd have here is that I don't know if our test coverage is good enough that we trust it with this set of changes.  Do you think it is?  How are we testing this?

One other comment, I don't know TAP as well as you do, but it seems odd that we have engine private stuff in here.  Maybe it's needed?  Why should a TapClient know about engines at all?  Abstraction leakage can lead to bigger problems later if something is presumed safe to change behind the abstraction.

Line:8, src/main/java/net/spy/memcached/tapmessage/BaseMessage.java -> These comments don't seem to go with this class.  Perhaps now is a good time to fix this?

Line:51, src/main/java/net/spy/memcached/protocol/binary/TapOperationImpl.java -> whitespace error here... there may be more.  double check things.

-------------------------------------
author: Kenny Maynard
date: 2011-09-24 19:56:34.971000000

Patch Set 2:

All of the things you noted here are things I expected to come up in this review. Let's discuss this change offline on Monday.

-------------------------------------
