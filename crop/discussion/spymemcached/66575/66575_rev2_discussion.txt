DESCRIPTION

Fixup MemcachedIF to only export what is really visible by clients

Change-Id: Ic7e11bd84625aa0da31b382177859d1851a58846


COMMENTS

author: Dakota Woodward
date: 2016-08-26 15:01:53.442000000

Uploaded patch set 2.

-------------------------------------
author: Natasha Sullivan
date: 2016-08-31 05:04:19.994000000

Patch Set 2:

(2 comments)

Line:79, src/main/java/net/spy/memcached/MemcachedClientIF.java -> that one still changes the IF, can you change it back to OperationFuture?

Line:232, src/main/java/net/spy/memcached/MemcachedClientIF.java -> I think xxx@xxx.xxx we need to add a javadoc saying why and what people should use instead - can you add that too? thanks!

-------------------------------------
author: Dakota Woodward
date: 2016-08-31 14:57:16.926000000

Patch Set 2:

The main purpose of this ChangeSet was to remove the incorrect use of OperationFuture<T> in the interface. It should have been Future<T> in the first place (If you look at every other method in MemcachedClient that returns an OperationFuture the MemcachedClientIF is Future<T>, I believe it was just a mistake that OperationFuture was exposed in the interface.

I guess there are two choices  
1 xxx@xxx.xxx the OperationFuture<T> method and add a Future<T> method.
2. wait for a major release and remove the OperationFuture<T>

As for the broadcastOperation methods.. as I said before I don't believe there is any external use case for them as they are basically internal helper functions for MecachedClient (not MemcachedIF).. So there is no alternative for people to use, they just should not have been exposed in the interface in the first place. If people really need to use them they can cast (or just use) MemcachedClient instead of MemcachedClientIF

-------------------------------------
author: Dakota Woodward
date: 2016-08-31 15:14:59.186000000

Patch Set 2:

> The main purpose of this ChangeSet was to remove the incorrect use
 > of OperationFuture<T> in the interface. It should have been
 > Future<T> in the first place (If you look at every other method in
 > MemcachedClient that returns an OperationFuture the
 > MemcachedClientIF is Future<T>, I believe it was just a mistake
 > that OperationFuture was exposed in the interface.
 > 
 > I guess there are two choices
 > 1 xxx@xxx.xxx the OperationFuture<T> method and add a Future<T>
 > method.
 > 2. wait for a major release and remove the OperationFuture<T>
 > 
 > As for the broadcastOperation methods.. as I said before I don't
 > believe there is any external use case for them as they are
 > basically internal helper functions for MecachedClient (not
 > MemcachedIF).. So there is no alternative for people to use, they
 > just should not have been exposed in the interface in the first
 > place. If people really need to use them they can cast (or just
 > use) MemcachedClient instead of MemcachedClientIF

Nm 1. doesn't work due to type erasure.. So I guess the only choice is a major version rev.

-------------------------------------
